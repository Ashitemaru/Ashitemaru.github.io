<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>大二春季学期学期总结</title>
    <url>/2021/06/19/grade-2-conclusion/</url>
    <content><![CDATA[<p>魔幻的大二春季学期最终还是随着自动机考试的结束而落幕了，随意写一点东西来总结一下吧。</p>
<span id="more"></span>

<p>虽然还没有出分，但我能够预料到这一学期如果按照绩点来评判，可以说过得十分坎坷。但是，这一学期还有更多的比绩点更值得重视的一些东西。</p>
<h2 id="课内学习"><a href="#课内学习" class="headerlink" title="课内学习"></a>课内学习</h2><p>课内总体而言过得很不平凡，即使这一学期只有 24 学分的课程。与一年前那种 OOP 作业一发下来就赶快刷榜完成，高代选讲还愿意在课外学习很多内容的热情相比，我这一学期对课内显然是淡薄了很多。标志性的事件可以罗列出来：</p>
<ul>
<li><p>人智导 PA2 是在黄浦江上遥控卫爷写的， PA3 是在上海桌游店里打山屋惊魂的间隙交的；</p>
</li>
<li><p>在各种情况下写过数电实验报告，包括在人大门口醉酒的时候、在去上海的火车上、在轰趴的自动麻将机上（除了考试，我每一次实验的代码都是抄的）；</p>
</li>
<li><p>一个学期没有见过数电、自动机、人智导的老师，这三门课均让我在考试周通了宵（一个大二学生用 24 小时创造一个奇迹）；</p>
</li>
<li><p>软件工程大作业不到最后一周都没有认真写 UI ；</p>
</li>
<li><p>高性能一气之下决定退课，虽然从未后悔过这个决定；</p>
</li>
<li><p>英语课一个学期就做了一份作业，占比最大的 Task C （团队 pre ）只花了三四天准备；</p>
</li>
<li><p>物理实验报告分数为 9, 8.5, 8.7, 8, 8.7 ，上学期则是 9, 9, 9, 9.3, 9 。</p>
</li>
</ul>
<p>总之就是这学期浪了一些，或许是认清楚你清贵系的教学水平甚至还不如高中之后的一些合理举动。如果要我来评价大二下学期这些课程的话，我只能说除了《不朽的艺术》这一门课，其他的课程我丝毫没有觉得学习到了什么有用的东西。再加上期末四门专业课考试两门可以说出事故的情况，我更是愿意给这一学期以低评价。</p>
<p>我大概算了一下，反正现在绩点的浮动不会多大，还不如抓紧时间，做一些我觉得有意义的事情。</p>
<h2 id="THUInfo"><a href="#THUInfo" class="headerlink" title="THUInfo"></a>THUInfo</h2><p>我也说过，这是我唯一拿得出来的作品。虽然之前有写过一些小型项目，它们虽然也是我探索的足迹，但总体没有 THUInfo 给我带来的成就感大。</p>
<p>但比较愧疚的是这一学期没有给 THUInfo 作出很大的贡献。寒假的时候翻新了“计划”功能，修了几个小 bug 之后，学期中除了加了比如说“今日高亮”这种小功能之外，我也就没有作出什么贡献了。</p>
<p>但是，暑假确实是想要做很大的事情的。一方面是和校内 iOS Club 搭上了关系，对方也恰好想要找到一个重点支持的项目，双方互相需要，何乐而不为呢。通过它我们找到了美工，目前也有了一个较为简单的 UI 效果图（不得不说，做设计的就是做设计的）。另外一方面是<a href="https://www.zhihu.com/question/63407413">栋栋</a>加入了团队，总之多一个技能熟练的人手是很不错的。</p>
<p>敬请期待暑假过后的 THUInfo 3 系列版本。</p>
<h2 id="社工"><a href="#社工" class="headerlink" title="社工"></a>社工</h2><p>大一下学期一番折腾之后，一个学期没有加入任何学生组织。但是一个转变的契机就是 xge 和我说他和栋栋准备开发日麻，随后将我纳入了 308 （科协 &amp; 算协活动室）常驻人员之中。在 308 蹲守的过程中，我也认识了科协的许多同学（再次点名“表扬”大恶人安頔）。最后决定加入科协，大概是那天去出去散心醉酒，隔天回校的时候恰好赶上 C 楼门口的智能体嘉年华。本来是不打算去的，想着去看看也没啥问题，就突然发现科协办的东西还挺有意思。随后又去蹭了智能体决赛，还坑了 Omega Fantasy 一顿饭。</p>
<p>随后大约是某晚和安頔夜谈，经过一番交流，决定去混一个科协副主席。</p>
<p>怎么说呢，或许真的是如同之前一些人的评价——“你大一下学期的那种情况实属罕见，哪有人开局社工就是王炸的”一般，社工并不是我想的那么不堪。现在大概是发现，有一群志同道合的人一起做事情是多么愉悦。</p>
<h2 id="Sakana"><a href="#Sakana" class="headerlink" title="Sakana"></a>Sakana</h2><p>这一段没有什么特别想说的，总之揭开了一些过往，给一些问题作出了解答，这应该也是这个学期我应该可以说最为重视的一件事。虽然有很多的小细节，有很多的瞬间，但还是就留下我之前发在空间里的一段话吧：</p>
<blockquote class="blockquote-center">
<p>虽然我真的不会挑时间，不会好好规划安排行程，或许会因为冲动把事情做得很离谱。<br>但真的感谢包容我的愚拙。</p>

</blockquote>

<h2 id="一些总结与闲话"><a href="#一些总结与闲话" class="headerlink" title="一些总结与闲话"></a>一些总结与闲话</h2><p>这一学期的 Holder 发生了相当大的改变，应该是真的去思考过我的大学应该如何度过这个问题了。之后就确立了“<strong>我要帮助后辈们尽可能少走弯路</strong>”这样的一个简单的目标，于是和改制的科协网络部不谋而合，于是和高中班主任谈好了回高中给学弟学妹讲数学竞赛。在确立好自己的真正想做的事情之后，便是卸下一些伪装。先前的我大概因为完全不能找到我自己的目标，而将自己浸没在无意义的内卷之中，也不敢面对自己的一些感情。这一切的一切，都在稍微通透之后被瓦解了。</p>
<p>当然我感觉需要警惕的，就是我暂且需要约束一下自己无限膨胀的野心，不能给自己捞太多的锅，接太多的任务，应该让自己慢慢达到一种平衡。</p>
<p>不如现在，来说说之后想要做的事情吧：</p>
<ul>
<li><p>接着跟进在刘知远实验室的任务，努力发篇文章，发完就撤退；</p>
</li>
<li><p>翻新 THUInfo 的 UI ，开发一些新功能；</p>
</li>
<li><p>在科协把“技能引导文档”这件事做好，做到宣讲会上的“为了创建一个 user-friendly 的计算机系而奋斗”；</p>
</li>
<li><p>好好地生活，让自己的大学不仅仅是绩点和社工。</p>
</li>
</ul>
<p>还有就是一些暑假要做的事情，比如说 GRE ，比如说科目二，比如说回高中讲竞赛，比如尝试一下图形学。</p>
<p>写这篇潦草的总结的时候，我应该还因为昨晚通宵复习自动机而头晕目眩，但是我的神志却异常清醒，因为我的大学似乎是真的开始了。</p>
<p>我有分享歌词的习惯，这里也来一句吧。但不同于之前我喜欢分享那种长长的，哲学家写散文式的歌词，这个歌词很朴素：</p>
<blockquote class="blockquote-center">
<p>ケーキも大好き，君も大好き。<br>ーー「とある一家の御茶会議」</p>

</blockquote>

<p>祝愿我余下的一半本科时光，能过得有意义。这里是 Holder ，我们一起接着走下去吧。</p>
]]></content>
      <categories>
        <category>闲聊</category>
      </categories>
  </entry>
  <entry>
    <title>Hello world</title>
    <url>/2021/06/16/hello-world/</url>
    <content><![CDATA[<p>刚刚建立好这个地方，暂且也没什么特别想说的，不如就来玩一下 hexo 的各个语法吧。</p>
<span id="more"></span>

<p>首先玩玩代码块，自然首先试试 cpp 。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello world!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>再来试一下 Python 。</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>不如玩一下 JavaScript 。</p>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Hello world!&quot;</span>);</span><br></pre></td></tr></table></figure>

<p>然后玩一下数学公式。</p>
<p>我们可以把机器学习抽象描述为以下过程，这里$X$表示输入集合，$Y$表示输出集合，$L$表示损失函数，$\boldsymbol{w}$表示模型参数，$f_\boldsymbol{w}$表示在某一系列参数之下的模型函数。</p>
<p>$$<br>\boldsymbol{w}^*=\mathop{\arg\min}_{\boldsymbol{w} \in \Omega}\sum_{x_i \in X, y_i \in Y} L(f_\boldsymbol{w}(x_i), y_i)<br>$$</p>
<p>再来试一下它自带的一些引用块。</p>
<blockquote><p>你成功建好了自己的第一个 hexo 站点！</p>
</blockquote>

<p>hexo 文档里面还提到了一种奇怪的东西，来试一下。</p>
<blockquote class="pullquote"><p>这个东西被称为 Pull Quote 。</p>
</blockquote>

<p>似乎还有奇怪的东西。</p>
<div class="note success"><p>这个是提示成功的引用块。</p>
</div>

<p>下面是一个居中引用。</p>
<blockquote class="blockquote-center">
<p>这里我们居中一定的文本。</p>

</blockquote>

<p>这里还似乎提供了用于查询浏览器支持方法的插件。</p>
<iframe data-feature="fetch" src="https://caniuse.bitsofco.de/embed/index.html?feat=fetch&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe>

<p>暂且玩到这里吧，目前的话想要做的一些事情包括：</p>
<ul>
<li><p>写（搬运）点有点价值的东西</p>
</li>
<li><p>有没有可能做一些类似于管理员才可访问的东西呢</p>
</li>
<li><p>搞一下评论系统、浏览计数之类的</p>
</li>
</ul>
<p>当然我们知道明天下午就考数电了，所以 Holder 该滚去复习了。</p>
]]></content>
      <categories>
        <category>闲聊</category>
      </categories>
  </entry>
  <entry>
    <title>日语单词变形手册</title>
    <url>/2021/06/18/ja-1/</url>
    <content><![CDATA[<p>这是一个相当长的文档，几乎可以说记录了我对日语单词变形能想到的一切。即使日语有的时候和中文很相似，但是它作为黏着语还是让它的语法成为了汉语母语者学习的巨大障碍。</p>
<p>这个文档随时更新，欢迎大家关注。</p>
<span id="more"></span>

<p>首先说一下这个文档整理的原则。由于日语的词汇可以很灵活地变形，比如「書く」先变成第一连用形后接续「たい」形成类似形容词的「書きたい」，之后再按照形容词过去否定的规则变为「書きたくなかった」后，在按照连体形规则接上助动词「ので」变成「書きたくなかったので」。在这样的背景下，本文档不可能穷尽所有的变形以及这种变形的所有应用方式，不过本文档会这样表述：“这样变形之后，词汇将类似于形容词”。这样的话后续进行第二次变形的时候就可以在形容词栏目之下进行寻找。</p>
<h1 id="日语动词的变形"><a href="#日语动词的变形" class="headerlink" title="日语动词的变形"></a>日语动词的变形</h1><p>在介绍变形之前，我们要首先介绍日语动词的分类。日语动词按照活用类型可以分为四类：</p>
<ul>
<li>五段动词</li>
</ul>
<p>形式为词干加上某一个ウ段假名构成，比如「書く、読む、話す」。</p>
<ul>
<li>一段动词</li>
</ul>
<p>形式一般为一个イ段假名或者エ段假名结尾的词干加上「る」构成，比如「食べる、教える、起きる」。</p>
<p>有一些细化为上一段动词和下一段动词的说法，这里可以简单理解为以イ段假名接续的是上一段动词，以エ段假名接续的是下一段动词。</p>
<ul>
<li>サ变动词</li>
</ul>
<p>形式为「する」或者某一个词干加上「する」，同时也有一些以「ずる」结尾的动词也是サ变动词。比如「する、勉強する、散歩する、感ずる、禁ずる」。</p>
<ul>
<li>カ变动词</li>
</ul>
<p>只有「来る」是カ变动词。</p>
<h2 id="原形-辞书形-连体形"><a href="#原形-辞书形-连体形" class="headerlink" title="原形/辞书形/连体形"></a>原形/辞书形/连体形</h2><p>这种形式就是字典上表示动词的形式，所以称为“原形”或者“辞书形”。其用途也是较为多的。</p>
<h3 id="用于终结一句话"><a href="#用于终结一句话" class="headerlink" title="用于终结一句话"></a>用于终结一句话</h3><p>动词原形可以直接用于终结一个句子，提示动作：</p>
<div class="note info no-icon"><p>今朝，朝ごはんを<strong>食べる</strong>。<br>そこで<strong>立つ</strong>。</p>
</div>

<p>但是用原形终结一句话有的时候会给人一种语气直接了当的感觉，现实对话之中也较少使用原形直接终结句子。</p>
<h3 id="用于修饰体言"><a href="#用于修饰体言" class="headerlink" title="用于修饰体言"></a>用于修饰体言</h3><p>实际上，动词原形同时也是连体形。连体形顾名思义是接续体言的，其用途就是具体修饰一个名词具有的性质：</p>
<div class="note info no-icon"><p>明日の会議に<strong>使う書類</strong>。<br><strong>勉強する時</strong>に。</p>
</div>

<p>这个可以说是相当常用的一种用法了，不过这里要介绍几个东西，也就是<strong>形式体言</strong>，这种体言没有实际含义，但是可以辅助作为句子成分。</p>
<h4 id="形式体言：事「こと」／の"><a href="#形式体言：事「こと」／の" class="headerlink" title="形式体言：事「こと」／の"></a>形式体言：事「こと」／の</h4><p>这是相当常见的形式体言，其汉字表示为「事」，常常用来接在连体后表达一种抽象的概念，常常构成类似「ことがある」「ことになる」「ことにする」「と言うことだ」这样的短语存在。</p>
<p>「の」也是相当常见的形式体言，但显然比较“轻量级”。</p>
<p>一般情况下，只是单纯完成动词名词化的时候，这两个形式体言是可以互换的：</p>
<div class="note info no-icon"><p>日本語を<strong>勉強すること</strong>は楽しいです。<br>日本語を<strong>勉強するの</strong>は楽しいです。</p>
</div>

<p>不过这两者之间存在一些小区别，这里首先说一下一般用「の」的情况。比如说如果名词化的动词是「みる」「聞こえる」等表示感知的动词的宾语的时候，或者比如说名词化的动词比较具像化的时候。</p>
<div class="note info no-icon"><p>あいつが本を<strong>読むの</strong>を聞こえます。<br>山田さんが<strong>来るの</strong>を待っています。</p>
</div>

<p>常常用「こと」的情况可能是接续的动词是「言う」「話す」「考える」「決める」等发言动词或决定性动词，也可以是直接接续「です」「だ」等动词，或者是构成了常用短语：</p>
<div class="note info no-icon"><p>アメリカに<strong>留学すること</strong>を考えている。<br>日本語を<strong>勉強し続くこと</strong>を決めました。<br>団長の仕事は団員を<strong>守ること</strong>だ。<br>今日からタバコを<strong>止めること</strong>にしました。 </p>
</div>

<p>额外说明一点，有的时候「のです／のだ」也可以使用，但是在口语之中常常简化为「んです／んだ」。</p>
<p>这里可能需要进一步说明的是包含有「こと」的一些常用短语，这些短语一般已经具有了独特的含义了。</p>
<p>「ことがある」表示“这样的事件可能存在”：</p>
<div class="note info no-icon"><p>自分で料理を<strong>作ることがある</strong>。</p>
</div>

<p>「ことになる」表示“事态发展到了某一种状况，这种发展不是主观可控的”：</p>
<div class="note info no-icon"><p>学校のプールは六月一日から<strong>始まることになっ</strong>ている。</p>
</div>

<p>「ことにする」表示“下决心做什么事”：</p>
<div class="note info no-icon"><p>最後，彼はアメリカに<strong>留学することにし</strong>ました。</p>
</div>

<p>「ことには」有的时候用于表达一种强烈的情感和强调：</p>
<div class="note info no-icon"><p><strong>困「こま」ることには</strong>，今お金がないんです。</p>
</div>

<p>「ことができる」表示“有能力做到”：</p>
<div class="note info no-icon"><p>彼はこの歌を<strong>歌うことができ</strong>ます。</p>
</div>

<p>这里我们发现接续「こと」的全都是原形，但很多时候还可以使用第二连用形加「た／だ」之后接续「こと」，或者使用未然形加上「ない」之后接续「こと」，并且这些时候意思会产生一些微妙的变化。</p>
<div class="note default"><p><strong>注解：</strong>从这里开始，形式体言部分会涉及到许多不是原形进行接续的场合，但这些东西不会拆分到对应的条目（比如第二连用形加「た／だ」之后接续就不会放到第二连用形部分），这是因为形容词或者第二连用形加「た／だ」之后接续体言是相当自然的事情，故不如只设定一个条目统一管理。在第二连用形部分以及形容词部分会设置跳转提示，提示形式体言均放在此处记录。</p>
</div>

<p>「ないことには」表示“如果不…就…”：</p>
<div class="note info no-icon"><p>やって<strong>みないことには</strong>，何もわからないです。</p>
</div>

<p>这句话就可以翻译为“不试试看的话，就什么都不知道了”。</p>
<p>「たことにする」表示“知道这件事，但是主观上不想重视”的意思：</p>
<div class="note info no-icon"><p>そんな話を<strong>聞こえなかったことにし</strong>よう。</p>
</div>

<p>这句话就可以翻译为“就当作没听见这样的话吧”。</p>
<p>「たことがある」表示“曾经有过这个经验”：</p>
<div class="note info no-icon"><p>横浜へ<strong>行ったことがある</strong>よ。</p>
</div>

<p>这句话就可以翻译为“我曾去过横滨”。</p>
<h4 id="形式体言：物「もの」"><a href="#形式体言：物「もの」" class="headerlink" title="形式体言：物「もの」"></a>形式体言：物「もの」</h4><p>这种形式体言最为重要的应用就是表示“情理之中的行为”或者“真理”。补充说明一下，这里也可以使用未然形加上「ない」之后接续：</p>
<div class="note info no-icon"><p>太陽は東方から<strong>登るもの</strong>です。<br>そんなことを<strong>言わないもの</strong>です。</p>
</div>

<p>与「こと」类似，「もの」这个词的灵魂在于大量的短语以及固定表达，这里直接介绍。</p>
<p>「たいものだ」表示“相当强的欲望”：</p>
<div class="note info no-icon"><p>世界各地を<strong>旅行したいものだ</strong>。</p>
</div>

<p>「ものがある」表示相当强调的语气：</p>
<div class="note info no-icon"><p>あいつがやったことには，目に<strong>余るものがある</strong>。</p>
</div>

<p>「目に余る」表示“看不下去”，所以这句话就是说“那家伙所做的事根本看不下去”。</p>
<p>「たものだ」表示“对过去经历的怀念”：</p>
<div class="note info no-icon"><p>これで君とよく遊びに<strong>来たものだ</strong>。</p>
</div>

<p>「もの／もので／ものだから」这三个词应用于表达原因，其语气是一个比一个强烈。第一个含有一种轻微的因果感觉，而第三个就是相当强的因果关系：</p>
<div class="note info no-icon"><p><strong>子供というもの</strong>，仕方ないですね。<br>あまり天気が<strong>いいもので</strong>，どこかへ遊びに行きたくなった。<br>雨が<strong>酷いものだから</strong>，どうしても出掛けたくない。</p>
</div>

<p>「ものなら」表示一种假设。如果接续在表示可能的动词原形后面，就表示“如果…的话，就…”，如果接续在助动词「よう／う」后面就表示“万一…的话，就…”：</p>
<div class="note info no-icon"><p><strong>できるものなら</strong>，やってみなさい。<br><strong>失敗しようものなら</strong>，大目玉を食う。</p>
</div>

<p>「大目玉を食う」表示“受到严厉训斥”。这两句话分别表示“如果能做到的话，做做试试看吧”以及“万一失败了的话，就会被骂得很惨”。</p>
<p>「ものの」表示“虽然…但是…”：</p>
<div class="note info no-icon"><p>苦しいことは<strong>苦しいものの</strong>，楽しいこともあるんだ。</p>
</div>

<p>「ものを」是一个逆接的助词，表达转折含义：</p>
<div class="note info no-icon"><p>そんな上手に<strong>歌えるものを</strong>，なぜ歌わなかったのですか？</p>
</div>

<h4 id="形式体言：所「ところ」"><a href="#形式体言：所「ところ」" class="headerlink" title="形式体言：所「ところ」"></a>形式体言：所「ところ」</h4><p>这个体言最基本的含义就是“地点”或者“场所”，所以也可以表示虚化的“场合”：</p>
<div class="note info no-icon"><p>お<strong>忙しいところ</strong>をおいでくださいましてありがとうございました。</p>
</div>

<p>这里「おいで」是「来ること」等的尊敬语格式，这里可以理解为“出席”。这句话直译就是“能从繁忙的事务之中抽身出席，非常感谢”，也就是“感谢您百忙之中出席”。</p>
<p>这个体言也可以被引申后用来表示“某一点”或者“某一方面”：</p>
<div class="note info no-icon"><p>あなただって足りて<strong>いないところ</strong>だらけ。<br>あなたの<strong>悪いところ</strong>はすぐ怒ることです。</p>
</div>

<p>同时也可以被引申为“范围”：</p>
<div class="note info no-icon"><p>私が知っているのは大体<strong>こんなところ</strong>です。</p>
</div>

<p>之后就是一些更为抽象的引申义。首先是表示程度，可以理解为“已经到了这个地步了”这样的意思：</p>
<div class="note info no-icon"><p>もう少しで車に引かれて<strong>しまうところ</strong>だった。</p>
</div>

<h4 id="形式体言：訳「わけ」"><a href="#形式体言：訳「わけ」" class="headerlink" title="形式体言：訳「わけ」"></a>形式体言：訳「わけ」</h4><h4 id="形式体言：筈「はず」"><a href="#形式体言：筈「はず」" class="headerlink" title="形式体言：筈「はず」"></a>形式体言：筈「はず」</h4><h4 id="形式体言：為「ため」"><a href="#形式体言：為「ため」" class="headerlink" title="形式体言：為「ため」"></a>形式体言：為「ため」</h4><h4 id="形式体言：つもり"><a href="#形式体言：つもり" class="headerlink" title="形式体言：つもり"></a>形式体言：つもり</h4><p>这个体言最基本的意义就是“计划、打算”。</p>
<div class="note info no-icon"><p>僕もタバコを<strong>やめるつもり</strong>だ。</p>
</div>

<p>另一方面，这个词语就可以表示主观意愿上的“估算、评价”（下述第一句），但有的时候会翻译为“自以为”（下述第二句），带有一定的贬义色彩：</p>
<div class="note info no-icon"><p><strong>君のつもり</strong>では，どれほど費用がかかるんだか？<br>あの人は自分が<strong>有能なつもり</strong>だが，彼の仕事ぶりに対する周囲の評価は低い。</p>
</div>

<p>另外一种是表示假设，翻译为“就当作”。但一般形成短语「たつもり」：</p>
<div class="note info no-icon"><p>先生に<strong>なったつもり</strong>で，みんなに説明しよう。</p>
</div>

<p>另外说一下这个体言的否定，「〜ないつもり」表示“不打算这么做”，「〜つもりはない」则根本上否定，表示“完全不打算”：</p>
<div class="note info no-icon"><p><strong>進学しないつもり</strong>だ。<br>率直的「そっちょくてき」にいう，俺は<strong>進学するつもりはない</strong>んだ。</p>
</div>

<h4 id="形式体言：方「ほう」"><a href="#形式体言：方「ほう」" class="headerlink" title="形式体言：方「ほう」"></a>形式体言：方「ほう」</h4><p>这个词一般被运用在比较句之中，用来形成比较的语气：</p>
<div class="note info no-icon"><p><strong>あちらの方</strong>はデザインがいいんだ。</p>
</div>

<h4 id="形式体言：儘「まま」"><a href="#形式体言：儘「まま」" class="headerlink" title="形式体言：儘「まま」"></a>形式体言：儘「まま」</h4><p>这个词核心意思就是“保持某一种状态不变”：</p>
<div class="note info no-icon"><p><strong>そのまま</strong>でいいでしょう？<br>前に<strong>向こうまま</strong>歩いている。<br>自分の<strong>意のまま</strong>にいこう。</p>
</div>

<p>第一句表示“就这样下去也不错吧？”，而第二句意思为“一直向前走”，第三句意思为“随着自己的意思行动”。这三句话都蕴含着“保持一种状态不变”或者“跟随某一种状态不变”的含义。而如果表明的是“跟随自己的意见”，这个词可以酌情翻译为“任性”，并且这个时候常常带有些许贬义。比如说常见的形容动词「わがままだ」。</p>
<h4 id="形式体言：通「とお」り"><a href="#形式体言：通「とお」り" class="headerlink" title="形式体言：通「とお」り"></a>形式体言：通「とお」り</h4><p>这个词核心意思为“按照”或者“正如”：</p>
<div class="note info no-icon"><p><strong>教えた通り</strong>にやってみよう。<br><strong>ご覧の通り</strong>なんでもない。</p>
</div>

<p>这两句话的意思就是“按着刚刚教的做做试试看吧”以及“正如您所见，什么都没有”。</p>
<h4 id="形式体言：上「うえ」"><a href="#形式体言：上「うえ」" class="headerlink" title="形式体言：上「うえ」"></a>形式体言：上「うえ」</h4><p>首先这个词有个非常直观的意思，就是“…上”，用来表示一个方面：</p>
<div class="note info no-icon"><p><strong>仕事の上</strong>で問題はない。</p>
</div>

<p>这句话很简单的翻译为“工作上没有问题”。</p>
<p>另外，这个词还可以表示“添加评注”，也就是添加一段对某个人或物性质的描述：</p>
<div class="note info no-icon"><p>このカメラはよく<strong>映る上</strong>に，値段がやすいです。</p>
</div>

<p>这句话直接翻译的话就是“这个照相机除了拍照片很好，还很便宜”。</p>
<p>另外，如果用「た」接续，就表明“在…之后再…”：</p>
<div class="note info no-icon"><p>お目に<strong>かかった上</strong>で決めましょう。</p>
</div>

<p>这里「お目にかかる」表示“会面”，所以这句话意思为“见面之后再决定吧”。</p>
<p>还有一种意思表示“既然…那么…”：</p>
<div class="note info no-icon"><p>事実はそうで<strong>あった上</strong>で，仕方はないでしょう？</p>
</div>

<h4 id="形式体言：うち"><a href="#形式体言：うち" class="headerlink" title="形式体言：うち"></a>形式体言：うち</h4><p>这个词的核心意思就是“范围”：</p>
<div class="note info no-icon"><p><strong>三人のうち</strong>で誰が一番年長ですか？</p>
</div>

<p>这句话可以简单翻译为“这三个人（的范围）里面，谁年龄最大？”</p>
<h4 id="形式体言：元「もと」"><a href="#形式体言：元「もと」" class="headerlink" title="形式体言：元「もと」"></a>形式体言：元「もと」</h4><p>这个词核心的意思就是“范围”，进而引申出“在…之下”的含义：</p>
<div class="note info no-icon"><p><strong>親のもと</strong>を離れる。<br>先生の<strong>指導のもと</strong>で研究を続ける。</p>
</div>

<p>第一句话直接翻译就是“离开了父母的范围”，意思就是“与父母分离”。第二句话使用了引申义，意思是“在老师的指导之下，研究得以继续”。</p>
<h4 id="形式体言：限「かぎ」り"><a href="#形式体言：限「かぎ」り" class="headerlink" title="形式体言：限「かぎ」り"></a>形式体言：限「かぎ」り</h4><p>这个词最简单的含义就是表示“极限”。但是作为形式体言，其可以构成“只要…就…”的句式：</p>
<div class="note info no-icon"><p>このうるさい音が<strong>続く限り</strong>，私は眠れない。</p>
</div>

<p>这句话就表示“只要那烦人的声音还在响，我就睡不着”。</p>
<p>当然，这个词如果接续在否定的「ない」后面，就表达“除非…就不…”，这实际上就是上面的“只要…就…”的否定：</p>
<div class="note info no-icon"><p>病気が<strong>ない限り</strong>学校を休まない。</p>
</div>

<p>这句话就可以翻译为“只要没生病就不能请假”。</p>
<h4 id="形式体言：代「か」わりに"><a href="#形式体言：代「か」わりに" class="headerlink" title="形式体言：代「か」わりに"></a>形式体言：代「か」わりに</h4><p>这个词可以作为实际含义的词，表示“代替”：</p>
<div class="note info no-icon"><p>私の<strong>母の代わりに</strong>，ご挨拶します。</p>
</div>

<p>但是其作为形式体言，有一个作用就是构成“虽然…但也…”的句式：</p>
<div class="note info no-icon"><p>スポーツがあまり上手では<strong>ない代わりに</strong>，大病もしたことがない。</p>
</div>

<p>这句话就被翻译为“虽然我运动不是很好，但是也从未生过大病”。</p>
<p>同时，这个形式体言也可以表示两者之间的一个交换条件：</p>
<div class="note info no-icon"><p>英語を教えて<strong>もらう代わりに</strong>，日本語を教えてあげます。</p>
</div>

<p>这句话可以形象翻译为“你来教我英语，作为交换，我教你日语”，实际上就是表明两个行为是一种交换的行为。</p>
<h4 id="形式体言：次第「しだい」"><a href="#形式体言：次第「しだい」" class="headerlink" title="形式体言：次第「しだい」"></a>形式体言：次第「しだい」</h4><p>这个词本质上也是一个实质体言，意思为“次序”，但是其作为形式体言有两种意思。如果接在连用形后面，就表示“全凭，全靠”的意思，如果接在第一连用形后面，就表示“一…就…”的意思：</p>
<div class="note info no-icon"><p>全ては君の<strong>決心の次第</strong>です。<br><strong>出来次第</strong>，お届けいたします。</p>
</div>

<p>这里「出来次第」可能一下子看不出来，实际上就是动词「できる」的第一连用形「出来」加上「次第」的形式。这两句话意为“这全靠你的决心”以及“一旦做出来就给您送过去”。</p>
<h4 id="形式体言：癖「くせ」に"><a href="#形式体言：癖「くせ」に" class="headerlink" title="形式体言：癖「くせ」に"></a>形式体言：癖「くせ」に</h4><p>这个词附加在动词上往往表达一种不满的、责备的语气，一般含有“明明怎么样，却怎么样”的感觉：</p>
<div class="note info no-icon"><p>お前は知って<strong>いるくせに</strong>，なんで私に教えてくれなかったの？<br>あいつはバスケットボールが<strong>下手なくせに</strong>，選手になりたいなんて夢を見ている。</p>
</div>

<p>这两句话可以根据语气分别翻译为“你明明知道，为什么不告诉我”以及“他篮球明明打得不好，却还想做当运动员的梦”。</p>
<h3 id="接续助词辅助表意"><a href="#接续助词辅助表意" class="headerlink" title="接续助词辅助表意"></a>接续助词辅助表意</h3><p>另外，还可以接续一些助词，比如说表达客观原因的「ので」。</p>
<div class="note info no-icon"><p>横浜へ行ったことがあるよ。</p>
</div>

<h2 id="第一连用形"><a href="#第一连用形" class="headerlink" title="第一连用形"></a>第一连用形</h2><p>首先我们给出第一连用形的变形规则：</p>
<ul>
<li><p>五段动词将词尾ウ段假名改为イ段假名</p>
</li>
<li><p>一段动词将词尾「る」删去</p>
</li>
<li><p>サ变动词删去词尾「する／ずる」加上「し／じ」</p>
</li>
<li><p>カ变动词变为「き」</p>
</li>
</ul>
<p>这里直接给出变形例子：</p>
<table>
<thead>
<tr>
<th align="center">動詞類型</th>
<th align="center">原形／辞書形</th>
<th align="center">語幹／第一連用形</th>
<th align="center">第一連用形＋ます</th>
</tr>
</thead>
<tbody><tr>
<td align="center">五段動詞「く」</td>
<td align="center">書く</td>
<td align="center">書き</td>
<td align="center">書きます</td>
</tr>
<tr>
<td align="center">五段動詞「ぐ」</td>
<td align="center">泳ぐ</td>
<td align="center">泳ぎ</td>
<td align="center">泳ぎます</td>
</tr>
<tr>
<td align="center">五段動詞「す」</td>
<td align="center">話す</td>
<td align="center">話し</td>
<td align="center">話します</td>
</tr>
<tr>
<td align="center">五段動詞「つ」</td>
<td align="center">立つ</td>
<td align="center">立ち</td>
<td align="center">立ちます</td>
</tr>
<tr>
<td align="center">五段動詞「ぬ」</td>
<td align="center">死ぬ</td>
<td align="center">死に</td>
<td align="center">死にます</td>
</tr>
<tr>
<td align="center">五段動詞「ぶ」</td>
<td align="center">飛ぶ</td>
<td align="center">飛び</td>
<td align="center">飛びます</td>
</tr>
<tr>
<td align="center">五段動詞「む」</td>
<td align="center">読む</td>
<td align="center">読み</td>
<td align="center">読みます</td>
</tr>
<tr>
<td align="center">五段動詞「る」</td>
<td align="center">降る</td>
<td align="center">降り</td>
<td align="center">降ります</td>
</tr>
<tr>
<td align="center">五段動詞「う」</td>
<td align="center">歌う</td>
<td align="center">歌い</td>
<td align="center">歌います</td>
</tr>
<tr>
<td align="center">上一段動詞</td>
<td align="center">起きる</td>
<td align="center">起き</td>
<td align="center">起きます</td>
</tr>
<tr>
<td align="center">下一段動詞</td>
<td align="center">教える</td>
<td align="center">教え</td>
<td align="center">教えます</td>
</tr>
<tr>
<td align="center">サ変動詞「基本」</td>
<td align="center">する</td>
<td align="center">し</td>
<td align="center">します</td>
</tr>
<tr>
<td align="center">サ変動詞「語幹ある」</td>
<td align="center">勉強する</td>
<td align="center">勉強し</td>
<td align="center">勉強します</td>
</tr>
<tr>
<td align="center">サ変動詞「濁点ある」</td>
<td align="center">感ずる</td>
<td align="center">感じ</td>
<td align="center">感じます</td>
</tr>
<tr>
<td align="center">カ変動詞</td>
<td align="center">くる</td>
<td align="center">き</td>
<td align="center">きます</td>
</tr>
</tbody></table>
<p>之后我们就可以介绍第一连用形的用途了。</p>
<h3 id="接续助词辅助表意-1"><a href="#接续助词辅助表意-1" class="headerlink" title="接续助词辅助表意"></a>接续助词辅助表意</h3><h4 id="助动词ます"><a href="#助动词ます" class="headerlink" title="助动词ます"></a>助动词ます</h4><p>「ます」在一定程度上是一种很常用的助动词，常常用来表示一种稍稍表敬意的语气。</p>
<p>「ます」在一定意义上也具有各种的变形来表达各种含义（毕竟原本的动词为了接续「ます」只能变为第一连用形，从而就不能再变形来表达含义了）。</p>
<ul>
<li>基本形「ます」</li>
</ul>
<p>最为基本的用法，不做介绍。</p>
<ul>
<li>未然形「ませ」</li>
</ul>
<p>接续「ん／ぬ」表示否定。不过要注意，接续「ぬ」已经是比较古老的用法，现今基本不使用。</p>
<div class="note info no-icon"><p>私はお茶を飲み<strong>ません</strong>。<br>そんなことを知り<strong>ませぬ</strong>。</p>
</div>

<ul>
<li>连用形「まし」</li>
</ul>
<p>接续「て」表示停顿或者接续「た」表达过去。</p>
<div class="note info no-icon"><p>昨日は新聞を読み<strong>ました</strong>。<br>昨日は雑誌を読み<strong>ませんでした</strong>。<br>初め<strong>まして</strong>。</p>
</div>

<p>这里稍微说说「ませんでした」这样的形式是怎么样构成的。因为日语构建过去否定都是先否定再过去，在形容词上面就已经有较多体现：</p>
<p>暑い　$\Rightarrow$　暑くない　$\Rightarrow$　暑くなかった</p>
<p>那么我们对「ます」的否定形式「ません」该如何处理呢？它不是用言，我们必须用助动词修饰之后才能进行过去化：</p>
<p>ません　$\Rightarrow$　ませんです　$\Rightarrow$　ませんでした</p>
<p>这里的「ませんです」只是一个变形中间体，不具有任何语言用途，不能在实际用语中出现。</p>
<ul>
<li>终止形「ます」</li>
</ul>
<p>终结句子用，没有实际含义。</p>
<ul>
<li>推量形「ましょ」</li>
</ul>
<p>接续「う」表示劝说、意见或者推论。</p>
<div class="note info no-icon"><p>今夜，一緒に食事をし<strong>ましょう</strong>。</p>
</div>

<h4 id="助动词たい／たがる"><a href="#助动词たい／たがる" class="headerlink" title="助动词たい／たがる"></a>助动词たい／たがる</h4><p>「たい／たがる」是表达欲望的助动词，其中第一人称常用「たい」，而其他人称常用「たがる」。不过要注意的是使用「たい」之后，其行为类似于形容词，而「たがる」行为类似于动词。</p>
<div class="note info no-icon"><p>私はお菓子を<strong>食べたい</strong>です。<br>今何も<strong>したくない</strong>です。<br>昨日は買い物<strong>したかった</strong>。<br>昨夜は宿題を<strong>やりたくなかった</strong>。<br><strong>遊びたければ</strong>，一緒にいこう。<br>うちの子は，いつもケーキを<strong>食べたがる</strong>のよ。</p>
</div>

<p>不过要注意的一点是，「たがる」是用来推测别人的愿望的，是蕴涵着自上而下审视的语气的。比如说上面的例句，实际上有一种“孩子爱吃蛋糕，别给吃胖了”或者“吃这么多，多费钱啊”这样的隐含负面语气，所以尽量少使用。</p>
<h4 id="助动词ながら／つつ"><a href="#助动词ながら／つつ" class="headerlink" title="助动词ながら／つつ"></a>助动词ながら／つつ</h4><p>「ながら」最为基本的意思是“一边”或者“同时”。如果要描述某个人一边如何一边如何，就可以用这个助词：</p>
<div class="note info no-icon"><p>山を<strong>登りながら</strong>，こう思った。</p>
</div>

<p>但是这个词有的时候会表达一种很轻微的转折，在一定程度上可以酌情表达为“但是”：</p>
<div class="note info no-icon"><p>我が国の労働者は仕事を<strong>しながら</strong>，勉強もできる。</p>
</div>

<p>这句话可以理解为“劳动者一边工作一边学习”，但是实际上如果语气适当，会表现出一种“我国劳动者会工作，但是也可以一边学习”种种带有转折含义的语气。</p>
<p>「つつ」有的时候也可以表达这种“一边”或者“同时”的含义，比如说：</p>
<div class="note info no-icon"><p>帰りのバスで外の景色を<strong>眺めつつ</strong>，明日の仕事を考えていた。</p>
</div>

<p>但是这个词似乎在更多的场合会被用来强调“言行不一”的转折含义，并且常常和主观动词「言う」「思う」「考える」「悩む」「知る」「嫌う」等连接使用，并且常常形成「つつも」的形式：</p>
<div class="note info no-icon"><p>今日は勉強しようと<strong>思いつつも</strong>，テレビを見てしまった。</p>
</div>

<p>这个助词还可以构成「つつある」的形式在口语中表示动作的持续，一定程度上类似后面要说到的「ている」形式：</p>
<div class="note info no-icon"><p>彼は今自分が<strong>死につつある</strong>ことを意識していた。</p>
</div>

<h3 id="接续辅助动词构成复合动词"><a href="#接续辅助动词构成复合动词" class="headerlink" title="接续辅助动词构成复合动词"></a>接续辅助动词构成复合动词</h3><p>复合动词是日语中常用的一种动词，常常是动词后面接续辅助动词或者形容动词接续辅助动词构成的，前面的动词或者形容动词构成主要意思，后面的辅助动词提供补充含义。当然，也有一些复合动词演化出了较为独特的含义。这里简单举出一些例子。</p>
<ul>
<li>辅助动词「合う」</li>
</ul>
<p>这个辅助动词的含义一般是“互相”，所以经常用来表达一些双方之间互相进行的行为，比如“互相帮助”或者“互相理解”。但是有的时候这个动词也可以表达出“汇合”的感觉。这类复合动词有：</p>
<div class="note info no-icon"><p>愛し合う、巡り合う、話し合う、語り合う、助け合う、理解し合う、分かり合う</p>
</div>

<ul>
<li>辅助动词「込む」</li>
</ul>
<p>这个辅助动词的含义一般是“程度深”，所以一般用来表示前面的动词进行的较为深入。所以可以接在“申请”后面表示“申请进入”或者接在“饮用”后面表示“吞噬”等含义。这种这类复合动词有：</p>
<div class="note info no-icon"><p>申し込む、読み込む、落ち込む、飲み込む、飛び込む</p>
</div>

<ul>
<li>辅助动词「出す」</li>
</ul>
<p>这个辅助动词的含义一般是“…出来”，这样的表述在汉语里也很多，类似“说出来”或者“飞出来”等等，所以这种复合动词很好理解。这类复合动词有：</p>
<div class="note info no-icon"><p>言い出す、思い出す、呼び出す、飛び出す、逃げ出す、考え出す</p>
</div>

<ul>
<li>辅助动词「上がる／上げる」</li>
</ul>
<p>这个辅助动词的含义一般是“完成”，但是会根据前面的动词是自动词还是他动词进行区分使用。如果是自动词就使用「上がる」，如果是他动词就使用「上げる」。这类复合动词有：</p>
<div class="note info no-icon"><p>飛び上がる、打ち上げる、晴れ上がる</p>
</div>

<p>实际上复合动词接续的辅助动词绝对不限于这些，比如说「始める」「続ける」「終わる」「残す」「返す」「かける」「切る」「兼ねる」都可以作为辅助动词使用。</p>
<h3 id="接续辅助形容词构成复合形容词"><a href="#接续辅助形容词构成复合形容词" class="headerlink" title="接续辅助形容词构成复合形容词"></a>接续辅助形容词构成复合形容词</h3><p>这里着重介绍「やすい」「にくい」这两个形容词。这两个形容词常常接续在第一连用形之后，分别表示“这个动作容易做”以及“这个动作不好做”的意思。由于不是重点，这里简单写两个例句表明用法：</p>
<div class="note info no-icon"><p>この薬は<strong>飲みやすい</strong>です。<br>冬の日に食べ物は悪く<strong>なりにくい</strong>です。</p>
</div>
]]></content>
      <categories>
        <category>日语</category>
      </categories>
  </entry>
  <entry>
    <title>回忆一下我的大学</title>
    <url>/2021/06/16/look-back/</url>
    <content><![CDATA[<p>在搭好这个网站之前，我也已经上了两年大学，走过了一半的本科时光。</p>
<span id="more"></span>

<p>我总是愿意将自己的身份定位为数学竞赛失败的高考生，从初三开始学习一些基本的数竞，高中数竞奋斗两年，结果是化竞考出所有竞赛中最好成绩然后高考混进了你清计算机系。估计你也看出来了，我在学什么上面一直是迷茫的，高中纠结主攻哪一门竞赛，于是数理化三面都搞。高考出分选专业，甚至是选清北也让我着实过了一个折磨的七月初。最后，还是随着大流，进了计算机系。</p>
<p>我的大一，刚开始的时候野心很大，想着好好搞成绩然后还毅然决然选上了班长。但是大学这片地方的宽阔程度完全超越了我作为一个县高学生的想象，再加上本身就有些不敢与生人交流的个性，所以大一的时候实则还是比较畏畏缩缩的。当时的话，几乎所有课程都靠着自己单打独斗，当时不知道计算机系的 <a href="https://github.com/PKUanonym/REKCARC-TSC-UHT">CRACKER</a> ，不知道大学的考试很屑，所以第一学期下来成绩就很一般般。</p>
<p>大一上学期刚结束的我还是有点高考生的“追求”的，于是下定决心下学期认真卷绩点。这种除了绩点什么都不管的心态大概持续了半年，直到加入了 <a href="https://www.unidy.cn/">xge</a> 的 <a href="https://github.com/UNIDY2002/THUInfo">THUInfo</a> 项目。或许就是从那个时候开始，才感觉大学不是像高中那样仅仅是为了成绩学习，而是有一些其他的路径的。</p>
<p>大一另外一个印象深刻的事情就是，学年末的甲团评比活动我们班的团支书居然缺席了，最后我不得不顶替他。当时离我们班展示还有不到半小时，而我还在边听着 91 班的展示边做 PPT 。这件事之后，我对社工算是很寒心，随后决定不再干社工。</p>
<p>大二的上学期过得很平凡，也没有给我留下很深刻的印象。但是这个学期，尤其是五月份，我明显感觉到自己的心态发生了很大的转变。首先就是自己突然感觉到对前三个学期的生活有种厌恶感，不想让自己继续在 GPA 主导之下生活。其次是突然重燃了对社工的一些热情，主要的缘故是跟着 xge 在科协里面参加了一些活动，比如嘉年华以及智能体决赛，在这期间也算是认识了不少人（比如大恶人安頔）。最后就是敢于正面自己对 Sakana 的一些感情了，大概这里不会太详细展开说。</p>
<p>2021 年 5 月，这一个月完全是值得铭记的。</p>
<p>所以这一篇流水账一般的记录就差不多该结束了。我记得刚刚进入大学的时候有人和我说，适应大学生活是需要很长时间的。我现在在想，或许我现在才算是真的找到了自己想要的生活。回忆着前两年自己近乎碌碌无为的生活，还是暂且从“内卷”“竞争”这些话题之中脱身，想象一下之后的我的大学。</p>
]]></content>
      <categories>
        <category>闲聊</category>
      </categories>
  </entry>
  <entry>
    <title>《人工智能导论》学习笔记</title>
    <url>/2021/06/16/note-of-iai/</url>
    <content><![CDATA[<p>这个文档就是一时兴起想要好好学学人工智能背后的玩意创建的。主要还是记录《人工智能导论》课程的笔记。</p>
<span id="more"></span>

<p>大概随着这个文档越来越饱满，我应该就能看懂<code>paper.md</code>这个诡异的超纲文档了。</p>
<h2 id="搜索问题"><a href="#搜索问题" class="headerlink" title="搜索问题"></a>搜索问题</h2><h3 id="盲目搜索（BFS-DFS）"><a href="#盲目搜索（BFS-DFS）" class="headerlink" title="盲目搜索（BFS / DFS）"></a>盲目搜索（BFS / DFS）</h3><p>DFS 优先扩展深度深的节点， BFS 优先扩展深度浅的节点。由于 DFS 往往存在深度限制，所以 DFS 是有可能找不到最优解的，并且最坏情况下 DFS 等价于枚举。而 BFS 在<strong>单位耗散值的有解问题</strong>上一定能找到最优解。</p>
<p>但有的时候搜索树上的相邻节点之间距离并非一致，所以出现了 Dijkstra 算法。这个算法是最短路算法之中较为重要的一个。在 Dijkstra 算法之中，原则是优先扩展<strong>距离起点最近的节点</strong>。</p>
<p>Dijkstra 算法考虑了当前节点与起点的距离，但是实则没有对距离终点的距离进行评估。所以之后可以引入启发式搜索。</p>
<h3 id="启发式搜索（A-A-）"><a href="#启发式搜索（A-A-）" class="headerlink" title="启发式搜索（A / A*）"></a>启发式搜索（A / A*）</h3><p>所谓启发式，就是引入<strong>启发知识</strong>，也就是对当前节点与目标之间的距离的评估。</p>
<p>在 A 算法之中，我们引入对节点 $n$ 的<strong>评估函数</strong> $f(n)$ ：</p>
<p>$$<br>f(n) = g(n) + h(n)<br>$$</p>
<p>这里 $h(n)$ 就是对当前节点与目标之间距离的评估，也被称为<strong>启发函数</strong>。</p>
<p>上述函数均为<strong>估计值</strong>。我们把相应的实际值（也就是最短路所对应的）分别标记为 $f^*(n), g^*(n), h^*(n)$ 。</p>
<p>A 算法的核心为，优先扩展 $f(n)$ 最小的节点。</p>
<p>在算法的具体实现过程之中，定义了<code>OPEN</code>表以及<code>CLOSE</code>表，分别代表<strong>当前考虑扩展的节点</strong>以及<strong>当前暂时不考虑扩展的节点</strong>。一份伪代码实现为：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">OPEN = [<span class="string">&#x27;s&#x27;</span>] <span class="comment"># &#x27;s&#x27; is the starting node</span></span><br><span class="line">CLOSE = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> OPEN.empty():</span><br><span class="line">    <span class="comment"># Select the node with minimum f value</span></span><br><span class="line">    n = OPEN.node_with_min_f()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># n is the expected node</span></span><br><span class="line">    <span class="keyword">if</span> expected(n):</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    OPEN.remove(n)</span><br><span class="line">    CLOSE.add(n)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Traverse the neighbors</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> n.neighbor():</span><br><span class="line">        path_len = g(n) + distance(n, m)</span><br><span class="line">        <span class="comment"># Expand the list</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (<span class="keyword">not</span> m <span class="keyword">in</span> CLOSE):</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been explored before, but it needs update</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            g(m) = path_len</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been discarded, but it can be reused now</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> CLOSE) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            CLOSE.remove(m)</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line"><span class="comment"># Fail</span></span><br><span class="line"><span class="keyword">return</span> FAIL</span><br></pre></td></tr></table></figure>

<p>在 A 算法之中，如果满足：</p>
<p>$$<br>h(n) \leq h^*(n)<br>$$</p>
<p>那么 A 算法就称为 A* 算法。 A* 算法的特点就在于<strong>只要初始节点到目标节点有路径，那么算法永远能找到最优解</strong>，而 A 算法并不保证有最优解。</p>
<p>另外给出一个定理：</p>
<blockquote>
<p>对于两个 A* 算法 $A_1, A_2$ ，如果对于非目标节点均满足：</p>
<p>$$<br>h_2(n) &gt; h_1(n)<br>$$</p>
<p>那么 $A_1$ 所扩展的节点数不小于 $A_2$ 所扩展的节点数。</p>
</blockquote>
<h3 id="改进-A-算法"><a href="#改进-A-算法" class="headerlink" title="改进 A* 算法"></a>改进 A* 算法</h3><p>A* 算法面临的一个问题在于<strong>可能会多次扩展同一个节点</strong>，这就导致了算法的低效，而实际上多次扩展某一个节点的原因在于扩展该节点所使用的路径并非是最短的。</p>
<p>我们可以认为可以使用<strong>单调的</strong>启发函数来解决这一问题，启发函数的单调性指的是三角形法则：</p>
<p>$$<br>\begin{cases}<br>    h(n_i) - h(n_j) \leq {\rm distance}(n_i, n_j) \\<br>    h(t) = 0<br>\end{cases}<br>$$</p>
<p>这里 $n_j$ 为 $n_i$ 的子节点。</p>
<p>我们可以证明如果 $h$ 是单调的，那么使用这个启发函数的 A* 算法一旦扩展到了某一个节点 $n$ ，就已经找到了从起点到这个节点的最短路，也就是说 $g(n) = g^*(n)$ 。</p>
<p>实际上还有一个结论，就是满足单调性的 $h$ 必然满足 A* 条件。</p>
<p>基于此改进 A* 算法如下（伪代码表示）：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">OPEN = [<span class="string">&#x27;s&#x27;</span>] <span class="comment"># &#x27;s&#x27; is the starting node</span></span><br><span class="line">CLOSE = []</span><br><span class="line">f_max = <span class="number">0</span> <span class="comment"># The maximum f value that has been found till now</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> OPEN.empty():</span><br><span class="line">    <span class="comment"># Find the nodes in OPEN with f value less than f_max</span></span><br><span class="line">    NEST = OPEN.with_f_less_than(f_max)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Select the node</span></span><br><span class="line">    <span class="comment"># When the f value has been small enough to be selected into NEST</span></span><br><span class="line">    <span class="comment"># We just need to select the minimum g value now</span></span><br><span class="line">    n = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> NEST.empty():</span><br><span class="line">        n = OPEN.node_with_min_f()</span><br><span class="line">        f_max = f(n)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        n = NEST.node_with_min_g()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># n is the expected node</span></span><br><span class="line">    <span class="keyword">if</span> expected(n):</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    OPEN.remove(n)</span><br><span class="line">    CLOSE.add(n)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Traverse the neighbors</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> n.neighbor():</span><br><span class="line">        path_len = g(n) + distance(n, m)</span><br><span class="line">        <span class="comment"># Expand the list</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (<span class="keyword">not</span> m <span class="keyword">in</span> CLOSE):</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been explored before, but it needs update</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            g(m) = path_len</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been discarded, but it can be reused now</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> CLOSE) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            CLOSE.remove(m)</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line"><span class="comment"># Fail</span></span><br><span class="line"><span class="keyword">return</span> FAIL</span><br></pre></td></tr></table></figure>

<h2 id="博弈问题（对抗搜索）"><a href="#博弈问题（对抗搜索）" class="headerlink" title="博弈问题（对抗搜索）"></a>博弈问题（对抗搜索）</h2><h3 id="alpha-beta-剪枝"><a href="#alpha-beta-剪枝" class="headerlink" title="$\alpha-\beta$ 剪枝"></a>$\alpha-\beta$ 剪枝</h3><p>我们在面临双方博弈，需要我方决策的时候，我们可以先搜索一遍所有可能的双方情况并使用专家知识对局面进行评估。由于对方有利就是我方不利，所以在搜索到最底部回溯得到估值的时候，要注意并不是始终取孩子节点的最大值，而是按层数交替取最大值和最小值。</p>
<p>一般而言，根节点要取最大的儿子节点（一般用方形节点代表<strong>极大过程</strong>），下一层要取最小的儿子节点（一般用圆形节点代表<strong>极小过程</strong>），以此类推。</p>
<p>所谓剪枝，就是目前遍历到此，发现继续遍历子节点都不会更新这个节点的估值了，此时就可以剪枝。注意，判定是否剪枝的时候是要和<strong>当前节点的所有祖先</strong>都进行比较的，不能只比较父节点。</p>
<p>不过要注意，在最后给出根节点估值后确定最后决策的时候，<strong>只能沿着决策树走一步</strong>。这是因为你做出决策后决策树可能会改变形态，不能保证后面的决策的估值情况还保证如此。</p>
<h3 id="蒙特卡罗方法"><a href="#蒙特卡罗方法" class="headerlink" title="蒙特卡罗方法"></a>蒙特卡罗方法</h3><p>$\alpha-\beta$ 剪枝依赖于大量的专家知识，所以在实际应用上也有所局限。其基本的思路是在给定的时限之内不断通过模拟对弈的方式扩展搜索树，最后再给定走步方式。</p>
<p>基本的循环包括以下几个部分：</p>
<ul>
<li>根据前期评估结果选取最有希望的叶子节点</li>
<li>在该叶子节点处随机进行一步，扩展出新叶子节点</li>
<li>从新叶子节点开始随机模拟对弈直到判定出胜负</li>
<li>根据模拟的结果反向更新决策树上各个节点的评估值</li>
</ul>
<p>一般而言，节点的评估值包含两个方面：</p>
<ul>
<li>当前信息下节点是有希望的</li>
<li>深度较浅的节点具有更大的探索可能</li>
</ul>
<p>一般而言可以选择这样的评估方式：</p>
<p>$$<br>I_j = \overline{X_j} + c\sqrt{\frac{2\ln n}{T_j(n)}}<br>$$</p>
<p>这里 $\overline{X_j}$ 表示经过当前节点的决策路径的胜率，这是一个守成的选项。</p>
<p>$n$ 表示当前搜索总次数， $T_j(n)$ 表示当前节点访问次数。</p>
<h2 id="高级搜索"><a href="#高级搜索" class="headerlink" title="高级搜索"></a>高级搜索</h2><h3 id="局部搜索"><a href="#局部搜索" class="headerlink" title="局部搜索"></a>局部搜索</h3><p>局部搜索的意思就是一直往更好的地方走，具体过程为：</p>
<ul>
<li>选择初始点 $x_0$ ，以及其相邻可考察点集 $P$ ；</li>
<li>只要不满足退出条件，进行下面循环：<ul>
<li>选择 $P’ \subset P$ ，取 $P’$ 之中最优解 $x_b$ ；</li>
<li>如果 $x_b$ 更优，则切换为考察 $x_b$ ， $P$ 修改为 $x_b$ 的相邻考察点集；</li>
<li>否则 $P = P - P’$ ；</li>
</ul>
</li>
<li>输出结果。</li>
</ul>
<h3 id="模拟退火算法"><a href="#模拟退火算法" class="headerlink" title="模拟退火算法"></a>模拟退火算法</h3><p>模拟退火实际上是对局部搜索的一个优化。其基本原理来自于液态金属凝固的时候如果降温过快则有可能由于分子没有充分时间排列为结晶态而导致凝固不工整（没有达到最低能状态），而实际工艺会让温度缓慢下降，并且有回升温度的可能，保证大概率凝固为结晶态。</p>
<p>迁移到局部搜索上，为了防止落入局部最小值，我们可以让“温度回升”是一个有概率发生的事情。对于评估函数 $E(i)$ ，以及两个状态 $p,q$ ，给出从 $p$ 迁移到 $q$ 的概率：</p>
<p>$$<br>P(p \rightarrow q) = \begin{cases}<br>1 &amp; E(q) \leq E(p) \\<br>\exp\left(\dfrac{E(p) - E(q)}{kT}\right) &amp; E(q) &gt; E(p) \\<br>\end{cases}<br>$$</p>
<p>这里 $k$ 是一个常量， $T$ 是“温度”，指的是优化问题之中的控制参数。</p>
<p>根据物理定律（ Boltzmann 分布）实际上我们可以给出定律：</p>
<ul>
<li>同一温度下，物体处于低能量状态的概率高于高能量状态；</li>
<li>温度无限高的时候，物体等概率处于任何状态；</li>
<li>温度无限低的时候，物体等概率处于任何最低能状态；</li>
<li>温度下降的时候，物体进入低能量状态概率上升，进入高能量状态概率下降。</li>
</ul>
<p>所以我们使用模拟退火方法的时候需要尽可能保证：</p>
<ul>
<li>初始能量足够高；</li>
<li>每个温度下状态交换足够充分；</li>
<li>温度的下降足够缓慢。</li>
</ul>
<p>所以算法的基本思路就是：</p>
<ul>
<li>选定初始状态；</li>
<li>随机选定初始状态的某一个相邻状态，考察它和初始状态的评估函数差：<ul>
<li>如果新状态更优，直接迁移；</li>
<li>如果原状态更优，则按照概率迁移；</li>
</ul>
</li>
<li>迁移完毕后降温，重复上述迁移步骤直到寻找到满意的状态。</li>
</ul>
<p>这里有些细节的问题需要考量。</p>
<p>首先是<strong>什么是满意的状态</strong>，一般而言最简单的就是设定温度阈值或者降温次数阈值，另外一个是如果多次降温都没有能够让评估函数的变化超过阈值就可以认为稳定了。</p>
<p>其次是<strong>什么时机降温</strong>，上述算法框架之中每次迁移完毕就会降温，但实际上有的时候会进行若干次迁移后才会降温。一般而言我们可以设定迁移次数阈值。</p>
<p>之后是<strong>怎么降温</strong>。等比例降温是最简单的，另外还有一个较为常用的：</p>
<p>$$<br>t_{k + 1} = \frac{t_k}{1 + \frac{t_k\ln(1 + \delta)}{3\sigma_{t_k}}}<br>$$</p>
<p>最后是<strong>初始温度如何设定</strong>。一般而言较高就可以了。</p>
<h3 id="遗传算法"><a href="#遗传算法" class="headerlink" title="遗传算法"></a>遗传算法</h3><p>遗传算法的本质就是模拟生物进化的过程，通过引入交叉、变异等干扰因素尝试在若干代迭代后获得满意的结果。不过我们首先关注最为重要的<strong>选优</strong>过程的模拟。</p>
<p>考虑一个包含 $N$ 个个体的群体，其中第 $i$ 个个体的适应值为 $F(x_i)$ ，那么在进化过程中其被选中的概率为：</p>
<p>$$<br>p(x_i) = \frac{F(x_i)}{\sum_{j = 1}^N F(x_j)}<br>$$</p>
<p>之后就可以模拟选优，过程为：</p>
<ul>
<li>从 $x_1$ 开始，以 $p(x_1)$ 的概率选择 $x_1$ 。若选中，结束模拟，否则继续；</li>
<li>转到 $x_2$ ，以 $p(x_1) + p(x_2)$ 的概率选择 $x_2$ 。若选中，结束模拟，否则继续；</li>
<li>……</li>
<li>结束模拟</li>
</ul>
<p>这是选出一个染色体的方式，下面介绍如何选出一个群体：</p>
<p>对于每一个个体 $x_i$ ，我们用上述方法在 $N$ 个个体之中选取 $\lfloor p(x_i)N\rfloor$ 次。之后按照 $p(x_i)N - \lfloor p(x_i)N\rfloor$ 从大到小排序群体，再取若干个让选出的群体恰好有 $N$ 个个体。</p>
<p>这种方法就是模拟了群体的一次进化，高适应的个体就有高可能得到繁殖（被多次取到）。</p>
<p>另外，交叉和变异则是对表示状态的二进制（或者十进制）数字串进行一定处理。</p>
<p>从而就有了遗传算法的基本框架：</p>
<ul>
<li>给定群体规模 $N$ ，交叉概率 $p_c$ 以及变异概率 $p_m$ ；</li>
<li>随机生成 $N$ 个染色体作为初始群体，并计算适应值；</li>
<li>下面不断重复循环直到找到合适的解：<ul>
<li>选优出 $N$ 个染色体成为扩展群体；</li>
<li>按照 $p_c,p_m$ 进行交叉和变异，未变化的染色体保留，形成新群体；</li>
</ul>
</li>
<li>选取整个进化过程中最适应的染色体作为最后输出。</li>
</ul>
<p>不过我们注意，我们一定要<strong>选取合适的编码方式</strong>，否则可能会因为问题的状态难以描述而导致编码串有过多无用位，从而导致无效变异。</p>
<p>二进制的交叉和变异是简单的，十进制的交叉可以如此：</p>
<ul>
<li>子代 1 的交叉位之后的基因从父代 2 的所有基因之中按顺序取出尚未在子代 1 之中基因；</li>
<li>指定若干的欠缺位，让父代 2 这些位置留空，之后按照父代1的顺序把原来的数字填回去形成子代 2 ；</li>
<li>指定一个一一对应的映射，以生成子代。</li>
</ul>
<p>变异则可以：</p>
<ul>
<li>指定两个位置，将后面的数字移到前面的指定位置之前；</li>
<li>指定两个位置，交换两个位置上的基因；</li>
<li>随意打乱某一区间。</li>
</ul>
<h2 id="统计机器学习"><a href="#统计机器学习" class="headerlink" title="统计机器学习"></a>统计机器学习</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>现实中的预测问题都可以归纳为在函数空间 $H = \{f \mid f: X \rightarrow Y\}$ 之中寻找最优的预测函数。这里 $X$ 是输入集，其中的元素一般表示预测的基础（已知信息）。而 $Y$ 是输出集，其中的元素一般表示需要预测的结果。</p>
<p>我们假设 $f \in H$ 为最优函数，也就是我们要寻找的。一般这个函数不会已知，但我们可以知道若干对输入输出组 $(x_i, y_i)$ 满足 $f(x_i) = y_i \pm {\rm noise}$ （ ${\rm noise}$ 指的是可能出现的数据扰动）。这些输入输出组构成<strong>训练集</strong>。</p>
<p>统计机器学习的目标就是根据训练集，按照某种算法尝试找一个 $g \in H$ ，让 $g$ 尽可能表现类似 $f$ 。</p>
<p>统计机器学习可以按照监督的介入分为：</p>
<ul>
<li>监督学习</li>
<li>无监督学习</li>
<li>半 / 弱监督学习</li>
</ul>
<p>监督学习事实上更贴近我们上述的统计机器学习定义，其又可以被分为<strong>回归</strong>（如线性回归、二次回归）以及<strong>分类</strong>。而无监督学习实际上常常被称为<strong>聚类</strong>。</p>
<p>有无监督的差别可以理解为训练集之中的输入输出对 $(x_i, y_i)$ 的 $y_i$ 是否明确。如果 $y_i$ 明确，那么这个学习就有监督，否则无监督。</p>
<p>下面解释为何无监督又被称为聚类。由于 $y_i$ 是不给定的，所以我们不能很明确给出一个已知局面具体属于何种类别，但我们对于给定的两个已知局面，我们可以判断其相似性（断定两者是否大概率属于同一类别），进而将类似的输入输出对聚合在一类里面，不类似的尽可能分开，这就是<strong>聚类（ clustering ）</strong>。所以尽管学习目标都是寻找 $g$ 让模型的预测尽可能准确，但是两者的学习方式是不同的。</p>
<p>之后我们给出两个概念，就是<strong>过拟合</strong>以及<strong>泛化能力</strong>。</p>
<p>过拟合是机器学习要处理的一个重要问题，其描述的就是算法给出了一个相当复杂的函数 $g$ ，其在训练集上能够相当准确率地和 $f$ 类似，但是在其余输入上却不够好。泛化能力描述的是这个模型在面对未知输入的时候是否能够做出合理输出的能力。</p>
<h3 id="朴素-Bayes-法"><a href="#朴素-Bayes-法" class="headerlink" title="朴素 Bayes 法"></a>朴素 Bayes 法</h3><p>这个方法应用在多分类问题上。我们可以认为输入空间为若干 $n$ 维向量的集合 $\boldsymbol X \subset \mathbb R^n$ ，输出空间则是若干类别（标签）的集合 $\boldsymbol Y = \{c_1, c_2, \cdots, c_k\}$ 。所以说输入 $X$ 是 $\boldsymbol X$ 上的随机变量，输出 $Y$ 是 $\boldsymbol Y$ 上的随机变量。考虑 $X, Y$ 的联合分布 $f(x, y)$ 。</p>
<p>我们得出：</p>
<p>$$<br>P(Y = c_k \mid X = x) = \frac{<br>    P(X = x \mid Y = c_k)P(Y = c_k)<br>} {<br>    \sum_k P(X = x \mid Y = c_k)P(Y = c_k)<br>}<br>$$</p>
<p>这个概率实际上是在给定输入 $X = x$ 的时候，输出 $Y = c_k$ 的后验概率。所有的先验概率来源于训练集，也就是用频率近似概率。</p>
<p>我们确定最后的输出的方式是寻找令后验概率最大的 $c_k$ 。由于上述分母保持常数，所以输出：</p>
<p>$$<br>y = \arg\max_{c_k} P(X = x \mid Y = c_k)P(Y = c_k)<br>$$</p>
<p>但是我们这里要注意到先验概率之中的 $P(X = x \mid Y = c_k)$ 项，其复杂度随着 $n$ 的上升而指数上升。但是我们可以假设 $X$ 的各个维度是独立的，所以我们可以得到：</p>
<p>$$<br>\begin{aligned}<br>P(X = x \mid Y = c_k) &amp;= P\left(X^{(1)} = x^{(1)}, X^{(2)} = x^{(2)}, \cdots, X^{(n)} = x^{(n)} \ \middle| \  Y = c_k\right) \\<br>&amp;= \prod_{j = 1}^n P\left(X^{(j)} = x^{(j)} \ \middle| \ Y = c_k\right)<br>\end{aligned}<br>$$</p>
<p>最终给出的 <strong>Bayes 分类器</strong>为：<br>$$<br>y = \arg\max_{c_k} P(Y = c_k)\prod_{j = 1}^n P\left(X^{(j)} = x^{(j)} \ \middle| \ Y = c_k\right)<br>$$</p>
<p>这里给出<strong>平滑</strong>的概念。也就是如果训练集中如果没有出现过某一个 case ，这个时候 case 的频率为 $0$ ，但是显然我们不能把概率估计为 $0$ ，这个时候会引入平滑。这里给出一个例子：</p>
<p>$$<br>P_\lambda\left(X^{(j)} = a_{jl} \ \middle| \ Y = c_k\right) = \frac{<br>    \sum_{i = 1}^N {\rm idx}\left(x_i^{(j)} = a_{jl}, y_i = c_k\right) + \lambda<br>} {<br>    \sum_{i = 1}^N {\rm idx}(y_i = c_k) + S_j\lambda<br>}<br>$$</p>
<p>${\rm idx}$ 函数为<strong>示性函数</strong>，其参数为布尔表达式，为真的时候函数返回 $1$ ，否则返回 $0$ 。</p>
<p>这里 $S_j$ 为 $x^{(j)}$ （输入第 $j$ 维）的取值集合 $\{a_{j1}, a_{j2}, \cdots, a_{jS_j}\}$ 的大小。</p>
<p>这里 $\lambda$ 是平滑系数，一般取 $\lambda = 1$ ，此时平滑成为 <strong>Laplace 平滑</strong>。</p>
<h3 id="支持向量机（-SVM-）"><a href="#支持向量机（-SVM-）" class="headerlink" title="支持向量机（ SVM ）"></a>支持向量机（ SVM ）</h3><p>SVM 是一个适用于二分类问题的计算模型。</p>
<p>给定线性可分训练集 $T = \{(\boldsymbol x_1, y_1), (\boldsymbol x_2, y_2), \cdots, (\boldsymbol x_N, y_N)\}$ ，这里 $\boldsymbol x_i \in X = \mathbb R^n$ 以及 $y_i \in Y = \{1, -1\}$ 。这里我们称 $1$ 为正类， $-1$ 为负类。</p>
<p>我们希望寻找一个超平面 $\boldsymbol w^{*T}\boldsymbol x + b^* = 0$ ，给定决策函数：</p>
<p>$$<br>f(\boldsymbol x) = {\rm sgn}(\boldsymbol w^{*T}\boldsymbol x + b^*)<br>$$</p>
<p>这就是<strong>线性可分支持向量机</strong>。</p>
<p>为了评估一个超平面 $\boldsymbol w^T\boldsymbol x + b = 0$ ，我们给定 $T$ 之中的一个样本点 $(x_i, y_i)$ ，定义<strong>函数间隔</strong>：</p>
<p>$$<br>\hat\gamma_i = y_i(\boldsymbol w^T\boldsymbol x_i + b)<br>$$</p>
<p>定义<strong>几何间隔</strong>：</p>
<p>$$<br>\gamma_i = y_i\left(\frac{\boldsymbol w^T}{\|\boldsymbol w\|}\boldsymbol x_i + \frac{b}{\|\boldsymbol w\|}\right)<br>$$</p>
<p>上述定义是针对单个样本点的，所以对于整个训练集 $T$ ，定义：</p>
<p>$$<br>\begin{cases}<br>    \hat\gamma = \min_i \hat\gamma_i \\<br>    \gamma = \min_i \gamma_i \\<br>\end{cases}<br>$$</p>
<p>这也就是训练集和超平面的函数间隔以及几何间隔。这两种间隔之间相差 $\|\boldsymbol w\|$ 倍。</p>
<p>我们选择超平面的标准就是<strong>最大化超平面和训练集的间隔</strong>，也就是求取 $\max_{\boldsymbol w, b}\gamma$ 。由于 $\boldsymbol w, b$ 可以成比例缩放，所以说我们完全可以假设 $\hat\gamma = 1$ ，从而最优化问题转化为最大化 $1 / \|\boldsymbol w\|$ ，等价于最小化 $1 / 2\|\boldsymbol w\|^2$ 。所以说问题就是求解 $\min_{\boldsymbol w, b} 1 / 2\|\boldsymbol w\|^2$ 。</p>
<p>这里由于 $\hat\gamma = 1$ ，所以说总是存在 $(\boldsymbol x_i, y_i)$ 满足 $y_i(\boldsymbol w^T\boldsymbol x_i + b) = \hat\gamma = 1$ ，这个向量就是<strong>支持向量</strong>。</p>
<p>SVM 的学习过程，可以先定义 Lagrange 函数：</p>
<p>$$<br>L(\boldsymbol w, b, \boldsymbol\alpha) = \frac{1}{2}\|\boldsymbol w\|^2 + \sum_{i = 1}^N \alpha_i[1 - y_i(\boldsymbol w^T\boldsymbol x_i + b)]<br>$$</p>
<p>这里 $\alpha_i \geq 0$ ，并且 $\boldsymbol\alpha = (\alpha_1, \alpha_2, \cdots, \alpha_N)^T$ 为 Lagrange 乘子向量。</p>
<p>我们知道：</p>
<p>$$<br>\max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha) =<br>\begin{cases}<br>    \dfrac{1}{2}\|\boldsymbol w\|^2 &amp; {\rm when\ some\ requirements\ are\ satisfied} \\<br>    \infty &amp; {\rm otherwise}<br>\end{cases}<br>$$</p>
<p>所以说 $\min_{\boldsymbol w, b}\max_\alpha L(\boldsymbol w, b, \boldsymbol\alpha)$ 与原问题等价。</p>
<p>另外，我们断定：</p>
<p>$$<br>\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha) \leq L(\boldsymbol w, b, \boldsymbol\alpha) \leq \max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha)<br>$$</p>
<p>所以我们有：</p>
<p>$$<br>\max_\boldsymbol\alpha\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha) \leq \min_{\boldsymbol w, b}\max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha)<br>$$</p>
<p>这个等号成立的条件为 <strong>KKT 条件</strong>。所以我们将问题转化为求 $\max_\boldsymbol\alpha\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha)$ 。</p>
<p>我们令 $L(\boldsymbol w, b, \boldsymbol\alpha)$ 对 $\boldsymbol w, b$ 偏导为 $0$ 并带入就将问题转化为：</p>
<p>$$<br>\max_\boldsymbol\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_j(\boldsymbol x_i^T\boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]<br>$$</p>
<p>这里的约束条件为：</p>
<p>$$<br>\sum_{i = 1}^N \alpha_iy_i = 0\ (\alpha_i \geq 0)<br>$$</p>
<p>我们据此获得 $\alpha^*$ ，从而我们可以计算：</p>
<p>$$<br>\begin{cases}<br>    \boldsymbol w^* = \sum_{i = 1}^N \alpha_i^*y_i\boldsymbol x_i \\<br>    b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_i(\boldsymbol x_i^T\boldsymbol x_j)\ (\alpha_j^* \neq 0)<br>\end{cases}<br>$$</p>
<p>但是有的时候这些点并不能被线性超平面完全分隔，所以说 $y_i(\boldsymbol w^T\boldsymbol x_i + b) \geq 1$ 并不能处处满足，所以需要引入<strong>松弛变量</strong>：</p>
<p>$$<br>y_i(\boldsymbol w^T\boldsymbol x_i + b) \geq 1 - \xi_i<br>$$</p>
<p>为了尽量减小 $\xi_i$ 的影响，所以我们可以把优化目标改为：</p>
<p>$$<br>\min_{\boldsymbol w, b, \xi}\left(\frac{1}{2}\|\boldsymbol w\|^2 + C\sum_{i = 1}^N \xi_i\right)<br>$$</p>
<p>这种处理方式称为<strong>软间隔最大化</strong>，这里 $C &gt; 0$ 为惩罚参数， $C$ 越大惩罚力度越大。</p>
<p>按照线性可分 SVM 的方法，问题转化为：</p>
<p>$$<br>\max_\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_j(\boldsymbol x_i^T\boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]<br>$$</p>
<p>这里的约束条件为：</p>
<p>$$<br>\sum_{i = 1}^N \alpha_iy_i = 0\ (0 \leq \alpha_i \leq C)<br>$$</p>
<p>我们据此获得 $\alpha^*$ ，从而我们可以计算：</p>
<p>$$<br>\begin{cases}<br>    \boldsymbol w^* = \sum_{i = 1}^N \alpha_i^*y_i\boldsymbol x_i \\<br>    b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_i(\boldsymbol x_i^T\boldsymbol x_j)\ (0 &lt; \alpha_j^* &lt; C)<br>\end{cases}<br>$$</p>
<p>$\alpha_i^* &gt; 0$ 对应的 $\boldsymbol x_i$ 是支持向量。</p>
<ul>
<li>若 $\alpha_i^* = 0$ ，则不是支持向量（对应曲线外侧的点）</li>
<li>若 $0 &lt; \alpha_i^* &lt; C$ ，则 $\xi_i = 0$ ，那么 $\boldsymbol x_i$ 在间隔边界上，是支持向量（对应两条虚线上的点）</li>
<li>若 $\alpha_i^* = C$ ，那么 $\boldsymbol x_i$ 也是支持向量<ul>
<li>若 $0 &lt; \xi_i &lt; 1$ ，则分类正确（对应在己方虚线和实线之间的点）</li>
<li>若 $\xi_i = 1$ ，则在超平面上（对应在实线上的点）</li>
<li>若 $\xi_i &gt; 1$ ，则被误分（对应在实线和对方虚线之间的点）</li>
</ul>
</li>
</ul>
<p>这里给出一个结论，也就是样本点到软间隔边界（虚线边界）的距离为 $\xi_i / \|\boldsymbol w\|$ 。</p>
<p>另外一方面，我们考虑使用非线性的方式分割数据点。事实上就是尝试建立一个非线性映射将原空间的数据点映射到新空间上，这些数据点在新空间上线性可分。</p>
<p>考虑使用映射 $\phi: X \rightarrow H$ 将输入 $\boldsymbol x \in X$ 映射到新空间 $H$ 上，这里把 $K(\boldsymbol x, \boldsymbol y) := \phi(\boldsymbol x)^T\phi(\boldsymbol y)$ 称为<strong>核函数</strong>。这个时候所有的与内积相关的运算均应该使用核函数进行。</p>
<p>按照线性可分 SVM 的方法，问题转化为：</p>
<p>$$<br>\max_\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_jK(\boldsymbol x_i, \boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]<br>$$</p>
<p>这里的约束条件为：</p>
<p>$$<br>\sum_{i = 1}^N \alpha_iy_i = 0\ (0 \leq \alpha_i \leq C)<br>$$</p>
<p>我们据此获得 $\alpha^*$ ，从而我们可以计算：</p>
<p>$$<br>b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_iK(\boldsymbol x_i, \boldsymbol x_j)\ (0 &lt; \alpha_j^* &lt; C)<br>$$</p>
<p>原有的决策函数之中含有内积，所以也需要将其修改为：</p>
<p>$$<br>f(\boldsymbol x) = {\rm sgn}\left(\sum_{i = 1}^N \alpha_i^*y_iK(\boldsymbol x_i, \boldsymbol x) + b^*\right)<br>$$</p>
<p>常用的核函数包括<strong>多项式核函数</strong>：</p>
<p>$$<br>K(\boldsymbol x, \boldsymbol y) = (\boldsymbol x^T\boldsymbol y + 1)^p<br>$$</p>
<p>以及<strong>高斯核函数</strong>：</p>
<p>$$<br>K(\boldsymbol x, \boldsymbol y) = \exp\left(-\frac{\|\boldsymbol x - \boldsymbol y\|^2}{2\sigma^2}\right)<br>$$</p>
<h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><p>我们定义随机变量 $X$ 的熵为：</p>
<p>$$<br>H(X) = -\sum_{i = 1}^n p_i\log p_i<br>$$</p>
<p>当概率由训练集 $D$ 给出，该熵可以标记为 $H(D)$ 。</p>
<p>之后给出条件熵：</p>
<p>$$<br>H(Y \mid X) = \sum_{i = 1}^n P(X = x_i)H(Y \mid X = x_i)<br>$$</p>
<p>这表示的是已经知道 $X$ 的时候 $Y$ 的不确定性。</p>
<p>之后定义特征 $A$ 对数据集 $D$ 的<strong>信息增益</strong>为：</p>
<p>$$<br>g(D, A) = H(D) - H(D \mid A)<br>$$</p>
<p>这实际上表示的是给定特征 $A$ 的时候数据集 $D$ 不确定性减少的程度。</p>
<p>假设有训练集 $D$ ，有 $K$ 个类 $C_k$ ，特征 $A$ 有 $n$ 个取值 $a_i$ ，特征 $A$ 的不同取值将 $D$ 划分为 $n$ 个子集 $D_i$ ，记 $D_i$ 中属于 $C_k$ 类的样本集合为 $D_{ik}$ ，那么：</p>
<p>$$<br>\begin{aligned}<br>    g(D, A) &amp;= H(D) - H(D \mid A) \\<br>    &amp;= -\sum_{k = 1}^K \frac{|C_k|}{|D|}\log\frac{|C_k|}{|D|} + \sum_{i = 1}^n \frac{|D_i|}{|D|}\left(\sum_{k = 1}^K \frac{|D_{ik}|}{|D_i|}\log\frac{|D_{ik}|}{|D_i|}\right)<br>\end{aligned}<br>$$</p>
<p>下面介绍 ID3 算法，这个算法可以用于生成决策树：</p>
<ul>
<li>如果 $D$ 之中所有例子属于同一类或者没有用于判断的特征，则返回单节点树，类标记为实例数最多的类；</li>
<li>选择信息增益最大的特征 $A_g$ ，其信息增益为 $\delta_A$ ；</li>
<li>如果 $\delta_A$ 小于阈值 $\varepsilon$ ，那么置单节点决策树，类标记为实例数最多的类；</li>
<li>否则按照特征取值分割训练集，如果某个分割后的块为空，那么构建单节点子树，类标记为 $D$ 实例数最多的类。若非空则构建子树，递归上述过程。</li>
</ul>
<p>这样的算法倾向于选择分支比较多的属性。</p>
<p>所以定义<strong>信息增益比</strong>：</p>
<p>$$<br>g_R(D, A) = \frac{g(D, A)}{H_A(D)}<br>$$</p>
<p>将 ID3 算法之中的信息增益换成信息增益比则得到 C4.5 算法。</p>
<p>这种方法生成的决策树可能产生过拟合，所以需要一定程度上的剪枝。剪枝的基本流程在于找到一个父节点，剪取其下一代后将其作为新的叶子节点，其类型标记为其原来对应的子树中量最大的类。</p>
<p>在数据量足够大的时候，可以使用验证集进行剪枝，也就是不断使用验证集剪枝直到性能下降。如果数据量不够，则使用训练集，从下往上缩节点，直到损失函数回升。损失函数定义：</p>
<p>$$<br>C_a(T) = \sum_{t = 1}^{|T|}N_tH_t(T) + a|T|<br>$$</p>
<p>这里经验熵定义为：</p>
<p>$$<br>H_t(T) = -\sum_k \frac{N_{tk}}{N_t}\log\frac{N_{tk}}{N_t}<br>$$</p>
<p>这里某一个节点 $t$ 的样本数为 $N_t$ ，其中 $k$ 类的样本数为 $N_{tk}$ 。</p>
<h2 id="神经网络与深度学习"><a href="#神经网络与深度学习" class="headerlink" title="神经网络与深度学习"></a>神经网络与深度学习</h2><h3 id="基本神经元结构"><a href="#基本神经元结构" class="headerlink" title="基本神经元结构"></a>基本神经元结构</h3><p>一个神经网络中的神经元一般接受多个输出并产生一个输出，一般而言其数学表达为：</p>
<p>$$<br>y = g\left(\sum_{i = 1}^n w_ix_i + b\right)<br>$$</p>
<p>这里函数 $g$ 一般是非线性的，称为<strong>激活函数</strong>。激活函数常见的有 sigmoid 等。</p>
<h3 id="反向传播算法（-BP-）"><a href="#反向传播算法（-BP-）" class="headerlink" title="反向传播算法（ BP ）"></a>反向传播算法（ BP ）</h3><p>训练一个多层神经网络可以分为两步，首先是正向从输入计算出输出，和标准输出对比，算出损失函数（衡量实际输出和标准输出的差别），这是<strong>正向传播</strong>。之后就是根据差别的大小，计算出网络中各个权重对最终输出的偏导数，从而更新权重值，这是<strong>反向传播</strong>。</p>
<p>一般而言我们常常使用均方误差评价输出，也就是说对于某一层神经元以及某一个样本 $d$ ，标记其中第 $j$ 个神经元的实际输出为 $o_j$ ，理想输出为 $t_j$ ，那么损失函数为：</p>
<p>$$<br>E_d(\boldsymbol w) = \frac{1}{2}\sum_j (t_j - o_j)^2<br>$$</p>
<p>根据损失函数，权重 $w_{ji}$ （第 $j$ 个神经元对第 $i$ 个输入的权重）的更新量为：</p>
<p>$$<br>\Delta w_{ji} = -\eta\frac{\partial E_d}{\partial w_{ji}}<br>$$</p>
<p>这里 $0 &lt; \eta &lt; 1$ 称为<strong>学习率</strong>。</p>
<p>我们设置一个中间量：</p>
<p>$$<br>n_j := \sum_iw_{ji}x_{ji} + b_j<br>$$</p>
<p>也就是未激活的神经元输出。那么我们知道：</p>
<p>$$<br>\frac{\partial E_d}{\partial w_{ji}} = \frac{\partial E_d}{\partial n_j}\frac{\partial n_j}{\partial w_{ji}} = \frac{\partial E_d}{\partial n_j}x_{ji}<br>$$</p>
<p>下面我们对输出层和隐含层分别计算损失函数对未激活输出的偏导数。</p>
<p>如果该层为输出层，那么我们进一步展开：</p>
<p>$$<br>\frac{\partial E_d}{\partial n_j} = \frac{\partial E_d}{\partial o_j}\frac{\partial o_j}{\partial n_j} = \frac{\partial}{\partial o_j}\left(\frac{1}{2}\sum_k(t_k - o_k)^2\right)\frac{\partial \sigma(n_j)}{\partial n_j} = -(t_j - o_j)o_j(1-o_j)<br>$$</p>
<p>这里默认激活函数为 sigmoid 函数。</p>
<p>如果该层为隐藏层，我们记其下游层的神经元构成集合 $D$ 。作如下展开：</p>
<p>$$<br>\begin{aligned}<br>\frac{\partial E_d}{\partial n_j} &amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}\frac{\partial n_k}{\partial o_j}\frac{\partial o_j}{\partial n_j} \\<br>&amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}\frac{\partial}{\partial o_j}\left(\sum_l w_{kj}o_j + b\right)\frac{\partial\sigma(n_j)}{\partial n_j} \\<br>&amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}w_{kj}o_j(1 - o_j) \\<br>&amp;= o_j(1 - o_j)\sum_{k \in D}\frac{\partial E_d}{\partial n_k}w_{kj}<br>\end{aligned}<br>$$</p>
<p>这里还有一项偏导数实则可以继续按照上述的方式递推计算，直到计算到输出层。</p>
<p>这里额外提一下，均方误差只是一个选择，在分类问题中，更常用的是<strong>交叉熵误差</strong>：</p>
<p>$$<br>H_\boldsymbol t(\boldsymbol o) = -\sum_i t_i\log(o_i)<br>$$</p>
<h3 id="过拟合问题与正则化"><a href="#过拟合问题与正则化" class="headerlink" title="过拟合问题与正则化"></a>过拟合问题与正则化</h3><p>过拟合问题在之前有过说明，在深度学习之中减少过拟合的一个方法就是在损失函数之中加入正则项：</p>
<p>$$<br>E_d(\boldsymbol w) = \frac{1}{2}\sum_k(t_k - o_k)^2 + \|\boldsymbol w\|<br>$$</p>
<p>另外还有引入 Dropout 以及引入验证集的方式，这里均不展开。</p>
<h3 id="卷积神经网络（-CNN-）"><a href="#卷积神经网络（-CNN-）" class="headerlink" title="卷积神经网络（ CNN ）"></a>卷积神经网络（ CNN ）</h3><p><code>TODO</code></p>
<h3 id="循环神经网络（-RNN-）"><a href="#循环神经网络（-RNN-）" class="headerlink" title="循环神经网络（ RNN ）"></a>循环神经网络（ RNN ）</h3><p><code>TODO</code></p>
]]></content>
      <categories>
        <category>计算机科学</category>
      </categories>
  </entry>
  <entry>
    <title>《Making Pre-trained Language Models Better Few-shot Learners》阅读笔记</title>
    <url>/2021/07/10/paper-nlp-01/</url>
    <content><![CDATA[<p>咕了很长时间实验室那边，今天一定要开始做一点真正的事情。科研，先从读论文开始。</p>
<span id="more"></span>

<h2 id="问题-amp-解决方案概述"><a href="#问题-amp-解决方案概述" class="headerlink" title="问题 &amp; 解决方案概述"></a>问题 &amp; 解决方案概述</h2><p>GPT-3 是很强大的，因为其只要通过一定的 prompt ，甚至不需要修改模型参数就可以给出相当优越的预测。但是 GPT-3 的参数量太大，实际应用可能因此受限。</p>
<p>这个文章之中的工作就是使用一些中等体量的模型（比如说 BERT 或者 RoBERTa ），然后使用少量数据（比如 few-shot ）做一下 finetune 来获得最终的模型。这样的模型可以在常用的硬件上进行训练，并且 few-shot 也贴合实际的应用场合。</p>
<p>文章里在阐述他们的解决方案的时候，叙述了他们会继续采用 <strong>prompt-based</strong> 的预测方法，不过他们引入了自动生成 prompt 的模型（ automatic prompt generation ）。这样的方法生成的 prompt 能和人工编写的 prompt 类似，甚至可能表现更好。</p>
<p>其次，他们改进了 GPT-3 的 in-context learning 范式。相较于原先较为随机地将补充内容和输入直接连接，文章中提出了一个较为有逻辑的新方法。</p>
<p>使用这些简单有效的方法可以让 finetuning 更为高效，文章中将这一套方法称为 LM-BFF （ better few-shot finetuning of language models ）。</p>
<h2 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h2><p>这里介绍了他们的工作的基础和他们所做的改进。</p>
<ul>
<li><p>【语言模型的 prompt 】文章的工作基于 GPT-3 和 PET 的有关半监督学习的工作，但是同时改进了他们的评测系统，引入了一个更为精细的框架。</p>
</li>
<li><p>【自动化 prompt 查找】原先已经有部分工作尝试着将寻找 prompt 的流程自动化，但和人工选取的 prompt 相比，这些自动化寻找的 prompt 表现都不太好。但是文章提出了一系列能寻找出和人工选取表现近似的方法。</p>
</li>
<li><p>【语言模型的 finetune】现在对语言模型 finetune 的探索基本是在探索<strong>更好的优化方式</strong>和<strong>更好的正则化</strong>以稳定 finetune 过程。但是这篇文章的工作不聚焦于这些，其使用了一般的 finetune 方法。</p>
</li>
<li><p>【few-shot 方法】</p>
</li>
</ul>
]]></content>
      <categories>
        <category>计算机科学</category>
      </categories>
  </entry>
  <entry>
    <title>2021 暑假生活记录</title>
    <url>/2021/06/29/summer-record/</url>
    <content><![CDATA[<p>经过 6 月 22 日到 28 日这几天的折腾，大概和高中的老师、驾校教练等人商量了一些后续的安排。现在终于可以安定下来，准备做一些学习、开发、摸鱼的事情了。</p>
<span id="more"></span>

<p>总体而言，这个暑假想要做的事情其实还是很多的。</p>
<ul>
<li><p>学习一些新东西</p>
<ul>
<li><p>Java / Android 开发相关（或许最终的结果是随便看了看 Java 的语法，装好 IDE 就不做事了）</p>
</li>
<li><p>汇编语言和量子计算（这属于完全不知道干啥，写在这里是因为小学期）</p>
</li>
<li><p>Verilog 相关（但是这个属于想想而已，因为对这东西没有兴趣，下学期 xge 带我就好）</p>
</li>
<li><p>编译原理相关（这个也属于想想而已，写这个是因为自动机学得惨不忍睹，要补一点）</p>
</li>
<li><p>图形学相关（纯纯因为安主席的安利）</p>
</li>
</ul>
</li>
<li><p>跟进一些东西</p>
<ul>
<li><p>实验室项目（主要是最近划了，要跟上）</p>
</li>
<li><p>THUInfo 的 UI 翻新以及培养计划 / 课程表功能翻新</p>
</li>
<li><p>科协技能引导文档的结构初始化</p>
</li>
</ul>
</li>
<li><p>考试相关</p>
<ul>
<li><p>科目二（再不考是来不及了，大三不计划回家）</p>
</li>
<li><p>GRE （属于想考一下试一下）</p>
</li>
</ul>
</li>
</ul>
<p>此外还有一些杂事，包括买一个新电脑、预定 GRE 考试、选大三的课、重办身份证、回高中讲竞赛、和高中东方同好会线下聚会、陪 Sakana 玩等各种。</p>
<p>因为想做的事情很多，所以想着不如就在这里开一个日记贴，就每天写一下想干什么，最后干了什么之类的。没啥价值，目标就是让自己做点事情，别划水了。</p>
<h2 id="2021-06-29"><a href="#2021-06-29" class="headerlink" title="2021.06.29"></a>2021.06.29</h2><p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>去驾校办理科目二入学手续</p>
</li>
<li><p>公布科协网络部招新结果，准备一下文档初始化</p>
</li>
<li><p>CRACKER 一日游，就到处看看有什么资料</p>
</li>
<li><p>准备 THUInfo 主页 UI 翻新</p>
</li>
<li><p>问一下韩旭下一步可以做什么</p>
</li>
</ul>
<p>其实想做的多，最后能做完的，凭运气吧。睡大觉去了，祝自己好梦，祝自己暑假顺利。也祝 Sakana 军训平稳度过。</p>
<p><strong>今天汇报：</strong></p>
<p>基本上弄完了网络部招新的通知工作，飞书还没有完全摸完，这个晚上慢慢来。后面应该要去问一下技术顾问团他们的情况，好准备做点事情。不过考虑到零字班的新生估计还要等他们军训完了才能安排工作，所以初始化应该暂且由老人完成。</p>
<p>给韩旭发了微信消息，等他安排吧。</p>
<p>目前下学期应该是四大原理 + 人机交互 + 计算机网络安全 + 台球 / 网球，所以也可以开始做点准备了。</p>
<p>之后就是逛 CRACKER 。目前的一个打算是汇编和计组应该就通过 CSAPP 先摸一下。计组可能还需要一些 Verilog 什么的东西，这个以后等买了 Windows 电脑再来搞一搞，造 CPU 的那本书也已经拿到手了，也可以拿 PPT 做一些补充。 Java 相关是不打算弄多少，总之和 xge 他们组队搬砖，所以就打算把一些算法代码改成 Java 的，熟悉一下语法算了。</p>
<p>编原那就是纯纯的逆天，因为我自动机学不明白，所以编译原理需要先看一些讲义和 Compiler 那本书。</p>
<p>信号据说是数学课，所以找个课本随便学应该也就应付过去了。网原看起来属于巨大背诵的一门课，找了个《计算机网络：自顶而下》，然后要到了所有的课件，就打算看着玩玩算了。</p>
<p>至于那些限选课，网络安全技术看起来和网原巨大相关，懒得搞。然后就是人机交互没啥经验，就算了。</p>
<p>最后是打算学习图形学，问安主席要到了整本书的电子版，然后找到了网课链接，总之打算干活。</p>
<h2 id="2021-06-30"><a href="#2021-06-30" class="headerlink" title="2021.06.30"></a>2021.06.30</h2><p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>去驾校办理科目二入学手续，开始练车</p>
</li>
<li><p>还有一位网络部新人没有联系上，需要补联系，并且需要搞一下飞书</p>
</li>
<li><p>推一点点 CSAPP 、图形学什么的</p>
</li>
<li><p>准备 THUInfo 主页 UI 翻新</p>
</li>
</ul>
<p>其实也没什么好说的，就是学点新知识之后做一点之前就有的锅。明天要早起所以赶快睡大觉吧。</p>
<p><strong>今天汇报：</strong></p>
<p>以为去报名的，结果刚进去就被拉上车开始练了，估计以后就是早上八点下午两点，一整个白天都要在驾校了，所以推活、上课这些事情都得是晚上来做了。</p>
<p>那个还没联系上的新人联系上了，所以招新基本上就结束了，可以开始具体规划下面一步要做的事情了。然后对下面的工作做了一点点的推进。</p>
<p>然后就是 THUInfo 还在消极怠工，不过最近会开工的，会开工的。</p>
<h2 id="2021-07-01"><a href="#2021-07-01" class="headerlink" title="2021.07.01"></a>2021.07.01</h2><p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>科目二学侧方停车、倒车入库、坡道起步</p>
</li>
<li><p>推一点点 CSAPP 之类的</p>
</li>
<li><p>准备 THUInfo 主页 UI 翻新</p>
</li>
</ul>
<p>主要是晚上和家里人聊了比较多，所以说实际上今天晚上也没有认真学一些东西。</p>
<p><strong>今天汇报：</strong></p>
<p>学车真的是比较无聊，就开车十分钟等待两小时，于是其实天气热什么的都不是最大的问题，无聊是最需要解决的。</p>
<p>然后，看了一点信号处理原理和编译原理，然后就发现自己的数学全忘完了，还是得回来再学一点点。</p>
<p>没什么好说的，以后估计就是这样的重复的生活了。</p>
<h2 id="2021-07-02"><a href="#2021-07-02" class="headerlink" title="2021.07.02"></a>2021.07.02</h2><p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>科目二继续练习，但是要问清楚考试时间这些东西</p>
</li>
<li><p>推一点点 CSAPP 之类的（这个真的要赶快了）</p>
</li>
<li><p>准备 THUInfo 主页 UI 翻新（栋栋跑起来 THUInfo 了，工期来了）</p>
</li>
<li><p>网络部工作规划再稍微写详细一点，准备主席团会议</p>
</li>
</ul>
<p>这两天除了科目二看起来什么都没有做呢，所以说下面还是要准备开工吧。之前似乎还说过要买新电脑的，似乎也给我搞忘了。</p>
<p>想到一年前的自己还宣称着一个人孤独地走下去反而好，现在却苦于这里找不到人一起做事，莫名有点可笑。</p>
<p>七月份，下半年的开始，要准备拾起自己了。</p>
<p><strong>今天汇报：</strong></p>
<p>很平凡地过了一天，晚上想回姜堰找人吃饭，结果因为下雨没去得了。学习也没学多少，看了一点点 CSAPP ，但是也是很肤浅。</p>
<p>话说直到现在才猛然发现自己似乎没有什么兴趣爱好，这个时候又突然想到自己之前小学的时候填兴趣爱好，永远都是大众化的“读书”。思来想去，觉得自己可能不太喜欢一直呆着，自己还是比较喜欢在路上的感觉。于是就有了一个还在萌芽的想法，就是只用公交或者地铁，去很远的地方，比如说从家到北京、到广州。也正如我自己感觉的那样，我自己还算喜欢折磨自己。这个规划算是很远期很远期的了。然后问了一下 Sakana 有没有兴趣，但是她也没有给出明确答复。</p>
<p>学习？那是不可能学习的。在闷热的天气底下随时准备被教练喊去练车，这种情况下那是不可能学习的。于是我是真的把贴吧、知乎刷到推荐都开始循环，然后就开始戳 Sakana 等她回复，要么就是水群。但哪里有闲人像我这样一整天啥事没有呢，或多或少都要去做点什么事，打游戏也算。</p>
<p>自己还是很不擅长应对无聊这个问题啊。其实只要有一个聊得来的人在，但是我能聊得来的都有事情，这就尴尬了。</p>
<h2 id="2021-07-03"><a href="#2021-07-03" class="headerlink" title="2021.07.03"></a>2021.07.03</h2><p><strong>今天想要做的事情：</strong></p>
<p>想做的事情和之前差不多，觉得也没有必要再写一遍了。</p>
<p>大概还有一些感慨吧，感慨自己怎么很容易变得惆怅起来，会有那种莫名其妙的伤感。</p>
<p><strong>今天汇报：</strong></p>
<p>今天下午和明天都不用去练车了，还算比较开心。但是相应的，我需要在这段时间内，把之前剩下来的事情处理好，包括之前自学内容要整理成文字，网络部的工作规划还是要继续细化一下，韩旭那边还要继续跟进。</p>
<p>下午先写一些工作规划，然后等韩旭那边的回复，然后就是写博客了。</p>
<p>然后目前实验室下一步要做的事情就是先调教好 T5 以保证能够做 prompt 。具体的东西会在实验室周报上写，这里就不会写了，毕竟也不是什么太适合公开的东西。</p>
<h2 id="2021-07-04"><a href="#2021-07-04" class="headerlink" title="2021.07.04"></a>2021.07.04</h2><p><strong>今天想要做的事情：</strong></p>
<p>从驾校休息了一天，计划就是什么事情不做，好好放松一下</p>
<p><strong>今天汇报：</strong></p>
<p>发现自己最大的问题实际上是，闲下来的时候很容易胡思乱想，进而就是情绪容易不稳定。最近身边也没什么了解情况的人可以好好聊聊，所以就比较尴尬了。</p>
<p>今晚似乎喝得有点多，又对 Sakana 说了一堆胡话，大概自己到现在还没学会控制情绪。</p>
<h2 id="2021-07-05"><a href="#2021-07-05" class="headerlink" title="2021.07.05"></a>2021.07.05</h2><p><strong>今天想要做的事情：</strong></p>
<p>暑期回校的计划最终安定下来了， 6 号开始讲课到 22 号，我主要负责答疑。由于 12 号科目二才能考完，所以打算到时候再回去，这前面的一个星期就晚上线上答疑吧。</p>
<p>要做的事情，大概就是继续看看论文，晚上回学校协商一下后面的安排。至于 THUInfo 和科协那边，真的有点过意不去了快要。</p>
<p>本来想今晚找 Sakana 聊聊的，但看来落空了，所以还是自己调节吧。 Holder 能做到的，或许吧。</p>
<p><strong>今天汇报：</strong></p>
<p>回高中和 FFF 遇了一下，商量了后面的安排。</p>
<p>当然还有一些和 Sakana 那边的事情，这里不多说，但是至少我现在，真的感到很安心很快乐就是了。</p>
<h2 id="2021-07-06"><a href="#2021-07-06" class="headerlink" title="2021.07.06"></a>2021.07.06</h2><p><strong>今天想要做的事情：</strong></p>
<p>没有什么很想做的，就是很平凡地看书学习、写写 THUInfo 、写写实验室代码、写写科协文档。</p>
<p><strong>今天汇报：</strong></p>
<p>选课掉了康总的计组和人机交互，可能打算去搞 VLSI 来混学分。出乎意料的是台球上了。</p>
<p>自从昨天开始， Holder 就变得似乎没那么难受了，或许也与梅雨渐渐离开有关。今天上午看了一点点 CSAPP ，也预约好了 12 号的科目二考试，之后就是每天去练一练就好。</p>
<p>晚上主要在安排暑培和技能引导文档那边，夏老板突然提到了可以和企业 / 实验室 / 其他学生组织做双向链接，这样的话既解决了文档来源比较单一的问题，也一定程度上提高了文档的实用价值。</p>
<p>【和 Sakana 约了见面再聊，默默期待，还有一些误解，需要慢慢解开】</p>
<h2 id="2021-07-07"><a href="#2021-07-07" class="headerlink" title="2021.07.07"></a>2021.07.07</h2><p><strong>今天想要做的事情：</strong></p>
<p>因为上午不去驾校，所以睡大觉放松一下。晚上的话照常工作，不过比较紧急的事情是编写竞赛习题解答以及和猫猫准备一下文档的部署。</p>
<p><strong>今天汇报：</strong></p>
<p>回学校了，旁听了 FFF 的一节课。</p>
<p>大概是觉得这一届的基础有点问题吧，很基础的解析几何都没有把握很快给出正解，这就比较困难了。</p>
<p>目前老师的意思是想让我带一下几个有机会去清华夏令营的同学，自己也要开始复习一些自主招生题了。</p>
<h2 id="2021-07-08"><a href="#2021-07-08" class="headerlink" title="2021.07.08"></a>2021.07.08</h2><p><strong>今天想要做的事情：</strong></p>
<p>回家拿一些当时的自主招生参考资料，然后准备码点字吧。自己的事的话，可能就学习一些基本的东西，然后 THUInfo 开一些工。</p>
<p><strong>今天汇报：</strong></p>
<p>出卷子真的是好累啊，到处翻找资料，然后还要想尽办法保证我是站在一个中学生的角度来思考问题。磨了一整天还熬了一夜，基本上把一份数理化的试卷全都出完了，大概准备 10 号来考这一份卷子，以筛选出适合去清北夏令营的同学。</p>
<p>我现在比较担心的是，大家都考得不高，最后还是拉不开差距。</p>
<h2 id="2021-07-09"><a href="#2021-07-09" class="headerlink" title="2021.07.09"></a>2021.07.09</h2><p><strong>今天想要做的事情：</strong></p>
<p>学车，然后有什么事情就做什么事情。现在是越来越不太想把自己逼得太紧。</p>
<p><strong>今天汇报：</strong></p>
<p>下午把昨天出的卷子的答案给搞出来了，结果发现这份卷子应该是比较困难的，可能会把他们搞得很惨。</p>
<p>THUInfo 说要开工到现在都没有动静，实验室没干活，科协现在还在筹划。总之就是除了正事之外的事情都在做。</p>
<p>今晚回家的时候突然想起来 GRE 还没有报名，可能都快没有考位了，还是赶快把坑填上。身份证也已经做好了，要找个时间去拿。眼镜有点刮花了，其实要去重配，但是也一直在拖。头发也要去剪一下了，现在还是得注意下形象？</p>
<p>明天早上回学校与那些考试的同学见一下面，监考一下之类的。明天下午尽快把卷子批改好成绩公布。</p>
<p>另外，我仔细思考了一下，暑假还是不要预习下学期的内容为好，暑假应该做一些其他的事情。</p>
<p>所以说这个暑假的主线就变成了 THUInfo 、科协、实验室、高中竞赛、 GRE 。至于新电脑、身份证、眼镜、头发之类的也就是支线任务了，科目二也将会在 12 号迎来终结。</p>
<h2 id="2021-07-10"><a href="#2021-07-10" class="headerlink" title="2021.07.10"></a>2021.07.10</h2><p><strong>今天想要做的事情：</strong></p>
<p>上午回去监考，下午批改试卷并且和老师交流一下。然后尽可能能开工的东西就得开工，目前比较急的就是实验室和技能引导文档了。</p>
<p><strong>今天汇报：</strong></p>
<p>去监了个考，然后尽快把试卷给批改好了给老师。整体而言学弟们做得还是不错，但是细节上属于是真的需要很大的工夫去训练。</p>
<p>然后就是平凡的学车和练习。</p>
<p>另外就是，盼望 Sakana 回来。</p>
<h2 id="2021-07-11"><a href="#2021-07-11" class="headerlink" title="2021.07.11"></a>2021.07.11</h2><p><strong>今天想要做的事情：</strong></p>
<p>去高港模考科目二，期间要开始阅读论文，至于能看多少，能领悟多少就是另外一回事情了。</p>
<p>然后就是尽快考虑新电脑的事情，并且尽快制定后面的讲课计划吧。</p>
<p><strong>今天汇报：</strong></p>
<p>高港练车真的是好累好累，一整天就在那里站着看各个考试位的点位，很没意思还很折磨。</p>
<p>当天也没别的什么事情了，出去参加了一个饭局，平平凡凡地结束了一天。</p>
<h2 id="2021-07-12"><a href="#2021-07-12" class="headerlink" title="2021.07.12"></a>2021.07.12</h2><p><strong>今天想要做的事情：</strong></p>
<p>考科目二，然后回去准备和参加清北夏令营的各位见一个面。顺便安排之后的课程。</p>
<p><strong>今天汇报：</strong></p>
<p>科目二让我整整坐在那里等了六个小时，几乎是最后一个才考的。</p>
<p>于是顺理成章地没有赶得上下午回学校，晚上才和学弟学妹们见了个面，稍微聊了一些没有什么含金量的话题。</p>
<p>Sakana 从上海回来了，但我以后白天就似乎没有什么时间去找她玩了。</p>
<h2 id="2021-07-13"><a href="#2021-07-13" class="headerlink" title="2021.07.13"></a>2021.07.13</h2><p><strong>今天想要做的事情：</strong></p>
<p>给他们讲一点很简单的东西。</p>
<p>自己也要开始干各种的活了，包括看论文，写 THUInfo 。其实最主要的是科协那边似乎真的拖不下去了。</p>
<p><strong>今天汇报：</strong></p>
<p>上课是真的很累，站很长时间会让自己很累很难受，然后还要说很多话，口干舌燥。</p>
<p>其他倒是没有什么特别的感受，总体而言就是觉得过了很平凡的一天。</p>
<h2 id="2021-07-14"><a href="#2021-07-14" class="headerlink" title="2021.07.14"></a>2021.07.14</h2><p><strong>今天想要做的事情：</strong></p>
<p>做一些平凡的事情，讲讲课。晚上被提前安排了饭局，所以还是得去。</p>
<p><strong>今天汇报：</strong></p>
<p>照样是讲了很平凡的一些课，没有涉及到很深层次的东西。给他们做了一个限时训练，估计效果不会很好吧。</p>
<p>晚上饭局结束，去了一趟宾馆取回东西。和 Sakana 连麦闲聊了一段时间，约了明天出来玩。然后确定买了一个新电脑，联想拯救者 Y7000 ，显卡只是 RTX3050 ，处理器是 i5 的。买这个电脑是为了混一下大作业，顺便尝试一下一些只有 Windows 有的小游戏。</p>
<p>也是很平凡地结束了一整天。</p>
<h2 id="2021-07-15"><a href="#2021-07-15" class="headerlink" title="2021.07.15"></a>2021.07.15</h2><p><strong>今天想要做的事情：</strong></p>
<p>和 Sakana 约了去猫咖看看，然后吃烧烤打电动。</p>
<p>本来上午打算睡懒觉的，结果接到消息说清北夏令营同学不放假，所以还得去一趟。</p>
<p><strong>今天汇报：</strong></p>
<p>玩得算是很开心？撸猫很好玩，但是猫毛真的是很烦人，到现在我背后都是微微发痒。撸完猫吃了甜品之后去找 FFF 吃烧烤。随后就去时代广场打电动了。</p>
<p>Sakana 说大夏天的不想出门，但这也算是没办法吧。我俩的暑假完美错开，相交的时间几乎只有一个星期左右，所以要见面的话也就只有这一点时间。不过我的新电脑到货了，以后可以找 Sakana 连麦打游戏。</p>
<p>明天被家里人安排了，后天和 Sakana 约了晚上看 1921 ，大后天就得送她走了。于是这个暑假就这样等价于结束了。</p>
<h2 id="2021-07-16"><a href="#2021-07-16" class="headerlink" title="2021.07.16"></a>2021.07.16</h2><p><strong>今天想要做的事情：</strong></p>
<p>蹲在学校正常讲讲课，晚上已经有了安排所以就没啥了。</p>
<p><strong>今天汇报：</strong></p>
<p>实际情况是，高中突然出现了电力故障导致学校全部停课，但是参与清北夏令营的同学由于在小教室里没有被电力故障波及所以电力一切正常。但是可以想见的是，看见同学们放假了，他们也完全没有心思学习。所以我就和他们玩狼人杀，聊了聊他们现在的焦虑和压力。</p>
<p>他们不是不想学习，但是高中这个体系给他们的限制实在是比较多，我作为学长也只能劝说他们做一些适应和牺牲。其实有的时候，也真的是毫无方法。</p>
<div class="note info no-icon"><p>有时治愈，常常帮助，总是安慰。<br>To cure sometimes, to relieve often, to comfort always.</p>
</div>

<p>这是特鲁多的名言，本来是形容医生的。但现在看起来我有的时候也像是这样，我帮不了他们实现他们理想中的高中生活，我最多只能做到帮助他们去理解这个可能有些扭曲的体系，让他们稍微以一种平稳的心态度过高中。</p>
<p>高中这边结束之后就去忙自己的事情了。明天去见 Sakana ， 18 号还有一小波聚会。</p>
<h2 id="2021-07-17"><a href="#2021-07-17" class="headerlink" title="2021.07.17"></a>2021.07.17</h2><p><strong>今天想要做的事情：</strong></p>
<p>正常地活下去。重要的事情是开工技能引导文档。</p>
<p><strong>今天汇报：</strong></p>
<p>结果上午翘班了，在配置新电脑的 C 语言编译器和装 Python 。结果就这两件事硬生生让我一个上午耗费完了。下午平凡地来高中简单讲了些东西，也顺便做了一些小事情。</p>
<p>晚上陪 Sakana 看了 1921 ，虽然对题材没有特别的兴趣，对演员无感，但感觉看下来还算是一部不错的电影，除了叙事线很多很杂，要不是了解一些历史可能就会错乱吧。</p>
<p>Sakana 不急着 18 号就直接回去了，打算 20 号左右回去，于是就默默约了 19 号再出来玩。</p>
<p>总之就是，一切都在慢慢变好。</p>
<h2 id="2021-07-18"><a href="#2021-07-18" class="headerlink" title="2021.07.18"></a>2021.07.18</h2><p><strong>今天想要做的事情：</strong></p>
<p>今天约了同学聚会，所以重点会在出去玩上。不过高中这边也应该好好干活。</p>
<p><strong>今天汇报：</strong></p>
<p>和姜东会玩了一个下午一个晚上，先去麦当劳吃饭搓音游，然后星巴克打雀、掼蛋、闲聊，之后定番小菜园聚餐和舞立方手痒打机，最后 KTV 。</p>
<p>KTV 上我唱了不少歌，但最满意的还是《太阳系 DISCO 》。作为自己很喜欢和大家都能参与（指鼓掌和参与オーオオー以及ナナナナナナナー环节）的一首歌，整体气氛还是很好的，比那些大部分人看不懂歌词也不熟悉的比较冷的 V 曲要好一些。当然唱完这首歌我嗓子就明显不行了，中途的一段几乎就是在纯靠喊。</p>
<div class="note info no-icon"><p>あの一等星のさんざめく光で，あなたとダンスを踊ろうか。<br>ーー「太陽系ディスコ」</p>
</div>

<p>回来之后就是和 Sakana 闲聊了一会，然后转头就装了个有补丁的 Riddle Joker 开始推。由于之前认真推过没有补丁的七海线，所以这次就很快地过掉了，看了一下 H 情节怎么搞的就睡觉去了。</p>
<h2 id="2021-07-19"><a href="#2021-07-19" class="headerlink" title="2021.07.19"></a>2021.07.19</h2><p><strong>今天想要做的事情：</strong></p>
<p>今天 Sakana 家里有一些事情不能出门了，所以今天见不了面了。有一些话不如连麦的时候随便扯一下吧，晚上陪她打打游戏什么的也不是不行。</p>
<p>其他事情就正常慢慢推进就好。</p>
<p>【我自己依然在为一些虚无缥缈的东西而伤心， Holder 还是需要花一些时间来恢复理性】</p>
<p><strong>今天汇报：</strong></p>
<p>用了点时间给自己的网站加了个评论系统，本来是想用 Valine 的，结果现在较高版本的 NexT 不支持了，所以退而求其次装了 DisqusJS ，他的缺点就是需要翻墙的账号。</p>
<p>之后听从了栋栋的建议换了 <a href="https://twikoo.js.org/">Twikoo</a> ，发现是真的好用而且还不用翻墙，现在我直接安利这个评论系统。</p>
<h2 id="2021-07-20"><a href="#2021-07-20" class="headerlink" title="2021.07.20"></a>2021.07.20</h2><p><strong>今天想要做的事情：</strong></p>
<p>今天 Sakana 回上海了，所以估计是不能去找她了。</p>
<p>Holder 一个人要好好地过好自己的生活。</p>
<p><strong>今天汇报：</strong></p>
<p>大概就是接着修了一下评论系统，然后出去吃了个饭，结果又喝多了（ Holder 从来没有信守过自己的 flag ）。回来之后和 Sakana 连麦闲聊了一点点，似乎一直在说胡话，语无伦次。</p>
<p>之后就是和 LCR 两个人联机打 Minecraft ，但说是一起玩，实际上就是两个人在已经建好的一个挡里面骑马。</p>
<div class="note info no-icon"><p>【 LCR 】芜湖，上次骑马出去忘了把第二只马骑回来， Holder 你没马了。</p>
</div>

<p>大概就这样平凡地过去了一整天。</p>
<h2 id="2021-07-21"><a href="#2021-07-21" class="headerlink" title="2021.07.21"></a>2021.07.21</h2><p><strong>今天想要做的事情：</strong></p>
<p>今天和高中的老师一起吃饭讨论这几天讲课的情况，实际上 Holder 并没有做出什么很突出的贡献。</p>
<p>接着过下去就好了。</p>
<p><strong>今天汇报：</strong></p>
<p>听闻 LCR 那边可以提供他们宿舍给我住，突然有点想要去上海玩一圈，也正好送一下 Sakana 。但是南京突如其来的疫情让家里人对此很担心，我自己还算是不太认为会影响到什么，但也因此搞得很不愉快就是了。</p>
<p>上海不去就算了吧，反正也只是去见个面，最多晚上陪 Sakana 在交大转转圈，再陪 LCR 打一白天加一晚上游戏。</p>
<h2 id="2021-07-22"><a href="#2021-07-22" class="headerlink" title="2021.07.22"></a>2021.07.22</h2><p><strong>今天想要做的事情：</strong></p>
<p>好好生活。</p>
<p><strong>今天汇报：</strong></p>
<p>最近一直比较烦躁，不知道是因为无聊还是因为什么。其实能隐隐约约感到实际上就是因为当下各种事情都不顺遂（科协事情没做，实验室那边也在咕咕咕，高中这边还是感觉自己没做到什么有用的事情）加上后面还要和 Sakana 失联，一下子又没有了倾诉的人， FFF 不久出去旅游，这下子是真的没有谁出来一起玩了。还是那句话，想到一年前的自己甘愿一个人闭锁在黑暗的房间里，独自对着屏幕无论是欢笑还是难过，都不愿意和其他人过多交流，现在的我无疑是对过去的讽刺。</p>
<p>不过稍微好一些的是，我可能解开了一些心结。概括来说大概就是，我以往认为自己伤感的来源是别人变得特立独行而怪异，但是自己认认真真享受过生活之后，我才认识到，以往昏暗的我才是最为特立独行的。</p>
<div class="note info no-icon"><p>从一个本就不合群还自认为合群的人的眼光之中看去，那一切的平凡和正常，反倒是怪异。</p>
</div>

<p>所以 Holder 重新立起 flag ，从今开始好好生活。</p>
<p>【箴言： Holder 的 flag 没有不倒的】</p>
<p>于是今天上午的 Holder 起床之后就在 Riddle Joker ，现在应该只剩下茉优线没有完全结束了（年上系真的不在我的 XP 上，最后推自然没有任何的问题）。</p>
]]></content>
      <categories>
        <category>闲聊</category>
      </categories>
  </entry>
</search>
