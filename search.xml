<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2021 暑假生活记录</title>
    <url>/2021/06/29/2021-summer-record/</url>
    <content><![CDATA[<p>经过 6 月 22 日到 28 日这几天的折腾，大概和高中的老师、驾校教练等人商量了一些后续的安排。现在终于可以安定下来，准备做一些学习、开发、摸鱼的事情了。</p>
<span id="more"></span>
<p>总体而言，这个暑假想要做的事情其实还是很多的。</p>
<ul>
<li><p>学习一些新东西</p>
<ul>
<li><p>Java / Android 开发相关（或许最终的结果是随便看了看 Java 的语法，装好 IDE 就不做事了）</p></li>
<li><p>汇编语言和量子计算（这属于完全不知道干啥，写在这里是因为小学期）</p></li>
<li><p>Verilog 相关（但是这个属于想想而已，因为对这东西没有兴趣，下学期 xge 带我就好）</p></li>
<li><p>编译原理相关（这个也属于想想而已，写这个是因为自动机学得惨不忍睹，要补一点）</p></li>
<li><p>图形学相关（纯纯因为安主席的安利）</p></li>
</ul></li>
<li><p>跟进一些东西</p>
<ul>
<li><p>实验室项目（主要是最近划了，要跟上）</p></li>
<li><p>THUInfo 的 UI 翻新以及培养计划 / 课程表功能翻新</p></li>
<li><p>科协技能引导文档的结构初始化</p></li>
</ul></li>
<li><p>考试相关</p>
<ul>
<li><p>科目二（再不考是来不及了，大三不计划回家）</p></li>
<li><p>GRE（属于想考一下试一下）</p></li>
</ul></li>
</ul>
<p>此外还有一些杂事，包括买一个新电脑、预定 GRE 考试、选大三的课、重办身份证、回高中讲竞赛、和高中东方同好会线下聚会、陪 Sakana 玩等各种。</p>
<p>因为想做的事情很多，所以想着不如就在这里开一个日记贴，就每天写一下想干什么，最后干了什么之类的。没啥价值，目标就是让自己做点事情，别划水了。</p>
<h2 id="section">2021.06.29</h2>
<p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>去驾校办理科目二入学手续</p></li>
<li><p>公布科协网络部招新结果，准备一下文档初始化</p></li>
<li><p>CRACKER 一日游，就到处看看有什么资料</p></li>
<li><p>准备 THUInfo 主页 UI 翻新</p></li>
<li><p>问一下韩旭下一步可以做什么</p></li>
</ul>
<p>其实想做的多，最后能做完的，凭运气吧。睡大觉去了，祝自己好梦，祝自己暑假顺利。也祝 Sakana 军训平稳度过。</p>
<p><strong>今天汇报：</strong></p>
<p>基本上弄完了网络部招新的通知工作，飞书还没有完全摸完，这个晚上慢慢来。后面应该要去问一下技术顾问团他们的情况，好准备做点事情。不过考虑到零字班的新生估计还要等他们军训完了才能安排工作，所以初始化应该暂且由老人完成。</p>
<p>给韩旭发了微信消息，等他安排吧。</p>
<p>目前下学期应该是四大原理 + 人机交互 + 计算机网络安全 + 台球 / 网球，所以也可以开始做点准备了。</p>
<p>之后就是逛 CRACKER。目前的一个打算是汇编和计组应该就通过 CSAPP 先摸一下。计组可能还需要一些 Verilog 什么的东西，这个以后等买了 Windows 电脑再来搞一搞，造 CPU 的那本书也已经拿到手了，也可以拿 PPT 做一些补充。Java 相关是不打算弄多少，总之和 xge 他们组队搬砖，所以就打算把一些算法代码改成 Java 的，熟悉一下语法算了。</p>
<p>编原那就是纯纯的逆天，因为我自动机学不明白，所以编译原理需要先看一些讲义和 Compiler 那本书。</p>
<p>信号据说是数学课，所以找个课本随便学应该也就应付过去了。网原看起来属于巨大背诵的一门课，找了个《计算机网络：自顶而下》，然后要到了所有的课件，就打算看着玩玩算了。</p>
<p>至于那些限选课，网络安全技术看起来和网原巨大相关，懒得搞。然后就是人机交互没啥经验，就算了。</p>
<p>最后是打算学习图形学，问安主席要到了整本书的电子版，然后找到了网课链接，总之打算干活。</p>
<h2 id="section-1">2021.06.30</h2>
<p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>去驾校办理科目二入学手续，开始练车</p></li>
<li><p>还有一位网络部新人没有联系上，需要补联系，并且需要搞一下飞书</p></li>
<li><p>推一点点 CSAPP、图形学什么的</p></li>
<li><p>准备 THUInfo 主页 UI 翻新</p></li>
</ul>
<p>其实也没什么好说的，就是学点新知识之后做一点之前就有的锅。明天要早起所以赶快睡大觉吧。</p>
<p><strong>今天汇报：</strong></p>
<p>以为去报名的，结果刚进去就被拉上车开始练了，估计以后就是早上八点下午两点，一整个白天都要在驾校了，所以推活、上课这些事情都得是晚上来做了。</p>
<p>那个还没联系上的新人联系上了，所以招新基本上就结束了，可以开始具体规划下面一步要做的事情了。然后对下面的工作做了一点点的推进。</p>
<p>然后就是 THUInfo 还在消极怠工，不过最近会开工的，会开工的。</p>
<h2 id="section-2">2021.07.01</h2>
<p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>科目二学侧方停车、倒车入库、坡道起步</p></li>
<li><p>推一点点 CSAPP 之类的</p></li>
<li><p>准备 THUInfo 主页 UI 翻新</p></li>
</ul>
<p>主要是晚上和家里人聊了比较多，所以说实际上今天晚上也没有认真学一些东西。</p>
<p><strong>今天汇报：</strong></p>
<p>学车真的是比较无聊，就开车十分钟等待两小时，于是其实天气热什么的都不是最大的问题，无聊是最需要解决的。</p>
<p>然后，看了一点信号处理原理和编译原理，然后就发现自己的数学全忘完了，还是得回来再学一点点。</p>
<p>没什么好说的，以后估计就是这样的重复的生活了。</p>
<h2 id="section-3">2021.07.02</h2>
<p><strong>今天想要做的事情：</strong></p>
<ul>
<li><p>科目二继续练习，但是要问清楚考试时间这些东西</p></li>
<li><p>推一点点 CSAPP 之类的（这个真的要赶快了）</p></li>
<li><p>准备 THUInfo 主页 UI 翻新（栋栋跑起来 THUInfo 了，工期来了）</p></li>
<li><p>网络部工作规划再稍微写详细一点，准备主席团会议</p></li>
</ul>
<p>这两天除了科目二看起来什么都没有做呢，所以说下面还是要准备开工吧。之前似乎还说过要买新电脑的，似乎也给我搞忘了。</p>
<p>想到一年前的自己还宣称着一个人孤独地走下去反而好，现在却苦于这里找不到人一起做事，莫名有点可笑。</p>
<p>七月份，下半年的开始，要准备拾起自己了。</p>
<p><strong>今天汇报：</strong></p>
<p>很平凡地过了一天，晚上想回姜堰找人吃饭，结果因为下雨没去得了。学习也没学多少，看了一点点 CSAPP，但是也是很肤浅。</p>
<p>话说直到现在才猛然发现自己似乎没有什么兴趣爱好，这个时候又突然想到自己之前小学的时候填兴趣爱好，永远都是大众化的“读书”。思来想去，觉得自己可能不太喜欢一直呆着，自己还是比较喜欢在路上的感觉。于是就有了一个还在萌芽的想法，就是只用公交或者地铁，去很远的地方，比如说从家到北京、到广州。也正如我自己感觉的那样，我自己还算喜欢折磨自己。这个规划算是很远期很远期的了。然后问了一下 Sakana 有没有兴趣，但是她也没有给出明确答复。</p>
<p>学习？那是不可能学习的。在闷热的天气底下随时准备被教练喊去练车，这种情况下那是不可能学习的。于是我是真的把贴吧、知乎刷到推荐都开始循环，然后就开始戳 Sakana 等她回复，要么就是水群。但哪里有闲人像我这样一整天啥事没有呢，或多或少都要去做点什么事，打游戏也算。</p>
<p>自己还是很不擅长应对无聊这个问题啊。其实只要有一个聊得来的人在，但是我能聊得来的都有事情，这就尴尬了。</p>
<h2 id="section-4">2021.07.03</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>想做的事情和之前差不多，觉得也没有必要再写一遍了。</p>
<p>大概还有一些感慨吧，感慨自己怎么很容易变得惆怅起来，会有那种莫名其妙的伤感。</p>
<p><strong>今天汇报：</strong></p>
<p>今天下午和明天都不用去练车了，还算比较开心。但是相应的，我需要在这段时间内，把之前剩下来的事情处理好，包括之前自学内容要整理成文字，网络部的工作规划还是要继续细化一下，韩旭那边还要继续跟进。</p>
<p>下午先写一些工作规划，然后等韩旭那边的回复，然后就是写博客了。</p>
<p>然后目前实验室下一步要做的事情就是先调教好 T5 以保证能够做 prompt。具体的东西会在实验室周报上写，这里就不会写了，毕竟也不是什么太适合公开的东西。</p>
<h2 id="section-5">2021.07.04</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>从驾校休息了一天，计划就是什么事情不做，好好放松一下</p>
<p><strong>今天汇报：</strong></p>
<p>发现自己最大的问题实际上是，闲下来的时候很容易胡思乱想，进而就是情绪容易不稳定。最近身边也没什么了解情况的人可以好好聊聊，所以就比较尴尬了。</p>
<p>今晚似乎喝得有点多，又对 Sakana 说了一堆胡话，大概自己到现在还没学会控制情绪。</p>
<h2 id="section-6">2021.07.05</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>暑期回校的计划最终安定下来了，6 号开始讲课到 22 号，我主要负责答疑。由于 12 号科目二才能考完，所以打算到时候再回去，这前面的一个星期就晚上线上答疑吧。</p>
<p>要做的事情，大概就是继续看看论文，晚上回学校协商一下后面的安排。至于 THUInfo 和科协那边，真的有点过意不去了快要。</p>
<p>本来想今晚找 Sakana 聊聊的，但看来落空了，所以还是自己调节吧。Holder 能做到的，或许吧。</p>
<p><strong>今天汇报：</strong></p>
<p>回高中和 FFF 遇了一下，商量了后面的安排。</p>
<p>当然还有一些和 Sakana 那边的事情，这里不多说，但是至少我现在，真的感到很安心很快乐就是了。</p>
<h2 id="section-7">2021.07.06</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>没有什么很想做的，就是很平凡地看书学习、写写 THUInfo、写写实验室代码、写写科协文档。</p>
<p><strong>今天汇报：</strong></p>
<p>选课掉了康总的计组和人机交互，可能打算去搞 VLSI 来混学分。出乎意料的是台球上了。</p>
<p>自从昨天开始，Holder 就变得似乎没那么难受了，或许也与梅雨渐渐离开有关。今天上午看了一点点 CSAPP，也预约好了 12 号的科目二考试，之后就是每天去练一练就好。</p>
<p>晚上主要在安排暑培和技能引导文档那边，夏老板突然提到了可以和企业 / 实验室 / 其他学生组织做双向链接，这样的话既解决了文档来源比较单一的问题，也一定程度上提高了文档的实用价值。</p>
<p>【和 Sakana 约了见面再聊，默默期待，还有一些误解，需要慢慢解开】</p>
<h2 id="section-8">2021.07.07</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>因为上午不去驾校，所以睡大觉放松一下。晚上的话照常工作，不过比较紧急的事情是编写竞赛习题解答以及和猫猫准备一下文档的部署。</p>
<p><strong>今天汇报：</strong></p>
<p>回学校了，旁听了 FFF 的一节课。</p>
<p>大概是觉得这一届的基础有点问题吧，很基础的解析几何都没有把握很快给出正解，这就比较困难了。</p>
<p>目前老师的意思是想让我带一下几个有机会去清华夏令营的同学，自己也要开始复习一些自主招生题了。</p>
<h2 id="section-9">2021.07.08</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>回家拿一些当时的自主招生参考资料，然后准备码点字吧。自己的事的话，可能就学习一些基本的东西，然后 THUInfo 开一些工。</p>
<p><strong>今天汇报：</strong></p>
<p>出卷子真的是好累啊，到处翻找资料，然后还要想尽办法保证我是站在一个中学生的角度来思考问题。磨了一整天还熬了一夜，基本上把一份数理化的试卷全都出完了，大概准备 10 号来考这一份卷子，以筛选出适合去清北夏令营的同学。</p>
<p>我现在比较担心的是，大家都考得不高，最后还是拉不开差距。</p>
<h2 id="section-10">2021.07.09</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>学车，然后有什么事情就做什么事情。现在是越来越不太想把自己逼得太紧。</p>
<p><strong>今天汇报：</strong></p>
<p>下午把昨天出的卷子的答案给搞出来了，结果发现这份卷子应该是比较困难的，可能会把他们搞得很惨。</p>
<p>THUInfo 说要开工到现在都没有动静，实验室没干活，科协现在还在筹划。总之就是除了正事之外的事情都在做。</p>
<p>今晚回家的时候突然想起来 GRE 还没有报名，可能都快没有考位了，还是赶快把坑填上。身份证也已经做好了，要找个时间去拿。眼镜有点刮花了，其实要去重配，但是也一直在拖。头发也要去剪一下了，现在还是得注意下形象？</p>
<p>明天早上回学校与那些考试的同学见一下面，监考一下之类的。明天下午尽快把卷子批改好成绩公布。</p>
<p>另外，我仔细思考了一下，暑假还是不要预习下学期的内容为好，暑假应该做一些其他的事情。</p>
<p>所以说这个暑假的主线就变成了 THUInfo、科协、实验室、高中竞赛、 GRE。至于新电脑、身份证、眼镜、头发之类的也就是支线任务了，科目二也将会在 12 号迎来终结。</p>
<h2 id="section-11">2021.07.10</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>上午回去监考，下午批改试卷并且和老师交流一下。然后尽可能能开工的东西就得开工，目前比较急的就是实验室和技能引导文档了。</p>
<p><strong>今天汇报：</strong></p>
<p>去监了个考，然后尽快把试卷给批改好了给老师。整体而言学弟们做得还是不错，但是细节上属于是真的需要很大的工夫去训练。</p>
<p>然后就是平凡的学车和练习。</p>
<p>另外就是，盼望 Sakana 回来。</p>
<h2 id="section-12">2021.07.11</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>去高港模考科目二，期间要开始阅读论文，至于能看多少，能领悟多少就是另外一回事情了。</p>
<p>然后就是尽快考虑新电脑的事情，并且尽快制定后面的讲课计划吧。</p>
<p><strong>今天汇报：</strong></p>
<p>高港练车真的是好累好累，一整天就在那里站着看各个考试位的点位，很没意思还很折磨。</p>
<p>当天也没别的什么事情了，出去参加了一个饭局，平平凡凡地结束了一天。</p>
<h2 id="section-13">2021.07.12</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>考科目二，然后回去准备和参加清北夏令营的各位见一个面。顺便安排之后的课程。</p>
<p><strong>今天汇报：</strong></p>
<p>科目二让我整整坐在那里等了六个小时，几乎是最后一个才考的。</p>
<p>于是顺理成章地没有赶得上下午回学校，晚上才和学弟学妹们见了个面，稍微聊了一些没有什么含金量的话题。</p>
<p>Sakana 从上海回来了，但我以后白天就似乎没有什么时间去找她玩了。</p>
<h2 id="section-14">2021.07.13</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>给他们讲一点很简单的东西。</p>
<p>自己也要开始干各种的活了，包括看论文，写 THUInfo。其实最主要的是科协那边似乎真的拖不下去了。</p>
<p><strong>今天汇报：</strong></p>
<p>上课是真的很累，站很长时间会让自己很累很难受，然后还要说很多话，口干舌燥。</p>
<p>其他倒是没有什么特别的感受，总体而言就是觉得过了很平凡的一天。</p>
<h2 id="section-15">2021.07.14</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>做一些平凡的事情，讲讲课。晚上被提前安排了饭局，所以还是得去。</p>
<p><strong>今天汇报：</strong></p>
<p>照样是讲了很平凡的一些课，没有涉及到很深层次的东西。给他们做了一个限时训练，估计效果不会很好吧。</p>
<p>晚上饭局结束，去了一趟宾馆取回东西。和 Sakana 连麦闲聊了一段时间，约了明天出来玩。然后确定买了一个新电脑，联想拯救者 Y7000，显卡只是 RTX3050，处理器是 i5 的。买这个电脑是为了混一下大作业，顺便尝试一下一些只有 Windows 有的小游戏。</p>
<p>也是很平凡地结束了一整天。</p>
<h2 id="section-16">2021.07.15</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>和 Sakana 约了去猫咖看看，然后吃烧烤打电动。</p>
<p>本来上午打算睡懒觉的，结果接到消息说清北夏令营同学不放假，所以还得去一趟。</p>
<p><strong>今天汇报：</strong></p>
<p>玩得算是很开心？撸猫很好玩，但是猫毛真的是很烦人，到现在我背后都是微微发痒。撸完猫吃了甜品之后去找 FFF 吃烧烤。随后就去时代广场打电动了。</p>
<p>Sakana 说大夏天的不想出门，但这也算是没办法吧。我俩的暑假完美错开，相交的时间几乎只有一个星期左右，所以要见面的话也就只有这一点时间。不过我的新电脑到货了，以后可以找 Sakana 连麦打游戏。</p>
<p>明天被家里人安排了，后天和 Sakana 约了晚上看 1921，大后天就得送她走了。于是这个暑假就这样等价于结束了。</p>
<h2 id="section-17">2021.07.16</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>蹲在学校正常讲讲课，晚上已经有了安排所以就没啥了。</p>
<p><strong>今天汇报：</strong></p>
<p>实际情况是，高中突然出现了电力故障导致学校全部停课，但是参与清北夏令营的同学由于在小教室里没有被电力故障波及所以电力一切正常。但是可以想见的是，看见同学们放假了，他们也完全没有心思学习。所以我就和他们玩狼人杀，聊了聊他们现在的焦虑和压力。</p>
<p>他们不是不想学习，但是高中这个体系给他们的限制实在是比较多，我作为学长也只能劝说他们做一些适应和牺牲。其实有的时候，也真的是毫无方法。</p>
<div class="note info no-icon"><p>有时治愈，常常帮助，总是安慰。</p>
<p>To cure sometimes, to relieve often, to comfort always.</p>
</div>
<p>这是特鲁多的名言，本来是形容医生的。但现在看起来我有的时候也像是这样，我帮不了他们实现他们理想中的高中生活，我最多只能做到帮助他们去理解这个可能有些扭曲的体系，让他们稍微以一种平稳的心态度过高中。</p>
<p>高中这边结束之后就去忙自己的事情了。明天去见 Sakana，18 号还有一小波聚会。</p>
<h2 id="section-18">2021.07.17</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>正常地活下去。重要的事情是开工技能引导文档。</p>
<p><strong>今天汇报：</strong></p>
<p>结果上午翘班了，在配置新电脑的 C 语言编译器和装 Python。结果就这两件事硬生生让我一个上午耗费完了。下午平凡地来高中简单讲了些东西，也顺便做了一些小事情。</p>
<p>晚上陪 Sakana 看了 1921，虽然对题材没有特别的兴趣，对演员无感，但感觉看下来还算是一部不错的电影，除了叙事线很多很杂，要不是了解一些历史可能就会错乱吧。</p>
<p>Sakana 不急着 18 号就直接回去了，打算 20 号左右回去，于是就默默约了 19 号再出来玩。</p>
<p>总之就是，一切都在慢慢变好。</p>
<h2 id="section-19">2021.07.18</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>今天约了同学聚会，所以重点会在出去玩上。不过高中这边也应该好好干活。</p>
<p><strong>今天汇报：</strong></p>
<p>和姜东会玩了一个下午一个晚上，先去麦当劳吃饭搓音游，然后星巴克打雀、掼蛋、闲聊，之后定番小菜园聚餐和舞立方手痒打机，最后 KTV。</p>
<p>KTV 上我唱了不少歌，但最满意的还是《太阳系 DISCO》。作为自己很喜欢和大家都能参与（指鼓掌和参与オーオオー以及ナナナナナナナー环节）的一首歌，整体气氛还是很好的，比那些大部分人看不懂歌词也不熟悉的比较冷的 V 曲要好一些。当然唱完这首歌我嗓子就明显不行了，中途的一段几乎就是在纯靠喊。</p>
<div class="note info no-icon"><p>あの一等星のさんざめく光で，あなたとダンスを踊ろうか。 ——「太陽系ディスコ」</p>
</div>
<p>回来之后就是和 Sakana 闲聊了一会，然后转头就装了个有补丁的 Riddle Joker 开始推。由于之前认真推过没有补丁的七海线，所以这次就很快地过掉了，看了一下 H 情节怎么搞的就睡觉去了。</p>
<h2 id="section-20">2021.07.19</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>今天 Sakana 家里有一些事情不能出门了，所以今天见不了面了。有一些话不如连麦的时候随便扯一下吧，晚上陪她打打游戏什么的也不是不行。</p>
<p>其他事情就正常慢慢推进就好。</p>
<p>【我自己依然在为一些虚无缥缈的东西而伤心，Holder 还是需要花一些时间来恢复理性】</p>
<p><strong>今天汇报：</strong></p>
<p>用了点时间给自己的网站加了个评论系统，本来是想用 Valine 的，结果现在较高版本的 NexT 不支持了，所以退而求其次装了 DisqusJS，他的缺点就是需要翻墙的账号。</p>
<p>之后听从了栋栋的建议换了 <a href="https://twikoo.js.org">Twikoo</a>，发现是真的好用而且还不用翻墙，现在我直接安利这个评论系统。</p>
<h2 id="section-21">2021.07.20</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>今天 Sakana 回上海了，所以估计是不能去找她了。</p>
<p>Holder 一个人要好好地过好自己的生活。</p>
<p><strong>今天汇报：</strong></p>
<p>大概就是接着修了一下评论系统，然后出去吃了个饭，结果又喝多了（Holder 从来没有信守过自己的 flag）。回来之后和 Sakana 连麦闲聊了一点点，似乎一直在说胡话，语无伦次。</p>
<p>之后就是和 LCR 两个人联机打 Minecraft，但说是一起玩，实际上就是两个人在已经建好的一个挡里面骑马。</p>
<div class="note info no-icon"><p>【 LCR 】芜湖，上次骑马出去忘了把第二只马骑回来，Holder 你没马了。</p>
</div>
<p>大概就这样平凡地过去了一整天。</p>
<h2 id="section-22">2021.07.21</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>今天和高中的老师一起吃饭讨论这几天讲课的情况，实际上 Holder 并没有做出什么很突出的贡献。</p>
<p>接着过下去就好了。</p>
<p><strong>今天汇报：</strong></p>
<p>听闻 LCR 那边可以提供他们宿舍给我住，突然有点想要去上海玩一圈，也正好送一下 Sakana。但是南京突如其来的疫情让家里人对此很担心，我自己还算是不太认为会影响到什么，但也因此搞得很不愉快就是了。</p>
<p>上海不去就算了吧，反正也只是去见个面，最多晚上陪 Sakana 在交大转转圈，再陪 LCR 打一白天加一晚上游戏。</p>
<h2 id="section-23">2021.07.22</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>好好生活。</p>
<p><strong>今天汇报：</strong></p>
<p>最近一直比较烦躁，不知道是因为无聊还是因为什么。其实能隐隐约约感到实际上就是因为当下各种事情都不顺遂（科协事情没做，实验室那边也在咕咕咕，高中这边还是感觉自己没做到什么有用的事情）加上后面还要和 Sakana 失联，一下子又没有了倾诉的人，FFF 不久出去旅游，这下子是真的没有谁出来一起玩了。还是那句话，想到一年前的自己甘愿一个人闭锁在黑暗的房间里，独自对着屏幕无论是欢笑还是难过，都不愿意和其他人过多交流，现在的我无疑是对过去的讽刺。</p>
<p>不过稍微好一些的是，我可能解开了一些心结。概括来说大概就是，我以往认为自己伤感的来源是别人变得特立独行而怪异，但是自己认认真真享受过生活之后，我才认识到，以往昏暗的我才是最为特立独行的。</p>
<div class="note info no-icon"><p>从一个本就不合群还自认为合群的人的眼光之中看去，那一切的平凡和正常，反倒是怪异。</p>
</div>
<p>所以 Holder 重新立起 flag，从今开始好好生活。</p>
<p>【箴言：Holder 的 flag 没有不倒的】</p>
<hr />
<p>于是今天上午的 Holder 起床之后就在 Riddle Joker，现在应该只剩下茉优线没有完全结束了（年上系真的不在我的 XP 上，最后推自然没有任何的问题）。</p>
<p>中午的 Holder 开始到处看 V 曲的 live，真的突然想去一次 V 家演唱会。要说现场感比较好的歌的话，<a href="https://www.bilibili.com/video/BV1Nf4y1U7z1?t=279">《Unknown Mother Goose》</a>是首推（众人おおおーおおー的那个场面真的是很震撼的），之后就是<a href="https://www.bilibili.com/video/BV11W411C7io?t=295">《劣等上等》</a>（Giga 的专业炸场子歌），<a href="https://www.bilibili.com/video/BV16s411h7eE">《号哭》</a>和<a href="https://www.bilibili.com/video/BV1As411B7J8">《东京泰迪熊》</a>也算是很有感觉的。然后就似乎沿着推荐来到了几个网络合唱视频，首先是 2017 年的<a href="https://www.bilibili.com/video/BV1Nx411u7YT">《砂之惑星》</a>（八爷 yyds，可惜出道娱乐圈了，当个 P 主不好么），然后是 2011 年的<a href="https://www.bilibili.com/video/BV1Ax411w7Sh">《千本樱》</a>，也算是猛然回忆起高中的一些时光了。</p>
<p>之前在<a href="/about">关于页</a>提到我最喜欢《无梦之梦》，但是这首歌适合一个人在难过的时候自己听，用来做安慰用的。其实春卷饭的歌基本都是这个特征，很温柔，适合一个人独自欣赏，很难在演唱会上表演得好。同理还有新曲<a href="https://www.bilibili.com/video/BV1hA411g7mt?from=search&amp;seid=51222177324975189">《第三心脏》</a>，也是最近很喜欢的。</p>
<hr />
<p>最终通过一番协商，还是决定去上海了。自己的一时冲动把 Sakana 还有家里人的安排搞得一团乱，说实话现在还是有一点愧疚。然后在安排在上海的行程的时候，发现竟然想不到可以去哪里玩。</p>
<p>所以说，Holder 的脑子一热带来的是无数若干的混乱，让 Sakana 落单还拉着她一起不知道干什么，一时间不知道说什么好。</p>
<p>今天 Sakana 应该是和同学们出去玩去了，Holder 一个人默默地去未来极越把卡里的钱给用掉了，之后骑车绕县城转了一圈。</p>
<p>一个人真的很无聊，无聊的时候就喜欢胡思乱想，然后可能就会做出很没有理由的事情。</p>
<p>惋惜我自己的高中没有发展若干的朋友，导致现在回到家乡竟然是四处无人。还不如早点回北京，至少我的舍友可以一起打牌，一起出去找地方看个电影或者是到处找点吃的。或者就是找北大的几个熟人出去转转，要么也可以和迅哥哥等 308 闲聊。</p>
<p>于是 Holder 又开始莫名难过起来，Holder 自以为值得夸耀的，竟然是一片荒芜。</p>
<p>Holder 嫉妒且憎恨着那些现实生活充实的人们，虽然这种无名火显得幼稚且没有道理。Holder 似乎就像是对着并不存在的敌人宣战一般，对着自己幻想中的困境，对着不存在的挫折精神低落而恍惚。</p>
<p>那个好好生活的 flag 突然显得可笑。</p>
<hr />
<p>我一直在思索着，现在的我的生活多么像我先前的追求。和同学彻夜聚会，和 Sakana 看电影、逛街、撸猫，即使一地鸡毛但依然决定去上海，那种自由挥洒情感，自由表达自己，不计成本地为了简单的目标而大闹一番的生活。然而我却似乎不像是之前那样无忧无虑，我每天都被一种不能明状的忧伤所萦绕。即使某天我说我释怀了，我看开了，我似乎找到了生活的乐趣。即使我这么说，我的心中实际上从未解开过这种难过的感情，只不过是因为当下的愉悦而暂且麻痹。</p>
<p>在房间里自说自话地走了几圈，尝试理清楚自己这个情感的来源。结果还是不太弄得明白，所以暂且作罢。</p>
<h2 id="section-24">2021.07.23</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>逃到上海，然后不知道干什么。</p>
<p><strong>今天汇报：</strong></p>
<p>单纯地溜来上海了，Sakana 因为绿格那边的政策一直没有很能确定下来比较低落，于是也就很单纯地一起吃了饭，去了私影玩了一圈而已。</p>
<p>晚上打算玩冬日计划，结果因为网络原因一直没有能够一起玩得了，只能作罢。</p>
<h2 id="section-25">2021.07.24</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>和 LCR 混一天。</p>
<p><strong>今天汇报：</strong></p>
<p>大概就是中午先和 Sakana 吃了一顿饭然后就和 LCR 一起到处瞎跑了。</p>
<p>本来的预定是去外滩，沿着江边随便走走，结果 LCR 在地铁半路上突然提到想要去海边，但是已经出发一段路了，就决定去黄浦江入长江口转一圈。地铁坐了整整两个小时到双江路下，然后就是沿着黄浦江骑车十几公里。本来以为沿着江边能看到什么的，结果全是造船厂，能看到的就是一堆重型机械和工人们。值得一提的是本来今天是台风来的日子，结果雨是真的没有下下来，倒是风是相当的大，大到我骑车下坡不蹬的话，风会把我吹上坡。</p>
<p>然后就是沿着一条路一路骑到了入江口，那里的风已经是相当大了，但依然没有能阻挡钓鱼佬们翻越围墙站到江边的防波堤上钓鱼。自己胆子小，就没翻过去看看，所以也就站在墙外拍了照片，打了个车回去了。</p>
<p>至于今晚发生的一些并不太愉悦的事情，还是暂且不提吧。只能说现在的 Holder 不太振作得起来。</p>
<h2 id="section-26">2021.07.25</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>活着。</p>
<p><strong>今天汇报：</strong></p>
<p>台风终于登陆上海了，整个天都是漆黑的那种，狂风大作暴雨如注。然而我还是和 LCR 两个人出了门在上交里面转了好长一段时间，跑去下院瞎窜，去思源湖边上看台风，去宿舍楼的风口看被吹倒的树。</p>
<p>反正就是两个不要命的人在台风天的无聊之举，和昨天顶着台风去江边上差不多。结果是误了回去的火车，不得不立刻改签第二天的。</p>
<p>Sakana 自然在台风天不愿意出来，所以一整天都没有见到，晚上喊她打游戏也没有理我，说是没有兴致。</p>
<h2 id="section-27">2021.07.26</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>继续活着。</p>
<p><strong>今天汇报：</strong></p>
<p>早上爬起来就接到了火车取消的消息，于是不得不接着留一天。</p>
<p>早上和 LCR 就一直在打 Minecraft 消磨时间，生存档从零开始真的是很耗时间的一种玩法。玩好了之后和 Sakana 说了下午陪她去做核酸，最后是自己任性地拉着她冒着还算不小的雨去了天街。</p>
<p>晚上没事做，于是合计了一下和 LCR 又出门了，结果是一天去了两次天街（这个时候就得说交大旁边真的是没啥玩的，除了两个商场、一个桌游店、一个 KTV、若干小饭馆之外似乎什么都没有了，喊 Sakana 出门最终的归宿永远是找一个吃饭的地方闲聊，最多去看电影）。</p>
<h2 id="section-28">2021.07.27</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>回家，然后活着。</p>
<p><strong>今天汇报：</strong></p>
<p>早上 Sakana 突然说打算送我去火车站，但实际上我知道她出远门的东西还没收拾好，但还是答应了。</p>
<p>然后就没有什么特别的事情了，在火车站拥抱后分别，自己一个人坐火车然后兜兜转转回到了家，冒着雨赶去高中。</p>
<p>一整天都过得比较累，回来之后又不得不通宵清掉了一些任务。</p>
<h2 id="section-29">2021.07.28</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>清闲地活着。</p>
<p><strong>今天汇报：</strong></p>
<p>今天是给高中的学弟学妹们考试的日子，自己是出题人也是监考。监考这个活是真的令人烦躁，无聊至极，甚至愿意出点事情让自己不至于无聊。</p>
<p>Sakana 最终踏上了旅程，坐了十个小时的火车前往兰州，她也在经受着无聊的时光。两个人一起听歌了一个小时，她到达兰州之后需要办理一系列的事务，便暂且失联了。</p>
<hr />
<p>不过 Holder 似乎算是慢慢理清楚自己到底在担忧什么了，异地造成的交流不畅和误解真的是相当折磨。不多说吧，总之就是意识到了我和 Sakana 处境其实类似，而我潜意识里深刻地误解了很多的事情而已。所以现在应该心态平稳很多了，Holder 也已经下定决心要保证自己生活乐趣的多元化了。</p>
<h2 id="section-30">2021.07.29</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>一个人活着。</p>
<p><strong>今天汇报：</strong></p>
<p>今天什么都没有发生，起床吃饭，一个人躺在床上刷手机。就是典型的一个无聊的人应该有的样子。</p>
<p>现在 Sakana 应该到达了最终的目的地，可能以后就会是几乎完全失联了。大概如此。</p>
<h2 id="section-31">2021.07.30</h2>
<p><strong>今天想要做的事情：</strong></p>
<p>把科协暑培好好弄好。</p>
<p><strong>今天汇报：</strong></p>
<p>Sakana 现在彻底处于失联状态了，多半是不到晚上联系不上了。虽然有点消沉，而且为生日怎么办的事情有点烦躁，但是自己的事情还是得好好做下去。</p>
<hr />
<p>就这样吧，这个纪录就此结束，新的生活渐渐就要开始了。</p>
<p>Holder 通过这个暑假，大概是缓慢地将自己的心态平稳下来了，或许还有一些不能言说的不舍、迷惘、辛酸等等，但暂且都埋藏起来吧。不过相较于一个自闭的 Holder，虽然现在的我或许不如以往那样沉稳专注，但可能更像一个正常的人吧。</p>
<div class="note info no-icon"><p>あたしが愛を語るのなら，そのすべてはこの歌だ。</p>
<p>誰も知らないこの物語，また口ずさんでしまったみたいだ。</p>
<p>「Unknown Mother Goose」</p>
</div>
<p>总而言之，或许还有许多的困难，还有许多的考验，还有很多我们需要去做的事情，但我依然坚信未来可期。</p>
<p>我是 Holder，我们继续走下去吧。</p>
]]></content>
      <categories>
        <category>【生活记录】假期日记</category>
      </categories>
  </entry>
  <entry>
    <title>2022 暑假生活记录</title>
    <url>/2022/05/27/2022-summer-record/</url>
    <content><![CDATA[<p>2022 年的暑假，将会来得意外地早，因为我提前回家了。</p>
<p>或许是抑制不住灵魂对自由的向往，或者是想要回到高中见见曾经带过的学弟学妹们，或者是想要见见 Sakana，都可以是我提早回家的理由。</p>
<p>总之面对着可能有三个月的暑假，还是稍微记录点东西省的虚度。</p>
<span id="more"></span>
<h1 id="section">2022.05.27 - 2022.05.29</h1>
<p>先回想一下自己需要完成什么事情吧：</p>
<p>【下述事务列表更新于 8.15，删除、调整部分事务，后续不再更新且不再具有效力】</p>
<ul>
<li>科协
<ul>
<li>【半搁置状态】308 权限系统</li>
<li>【半搁置状态】与软工课程的对接安排</li>
<li>图形学文档编写</li>
<li>RL Tutorial 合并</li>
<li>【半搁置状态】前期文档补助核发</li>
</ul></li>
<li>THUInfo
<ul>
<li>培养计划功能</li>
</ul></li>
<li>各类项目相关
<ul>
<li>参与实验室快手合作项目</li>
<li>实习收尾工作
<ul>
<li>递交离职申请</li>
</ul></li>
</ul></li>
<li>下学期预备工作
<ul>
<li>继续编写日语语法手册</li>
<li>学习抽象代数 Artin</li>
</ul></li>
<li>一些杂杂的东西
<ul>
<li>冲雀圣【至少打回雀豪三吧 OTZ】</li>
<li>四系麻将联赛</li>
</ul></li>
</ul>
<p>基本上而言，课内实际上压力并不大，所以升学相关一定是要重点考虑的，目前的 Target 是孙立峰教授或者艾海舟教授，还是稍微多去做点准备。</p>
<p>总之是回去之前把体育相关全都清理掉。回去之后在期末结束之前都是课内为主，同时升学相关内容也得做做，估计期末结束后也就隔离结束了。之后就可以暑期干实习、做实验室的事情、做自己想做的事情。</p>
<p>看起来还是前途一片光明的。</p>
<hr />
<p>这几天总体而言就是简单的准备回家，总之是下面的几项工作：</p>
<ul>
<li>事务性
<ul>
<li>离校事务
<ul>
<li>递交离校申请书</li>
<li>完成北京市要求的集中核酸检测</li>
<li>向辅导员、班主任、院系报备</li>
</ul></li>
<li>回家事务
<ul>
<li>和村支书对接接站、隔离政策</li>
<li>提前和家里人商量打扫房间</li>
</ul></li>
<li>路程
<ul>
<li>预约送站校车</li>
<li>预定火车票</li>
</ul></li>
<li>收拾行李</li>
</ul></li>
<li>清理必须要在学校内完成的事情
<ul>
<li>完成阳光体育打卡</li>
<li>完成体育期末考试</li>
</ul></li>
</ul>
<p>除了这些事情，也就多完成了一个开放 THUInfo 内测组的事情。</p>
<p>这些事情，已经足以让两天都没有什么闲功夫了。</p>
<hr />
<p>最终总算是到家了，对于从有中高风险地区归乡，但是出发地低风险的旅客，政策似乎是需要落地后做两次核酸检测，统一转运到集散点，由目的地社区凭社区接收人员报告来接人。</p>
<p>疫情反反复复，我回家也从疫情前的直接从火车站搭 1 路公交，变成了需要查验健康码，再变成需要回家后立刻向社区报备，最后就成为了现在这样，八点到站，十一点我才到家。</p>
<p>不过已经到家了，就是好事。熟悉的水汽蒸腾、潮湿闷热的夏日的家乡。</p>
<h1 id="section-1">2022.05.30</h1>
<p>新生活的第一天，要从睡懒觉开始，一觉睡到了十一二点，被家里人从床上拽下来了。</p>
<p>下午简简单单抄完了数学实验最后一次实验报告，稍微看了看数据挖掘的作业，但是一点都没有头绪。</p>
<p>今天比较大的事情就是 Career9 发布运营了，可以看到导师公布的名额数和当前招生情况，然后校内版也可以在同学间互相交流自己的推免状态。这个网站大约是很有用的，但是感觉推进下去会比较困难，毕竟老师那边的态度比较模糊。</p>
<p>但是可能我不太想关注这个网站的运营了，而是关注我自己的推免情况。</p>
<p>其实真正到现在都没有老师的是少数了，大部分人只是找好导师但是还没有双向确认而已，所以我现在比较重视周三和孙立峰老师的交流，看看他的态度是什么。</p>
<p>哎，这种事情不是什么很急的事情，它就像初夏闷热潮湿的那种感觉，仿佛有什么东西附着在身上，挥之不去，只有一种无力的烦躁感。</p>
<h1 id="section-2">2022.05.31</h1>
<p>五月的最后一天了，明天就要和孙立峰老师交流了，也就会决定我的六月是开门红，还是会延续五月这种莫名的阴郁。</p>
<p>今天本来是打算快速写完数据挖掘的最后一次作业、看看搜索引擎，然后去了解一下孙立峰老师相关情况的。但实际上，在写数据挖掘作业的时候还是被 Page Rank 卡住了，然后就是熟悉的，卡住就去摸鱼，和学长闲聊。</p>
<p>中途家里人突然因为网络银行无法使用安全插件，几十万卡在账户上转不出去，火急火燎地。然后我尝试着上手看，就看到 ActiveX 格式的插件。不禁感叹怎么还在用这种古老的东西，所以手动设定 Edge 浏览器浏览网银页面的时候使用 IE 模式，于是这个问题就这么解决了。</p>
<p>果然是上古遗物啊。</p>
<hr />
<p>反应过来数据挖掘作业还没写，又去网上到处找 Page Rank 的讲解文，半懂不懂地写完了代码搞出来了和舍友一样的答案，这个时候我才明白 Page Rank 只是一个简单的在图上的马尔可夫过程。</p>
<p>好多次都是这样，抄答案抄着抄着看会了。只不过这个理论上不用一小时就能写完的作业我从下午两点写到了晚上九点。</p>
<h1 id="section-3">2022.06.01</h1>
<p>今早和孙立峰老师见了个面，但是自我感觉不是很好，感觉很多话想说都没说，有些不该说的还是说了。比如说我应该不透露我还有其他老师想选，比如说我应该再解释一下我为什么到处乱跑。</p>
<p>不过孙立峰老师确实似乎展现出了一点的兴趣，大约是对着我的简历问了很多问题。</p>
<p>在和老师见面之前，几位学长告诫我说一定要展现出对老师研究方向的兴趣，这样成功机会会大一些。但我只能说，我尽力去了解孙立峰老师的方向了，但是还是很难当场就展现出那种兴趣盎然的样子。</p>
<p>孙立峰老师的博士生学长说如果夏令营那边没有很强的申请者，我应该是稳了。</p>
<p>但是他也不知道我就是因为半路杀出来的强者而被上一个老师拒绝的。</p>
<p>我现在是越来越认可这句话了，就是说人都是活在假设里的。我们假设道路畅通，我们假设我们可以随意流动，我们假设外卖总能到达，我们假设超市总是货源充足，但是疫情的封控措施摧毁了这些假设，我们就变得不安。我的推免也是这样，我总是假设老师的认可就代表我高枕无忧，但实际上面对变故，不是白纸黑字的约定，都可以摧毁。</p>
<p>所以实际上我依然是不安的，没有斩钉截铁的口头肯定或者直接认定，说实话，我不敢保证这次不会和上次一样突然跌落。</p>
<hr />
<p>下午被镇里要求去做了核酸，回来想起来体育打卡还没有做，草草拿手机拍了视频交了上去，就算完成任务了。</p>
<p>晚上突然告知数学实验取消期末考试仅考虑平时实验报告分数，虽然少了一门考试很高兴，但是说实话我也有点害怕因为大家拉不开分差突然吃一个 3.6，我的 GPA 挂在 30% 的边缘摇摇欲坠，希望不要在我想要 KEEP GPA 的时候来意外。</p>
<hr />
<p>晚上和 Sakana 打了三四个小时的电话，先是打 Escape Simulator，然后她因为电脑过烫就不想玩了。之后就在闲聊，聊游戏，聊未来的打算，聊最近有意思的事情。</p>
<p>其实是挺快乐的，很平凡很平凡的快乐。</p>
<hr />
<p>从今天开始突然打算早睡了，因为确实最近身体也感觉到了有点不堪重负，可能熬夜的伤害也在慢慢显现。</p>
<p>年轻人还是对自己的身子稍微好一点点吧，先从能两点睡觉开始。</p>
<h1 id="section-4">2022.06.02</h1>
<p>今天没有什么预定之中的安排，只是很单纯的需要完成还剩下的事情而已，比如说搜索引擎的大作业。</p>
<p>很久没有碰前端，手还是觉得有一点点生疏，果然这种东西和乐器一样，必须要时时刻刻练习。</p>
<hr />
<p>在老家实际上还是挺舒服的，除了升学焦虑之外没有什么烦心的事情，日常生活的后勤工作也做得好好的，但是总觉得缺少了点什么。今天和东方同好会的朋友开了个腾讯会议，我共享屏幕打牌、打永夜抄、写大作业，在听到同龄人们对我的操作或理解、或吐槽的时候，我大概是觉得，应该要回到这些群体之中了。</p>
<p>有点按捺不住，想早点去姜堰住几天了。明天就和家里人商量，不妨直接等高考完了就去姜堰，和同学们一起去玩耍吧。</p>
<p>不过在此之前，依然有相当大量的事情需要我来完成，最基础的就是搜索引擎的大作业和密码学的考试。</p>
<p>今天在浴室里唱了一小会歌，果然唱歌也是需要时常练习的啊。</p>
<div class="note info no-icon"><p>白い桜の花の季節は、遠く夢の中にだけ。</p>
<p>青々とした桜の葉は、なにも語りはしない。</p>
<p>「夢と葉桜」</p>
</div>
<hr />
<p>实际上最近一直都是这种，对未来隐隐担忧但是并不会影响我做手头上的事情的这样的状态。不过也越来越理解安老板所说的一些话了。</p>
<p>周六预计是要进行下一届科协副主席的选举面试的，我其实很期待高老板会作何表现。</p>
<p>Whatever，今天也要早睡。要做到不带有任何压力上床，一觉就睡到第二天天亮。</p>
<h1 id="section-5">2022.06.03</h1>
<p>今天还是做了不少事情的，和 Sakana 开腾讯会议学习（但是这个人下午晚上都是在床上睡觉 T^T）。不过我也就简单做了一些搜索引擎，然后复习了一点点密码学。</p>
<p>因为是端午，晚上家里有小聚餐，但问题在于我又被灌了可能有半斤左右（一杯半）的白酒，中途我通过疯狂喝水喝汤压住了酒劲，才不至于和一年前一样直接低血压晕倒进医院。</p>
<p>白酒这东西真的好喝吗，我到现在嘴里还是那种混合着今晚饭菜和酒气的味道，十分不好闻。</p>
<p>中途从聚餐逃离了，因为 V+ 群在商讨你画我猜，于是就回来打你画我猜了。</p>
<p>不得不说这种接力式的你画我猜非常有意思，因为你永远不知道你的上一个人会给你画个什么，或者给你一个什么样的词语。比如今天 Ne 老师就给我的一个词语就是“P 25 47 23 度和眼镜，莫非是 neji”，这种词语我也只能乱画，说实话完全不会，但是节目效果拉满。</p>
<hr />
<p>明天要面试科协新一任的各位副主席了，还是有所期待的。</p>
<p>但是今天说实话没有怎么学习，倒也是有点隐隐担忧后面的考试和大作业，和孙立峰老师也没有进一步的联系，应该也有点心里悬着。</p>
<h1 id="section-6">2022.06.04 - 2022.06.08</h1>
<p>这五天基本上每天的生活都是一样的，就是起床后写搜索引擎大作业写到睡觉。</p>
<p>现在回过头来看搜索引擎大作业，我负责的前端部分，说实话我自己是比较满意最后的成果的。刚刚动手写的时候，我意识到了我许久没有写 React，但是写着写着发现那些之前的手感会慢慢回来，而且这一次还弄明白了好多之前并不是很明白的一些 React 特性。</p>
<p>最后助教也说写得不错，那我觉得这几天认真做事还是有所回报的。</p>
<hr />
<p>7 号下午验收搜索引擎大作业，但是 8 号就要考密码学。7 号我检查完大作业的时候，我的密码学是一点都没有复习，最后我是一晚上突击学了一下直接上考场了。</p>
<p>说实话密码学的内容真的不多，几种讲了很多次的古典密码、Enigma、DES、AES、RSA、DH 密钥交换、消息认证码、数字签名，统共也就这些话题。古典密码考的是细致，只要稍微细心点错不了。DES、AES 总之也是计算量大头，但其实弄明白 <span class="math inline">\(\mathbb{F}_{2^8}\)</span> 上的乘法定义和多项式乘法定义也就那样，但是考试最后没有考 AES，白费了我打的乘法表。非对称加密那些东西，不会考很难的计算，密钥都是两位数，计算器算算就行。</p>
<p>但遗憾的是，我 Enigma 忘记了明文和对应密文不会是同一个字母这个性质，一道 6 分题没做出来。消息认证码的答案没来得及写完，最后也不知道老师愿意给几分。不过都说了一周内出分，那就等等看吧。</p>
<hr />
<p>实际上 7 号晚上虽然说我在复习密码学，但实际上我主要在做今年的高考数学试卷。我自己做的答案和一些评价写在另外一篇文章了，这里就不说什么，</p>
<p>近期打算清掉一些任务之后，去姜堰住十天半个月的。暑假也打算南京、无锡到处走走，总之不太想闲着。</p>
<h1 id="section-7">2022.06.09</h1>
<p>今天主要是回去参加一些家里的白事仪式，确实也挺没什么意思的，除了一不小心跌倒扭到了脚，现在还疼着。</p>
<p>不过今天零零散散做了不少小事，摸了一下家里的钢琴、下载好了孙立峰老师给我的论文列表里的论文、被 return 拉到了日本友人的 Discord 服务器、找到了许久之前就想玩的游戏的资源等等。</p>
<p>不过倒也是荒废的一天，没有做什么特别有价值的事情。</p>
<p>想起来自己还没有给密码学第三次作业作出什么贡献，不如明天稍微找点时间看看，而且 OS 也得开始动手，系统结构也得开始复习了。</p>
<p>但是，明天去吃一顿 KFC 才是重中之重。</p>
<h1 id="section-8">2022.06.10</h1>
<p>今天其实整体都有点阴郁的感觉，因为数学实验按照老师的意思是有可能把考勤分放大到五十分，这意味着一堂课都没有去的我有可能会被挂科。</p>
<p>我确实也是有这种情感倾向，就是容易滑坡。当遇到挂科风险的时候，我就会想到我的 GPA 可能没办法 keep，想到可能达不到导师的要求，就想到可能没有书读，总之这样一连串下去，我就瞬间觉得没什么动力去做事情了。</p>
<p>然后今天就有这种奇妙的焦虑感，在此基础上于是赶快去看论文，和孙立峰老师包括他的学生去交流。</p>
<p>不过其实按照安老板所说，如果真的老师决定招收，那么其实只要成绩达到国家政策硬性要求就行，而这个要求是很低的。</p>
<p>但是在和安老板交流的时候，我对孙立峰老师这边的不确定性的焦虑也是愈发严重。总之这些事情叠加起来，就会让我非常的不知所措，所以一整天都过的并不安分。</p>
<hr />
<p>不过现在回头来看，按照我这里光认识的就有四五个数学实验一堂课没有去过，签到一次没有去过的，可能最后真给挂科的可能性也不大。</p>
<p>孙立峰老师似乎也还在跟进我这边。</p>
<p>实际上总之就是什么都吊着胃口，这种处境是最为难受的。</p>
<p>不过后面就要开始糊弄 OS Lab 和 OS、系统结构的考试了，论文一定得好好看，但是现在课内该糊弄还是得糊弄。</p>
<h1 id="section-9">2022.06.11 - 2022.06.13</h1>
<p>这段时间过得比较恍惚，首先是周六简单地忙了点事情出去散了个心去吃了一顿 KFC，和孙立峰老师那边有了更多的一些简单交流。晚上给一位才高考完的学弟讲了一堂简单的日语课。</p>
<p>周日则一直在忙上忙下赶作业，最后 OS 还是没写完，交了一个写了一半的版本上去了。</p>
<p>周一则更加颓废，面临三份大作业、两个虽然不重要但还是一点没有底气的考试，面临可能的挂科风险，面临还没有确定的博士名额。我只记得我中午才起，吃完午饭还又睡到了四五点，打了两把牌吃了晚饭就一直在不知道要干什么。</p>
<hr />
<p>现在整个人都处于一种由于未来不确定感下的恍惚之中，或许也与我从来没有如此迷茫过有关。</p>
<p>但是我能怎么办呢，我只能说我尽力了。稍微给自己打点劲开始做点事情吧。先大致给一下后面几天的安排：</p>
<ul>
<li>13 日晚：OS 复习、写日语课讲义、看数据挖掘</li>
<li>14 日：上午复习 OS，下午考试，之后复习系统结构</li>
<li>15 日：上午系统结构考试，下午晚上做数据挖掘作业、写日语课讲义</li>
<li>16 日：搬家，之后的事情之后说</li>
</ul>
<p>其实只要熬到 24 日所有的大作业结束之后，课内就尘埃落定了。</p>
<p>安慰自己应该不至于再被咕咕咕一次，安慰自己不至于就这样被挂科。</p>
<p>让自己再一次活在假设之中。</p>
<hr />
<p>深夜最终还是不放心 OS 开始复习，但是深夜的时候真的特别容易因为没有人交流而唐突陷入一种情绪的低谷状态，本来最近状态就不是很好，现在更是非常难受。</p>
<p>还是稍微宽慰一点吧，反正六月底，最晚最晚总不能六月底这些事情都不会结束吧。还是期望着最好的结果，推免名额有个落定，数学实验也能混个 2.6 之上的分数，所有的大作业都能高质量完成。</p>
<p>希望如此，希望如此。</p>
<h1 id="section-10">2022.06.14</h1>
<p>凌晨五点睡到了早上九点，草草吃了点东西之后继续看了一小会 OS，但实际上这种困倦的状态真的是一点都看不进去。</p>
<p>下午的 OS 考试，说实话直接给我考懵了，我只能庆幸我记了 PF，不然的话可能真的要给绩点带来重大打击。如果要说的话，前面判断题不算难，文件系统的实践题也不难，简单做做就好了，文件系统的理论题非常繁复，计算量很大，花了我可能得有二十分钟。同步互斥相关题目，这道题直接给我看傻了，我直接盯着这道题看不出一点头绪，即使我自己还稍微认真看了这一部分的内容。银行家算法，前面都还好，但是后面我理解错了意思，可能一整条都做得不太对。</p>
<p>但总之我计算过了，期中考试我 82 分，五次实验满分 40 分我就当他给我扣掉 5 分，我考到 30 分卷面分也就及格了。前面的简单题再怎么说，我也应该凑凑有 30 分了。</p>
<hr />
<p>考完动身去了姜堰，和姜中音游群的同学见了面，吃了开封菜打了一堆音游。回来之后便赶快开始赶工系统结构的复习。但说实话，我看了一晚上，现在已经是凌晨四点，我还是没开始 Tomasulo 算法。本来想着系统结构差不多考到四五十分就够了，放掉这一道题不算什么的，但是一想自己的大作业最终还是得做 Tomasulo 算法，早学晚学都得学啊。</p>
<p>今天连轴转了一天，居然就在这种繁忙的压力之下找回来了一点感觉，那种隐隐约约觉得好像我还能掌握生活的感觉。</p>
<p>今晚要是能摸索出来 Tomasulo，大作业也就可以开始动手，考试也应该大体是没有问题的，系统结构这门课大概也就圆满结束了。之后数据挖掘和图形学的大作业，再冲一冲也应该能写完。</p>
<p>总而言是烦心事也是慢慢减少的，好日子终究会来的。</p>
<h1 id="section-11">2022.06.15</h1>
<p>今天考了系统结构，发现考试也不算是很难，除了没有复习的 Tomasulo 算法之外，其他的至少都是能做的，虽然对不对不重要了。</p>
<p>因为通宵复习了下午直接睡昏过去，晚上爬起来吃了晚饭出去转了一圈，然后就要准备做大作业和跟进老师那边了。</p>
<hr />
<p>密码学出分了，没想到只复习了一晚上，两道大题胡乱写也能考 95，早知道不那么努力了（弥天大雾）。</p>
<h1 id="section-12">2022.06.16 - 2022.06.18</h1>
<p>已经在姜堰住了三天了，但感觉好像还是没什么特别的记忆点。</p>
<p>刚来的那天晚上，请了今年高考完的两位同学吃了个烧烤，期间从大学生活一直聊到了姜中目前的情况、暑假能干什么、各个专业的就业前途，甚至还聊到了人类的科技发展（大雾）。那天确实也是话很投机，从九点开始吃，聊天一直到靠近晚上三点。</p>
<p>其实和他们聊也主要是帮他们排解一下最近的压力，他们似乎也因为高考还没有出分比较紧张，尤其是自我感觉不是很好的。</p>
<hr />
<p>第二天就是一整天都在家里写数据挖掘的大作业了，这个作业说实话也就是照着网上写的比较好的一顿狂抄，反正他们用了什么特征工程我们就照着这样提取特征，然后模型的超参数也是随手调调。</p>
<p>然而实际到现在我们也没有做出来什么很好的结果，ROC 评分一直卡在 0.64 左右，离我们的目标还是有一段距离。</p>
<hr />
<p>第三天主要是陪 Sakana 出门去了，然而姜堰也就这么点大地方，早就给我们逛遍了。结果就是逛了会累了到星巴克坐着，我写了会大作业后，Sakana 突然说想打麻将，于是就简单教了她一点日本麻将规则。</p>
<p>晚上我自己要打 MCLeague，于是事先回来了，普普通通吃三，无功无过。</p>
<p>明天去混姜中的毕业典礼，就当散心了。</p>
<p>当然今天的插曲就是我的 fufu 被我家里人签收了，他们震惊于二十几岁小伙子还在买毛绒玩具（大雾）。不过也确实，可能这种对可爱的 fufu 的喜好也很难被刻板印象所接受。</p>
<p>OS 期末也出分了，我居然成功卷面分及格，这让我很是震惊，因为我几乎是裸考的，我本来的估分是最高 40 分来着的。</p>
<hr />
<p>说实话最近确实有一点找回生活节奏的感觉，感觉之前烦心的事情慢慢淡出了视野。</p>
<p>就这样平凡地过下去也挺好的。</p>
<h1 id="section-13">2022.06.19</h1>
<p>因为数据挖掘的作业导致只睡了大概三四个小时就跑去姜中看毕业典礼了，感觉办得超出预期，至少每一个节目都有完成度，而且独舞节目也实在是不错。</p>
<p>期间遇到了姜中音游群的各位群友，于是散场之后简单聚餐了。</p>
<p>他们怎么说呢，还在学校的签名墙上宣群，而且打出的广告语是“群里有 Holder”。</p>
<hr />
<p>下午跑去学校见各位老师了，可惜的是孙校没有时间，于是只能明早再去看看了。之后简单遇到了刘老师和邱老师，和他们主要是交流的是一些自己的近况和姜中的近况，其实也就是随便聊聊，但是没注意时间就到五六点了。</p>
<p>晚上有饭局，好玩的是他们七点开席，但我七点有保研政策宣讲会，于是只能边吃边听。这中间我舍友还催我数据挖掘的作业，于是中途又离场去写作业了。</p>
<hr />
<p>今天还是比较累的，本来就睡的少，结果还到处跑，加上明天还要早起，黄天驰学长也在催我看论文，大作业也还有两个，一瞬间压力就上来了。</p>
<p>只不过还好数据挖掘的结果还不错，所以就还好。</p>
<h1 id="section-14">2022.06.20</h1>
<p>早上早早起来去学校找孙校长，但中途接到消息说有老师心脏病犯了被送去了医院，孙校急急赶过去，也就没有聊到什么特别有用的内容。</p>
<p>上午回到家本来以为精神状况应该还行的，结果躺在沙发上睡着了，期间错过了暑期实习选专题，打开群的时候已经剩不了多少了，不过仔细看了看，有一个有关计算几何的好像没人选，就先选上算了。</p>
<p>下午是暑培的前期组织者交流会，其实进行得很顺利，大家也都很有想法，但问题就在于好像没有就 Python Track 到底布置什么样的作业达成共识，总之现在还是等等。</p>
<p>然后就是看论文看论文看论文，好像没什么好说的。</p>
<p>啊，这种平凡的生活倒也不错。但是问题在于，马上又要交 Tomasulo 算法大作业，又要花点时间写了，什么时候课内才能真正结束啊。</p>
<hr />
<p>Tomasulo 算法决定只写算法主体部分，GUI 就不是很打算写了。</p>
<p>然后今天下午说是数学实验出分了，但是等来等去都没有等到 Info 网站上的成绩，问了舍友他也没查到，是不是只更新了毕业生成绩，我们还要继续等的意思。</p>
<p>论文也没看，又开始焦虑会不会因为太摸鱼再次被拒绝了。</p>
<p>一周的开始并不是那么顺利啊，还是需要稍微进一步的。</p>
<h1 id="section-15">2022.06.21</h1>
<p>记 PF 的好处在于你可以摆得很彻底，所以今天也是半划水半干活地写完了 Tomasulo，但是明天的验收也不知道会怎么样，不管了。</p>
<p>所以，图形学、论文都要开始了。</p>
<p>今天数学实验的助教和我说，似乎最后老师决定了考勤分仅有两分，这么说来，我反而满绩了。</p>
<hr />
<p>今天在 Sakana 注视之下打了一把雀，然后点了至少三四个炮被飞了。我怎么说呢，感谢 Sakana 还觉得我打牌还行。</p>
<h1 id="section-16">2022.06.22</h1>
<p>上午系统结构 Tomasulo 大作业检查出锅了，<code>sw</code> 指令似乎又没有处理好，但反正只要不是零分就其实问题不大。</p>
<p>话说助教捉着我的分支预测一顿疯狂提问，可能这就是没写 GUI 的特殊待遇吧。</p>
<p>今天下午本来是要好好写图形学的，结果又躺在沙发上睡着了，有点过于摸鱼了。</p>
<hr />
<p>今天的一大好事就是，孙立峰那边确认给我名额了，所以我现在，所有事情就都安定下来了，唯一需要解决的就是课内需要稍微卷一卷。</p>
<p>啊，生活最终还是变好了。</p>
<h1 id="section-17">2022.06.23 - 2022.06.26</h1>
<p>这四天应该来说过得很充实，充实着快乐着。</p>
<p>先是 23 号通宵到 24 号写图形学，完全就是从零平地起高楼写完了 SPPM，还写了软阴影、UV 贴图、KDTree 加速、Octree 加速、景深、复杂网格等一堆东西。但没想到我们助教实在是查得太松散了，大概有这样的一段对话：</p>
<div class="note info no-icon"><p>助教：“同学你写了软阴影吗？”</p>
<p>我：“有的有的！”</p>
<p>** 正准备打开面光源采样得头文件自证 **</p>
<p>助教：“好的知道了。”</p>
<p>** 此时头文件还没打开 **</p>
</div>
<p>总之感觉比较随便，可能还是最终报告之中的图会比较重要吧。</p>
<p>话说我图形学最后实在是在验收前没有办法写一些什么很复杂的东西了，于是就拿两个斯坦福兔子随便摆了摆就当验收了。</p>
<hr />
<p>图形学验收完了就是办理暑期实习的入职，暑期实习的时间也就定在了 6.27 - 8.06，六个星期。</p>
<p>但与此同时，我弟弟的高考成绩出来了，然后实验室学长说可以开一个简单的开题会讲一讲最近要做什么事情。</p>
<p>于是 24 号的晚上愣是没能歇下来，即使我已经快四十几个小时没有睡过觉了。</p>
<p>当天晚上最好玩的事情就是，我水群的时候勉勉哥突然提到想唱 K，结果我也有点想去，虽然很累。结果是两人一拍即合打算就在家门口的 KTV 随便玩一会就散，结果群里一堆人都附和，最后变成了晚上九点钟五个大男人一瞬间就组好了 KTV 车队。</p>
<p>不得不说小县城的 KTV 不仅外语歌不全，而且音响效果也不好，不过本来就是过个瘾而已，那也就算了。</p>
<hr />
<p>25 号就立刻去找 Sakana 去了，每年暑假的必定活动——混入上海交大招生组。当天下午简简单单陪他们打了一小会牌之后便去了学校准备第二天的摊位。</p>
<p>但是这个时候有个比较大的问题就是我们数据挖掘大作业的报告需要交了，于是还得在这中间抽时间写报告。</p>
<p>当晚有了饭局，所以短暂分开了一会，吃完饭之后还是去了上交招生组那边，和他们打麻将去了（弥天大雾）。</p>
<p>26 号便是简简单单地去学校摆摊，期间遇到了音游群的各位，结果就和他们顺势在上交的摊位旁边，支起来了一个姜中音游群摊位。简单拿着迪拉熊、Arcaea 的碟和 Holder 宣传，当然意料之中的就是没多少人来。</p>
<hr />
<p>26 号比较大的事情就是和很多的清北挂线毕业生聊了很多很多，其中有一位可以强基进北大数院，但是实际上也不能保稳，然后强基还不能转专业。我和他以及他家长提了很多次如果不能转专业就意味着那些数学本科转金融、计算机的捷径不存在了，必须要近十年完全贡献给理论数学，这个耐心要有。而且我也和他提过多次北大数院的竞争，如此云云。</p>
<p>虽然其实我自己感情上不是很想他来北大遭罪，但是考虑到在这样说太多毕竟会和高中的利益冲突，和他家长内心早就拿好的决定冲突，我也便悄悄退出讨论了。</p>
<p>感觉这一届我们高中说实话，特高分层实在是被腰斩了。还以为他们会发挥稳定的，谁知道只有一两个裸分上线，也不知道哪个环节出现了问题。</p>
<hr />
<p>另外一个有点奇妙的事情就是，在和同学们交流完了，自己数据挖掘的报告也写完了之后，我回到上交招生组找 Sakana，正好她在和一个学妹说绿格实践的事情。</p>
<p>怎么说呢，有的时候听到这些东西就不由自主地开始回想到一年之前那段不堪回首的经历，虽然我现在也已经不太在意 Sakana 的交友问题（毕竟她先是独立的人），虽然早已经安慰好自己，虽然早就和她平稳地又度过了一年，平凡地庆祝了四周年。</p>
<p>但是一年前，无论是当时刚得知 Sakana 对我心灰意冷，自己也愧疚于三年前的冷漠，还是之后无理取闹地将他们一群人拆散，还是因为搞得 Sakana 当时也混乱不堪而自责。总之一年前的那一次情感的崩盘，即使已经似乎修复了，但是依然在一些时候，回光返照。我还是会有时在梦中体会到一次又一次失去她的信任的恐惧。</p>
<p>一年前的那些事情，搞得我即使已经是现在还是时不时神经紧张，今天在听到那些字眼，还是会出现心头一紧的生理反射。其实 Sakana 也是，今晚我和她一提到这件事，她很快就在和我说自己已经和他们没有联系了，她也被我折腾到形成了属于她的条件反射。</p>
<p>其实只要把这件事掩藏起来，实际上就和什么都没有发生一样，我和 Sakana 的关系确乎也在这一年随着把这件事情彻底敞开谈了之后回到了正轨。</p>
<p>但是这件事，确确实实地给我和她，带来了一些感情上的禁忌。</p>
<p>虽然似乎一切都不会是尽善尽美的，都可能会经过这些折磨，但今晚，确实还让我感觉我的感性还是脆弱的。</p>
<hr />
<p>但明天就是实习的入职仪式，最近还是可以找 Sakana 随便玩玩，自己的生活依然是在正轨上，倒也，没有那么多可以担心的事情。</p>
<h1 id="section-18">2022.06.27</h1>
<p>今天直接就是在家睡了一整天，因为入职仪式也没有说什么有用的信息，我 mentor 也一直没来找我，所以我就无所事事了。</p>
<p>晚上正常去吃了点饭，就回来睡觉了。</p>
<h1 id="section-19">2022.06.28</h1>
<p>最终我的 mentor 还是说好了安排，简而言之就是不查考勤，只要每周汇报就可以。然后现在安排的任务就是学一些自动驾驶方向的基础概念。说实话应该不太困难。</p>
<p>但是我的图形学和实验室那边的任务似乎又搁置一段时间了。</p>
<hr />
<p>今天和 Sakana 一起去了星巴克学习，但这个人，先打了两个小时的 PvZ（大雾）。</p>
<p>然后晚上就回泰州了，和家里人交流了很久关于无论是我自己的未来还是我弟我妹、姜中的未来等等奇奇怪怪的内容。总之还是有很多需要做的事情吧。</p>
<h1 id="section-20">2022.06.29</h1>
<p>今天应该说需要让生活回到正轨了，该找找我妹稍微聊聊，然后该安排一下自己科目三的事情了。</p>
<p>之后就应该是周一到周五做实习项目、实验室项目，然后周末练车的无聊生活了。</p>
<hr />
<p>经过交涉，科目三那边因为实在打不满学时所以没办法去学了。然后本来想着早点去北京见见导师的，结果因为政策混乱也暂且没有什么去的想法了。</p>
<p>今天图形学很努力在做了，但是实在是没有什么推进，真的不想写报告。</p>
<hr />
<p>我现在也渐渐发现了，我感觉我一到暑假这种没有什么事情占着我的精力的时间段，我立刻就会陷入一种极度敏感的状态内，很容易因为各种小事变成一种郁郁寡欢的情感。这个时候只要有点不太顺心的外部刺激，可能就会出现一年前的情感崩溃。</p>
<p>我不太明白这到底是什么缘故，我感觉我就像依赖着精神药物才活着那样的瘾君子一样，只要不沉浸在忙碌之中，就全身不自在。</p>
<p>仿佛除了把我的生命贡献给无休止的折磨之外，我就找不到什么特别的意义一样。</p>
<p>好像一年前我就已经得到了这样的结论。</p>
<p>就像今天晚上我处于这种状态，仅仅是因为 Sakana 回消息晚了一点点都有可能导致一瞬间堵了一下那样的感觉。但是我先前在通宵做大作业的时候，连续两天和 Sakana 一共就说了两句话也丝毫没有什么影响。</p>
<p>然后因此打开了一年前的日记，开始独自回味当时的混乱。万事万物总归会奇妙地让我重新回到那一个深渊。</p>
<p>当时的事情仿佛是完全解决了，但是也不知是我自己的担惊受怕还是我自己所谓的病态的完美主义，总认为还存在着什么，还有什么没有做到，还有什么问题没有解决，还有什么结没有解开那样，做着无止境的自我反思。</p>
<p>似乎有人提到过放弃一切事物都存在简单完美的解决方案这样的思想是成熟的标志，学会接受、学会隐藏、学会平衡是最终的目标。但我还偏偏和那些做基础数学的人一样幻想着总有一天所有的悬念都会揭晓，所有的不安都有结局。</p>
<p>我还是不是很懂。其实从今年五月被徐昆拒绝之后，似乎我的心态都有这样的感觉。</p>
<div class="note info no-icon"><p>随着自己暗示着自己一年前的混乱并没有解决的时候，那种熟悉但令人恐惧的不安再一次席卷全身。</p>
<p>先尝试着自己挣扎吧。</p>
</div>
<h1 id="section-21">2022.06.30</h1>
<p>今天因为组会暂停，于是拉着 Sakana 和我的同学们打了两个小时左右的牌，我被她吊着打（确信）。</p>
<p>然后快速干完了图形学的报告，于是大三下学期的所有课程我都完成了，下面就是等待出成绩，只要没有什么很明显的大问题，我这个学期总之是平稳地过去了。</p>
<p>下面就是白天做实习的事情，晚上看实验室的事情，两边都是每周开会，所以还是需要稍微注意注意。</p>
<p>七月份了，可以开始迎接新的自己了。</p>
<h1 id="section-22">2022.07.01</h1>
<p>今天开始干实习和实验室的锅了。</p>
<p>然后顺理成章地摸了一天的鱼。</p>
<h1 id="section-23">2022.07.02</h1>
<p>今天主要是在看强化学习入门，然后和 Sakana 因为她摸鱼产生一点点摩擦。</p>
<p>强化学习也就看了还没有和深度学习结合的部分，感觉很 make sense，但是好玩的就是遇到了“狼一头撞死”这样的笑话。</p>
<p>那个笑话的意思大约就是作者需要训练一个狼去捉羊，但是那只狼好像不怎么聪明，一直捉不到羊，于是作者加大了捉不到羊的惩罚，结果发现狼一出生就会直接撞死在石头上避免惩罚。所以作者在感叹人工智能都会拒绝内卷。</p>
<p>而我今天要训练的是一个走迷宫的模型，地图上有两个地狱，遇到就会有惩罚，有一个天堂，遇到就会有奖励。去天堂需要稍微绕路，去地狱出门就是。但是我用的那个教程上他写的代码框架里面，有个问题，就是当模型在角落的时候应该缩小决策空间让模型不至于不动（比如在左上角的时候就不能作出向左走的决策），但是他没有，这就导致训练出来的模型如果没有碰巧在随机走步的时候到达过天堂留下正向反馈，那么他就会直接缩在角落避免进入地狱。</p>
<p>只能说人工智能还是会帮助我们发现一些奇怪的思维盲区，人工智能还是比我想象的稍微聪明一点啊。</p>
<h1 id="section-24">2022.07.03</h1>
<p>今天主要陪 Sakana 去了，简单把之前没有逛过的万象城简单逛了一下。</p>
<p>不过今天也顺手第一次去玩了舞萌 DX，不过不得不说迪拉熊真的好好玩。</p>
<h1 id="section-25">2022.07.04</h1>
<p>今天说实话倒也没有什么很好玩的事情，首先是一大早就要去姜中找孙校长有事情，没有交通工具也只能走路，夏天十点的太阳就已经非常让人难受了。</p>
<p>中午回来吃饭，想着下午好好看看 DQN 的，然而实际情况是吃完饭想着先打一把牌应该没问题，结果是越打越困，从坐着打牌变成躺在躺椅上打牌，最后直接爬到床上去了，熬到了南四局结束之后，直接手机一扔不省人事睡着了。</p>
<p>一路睡到了快四点，而晚上本来就约好了和 Sakana 去剧本杀，于是草率看了两眼 DQN，也就要准备去吃晚饭了。</p>
<hr />
<p>话说我这个暑期实习真的是让人一言难尽，mentor 一直在奇奇怪怪地摸鱼，我还要绞尽脑汁编日报，一点活都不给我做，我倒也真的一直没干什么事情。</p>
<p>然而这里就有一个问题，合同上说的挺明白的，实习工资会有 280 一天，总共有八千多的实习工资。但是 HR 也说得挺明白的，如果无法确认考勤，就会以旷工停发工资。现在在北京的同学已经可以去公司打卡上班了，但是我这蹲在家里的就比较难受，毕竟八千块怎么说都是钱，而且自己也有换平板的计划。</p>
<p>去问我 mentor，他说不知道，去问我 HR，她倒先站在高地说了我一通要讲诚信，考勤这件事我们看得很重。弯弯绕绕说了一堆，我都没明白我这个考勤怎么办。</p>
<p>虽然最后折腾到了结果，就是走考勤申诉，只要 mentor 认可，就可以按照到班计工资。而我那个 mentor 确实也比较不管我，所以这一关倒是很顺利地给我过了。</p>
<hr />
<p>晚上剧本杀挺难说的，先是 DM 就是我姐，然后就是，还没开打呢，又被老孙一通电话叫过去做招生工作去了。</p>
<div class="note info no-icon"><p>我一个清华的学生，为什么要掺和北大和交大之间的招生问题.jpg</p>
</div>
<p>不过反正就是到处找人问政策情况，然后期间老孙老邱都来打听我做工作情况，和学生家长、本人也聊了一些。</p>
<p>不过最搞我的就是，这人十一点多都没给我准信。他只要给了，我这个工作就能交班结束，但是显然，不能。</p>
<p>然后这人，我一点半回了个收到，他说他当时睡不着。</p>
<p>虽然我也很能理解学生这种三小时决定未来七八年的紧张和不安，但是，我着实是，作为编外人员到处玩的个人，比任某这位编内人员都忙的多（没有黑任某的意思，他今年很认真了，确实）。</p>
<hr />
<p>晚上挺郁闷的，正事也没做，这就导致我明明第二天约好了去打街机也不安分，晚上也没玩上。</p>
<p>这下就我没打过线下剧本杀了，人生体验缺失一大块（确信）。</p>
<hr />
<p>郁闷就去喝酒呗。</p>
<h1 id="section-26">2022.07.05</h1>
<p>反正就是打了一天街机。</p>
<p>回来还想着好好把 DQN 给看完，不过我倒是，很不能适应 Tensorflow，为什么有人要用 TF 写代码啊，好好用 Pytorch 皆大欢喜了好吧。</p>
<p>但是牢骚归牢骚，TF 学不会 DQN 学不会，小心学长把你扔出实验室。</p>
<p>困了。</p>
<h1 id="section-27">2022.07.06</h1>
<p>出去干活终究是一点效率都没有的，而且琢磨比较烦的东西终究还是要一个人坐着好好想才行。</p>
<p>昨天暴打迪拉熊的后果就是今天一整天都没有精神，只能靠浓缩咖啡顶着，艰难地看完了 DQN family，写完了 demo 代码。说实话有点觉得自己学习能力怎么变得这么差的感觉。</p>
<p>真的，劳累的时候确实有一点令人容易陷入 emo，即使实际上一切都很好。</p>
<p>迅哥哥说准备回北京了，我其实也有点想回去，但是回去就见不了 Sakana，一定程度上还挺受限。但是回去见导师确实也是一件需要准备去做的事情。</p>
<p>又有点担心 Sakana 太摸鱼了，但怎么说呢，其实我也不想说太多吧。</p>
<p>已经答应了明天尝试用 Pytorch 写一遍 Pensieve-DQN，既然答应了就得写出来吧。</p>
<h1 id="section-28">2022.07.07 - 2022.07.08</h1>
<p>两天都在学习，但实际上没有什么特别的产出，Policy gradients 看了好长时间了，也还没有把代码写出来。</p>
<p>心里关于 Sakana 还是有点没有越过去的坎。</p>
<p>还是很嫉妒他们一起去过的沙漠，真的，心中就仿佛有这么一道难以逾越的城墙一般，每次想到这件事情，便是懊悔、内疚、嫉妒、自责。</p>
<p>所以想带 Sakana 一起去旅游的冲动，一直是有的。</p>
<p>但我真的并不是什么有趣的灵魂，我的朋友也是，没有那种能谈笑风生或者安排精彩的旅程的能力。</p>
<p>怎么说呢，其实再不解决这个问题我只怕后续更加失衡。</p>
<h1 id="section-29">2022.07.09 - 2022.07.14</h1>
<p>说实话毫无特色的一个星期，每天就是起来之后干活，之后无聊吃完晚饭，然后继续干活。</p>
<p>最近最烦的事情就是每天晚上都会有饭局，这样就让我晚上可以自主支配的时间巨大缩短，更加没有意思了。</p>
<p>实习那边交掉了一份 demo 代码，得到了认可，还算不错。但是实验室这边的进展一直缓慢，正在考虑到底怎么做比较好了。</p>
<p>妹妹从南京回来快一个星期了，除了 14 号带着去了一趟万象城看看电脑和 iPad，我自己打了一小会滴蜡熊之外，好像也没有什么可以叙说的事情了。</p>
<p>Sakana 这几天一直在练车，完全没有什么可以交流的时间。所以我自己要不还是好好干活吧。</p>
<h1 id="section-30">2022.07.15 - 2022.07.17</h1>
<p>现在有点不太想写日记了，日记已经好几天没好好写了，但其实也和这几天没有发生什么大事有关系吧。</p>
<p>15 号是东方群的聚会，还是日常的麦当劳自闭角见面，下午打麻将，顺手还打了剧本杀，晚上小菜园吃完饭，去唱 K。</p>
<p>16 号没有发生什么事情，单纯在睡觉，非常无趣，晚上去了中骏世界城转了一圈，打了打舞立方和台球，然后步行四公里回家。</p>
<p>17 号上午去练科目三了，结果回来巨困，睡了一天。</p>
<p>这一周因为无穷无尽的应酬其实折磨得有点难受，不过现在已经答应了不会轻易出门吃晚饭，这样还是不错的。然后自己也应下来了科目三的事情，尽量七月底能拿到驾照，解决掉一件事情还是不错的。之后和黄天驰学长交流还算顺利。</p>
<p>下周还是赶快做事情，实习的事情，实验室的事情，抽象代数和日语再咕咕咕一下应该也没有什么事情。</p>
<p>八月，空出来享受一下暑假。</p>
<h1 id="section-31">2022.07.18</h1>
<p>做了一整天的事情，大概就是一直在学 Actor Critic 算法，顺便把之前 Policy Gradients 不太清楚的部分给弄明白了。</p>
<p>摸索了一下 B 站直播，播了十个小时左右，发现还挺好玩的。</p>
<p>今天算是做了不少事情，收获还是不少的。</p>
<h1 id="section-32">2022.07.19</h1>
<p>做了整整一天的事情，确实很有收获。PG、A2C、DDPG 都差不多整明白了。之后又去了万象城，吃了饭打了滴蜡熊。</p>
<p>但其实并不太开心，大概是太劳累了，然后被 Sakana 一句话气到了。</p>
<p>说实话我还是不是很明白我自己有的时候的一些思维回路，确实挺奇怪的。</p>
<p>但是话说回来，好想找 Sakana 玩，然后这个时候就会有点敏感于 Sakana 有的时候的一些玩笑，然后陷入一些很奇怪的郁闷之中。</p>
<p>想找她，但是这几天我上午练车，她下午晚上练车，这就非常烦。</p>
<h1 id="section-33">2022.07.20 - 2022.07.22</h1>
<p>这三天由于没有什么特别的事情想要做，于是就一直在干活。先是推了一下 RL Tutorial，之后推了一下实习那边的 Minkowski Sum Demo，然后今天又回来推 RL Tutorial。</p>
<p>科目三练得马马虎虎，最大的问题其实是方向感很差，真的不是很清楚应该怎么打方向盘，但总之随便弄弄过了拿本就行，我也不指望近几年内我能用机动车通勤。</p>
<p>说实话认真干活反倒给了我一种安心感，之前赶期末的时候也是这样，在忙碌的时候感到安心。</p>
<p>不过现在，已经不知不觉快七月底了，暑假居然也就这样过了快两个月了。想想当时五月底仓皇出逃，到现在这么长的时间里，居然也仅仅是干了这么点事情，反倒有点自嘲的意味在。翻看之前的日记，发现七月份的日记竟然是那么地粗糙，一时间回忆不起来自己的七月在干什么，就好像每天都是同一个模板里翻来覆去而已。</p>
<p>昨晚看到了原先 Sakana 社团的某人的恋爱一周年纪念说说，想到去年这个时候他们在沙漠确定了关系。</p>
<p>当时翻看了一些去年的日记，当时自己应该一直在一种混沌之中，日记也总是混沌的心理推论。</p>
<p>不过去年有小学期，所以日记到七月底也就匆匆结束，其实要是有当时八月那种学业压力和心理压力并存的一些日记就好了，至少我就能更清晰地回忆起那段至暗时刻的一些细节。不过当时的自己确实也没有心情去记录那些烦心事，也算是正常。</p>
<hr />
<p>倒是现在想起来自己图形学的技能引导文档没写，现在还想把自己的 RL Tutorial 贡献给技能引导文档。</p>
<p>也真的是应了 Sakana 的那句话，“总是喜欢在最忙的时候继续揽活折磨自己”。</p>
<h1 id="section-34">2022.07.23 - 2022.07.24</h1>
<p>摸鱼的周末，周六没练车，随便做了一点事情就去姜堰了，结果 Sakana 有大作业没办法出来，就喊了东方群的人去打舞立方和唱 K，就这样也一路从下午六点玩到了半夜十二点。</p>
<p>周日练完车吃个饭滚去万象城打 maimai 了，本来是想着遇一下 Sakana 的，结果还是没遇到，因为她要赶末班车赶快回家。</p>
<p>然后再一次成功因为忘记交实习报告被实习群点名批评，但反正已经迟交了，那也就慢慢写了。</p>
<p>这周最后一周在驾校了应该，然后也应该是实习的倒数第二周了。其实反过来看一下我实习做的事情，真的没什么含金量，不过这也是好事，大家一起当混子就很舒服。</p>
<p>这几天稍微加快点做事情的进度吧，实验室那边还是要做做。</p>
<h1 id="section-35">2022.07.25</h1>
<p>周一，稍微干了一点点事情，但实际上还是被 PPO 卡住了，没有钻出来什么有用的东西。</p>
<p>今天主要是找到了姜堰有一家主机游戏体验店，预约了周五的双人位打算和 Sakana 一起去。</p>
<p>其实还是有一点想早点去找 Sakana 的，但是最近的事情还是比较多，科目三也没完全弄好。</p>
<p>八月吧，还是等到八月最后再安排安排吧。</p>
<h1 id="section-36">2022.07.26</h1>
<p>因为学时没有打够的原因，科目三不得不到八月三号才能考，所以还得在驾校折磨一段时间。</p>
<p>然后勉勉哥在约着八月去南京打街机，所以现在也就准备安排着去南京的规划。</p>
<p>湖中很早之前就在说八月可以去广州逛逛，但现在也没什么下文，所以暂且也还什么都不知道。</p>
<p>迅哥哥今天也来催了一下 THUInfo 的培养方案功能，所以说还是要准备开工了。七月最后一点时间，好好用好吧。</p>
<h1 id="section-37">2022.07.27</h1>
<p>周三，接到了 FL 打算周四去回学校的消息，于是想着也可以去找找老邱，就和他约定一起去了。</p>
<p>之后想到既然已经去了姜堰，为何不把 Sakana 喊出来呢，于是又约起来了周四的局。然而工作日实在是找不到多少人陪我们玩，最后也不过凑齐了四个人勉勉强强一桌麻将。</p>
<p>最后还真的决定在麦当劳打麻将，我甚至还借到了一副日麻牌。</p>
<h1 id="section-38">2022.07.28</h1>
<p>早起练车，效果还行。</p>
<p>中午赶忙跑去应酬，敷衍过了之后就去找 FL 进学校找老师。和邱聊了大概半个下午的样子，主要还是目前我们在大学里的情况以及对后面姜中弄竞赛的一些想法。</p>
<p>现在姜中打算把竞赛在强化班搞成正规课程，有月考有期中期末，纳入强化班考核。这样搞我觉得是可以的，但是问题是老师资源可能真的不够，毕竟现在也不过招到了一位南大本科的老师。</p>
<p>晚上遇到了 Sakana，四个人打了一个半庄之后就觉得无聊起来，最终还是去了 KTV。</p>
<p>比较好玩的事情是，即使 Sakana 事先说打算闭麦不唱歌，最终还是唱了一些，但是 FL 是真的一点没唱，在 KTV 里面硬生生玩了三个小时手机。</p>
<h1 id="section-39">2022.07.29</h1>
<p>和 Sakana 去约好了的主机游戏体验馆，9.9 双人玩一下午的优惠只有七月底有了，八月就是原价，所以得快点去。</p>
<p>打了 A Way Out，但是实在是太长了，一下午六个小时两个人没有打通，但是其实也接近通关了，卡在最后一点点的枪战上。</p>
<p>晚上滚去看《独行月球》，说实话是个不错的电影，但是另外一方面，他很想带一点点的情感戏，又想带一点点的宏大叙事，还想维护住喜剧主线，这三个混杂在一起，说实话就导致一些桥段不伦不类的。不过瑕不掩瑜，总体而言是个好电影。</p>
<h1 id="section-40">2022.07.30</h1>
<p>周六，本来是玩了两天后应该好好做事的一天，结果是上午练完车太累了直接睡了一整个下午，之后借我麻将朋友说要拿回麻将，结果是晚上又去麦当劳打了一晚上麻将。</p>
<p>确实是有那么一点点怠惰了。</p>
<h1 id="section-41">2022.07.31</h1>
<p>一周的事情压到最后，终究是要给出一点点的交代，于是上午滚去高港看完科目三的考场之后，回来也只能草草睡一个短短的午觉便需要赶快爬起来把之前实习的事情拿起来赶快做。</p>
<p>今天有点乱，其实。首先是早上科三看考场实际上出了点问题，方向感不好，不知道怎么转弯的问题依然存在，现在有点担心我三号到底能不能考过了。</p>
<p>下午和 ZSJ 他们约了约，感觉可以带 Sakana 去浙江玩，一番折腾，大致的行程也规划差不多了。</p>
<p>结果最大的变故是原来和勉勉哥打算周末南京玩一圈的，结果勉勉哥没有时间，这就导致我有可能取消南京的行程直接去浙江。</p>
<p>不过去旅游终究还是要基于我三号能拿到驾驶证，在这之前好好练科三好好背科四，还是挺烦的。</p>
<h1 id="section-42">2022.08.01 - 2022.08.02</h1>
<p>八月的最初两天过得非常平凡，几乎没有什么特别的事情发生，一直在做实习那边的事情。</p>
<p>说实话还是高估了自己解决问题的能力，我本以为只要一两天就能解决掉这个问题，结果连带着摸鱼这个问题做了我整整快四天。</p>
<p>浙江旅游的计划已经差不多固定下来了。七号出发去宁波，晚上在湖边转转，八号看一圈市区景点，打打牌，九号去象山，玩到十一号回来。</p>
<p>然后明天要考科目三四了，希望这次能顺利拿到驾驶证，这样省得回家还要折腾这种无聊的事情。</p>
<h1 id="section-43">2022.08.03</h1>
<p>今天去考科目三，定的是九点的下半场，本来想着早点考完可以回去睡一觉再去考科目四。然而事实情况是，我很早就被拉去考场等考试，但是运气实在太好，抽中了这一批的最后一个，所以非常顺利地上午没轮到我，只能下午再考。</p>
<p>下午我是第一个考试，然而遇到了一个非常不想遇到的情况，两辆考试车同时起步而且我还是后面那个，结果就是我一直只能憋屈跟在后面，然后因为变道之后贴过紧被考官一个刹车带走了。不过还好，第二次顺利通过。</p>
<p>考完科目三，稍微等了一会就滚去考科目四，科目四很简单，小学思想品德题，随便做做就通过了，去等制证。</p>
<p>拿到驾驶证就算了掉一件事情了。</p>
<h1 id="section-44">2022.08.04</h1>
<p>七夕。</p>
<p>和我弟把 Sakana 约出来，先是蹲在星巴克自习了一下午，晚上本来打算去万达吃自助，结果可能是因为七夕的缘故，那家自助人爆满，要排号二十几桌，遂放弃。</p>
<p>结果是我弟喊着说自己太饿，没办法只能随随便便找了一家饭店，但问题就是，这家饭店评分真的十分差，而且确实饭菜相当不行。</p>
<p>晚上本来是没有什么具体安排的，于是就三个人到处逛，期间我们发现了原来要市民卡才能开的共享单车居然可以直接扫码打开，于是顺手三人开始骑车兜风，然而由于 Sakana 的电瓶车电量不够用，只能将她先送回去，我和我弟两人继续兜风到一点多才回家。</p>
<h1 id="section-45">2022.08.05 - 2022.08.11</h1>
<p>这一个星期大概是发生了很多事情的。</p>
<p>先是和 TTL 他们一起去游泳过夜玩游戏，看了《彗星来临的晚上》，帮 LCR 搭好了他的个人网站之后也就没做什么了。</p>
<p>之后就和 Sakana 去宁波了。</p>
<p>宁波玩的这一星期其实说实话很慵懒，就是那种起床吃个早饭然后慢慢悠悠规划今天应该干啥的那种假期生活。</p>
<div class="note info no-icon"><p>旅游本来就是用来放松的。</p>
<p>—— Sakana</p>
</div>
<p>于是在这样的方针指导下，我们宁波市内几乎只是去了一趟天一阁和宁波博物馆随便逛逛，然后和 Sakana 去东钱湖、韩岭散了一会步而已。按照一些旅游团的规划，这些地方完全可以一天就给走完，但是我们从七号到达一直到九号下午去象山，这快三天的时间也才逛了这些地方。</p>
<p>这种不紧不慢的步调，反倒很舒适。睡个自然醒，吃点早饭，和朋友打打牌之后规划午饭，下午简单逛逛，晚上等到天色渐暗温度降低的时候去晚饭然后散步，累了就回住处贴贴看番顺便点小烧烤外卖，很理想的生活。</p>
<p>九号去了象山，结果是快到晚上才到达，收拾完东西吃了个简单的晚饭也便睡了。十号赶去了石浦镇，去了海滩，玩了一些海边大家都会玩的一些娱乐设施，晚上啤酒烧烤一波之后又得赶回象山。</p>
<p>今天则是一点没玩，全在赶路，反倒是这几天里面最累的一天。</p>
<hr />
<p>要是说这次旅游留下了什么，除了一些照片、沙雕聊天记录之类的寻常之物之外，倒也是让我对旅游的组织方式有了一种新的认识，果然我这种人还是比较适应松散的时间表，那种要是实在不想去就不如在床上躺着的旅游，反倒有意思。</p>
<p>和 Sakana 玩得很开心，下回继续贴贴。</p>
<p><img src="/uploads/2022-summer-record/1.jpg" /></p>
<h1 id="section-46">2022.08.12 - 2022.08.13</h1>
<p>全都在写实习报告，最后写完了。</p>
<p>这就是，毫无意思的两天，写完了的话后面还有几件事情要做，比如说问问返校政策、去姜堰取回我的保险、处理之前的危险化学品、和 Sakana 贴贴。</p>
<p>后面实验室的事情，还是得好好推进。</p>
<h1 id="section-47">2022.08.14</h1>
<blockquote>
<p>最近 Sakana 有点冷冷的，感觉是回家开始重度手机游戏，不回我消息了。</p>
</blockquote>
<p>今天本来打算好好看 Sutton 的强化学习的，结果是没怎么推进，前面的 Introduction 部分实在是很烦，但是又觉得他会在里面写很多高屋建瓴的观点，又不想直接跳过，所以还是当成英语阅读理解算了。</p>
<h1 id="section-48">2022.08.15 - 2022.08.18</h1>
<p>最近写日记确实越来越怠惰了，主要是感觉已经没有什么很特殊的事情给我留下印象了。</p>
<p>不过随着暑假即将结束，我越来越感受到我需要好好把下个学期过好，卷卷科研这样的决心。</p>
<p>嘛，要不这个暑假记录就到此结束吧，已经正在规划回北京的事情了。</p>
<p>这个暑假确实过得比较充实，做了不少事情，但也玩了不少，回头看看暑假开始前的暑期规划，基本上还是完成了七八成的。</p>
<p>那么，就这样结束吧，Holder 要开始他的大四生活了。</p>
]]></content>
      <categories>
        <category>【生活记录】假期日记</category>
      </categories>
  </entry>
  <entry>
    <title>2022 寒假生活记录</title>
    <url>/2022/11/28/2022-winter-record/</url>
    <content><![CDATA[<p>近期 Omicron 的大流行是没有收束的迹象了，政策的变动也一直没有消停，全国的抗议活动虽然有所消停但也此起彼伏。Holder 并不打算继续滞留在北京受罪了，想着回家不要隔离，虽然机厅一时半会还是去不了，但是毕竟家还是家。</p>
<p>这里顺便也会记一点疫情相关新闻，因为最近实在是变动太大了。</p>
<span id="more"></span>
<p>任务列表：</p>
<ul>
<li>实验室
<ul>
<li>强化学习相关基础</li>
<li>每周组会
<ul>
<li>目前需要通过熵确定模型收敛性</li>
<li>在 Data loader 内添加 trace collector</li>
<li>在 Puffer trace 上测试 Puffer model</li>
</ul></li>
</ul></li>
<li>课内
<ul>
<li>【12.18】日语期末口语视频</li>
<li>【每周】现代控制技术作业</li>
<li>【未定】现代控制技术期末考核</li>
</ul></li>
<li>THUInfo
<ul>
<li>THUInfo iOS CI</li>
<li>THUInfo beta 2.0 发布与 3.0.0 正式发布</li>
<li>培养方案 &amp; 选课功能</li>
</ul></li>
<li>科协
<ul>
<li>强化学习 &amp; 图形学技能引导文档</li>
</ul></li>
<li>课咨委
<ul>
<li>软工小作业文档 &amp; 软工小作业试题</li>
<li>调研小作业改革方案的问卷</li>
<li>一字班回访 &amp; 零字班访谈</li>
</ul></li>
<li>摸鱼
<ul>
<li>雀魂冲豪三（雀圣也可以考虑）</li>
<li>什么时候能打到 maimai</li>
</ul></li>
</ul>
<h1 id="section">2022.11.30</h1>
<p>到家的第二天，这次回家只做了落地核酸检测和签知情书，总体还是简化了很多。</p>
<p>今天打了一整天的牌，啥也没干，主要是刚到家真的不太想认真做事。但是直到今晚写了上面的任务列表，才发现真的好多事情，一定得开始做了，先从实验室开始做，然后课内之类的都得要做。</p>
<h2 id="新闻选录">新闻选录</h2>
<ul>
<li>江泽民去世</li>
<li>广州成为石家庄试点放开失败后的又一试点城市，取消全员核酸检测，取消封控
<ul>
<li>（未经证实）中山大学取消进出校限制，自由进出</li>
</ul></li>
<li>广州取消时空伴随者概念，密接不再考虑轨迹相交，仅考虑同住等关系</li>
<li>国务院联防联控机制发布会首次公布病毒毒性减弱，且并没有强调坚持动态清零</li>
<li>北京部分市辖区宣布密接可以居家隔离
<ul>
<li>（未经证实）北京传言后续可能调整为阳性亦居家隔离</li>
</ul></li>
<li>清华大学内部不再公布阳性学生轨迹，密接学生调整为宿舍隔离</li>
<li>国内抗议活动趋于平缓，抗议活动收集平台的公布信息中，今日仅有部分国外城市广场有声援国内抗议活动，国内仅有上海一小区因违规封禁出现抗议</li>
<li>维基百科收录系列抗议活动相关词条且词条目前受保护</li>
</ul>
<p>还有一个境外势力笑话。我昨天从北京南站回家，看到有不可辨识的外国记者采访清华学生一些问题。然后在我们动漫社的一个分群里有人问是不是真的有外国记者，我做了肯定的答复，然后这个分群群主去动漫社主群发布信息称注意不可辨识的外国记者。结果今天推特上看见了这则消息，称这是校方发布的。评论区全都是一边倒指责言论问题的。</p>
<h1 id="section-1">2022.12.01</h1>
<p>依然是无所事事的一整天，虽然理论上有很多事情要去做，但是最后还是仅仅做了一些没什么用的事情。</p>
<p>但实际上让我完全不想动的一个主要原因就是目前好多事情已经脱离这个环境了，重启需要一些再次熟悉的时间。比如说软工小作业，现在我继续接着后面写的话就需要重新理一遍我还有什么没写完，然而就这一步我已经不太想动了。</p>
<p>但总之继续做吧，明天还有组会，实验室的东西除了今天看出来多半是不收敛了之外，数据处理我目前还是没有把握，洗出来的 trace 千奇百怪，完全不能用。</p>
<hr />
<p>实验室的东西遇到了点瓶颈，主要是我无法从数据集里面得知什么时候一个 stream 截止。原先采用的方法是切换 channel 就认为 stream 切换，但是用这种方法收集到的数据比较怪异，经常出现时间戳突变（从 0 附近的值突变到七万多秒）。然后今晚我根据 Puffer 数据集的描述，改换为 session ID 变化则认为 stream 切换，结果发现洗出来几万条 trace。</p>
<p>其实这也是符合实际的，不少人去 Puffer player 上也不过就看几秒钟就不看了。然而这会导致 trace 的有效性下降，因为实在是太短了，没有采用的价值。</p>
<p>然而，这个问题似乎并不会影响到 Offline RL 本身，因为 Offline RL 只关注状态的切换，trace 很短并不会影响到状态切换本身。所以我打算用新数据跑一遍训练，顺便检查一下熵的收敛性，明天组会汇报点东西吧。</p>
<p>但是这个服务器也快被我摧残坏了，怎么现在洗数据这么慢。</p>
<h2 id="新闻选录-1">新闻选录</h2>
<ul>
<li>官媒发声承认病毒毒性呈指数递减</li>
</ul>
<p>今天没什么像昨天那样的大新闻，只是在舆论上慢慢看得出来疫情终究是要结束了。</p>
]]></content>
      <categories>
        <category>【生活记录】假期日记</category>
      </categories>
  </entry>
  <entry>
    <title>安卓前端开发杂谈</title>
    <url>/2021/09/01/android-dev-exp-1/</url>
    <content><![CDATA[<p>安卓的移动端开发，属实让我血压高了一小段时间。毕竟已经接触过类似于 React Native 那种基于 TypeScript 语言的、优秀的跨平台移动端框架，再去尝试用繁琐的 Java 语言写安卓前端自然是不适应且感到烦躁。</p>
<p>但是毕竟是 Java 程序设计训练课程，安卓前端开发作为其最大的特色，不得不消受。</p>
<span id="more"></span>
<h1 id="关于数据绑定">关于数据绑定</h1>
<p>如果要我说最大的不适应的地方，首先就是数据和图形界面的完全分离。在 React Native 框架之中，数据和图形界面的管理大概是这样的：</p>
<figure class="highlight typescript"><figcaption><span>TypeScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function">(<span class="params">props: AppProps</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// Set states &amp; initialize</span></span><br><span class="line">    <span class="keyword">const</span> [bar, setBar] = useState&lt;<span class="built_in">number</span>&gt;(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Some functions to update or rewrite data</span></span><br><span class="line">    <span class="keyword">const</span> update = <span class="function">() =&gt;</span> setBar(<span class="function">(<span class="params">o</span>) =&gt;</span> o + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Write UI with TSX, use data freely</span></span><br><span class="line">    <span class="keyword">return</span> (</span><br><span class="line">        <span class="xml"><span class="tag">&lt;<span class="name">View</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Text</span>&gt;</span> Hello world! <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Text</span>&gt;</span> &#123;`The val of bar is $&#123;bar&#125;`&#125; <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Text</span>&gt;</span> &#123;`Property foo is $&#123;props.foo&#125;`&#125; <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Button</span> <span class="attr">onClick</span>=<span class="string">&#123;update&#125;</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但是在安卓之中，图形界面完全定义在 <code>.xml</code> 文件之中，而且一定程度上其定义各个组件摆放方式的语法细节的繁杂程度不低于 HTML。而如果需要将数据载入图形界面，则首先要根据组件的 ID 获取组件，之后才能调用各种方法设定具体属性。</p>
<figure class="highlight java"><figcaption><span>Java</span></figcaption><table><tr><td class="code"><pre><span class="line">((TextView) view.findViewById(R.id.entity_name)).setText(data.name);</span><br></pre></td></tr></table></figure>
<p>这里出现的 <code>R</code> 类据说是相当厉害的。但是我第一次接触安卓的时候，这个符号给我带来的感觉就是不安，因为我再也不能像写 React Native 一样至少自认为自己掌握了程序之中的数据流。换一种说法，即使 React Native 可能做了很多背后工作，但它至少做到了让开发者在很多时候能直观引导数据流。</p>
<p>对于按钮等组件，React Native 框架下可以直接传入回调函数。而众所周知 Java 是纯净的面向对象语言，怎么会有 lambda 这种异端呢（新版本的 Java 已经离经叛道了！）。</p>
<p>所以你需要写监听器对象，重写其中的方法等等。</p>
<hr />
<p>并不是说这样不好，我还记得之前大一小学期的时候写 Qt 很多时候就是各种指针到处乱飞然后到处乱 <code>set</code> 这个那个的，最后一个 <code>draw</code> 函数里面上百行的，成块的各种格式设定、字体设定、内容设定、排列设定，然后这次写安卓让我回忆起了那一段黑暗时光。</p>
<h1 id="并不适应的适配器模式">并不适应的适配器模式</h1>
<p>如果只是想给一个 <code>TextView</code> 载入文字，直接几个 <code>set</code> 函数就结束了。但是给一个格式复杂的列表载入数据，则相当繁琐。比如说现在主流的 <code>RecyclerView</code>，其载入数据，就需要你自己编写一个数据适配器。</p>
<p>我首先是上网找轮子，随后想了一下，干脆自己包装了个简单的 <code>RecyclerViewAdapter</code> 先勉强用用。</p>
<p>将数据塞到图形界面上，最重要的三个东西是上下文、使用什么 <code>layout</code> 和数据本身，那么适配器的构造函数就需要接受这三项。然后就是平凡地重写 <code>RecyclerView.Adapter</code> 所要求的三个函数。不过这里我在重写 <code>onBindViewHolder</code> 的时候留了空，因为这里就是定义适配器最重要部分——数据如何映射到 UI 的函数。我将这一个函数设为虚函数，让子类继承重写就可以实现各种映射方式。最后的成果大致这样：</p>
<figure class="highlight java"><figcaption><span>Java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">RecyclerViewAdapter</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">RecyclerViewAdapter</span>.<span class="title">ViewHolder</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> Context mContext;</span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> mLayoutId;</span><br><span class="line">    <span class="keyword">protected</span> List&lt;T&gt; mData;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">RecyclerViewAdapter</span><span class="params">(Context context, <span class="keyword">int</span> layoutId, List&lt;T&gt; data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        <span class="keyword">this</span>.mLayoutId = layoutId;</span><br><span class="line">        <span class="keyword">this</span>.mData = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@NonNull</span> <span class="function">ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ViewHolder(</span><br><span class="line">                LayoutInflater.from(mContext).inflate(mLayoutId, parent, <span class="keyword">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="meta">@NonNull</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> What is this?</span></span><br><span class="line">        <span class="comment">// holder.updatePosition(position);</span></span><br><span class="line">        <span class="keyword">this</span>.convert(holder, mData.get(position));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">convert</span><span class="params">(ViewHolder holder, T data)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mData.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">private</span> View mConvertView;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ViewHolder</span><span class="params">(View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            <span class="keyword">this</span>.mConvertView = itemView;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> &lt;K extends View&gt; <span class="function">K <span class="title">getViewById</span><span class="params">(<span class="keyword">int</span> viewId)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (K) mConvertView.findViewById(viewId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>用起来也简单，传入三个要素，之后重写 <code>convert</code> 方法定义一下数据到 UI 的映射就好了：</p>
<figure class="highlight java"><figcaption><span>Java</span></figcaption><table><tr><td class="code"><pre><span class="line">binding.entityList.setAdapter(<span class="keyword">new</span> RecyclerViewAdapter&lt;Entity&gt;(</span><br><span class="line">    HomeFragment.<span class="keyword">this</span>.getActivity(), R.layout.home_entity_item, baseEntities</span><br><span class="line">) &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">convert</span><span class="params">(RecyclerViewAdapter.ViewHolder holder, Entity data)</span> </span>&#123;</span><br><span class="line">        ((TextView) holder.getViewById(R.id.entity_name)).setText(data.getLabel());</span><br><span class="line">        ((TextView) holder.getViewById(R.id.entity_category)).setText(data.getCategory());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>你会发现，这比 React Native 要写的东西多太多了。上面这么多需要折腾的，React Native 只需要这样写：</p>
<figure class="highlight typescript"><figcaption><span>TypeScript</span></figcaption><table><tr><td class="code"><pre><span class="line">&lt;View&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        baseEntities.map(<span class="function">(<span class="params">val, ind</span>) =&gt;</span> (</span><br><span class="line">            <span class="xml"><span class="tag">&lt;<span class="name">View</span> <span class="attr">key</span>=<span class="string">&#123;ind&#125;</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Text</span>&gt;</span> &#123;val.name&#125; <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;<span class="name">Text</span>&gt;</span> &#123;val.category&#125; <span class="tag">&lt;/<span class="name">Text</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">View</span>&gt;</span></span></span><br><span class="line">        ))</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/View&gt;</span><br></pre></td></tr></table></figure>
<p>就可以实现一个列表了。</p>
<p>Java 我写了一整个类，光数据转成 UI 也写了好几行长代码，这还没有算 <code>.xml</code> 文件。</p>
]]></content>
      <categories>
        <category>【杂谈】开发</category>
      </categories>
  </entry>
  <entry>
    <title>JS 文件本地化</title>
    <url>/2022/08/20/blog-js-localize/</url>
    <content><![CDATA[<p>自从 JSDelivr 半挂了之后就一直在为这些事情苦恼。</p>
<span id="more"></span>
<p>简而言之，一个静态站需要拉取一堆 JS、CSS 文件。而正常而言的 JS 文件完全可以从网络上当场获取，但是由于 JS CDN JSDelivr 半墙，我只能速速转战其他的 CDN，结果近日发现速度非常不理想，甚至仅仅是拉 jQuery 都花了 15 秒，这完全不能接受。</p>
<p><img src="/uploads/blog-js-localize/1.png" /></p>
<p>本来想尝试一下换其他的 CDN，但是怎么试都不算快。</p>
<p>还是暴力解决方法比较好，我直接把 jQuery 等一系列常用的东西的 min JS 打包放在了自己博客文件夹内，每次请求只不过是访问本地文件，太完美了。</p>
<p>虽然问题暂且是解决了，但是我还是觉得，为啥这些 CDN 会受限呢，真的和什么敏感领域有关吗。</p>
]]></content>
      <categories>
        <category>【杂谈】开发</category>
      </categories>
  </entry>
  <entry>
    <title>新冠三年 Holder timeline 与近期的想法</title>
    <url>/2022/11/27/covid-19-record/</url>
    <content><![CDATA[<p>近期随着二十条优化政策的公布，各地的防疫政策出现了不小程度的震动。而 2022 年 11 月 24 日乌鲁木齐火灾后，针对当前国内防疫政策的，无论是颂扬、抗议、争论，正在愈演愈烈也似乎并没有消停的迹象。</p>
<p>2022 年 11 月 27 日，清华大学紫荆园前，学生自发组织了一次抗议活动，最终达成了学校举办防疫政策座谈会与不追究参与本次活动学生责任的共识。</p>
<p>也是 2022 年 11 月 27 日，因为泰州市姜堰区出现了个位数的阳性病例，我的高中，江苏省姜堰中学采取了封校措施，高三毕业生不得不睡在教室里，据说至少三天。</p>
<p>说实话，Holder 自疫情以来，除了 2020 年最初的一两个月和 2021 年底寒假返乡时的作秀隔离外，并没有遭受过任何封禁、管制措施。</p>
<p>近期，毕竟一切都不太平，身边的一些同学也义愤填膺，虽然 Holder 发誓不再键政，但是近期还是把很多思绪说出来吧。也作为近期 Holder 观点的记录，或许之后看就不这样觉得了。</p>
<span id="more"></span>
<h1 id="今年才开始的魔幻现实">今年才开始的魔幻现实</h1>
<p>从 Holder 的个人体验出发，疫情在 2020 年和 2021 年并没有对我造成很大的影响，而从 2022 年 3 月左右上海爆发了第一波超越预期的 Omicron 变异株疫情后，一切都变了。</p>
<p>2020 年年初，疫情原始毒株高位流行，极高的致死率确实让全国人民都自觉采取了各种防护措施。春节期间，口罩等防护用品脱销，国内疫情的源头武汉封锁。然而这一切并没有持续很久，七八十天后，大约是 2020 年 5 月，大家都近似恢复到了疫情前的生活。2020 年的暑假，我毫无压力地前往了成都、重庆、无锡、上海、南京，旅游并没有遭遇到任何的阻碍。</p>
<p>2020 年 8 月，我决定返校，当时返校政策仅仅是提供一次核酸阴性证明即可。2020 年 9 月，临时进出校政策改为报备制（相当于自由进出校），但是离京依然是审批制。</p>
<p>2020 年 12 月，随着冬季到来，疫情再次回升，清华大学临时进出校政策重新回到审批制，并且强制要求第二天的出校申请需要在前一天的 15 点前提交。此时进出校申请只需要提供目的、必要性说明等，不需要提供任何其他资料。2021 年 2 月，进出校申请严格化，仅允许教学、就医等缘由出校。</p>
<p>Holder 在这一段时间恰好是大二的上学期，课业压力极大，进出校的需求并不强，这一段时间实际上并没有感受到异常。而且，当时流行的毒株致死率虽然下降，但民众依然严格防护，且恰好国外开始出现大规模流行，在这种比照之下，即使政策严格，也没有出现过多的反对声。</p>
<p>2021 年 3 月，进出校重新改为报备制，但是离京依然采用审批制。此时入境采用相当严格的 14 + 7 + 7 政策。</p>
<p>这段时间，Holder 经常出校游玩，甚至未经审批前往了两次上海。按当时的经历，当时的省际旅行并不需要提供任何核酸检测报告，与疫情前一致，只需要购票并前往即可。而 2021 年的暑假，Holder 又一次前往了上海，同时也因为上海疫情复发和家里人起过矛盾。但总之，当时整体的社会风向虽然有反对长时间停留在疫情状态的声音，但大部分人依然支持着管控，毕竟实际上和以前也仅仅是多了一点零星的核酸检测要求，事业单位等对跨省旅行收紧，其余并没有变化。</p>
<p>2021 年 7 月，进出校又一次回到了严格的审批制，而 2021 年 9 月，又回到了报备制。就这样一直推进到了 2022 年 4 月。</p>
<p>2022 年 4 月，上海爆发了 Omicron 大流行。由于防控 Delta 毒株而采用的低中高风险区划制度就此破防，从此开启了高风险地区随意扩大，封控随意扩大的时代。在这样的背景下，上海的感染人数爆发到了每日新增千例，而上海也罕见地从 4 月封城到了 6 月。</p>
<p>这一突变也波及到了北京。2022 年 4 月，清华大学进出校政策变回了审批制，并且是相当严格的院系审批。当时，由于 Sakana 在上海被封闭，不断提醒我早点准备物资，我也确实听了，所以瞬间封校的时候还能有得吃。</p>
<p>之后的事情，就得很细节地记录了。下面是我一位同学记录的：</p>
<ul>
<li>2022.04.28，进出校恢复人工审批</li>
<li>2022.05.06，清华大学南部家属区和北部教学区之间建起铁皮墙，所有课程强制线上</li>
<li>2022.05.13，清华大学校医院区分服务师生</li>
<li>2022.05.14，禁止外卖入校</li>
<li>2022.05.16，进出校均需要刷卡，该政策也消灭了校外过夜的可能</li>
<li>2022.05.22，禁止食堂堂食</li>
<li>2022.05.25，在北师大、北理工的抗议之下，开放食堂堂食，并且允许课程以 PF 记载，允许退课，并且强制两天一检</li>
<li>2022.05.27，允许学生提前返乡</li>
<li>2022.06.06，恢复外卖入校，但是仅能送到校门而非宿舍楼下</li>
<li>2022.06.12，两天一检放松到三天一检</li>
<li>2022.06.13，人工审批对就医原因特殊处理，允许就医出校</li>
<li>2022.06.27，取消出校刷卡，额外允许科研原因出校</li>
<li>2022.07.01，进出校恢复自动审批</li>
</ul>
<p>在这样的一波折磨之下，我在 2022 年 5 月 29 日决定返乡，当时泰州市整体并没有受到 Omicron 大流行的影响。</p>
<p>另一方面，北京在经历了 4 月的政策后，将公共场所查验 72 小时核酸作为基本政策稳定下来，从此核酸检测彻底常态化。而随着 Omicron 的流行，全国各个城市也渐渐常态化核酸检测，跨省旅行开始查验核酸报告，并开始推行落地检等各项检测政策。</p>
<p>而在这个时候，要求疫情放开的声音越来越强，虽然没有演化到成体系的地步。</p>
<p>2022 年 10 月，是中国共产党第二十次全国代表大会举办的时间，按照政治实践的习惯，2022 年 9 月起，各地均加强了舆论控制，只不过这一次，也一并加强了疫情防控。</p>
<p>然而一切急转直下，是要从二十大闭幕后开始：</p>
<ul>
<li>2022.11.10，进出校中除了课业、就医、科研、实习四大原因，恢复人工审批</li>
<li>2022.11.14，三天一检收紧为两天一检</li>
<li>2022.11.21，所有课程推荐线上进行，两天一检收紧为一天一检，所有出校原因均需要人工审批</li>
</ul>
<p>这是清华的一角，但是更大的风暴正在酝酿。2022 年 11 月 11 日，国务院发布优化防疫政策二十条，取消中风险区判定，高风险区原则上仅能以楼栋为单位划定，取消次密接判定，入境政策和密接政策从 7 + 3 调整为 5 + 3。而随后几天，石家庄市宣布取消全员核酸检测，取消地铁、公交等对核酸报告的查验。然而 20 日左右，石家庄市重新宣布全员核酸检测并控制流动。</p>
<p>随后，北京疫情终于爆发，一直到本文写作的 2022 年 11 月 27 日，北京依然保持着每日千例的上涨速度，清华大学内部也出现过五次核酸检测混管异常，出现过两次阳性病例。然而由于“二十条”，封楼取代了封小区，部分区域控制取代了全行政区控制，这类封控并没能控制住病毒传播。</p>
<p>事实上，民众对防控政策的反对声浪自从 4 月开始积攒，在 2022 年 9 月 18 日贵州转运车侧翻与郑州富士康事件经历了几次不痛不痒的爆发后，直到 2022 年 11 月 24 日的乌鲁木齐火灾和两天后批判部分民众自救能力弱的新闻发布会后，这一切再也没能控制住。</p>
<h1 id="在我眼中的防控政策逻辑">在我眼中的防控政策逻辑</h1>
<p>我一直秉持着<strong>中国政府的重要逻辑是保证政策一贯性</strong>的观点，这或许是苏共二十大赫鲁晓夫全盘反对斯大林对中共高层的震慑。所以，<strong>中国政府要改变任何一项大政策，都需要一个重要的契机，无论是发生了引起群众反抗的恶性事件或者是重大会议</strong>。</p>
<p>2020 年到 2021 年，由于病毒致死率严格高，中国政府采用了极其严格的入境控制措施，至少是 14 + 7，包括对国内的严格控制。然而这一切随着 Omicron 这类致死率微弱高但是传播率极高的变异株的到临，这类政策的可持续性显然值得提问，而今年 4 月上海的经验也说明了这一点。</p>
<p>在选择政策转变的节点上，二十大被寄予了厚望。在今年 6 月，国内部分金融业内人士（我通过在量化公司实习的同学了解）传闻二十大后会有调整。二十大后，二十条发布，石家庄试点，这一切都昭示着政府正在尝试调整防控政策。</p>
<p>然而，现在是骑虎难下。</p>
<p>做一个比方，原先国内的围追堵截病例并送入方舱的防控措施仿佛筑大坝，拦截住洪水然后用抽水机抽出这些洪水。然而 Omicron 的高传染力显然不能再堵，但是此时贸然打开大坝只能引发大洪水，也就是此时贸然放开必然导致大爆发，这也是石家庄试点所提供的经验。</p>
<p>中国政府在改革开放以来通过促进国内经济高速发展，在国内树立了绝对正确的权威。2020 年中国政府对原始毒株的强有力防控更是让其声望上升到了无法想象的高度。</p>
<p>然而此时如果既要维护政府的绝对正确的权威，又要缓慢改变原先的政策，显然已经是不可能的。维护权威的条件下，政策的推演必然不可能迅速，仅能够通过不断打补丁做政策转向，但是 Omicron 每拖一天，就会增长数以万计的病例。</p>
<h2 id="我为什么认为石家庄是试点">我为什么认为石家庄是试点</h2>
<p>这也只是我的主观猜测，我做出这样的断定仅仅是石家庄在再次收紧后，即使国务院下发了指责石家庄市政府错误解读“二十条”的文件后，并没有任何石家庄市政府人员因此担责。</p>
<h1 id="are-you-ready-for-the-first-impact">Are you ready for the first impact?</h1>
<p>按照目前的态势，我们势必要遭遇第一次疫情的冲击。</p>
<p>由于“二十条”等措施，加上目前此起彼伏的群众抗争（目前包括北京、上海、成都、重庆、武汉、长沙、乌鲁木齐、兰州、广州等），就目前北京的情况而言，由于大部分将封楼扩大为封小区的街道均受到了群众冲击以及 27 日晚的亮马桥游行抗议活动，目前即使疫情仍然处于高位，北京市政府依然在 27 日放出了禁止硬质隔离、封控原则不超过 24 小时等要求。</p>
<p>另外，在 26 日晚上海乌鲁木齐中路的聚集活动中，现场视频可以发现仅仅是为乌鲁木齐火灾遇难同胞默哀，并没有引起任何的对抗，提出对防疫政策的反对意见也并没有引起过分的对抗，警察在场也主要为了维持秩序，直到现场出现了“共产党下台”等相关口号，才出现了较为剧烈的对抗。</p>
<p>包括近期由苏联政治笑话衍生出的举白纸抗议活动，也大多数没有引起暴力事件。</p>
<p>基于这些事件，我主观猜测，<strong>群众的主要诉求是恢复正常生产生活秩序，而政府则暂且默许了这些诉求</strong>。</p>
<p>而正是因为政府没能够在事态发展到如此地步之前成功安抚民众情绪，这些事件才爆发，但也正是因为政府也有相关放松防控的计划，才不去过分控制这些活动。那么，放开的结局，终究正在慢慢接近。</p>
<p>然而在真正的那一天来临前，我们已经处于病例数猛增的冲击之中了，因此造成的医疗资源挤兑将会是后续我们将要面临的，这也是所谓的 impact 的一层含义。</p>
<p>我曾经和我家里人说，只要广州方舱保洁员的工资依然能够开到两万块一个月，就说明民众对这个病毒的恐惧还没有完全消除。在政府成功将他之前渲染的疾病严重性从民众心中抹除前，病毒已经肆虐了。</p>
<p>再往下说，中国政府在今年这一系列事件中的失信，民众对政府对执政党的信任下降，将会是 impact 的另外一层含义。中国政府的政治思路有一点是<strong>家长式政府</strong>，优点是集中、高效，缺点也是明显的，即民众丧失信任后，很难让这一套系统再次流畅运行。</p>
<p>在 2022 年的年底，我们必须要准备好大坝决堤，这一切的冲击，终究要落到我们每个人头上。尽量在这段时间做好防护，免得在这段时间还需要去争抢医疗资源。另外，尽量保持对生活的信心。</p>
<h1 id="抗议活动的未来">抗议活动的未来</h1>
<p>目前各地的抗议活动仍然没有消停的趋势，但是随着国家暴力机关的介入，也正在得到控制。</p>
<p>近期大有人在渲染这类抗议活动和六四事件的相似性，但我认为不太可能发展到六四事件的水平。毕竟，<strong>目前这类活动的主要矛盾依然是国内生产秩序的恢复和当下严格的防控措施之间的矛盾</strong>，简单而言，就是有人没饭吃了。然而，要解决这一问题相对而言是简单的，至少相对于六四事件而言。解决当前的矛盾可能会损伤一些医药企业的利益，但是解决六四事件中的矛盾，可能就需要震动整个中共高层。</p>
<p>实际上，如果这一矛盾得到解决，而抗议活动依然在持续追问言论自由的问题，我猜测部分中年人也会加入到反对抗议活动的队伍中来，毕竟要是一个地方还在抗议，生意就不好做，钱就不好赚。那些中年人早就适应了在六四事件后的中国生活下去的技巧，对于破坏他们舒适圈的行为，他们也会来反抗。</p>
<h1 id="清华大学紫荆园抗议">11.27 清华大学紫荆园抗议</h1>
<p>这是发生在我身边的抗议事件，当天中午从部分学生在紫荆园入口处手举白纸抗议开始，到引来大量附和同学，到校学生处过勇老师到场与学生沟通，一共历经约四个小时，期间没有任何肢体冲突。</p>
<p>事实上，我的态度几乎是一句话可以概括的，即<strong>勇气可嘉，下回别这么干了</strong>。</p>
<p>愿意去与政策抗争的人，我都愿意称之为有勇气的人，相对于我这类更愿意去适应环境的人，他们更具有魄力。但是，我所不能接受的有几点：</p>
<ul>
<li>要抗议，竟然只是举白纸</li>
<li>要抗议，竟然没有明确诉求</li>
</ul>
<p>我感叹 2013 年以来的文化政策让我们的抗议竟是如此苍白，我也感叹清华大学的学生也仅仅在表达情绪而非表达诉求，无论是他们无法表达诉求还是什么其他缘由。</p>
<p>而当学生处老师到场处理，询问学生意见的时候，出现了两种情况：</p>
<ul>
<li>没有明确的诉求</li>
<li>激烈抒发对言论自由、疫情防控等学校无法处置的事情的情感</li>
</ul>
<p>这显然是不现实的。</p>
<p>不过老师的处理也是一种典范，充分与学生共情，主动提议一分钟默哀和唱国歌与国际歌，接受优化防控政策座谈会的安排。</p>
<p>总而言之，我对本次抗议双方都能表示理解，都能表示认同，因为他们完全是在讨论一个超出所有人能力范围的矛盾。</p>
<h2 id="一些乱象">一些乱象</h2>
<p>据传本次抗议的时候出现了部分男性谈论抗议女性外貌，以保研开玩笑等一些娱乐化本次活动的现象。</p>
<p>不过也确实，清华大学的学生的政治生活素质也并没有高到哪里去。</p>
<h1 id="所以说">所以说</h1>
<p>大坝已经开裂了，做好三年未有的大冲击的准备。</p>
<p>不过我整体还是对未来保持乐观的，因为政府终究是在逐渐调整到符合科学的政策上。我理解并尊重那些义愤填膺的同学，但是我并不想做那样的人，我不想每天都沉浸在思考这些矛盾的悲观内耗之中，我有我自己的生活。</p>
<p>保护好自己，我们春天再见。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年江苏高考数学（新高考全国 I）试卷</title>
    <url>/2022/06/07/enroll-jsgk-2022/</url>
    <content><![CDATA[<p>听很多人说这份卷子十分难，于是打算简单做一下吧。</p>
<span id="more"></span>
<h1 id="单项选择题">单项选择题</h1>
<p>单项选择一共 8 条，一条 5 分，一共是 40 分。错一条的代价实在是太大了，所以还是小心为好。</p>
<p>我给出的答案为 (D)(D)(B)(C)(D)(A)(C)(C)。</p>
<h2 id="problem-1">Problem 1</h2>
<p>如果集合 <span class="math inline">\(M = \{x: \sqrt x &lt; 4\}, N = \{x: 3x \geq 1\}\)</span>，求集合 <span class="math inline">\(M \cap N\)</span>。</p>
<ol type="A">
<li><span class="math inline">\(\{x: 0\leq x &lt; 2\}\)</span></li>
<li><span class="math inline">\(\left\{x: \dfrac13 \leq x &lt; 2\right\}\)</span></li>
<li><span class="math inline">\(\{x: 3 \leq x &lt; 16\}\)</span></li>
<li><span class="math inline">\(\left\{x: \dfrac13 \leq x &lt; 16\right\}\)</span></li>
</ol>
<hr />
<p>显然 <span class="math inline">\(M = (0, 16), N = \left[\dfrac13, +\infty\right)\)</span>，答案为 (D)。</p>
<h2 id="problem-2">Problem 2</h2>
<p>如果 <span class="math inline">\(\mathop{\rm i}(1 - z) = 1\)</span>，求 <span class="math inline">\(z + \overline z\)</span> 的值。</p>
<ol type="A">
<li><span class="math inline">\(-2\)</span></li>
<li><span class="math inline">\(-1\)</span></li>
<li><span class="math inline">\(1\)</span></li>
<li><span class="math inline">\(2\)</span></li>
</ol>
<hr />
<p>假设 <span class="math inline">\(z := a + b\mathop{\rm i}(a, b \in \mathbb R)\)</span>，那么：</p>
<p><span class="math display">\[
1 = \mathop{\rm i}(1 - z) = \mathop{\rm i}((1 - a) - b\mathop{\rm i}) = b + (1 - a)\mathop{\rm i}
\]</span></p>
<p>得到 <span class="math inline">\(z = 1 + \mathop{\rm i}\)</span>，所以 <span class="math inline">\(z + \overline z = 2\Re(z) = 2\)</span>，答案为 (D)。</p>
<h2 id="problem-3">Problem 3</h2>
<p>在 <span class="math inline">\(\triangle ABC\)</span> 中，点 <span class="math inline">\(D\)</span> 在边 <span class="math inline">\(AB\)</span> 上，<span class="math inline">\(BD = 2DA\)</span>，记 <span class="math inline">\(\vec{CA} = \boldsymbol{m}, \vec{CD} = \boldsymbol{n}\)</span>，那么：</p>
<ol type="A">
<li><span class="math inline">\(\vec{CB} = 3\boldsymbol{m} - 2\boldsymbol{n}\)</span></li>
<li><span class="math inline">\(\vec{CB} = -2\boldsymbol{m} + 3\boldsymbol{n}\)</span></li>
<li><span class="math inline">\(\vec{CB} = 3\boldsymbol{m} + 2\boldsymbol{n}\)</span></li>
<li><span class="math inline">\(\vec{CB} = 2\boldsymbol{m} + 3\boldsymbol{n}\)</span></li>
</ol>
<hr />
<p>显然有 <span class="math inline">\(\boldsymbol{n} = \vec{CD} = \vec{CB} + \vec{BD}\)</span>，也就是说 <span class="math inline">\(\vec{BD} = \boldsymbol{n} - \vec{CB}\)</span>。</p>
<p>同理我们还能得到 <span class="math inline">\(\vec{AD} = \vec{CD} - \vec{CA} = \boldsymbol{n} - \boldsymbol{m}\)</span>。</p>
<p>根据 <span class="math inline">\(2\vec{AD} + \vec{BD} = \boldsymbol{0}\)</span> 得到：</p>
<p><span class="math display">\[
\boldsymbol{n} - \vec{CB} + 2(\boldsymbol{n} - \boldsymbol{m}) = \boldsymbol{0}
\]</span></p>
<p>也就是：</p>
<p><span class="math display">\[
\vec{CB} = -2\boldsymbol{m} + 3\boldsymbol{n}
\]</span></p>
<p>答案为 (B)。</p>
<h2 id="problem-4">Problem 4</h2>
<p>一道应用题。大意为，一个棱台水库，水位为海拔 <span class="math inline">\(148.5\)</span> 米的时候，水面面积为 <span class="math inline">\(140.0\)</span> 平方千米。水位为海拔 <span class="math inline">\(157.5\)</span> 米的时候，水面面积为 <span class="math inline">\(180.0\)</span> 平方千米。求解水库水位从 <span class="math inline">\(148.5\)</span> 米上升到 <span class="math inline">\(157.5\)</span> 米时增加的水量。</p>
<ol type="A">
<li><span class="math inline">\(1.0 \times 10^9\)</span> 立方米</li>
<li><span class="math inline">\(1.2 \times 10^9\)</span> 立方米</li>
<li><span class="math inline">\(1.4 \times 10^9\)</span> 立方米</li>
<li><span class="math inline">\(1.6 \times 10^9\)</span> 立方米</li>
</ol>
<hr />
<p>简单的棱台体积计算题，注意单位换算：</p>
<p><span class="math display">\[
\begin{aligned}
V &amp;= \frac13 h(S_1 + S_2 + \sqrt{S_1S_2}) \\
&amp;= \frac13 \times (157.5 - 148.5) \times(140 + 180 + \sqrt{140 \times 180}) \times 10^6 \\
&amp;= 6(3\sqrt 7 + 16) \times 10^7 \\
&amp;\approx 1.4 \times 10^9 ({\rm m}^3)
\end{aligned}
\]</span></p>
<p>答案为 (C)。</p>
<h2 id="problem-5">Problem 5</h2>
<p>从 <span class="math inline">\(2\)</span> 到 <span class="math inline">\(8\)</span> 总共 <span class="math inline">\(7\)</span> 个整数中随机取两个不同的数，求两数互质的概率。</p>
<ol type="A">
<li><span class="math inline">\(1/6\)</span></li>
<li><span class="math inline">\(1/3\)</span></li>
<li><span class="math inline">\(1/2\)</span></li>
<li><span class="math inline">\(2/3\)</span></li>
</ol>
<hr />
<p>互质的整数对包括：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(2, 3), (2, 5), (2, 7) \\
&amp;(3, 4), (3, 5), (3, 7), (3, 8) \\
&amp;(4, 5), (4, 7) \\
&amp;(5, 6), (5, 7), (5, 8) \\
&amp;(6, 7) \\
&amp;(7, 8) \\
\end{aligned}
\]</span></p>
<p>所以概率为：</p>
<p><span class="math display">\[
p = \frac{14}{C_7^6} = \frac23
\]</span></p>
<p>答案为 (D)。</p>
<h2 id="problem-6">Problem 6</h2>
<p>函数 <span class="math inline">\(f(x) = \sin\left(\omega x + \dfrac\pi 4\right) + b(\omega &gt; 0)\)</span> 的最小正周期为 <span class="math inline">\(T\)</span>，如果 <span class="math inline">\(\dfrac{2\pi}{3} &lt; T &lt; \pi\)</span>，而且曲线 <span class="math inline">\(y = f(x)\)</span> 关于点 <span class="math inline">\(\left(\dfrac{3\pi}{2}, 2\right)\)</span> 对称，求 <span class="math inline">\(f\left(\dfrac\pi 2\right)\)</span> 的值。</p>
<ol type="A">
<li><span class="math inline">\(1\)</span></li>
<li><span class="math inline">\(3/2\)</span></li>
<li><span class="math inline">\(5/2\)</span></li>
<li><span class="math inline">\(3\)</span></li>
</ol>
<hr />
<p>根据曲线 <span class="math inline">\(y = f(x)\)</span> 关于点 <span class="math inline">\(\left(\dfrac{3\pi}{2}, 2\right)\)</span> 对称，能得到 <span class="math inline">\(f\left(\dfrac{3\pi}{2}\right) = 2\)</span>，以及 <span class="math inline">\(b = 0\)</span>，也就是说：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\sin\left(\omega \dfrac{3\pi}{2} + \dfrac\pi 4\right) = 0 \\
\Rightarrow &amp;\omega \dfrac{3\pi}{2} + \dfrac\pi 4 = k\pi \\
\Rightarrow &amp;\omega = \frac23\left(k - \frac14\right), k \in \mathbb Z
\end{aligned}
\]</span></p>
<p>根据最小正周期的范围，得到：</p>
<p><span class="math display">\[
T = \frac{2\pi}{\omega} \in \left(\dfrac{2\pi}{3}, \pi\right) \Rightarrow \omega \in (2, 3)
\]</span></p>
<p>进而得知 <span class="math inline">\(k = 4\)</span>，也就是说 <span class="math inline">\(\omega = \dfrac52\)</span>，那么：</p>
<p><span class="math display">\[
f\left(\dfrac\pi 2\right) = \sin\left(\dfrac52 \cdot \dfrac{\pi}{2} + \dfrac\pi 4\right) + 2 = 1
\]</span></p>
<p>答案为 (A)。</p>
<h2 id="problem-7">Problem 7</h2>
<p>已知 <span class="math inline">\(a = 0.1e^{0.1}, b = \dfrac19, c = -\ln 0.9\)</span>，则：</p>
<ol type="A">
<li><span class="math inline">\(a &lt; b &lt; c\)</span></li>
<li><span class="math inline">\(c &lt; b &lt; a\)</span></li>
<li><span class="math inline">\(c &lt; a &lt; b\)</span></li>
<li><span class="math inline">\(a &lt; c &lt; b\)</span></li>
</ol>
<hr />
<p>考虑函数 <span class="math inline">\(f(x) = xe^x + \ln(1 - x), x \geq 0\)</span>，有：</p>
<p><span class="math display">\[
f&#39;(x) = (x + 1)e^x - \frac{1}{1 - x} &gt; (x + 1)^2 - \frac{1}{1 - x} = -\frac{x(x^2 + x - 1)}{1 - x}
\]</span></p>
<p>导函数保证了函数至少在区间 <span class="math inline">\(\left(0, \dfrac{-1 + \sqrt5}{2}\right)\)</span> 上递增，而 <span class="math inline">\(\dfrac1{10}\)</span> 属于这个区间，所以：</p>
<p><span class="math display">\[
f(0.1) = 0.1e^{0.1} - \ln\frac{10}{9} &gt; f(0) = 0
\]</span></p>
<p>所以 <span class="math inline">\(a &gt; c\)</span>。</p>
<p>再考虑函数 <span class="math inline">\(g(x) = \ln(1 + x) - \dfrac{x}{1 + x}, x \geq 0\)</span>，有：</p>
<p><span class="math display">\[
g&#39;(x) = \frac{1}{1 + x} - \frac{1}{(1 + x)^2} = \frac{x}{(1 + x)^2} &gt; 0
\]</span></p>
<p>从而：</p>
<p><span class="math display">\[
g\left(\frac19\right) = \ln\frac{10}{9} - \frac{1}{10} &gt; 0
\]</span></p>
<p>这说明：</p>
<p><span class="math display">\[
\ln\frac{10}{9} &gt; \frac{1}{10} \Rightarrow \frac{10}{9} &gt; e^{0.1} \Rightarrow \frac{1}{9} &gt; 0.1e^{0.1}
\]</span></p>
<p>也就是 <span class="math inline">\(b &gt; a\)</span>，从而答案为 (C)。</p>
<h2 id="problem-8">Problem 8</h2>
<p>已知正四棱锥的侧棱长为 <span class="math inline">\(l\)</span>，其各顶点都在同一个球面上，若该球体积为 <span class="math inline">\(36\pi\)</span>，且 <span class="math inline">\(3\leq l\leq 3\sqrt 3\)</span>，求该正四棱锥体积的取值范围。</p>
<ol type="A">
<li><span class="math inline">\(\left[18, \dfrac{81}{4}\right]\)</span></li>
<li><span class="math inline">\(\left[\dfrac{27}{4}, \dfrac{81}{4}\right]\)</span></li>
<li><span class="math inline">\(\left[\dfrac{27}{4}, \dfrac{64}{3}\right]\)</span></li>
<li><span class="math inline">\(\left[18, 27\right]\)</span></li>
</ol>
<hr />
<p>假设球的半径为 <span class="math inline">\(R\)</span>，显然有 <span class="math inline">\(V = \dfrac43\pi R^3 = 36\pi\)</span>，得到 <span class="math inline">\(R = 3\)</span>。</p>
<p>假设正四棱锥 <span class="math inline">\(O-ABCD\)</span> 底面中心为 <span class="math inline">\(P\)</span>，其外接球球心为 <span class="math inline">\(Q\)</span>。显然我们得到一个直角三角形 <span class="math inline">\(OPA\)</span>，而球心 <span class="math inline">\(Q\)</span> 在直线 <span class="math inline">\(PO\)</span> 上。令有向线段 <span class="math inline">\(QO\)</span> 长度为 <span class="math inline">\(3\)</span>，记有向线段 <span class="math inline">\(QP\)</span> 长度为 <span class="math inline">\(x \in (-3, 3)\)</span>。显然：</p>
<p><span class="math display">\[
\begin{aligned}
l^2 &amp;= OA^2 = PO^2 + PA^2 \\
&amp;= (QO - QP)^2 + (QA^2 - QP^2) \\
&amp;= (3 - x)^2 + (9 - x^2) \\
&amp;= 18 - 6x \in [9, 27]
\end{aligned}
\]</span></p>
<p>也就得到了 <span class="math inline">\(x \in \left[-\dfrac32, \dfrac32\right]\)</span>。从而：</p>
<p><span class="math display">\[
V_{O-ABCD} = \frac13 |PO| \cdot 2PA^2 = \frac23(3 - x)(9 - x^2)
\]</span></p>
<p>不难得到函数 <span class="math inline">\(f(x) = \dfrac23(3 - x)(9 - x^2)\)</span> 在区间 <span class="math inline">\(\left[-\dfrac32, -1\right]\)</span> 上递增，在区间 <span class="math inline">\(\left[-1, \dfrac32\right]\)</span> 上递减，计算得到：</p>
<p><span class="math display">\[
f\left(-\dfrac32\right) = \frac{81}{4}, f\left(\dfrac32\right) = \frac{27}{4}, f(-1) = \frac{64}{3}
\]</span></p>
<p>体积的取值范围应当为 <span class="math inline">\(\left[\dfrac{27}{4}, \dfrac{64}{3}\right]\)</span>，答案为 (C)。</p>
<h1 id="不定项选择题">不定项选择题</h1>
<p>不定项选择一共 4 条，一条 5 分，一共是 20 分。</p>
<p>我给出的答案为 (ABD)(AC)(BCD)(BC)。</p>
<h2 id="problem-9">Problem 9</h2>
<p>对于正方体 <span class="math inline">\(ABCD-A_1B_1C_1D_1\)</span>，下列说法中正确的有：</p>
<ol type="A">
<li>直线 <span class="math inline">\(BC_1\)</span> 与 <span class="math inline">\(DA_1\)</span> 所成的角为直角</li>
<li>直线 <span class="math inline">\(BC_1\)</span> 与 <span class="math inline">\(CA_1\)</span> 所成的角为直角</li>
<li>直线 <span class="math inline">\(BC_1\)</span> 与平面 <span class="math inline">\(BB_1D_1D\)</span> 所成的角为 <span class="math inline">\(45^\circ\)</span></li>
<li>直线 <span class="math inline">\(BC_1\)</span> 与平面 <span class="math inline">\(ABCD\)</span> 所成的角为 <span class="math inline">\(45^\circ\)</span></li>
</ol>
<hr />
<p>根据直线 <span class="math inline">\(BC_1\)</span> 垂直于平面 <span class="math inline">\(A_1B_1CD\)</span> 就能得到 (A)(B) 均正确。</p>
<p>对于 (C)，显然有直线 <span class="math inline">\(A_1C_1\)</span> 垂直于平面 <span class="math inline">\(BB_1D_1D\)</span>，而 <span class="math inline">\(\angle A_1C_1B = 60^\circ\)</span>，该选项叙述错误。</p>
<p>对于 (D)，显然有直线 <span class="math inline">\(CC_1\)</span> 垂直于平面 <span class="math inline">\(ABCD\)</span>，而 <span class="math inline">\(\angle CC_1B = 45^\circ\)</span>，该选项叙述正确。</p>
<p>所以答案为 (ABD)。</p>
<h2 id="problem-10">Problem 10</h2>
<p>已知函数 <span class="math inline">\(f(x) = x^3 - x + 1\)</span>，下列说法中正确的有：</p>
<ol type="A">
<li><span class="math inline">\(f(x)\)</span> 有两个极值点</li>
<li><span class="math inline">\(f(x)\)</span> 有三个零点</li>
<li>点 <span class="math inline">\((0, 1)\)</span> 为曲线 <span class="math inline">\(y = f(x)\)</span> 的对称中心</li>
<li>直线 <span class="math inline">\(y = 2x\)</span> 为曲线 <span class="math inline">\(y = f(x)\)</span> 的切线</li>
</ol>
<hr />
<p>首先：</p>
<p><span class="math display">\[
f&#39;(x) = 3x^2 - 1
\]</span></p>
<p>得到 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\(\left(-\infty, -\dfrac{\sqrt 3}{3}\right)\)</span> 上递增，在 <span class="math inline">\(\left(-\dfrac{\sqrt 3}{3}, \dfrac{\sqrt 3}{3}\right)\)</span> 上递减，在 <span class="math inline">\(\left(\dfrac{\sqrt 3}{3}, +\infty\right)\)</span> 上递增。</p>
<p>并且计算出：</p>
<p><span class="math display">\[
\begin{aligned}
f\left(-\frac{\sqrt3}{3}\right) &amp;= \frac{2\sqrt 3}{9} + 1 &gt; 0 \\
f\left(\frac{\sqrt3}{3}\right) &amp;= -\frac{2\sqrt 3}{9} + 1 &gt; 0 \\
\end{aligned}
\]</span></p>
<p>所以 <span class="math inline">\(f(x)\)</span> 有两个极值点，一个零点，选项 (A) 正确，选项 (B) 错误。</p>
<p>进一步，我们我们有：</p>
<p><span class="math display">\[
f(x) + f(-x) = (x^3 - x + 1) + (-x^3 + x + 1) = 2, x \in \mathbb R
\]</span></p>
<p>这说明选项 (C) 正确。</p>
<p>如果选项 (D) 正确，假设其为 <span class="math inline">\(x = x_0\)</span> 处的切线，根据 <span class="math inline">\(f&#39;(x_0) = 3x_0^2 - 1 = 2\)</span> 得到 <span class="math inline">\(x_0 = \pm 1\)</span>。</p>
<p>此外，我们知道曲线 <span class="math inline">\(y = f(x)\)</span> 在 <span class="math inline">\(x = x_0\)</span> 处切线方程为：</p>
<p><span class="math display">\[
y = f&#39;(x_0)(x - x_0) + f(x_0) = f&#39;(x_0)x - x_0f&#39;(x_0) + f(x_0) = 2x
\]</span></p>
<p>那么我们得到：</p>
<p><span class="math display">\[
-x_0f&#39;(x_0) + f(x_0) = 0 \Rightarrow 2x_0 = f(x_0) = x_0^3 - x_0 + 1
\]</span></p>
<p>将 <span class="math inline">\(x_0 = \pm 1\)</span> 代入验证，发现均不成立，所以选项 (D) 错误。</p>
<p>答案为 (AC)。</p>
<h2 id="problem-11">Problem 11</h2>
<p>已知 <span class="math inline">\(O\)</span> 为坐标原点，点 <span class="math inline">\(A(1, 1)\)</span> 在抛物线 <span class="math inline">\(C: x^2 = 2py(p &gt; 0)\)</span> 上，过点 <span class="math inline">\(B(0, -1)\)</span> 的直线交 <span class="math inline">\(C\)</span> 于 <span class="math inline">\(P, Q\)</span> 两点，则下列说法中正确的有：</p>
<ol type="A">
<li><span class="math inline">\(C\)</span> 的准线方程为 <span class="math inline">\(y = -1\)</span></li>
<li>直线 <span class="math inline">\(AB\)</span> 与 <span class="math inline">\(C\)</span> 相切</li>
<li><span class="math inline">\(|OP| \cdot |OQ| &gt; |OA|^2\)</span></li>
<li><span class="math inline">\(|BP| \cdot |BQ| &gt; |BA|^2\)</span></li>
</ol>
<hr />
<p>首先显然得到 <span class="math inline">\(p = \dfrac12\)</span>，进而得到 <span class="math inline">\(C\)</span> 准线方程为 <span class="math inline">\(y = -\dfrac14\)</span>，选项 (A) 错误。</p>
<p>直线 <span class="math inline">\(AB\)</span> 方程为 <span class="math inline">\(y = 2x - 1\)</span>，代入抛物线方程得到 <span class="math inline">\(x^2 = 2x - 1 \iff (x - 1)^2 = 0\)</span>，此方程显然仅有 <span class="math inline">\(x = 1\)</span> 一个实数根，所以选项 (B) 正确。</p>
<p>不妨假设 <span class="math inline">\(P, Q\)</span> 坐标分别为 <span class="math inline">\((x_1, x_1^2), (x_2, x_2^2)\)</span>。</p>
<p>如果假设 <span class="math inline">\(PQ\)</span> 斜率为 <span class="math inline">\(k\)</span>，那么 <span class="math inline">\(PQ\)</span> 方程为 <span class="math inline">\(y = kx - 1\)</span>，代入抛物线方程得到下述二次方程：</p>
<p><span class="math display">\[
x^2 = kx - 1 \iff x^2 - kx + 1 = 0
\]</span></p>
<p><span class="math inline">\(x_1, x_2\)</span> 为上述方程的两根，从而我们有 <span class="math inline">\(x_1x_2 = 1\)</span>。</p>
<p>那么：</p>
<p><span class="math display">\[
\begin{aligned}
|OP|^2 \cdot |OQ|^2 &amp;= (x_1^2 + x_1^4)(x_2^2 + x_2^4) \\
&amp;= (x_1^2 + x_1^4)\left(\frac{1}{x_1^2} + \frac{1}{x_1^4}\right) \\
&amp;= 2 + x_1^2 + \frac{1}{x_1^2} \\
&amp;\geq 4 = |OA|^4
\end{aligned}
\]</span></p>
<p>上述等号无法取到，因为 <span class="math inline">\(x_1 \neq x_2\)</span>，从而 <span class="math inline">\(x_1 \neq \pm 1\)</span>。这说明了选项 (C) 正确。</p>
<p>现在继续计算 (D) 选项，我们有：</p>
<p><span class="math display">\[
\begin{aligned}
|BP|^2 \cdot |BQ|^2 &amp;= (x_1^2 + (x_1^2 + 1)^2)(x_2^2 + (x_2^2 + 1)^2) \\
&amp;= (x_1^4 + 3x_1^2 + 1)\left(\frac{1}{x_1^4} + \frac{3}{x_1^2} + 1\right) \\
&amp;= 11 + \left(x_1^4 + \frac{1}{x_1^4}\right) + 6\left(x_1^2 + \frac{1}{x_1^2}\right) \\
&amp;\geq 25 = |BA|^4
\end{aligned}
\]</span></p>
<p>上述等号无法取到，因为 <span class="math inline">\(x_1 \neq x_2\)</span>，从而 <span class="math inline">\(x_1 \neq \pm 1\)</span>。这说明了选项 (D) 正确。</p>
<p>所以答案为 (BCD)。</p>
<h2 id="problem-12">Problem 12</h2>
<p>已知函数 <span class="math inline">\(f(x)\)</span> 以及其导函数 <span class="math inline">\(f&#39;(x)\)</span> 的定义域均为 <span class="math inline">\(\mathbb R\)</span>，记 <span class="math inline">\(g(x) := f&#39;(x)\)</span>。</p>
<p>如果 <span class="math inline">\(f\left(\dfrac32 - x\right), g(2 + x)\)</span> 均为偶函数，那么下列说法中正确的是：</p>
<ol type="A">
<li><span class="math inline">\(f(0) = 0\)</span></li>
<li><span class="math inline">\(g\left(-\dfrac12\right) = 0\)</span></li>
<li><span class="math inline">\(f(-1) = f(4)\)</span></li>
<li><span class="math inline">\(g(-1) = g(2)\)</span></li>
</ol>
<hr />
<p>首先需要熟知这样的结论，即导函数为偶函数，则原函数为关于某点中心对称，导函数为奇函数，则原函数为偶函数。</p>
<p>由于 <span class="math inline">\(f(2 + x)\)</span> 的导函数 <span class="math inline">\(g(2 + x)\)</span> 为偶函数，那么 <span class="math inline">\(f(2 + x)\)</span> 关于点 <span class="math inline">\((2, f(2))\)</span> 中心对称。</p>
<p>那么我们可以给出下述推理：</p>
<p><span class="math display">\[
\begin{aligned}
f(x) &amp;= f\left(\frac32 - \left(\frac32 - x\right)\right) = f\left(\frac32 + \left(\frac32 - x\right)\right) \\
&amp;= f(3 - x) = f(2 + (1 - x)) = 2f(2) - f(2 - (1 - x)) \\
&amp;= 2f(2) - f(1 + x)
\end{aligned}
\]</span></p>
<p>也就得到 <span class="math inline">\(f(x + 2) = 2f(2) - f(x + 1) = f(x)\)</span>，<span class="math inline">\(f(x)\)</span> 为周期为 <span class="math inline">\(2\)</span> 的周期函数。</p>
<p>对于选项 (A)，如果 <span class="math inline">\(f(2) \neq 0\)</span>，显然可知 <span class="math inline">\(f(0) \neq 0\)</span>。而这是存在的，取反例 <span class="math inline">\(f(x) = \sin(\pi x) + 1\)</span> 即可。选项 (A) 错误。</p>
<p>根据 <span class="math inline">\(f(x)\)</span> 周期显然可知 <span class="math inline">\(f(2n) = f(2), n \in \mathbb Z\)</span>。</p>
<p>同时有 <span class="math inline">\(f(2n + 1) = f(1) = 2f(2) - f(2) = f(2), n \in \mathbb Z\)</span>。也就是说对所有整数 <span class="math inline">\(n\)</span>，都有 <span class="math inline">\(f(n) = f(2)\)</span>，所以选项 (C) 正确。</p>
<p>此外根据导函数定义（下面所有操作的基础均为导函数的存在性）：</p>
<p><span class="math display">\[
g\left(\frac32\right) = \lim_{\delta\to 0}\frac{f\left(\dfrac32 + \delta\right) - f\left(\dfrac32\right)}{\delta}
\]</span></p>
<p>根据 <span class="math inline">\(f\left(\dfrac32 - x\right)\)</span> 为偶函数，得到：</p>
<p><span class="math display">\[
g\left(\frac32\right) = \lim_{\delta\to 0}\frac{f\left(\dfrac32 - \delta\right) - f\left(\dfrac32\right)}{\delta} = \lim_{\delta\to 0}\frac{f\left(\dfrac32 + \delta\right) - f\left(\dfrac32\right)}{-\delta}
\]</span></p>
<p>上述第二个等号作换元 <span class="math inline">\(\delta\to-\delta\)</span>。上述两个式子相加得到 <span class="math inline">\(g\left(\dfrac32\right) = 0\)</span>，据 <span class="math inline">\(g(x)\)</span> 的周期性即可得到 <span class="math inline">\(g\left(-\dfrac12\right) = 0\)</span>。选项 (B) 正确。</p>
<p>选项 (D) 存在反例 <span class="math inline">\(f(x) = \sin(\pi x)\)</span>，该函数满足所有题设约束，但是不满足 (D) 要求。</p>
<p>所以答案为 (BC)。</p>
<h1 id="填空题">填空题</h1>
<h2 id="problem-13">Problem 13</h2>
<p>求 <span class="math inline">\(\left(1 - \dfrac yx\right)(x + y)^8\)</span> 的展开式中 <span class="math inline">\(x^2y^6\)</span> 的系数。</p>
<hr />
<p>最终展开式中 <span class="math inline">\(x^2y^6\)</span> 项可能的出现方式为 <span class="math inline">\(1\cdot x^2y^6\)</span> 以及 <span class="math inline">\(-\dfrac yx \cdot x^3y^5\)</span>。那么最终系数为：</p>
<p><span class="math display">\[
C_8^2 - C_8^3 = \frac{8 \times 7}{2!} - \frac{8 \times 7 \times 6}{3!} = -28
\]</span></p>
<p>故答案为 <span class="math inline">\(-28\)</span>。</p>
<h2 id="problem-14">Problem 14</h2>
<p>写出与圆 <span class="math inline">\(x^2 + y^2 = 1\)</span> 和 <span class="math inline">\((x - 3)^2 + (y - 4)^2 = 16\)</span> 都相切的一条直线的方程。</p>
<hr />
<p>假设直线方程为 <span class="math inline">\(ax + by + c = 0\)</span>，显然根据直线和圆相切的要求：</p>
<p><span class="math display">\[
\begin{cases}
\dfrac{|c|}{\sqrt{a^2 + b^2}} = 1 \\
\dfrac{|3a + 4b + c|}{\sqrt{a^2 + b^2}} = 4 \\
\end{cases}
\]</span></p>
<p>根据第一个方程显然有 <span class="math inline">\(c \neq 0\)</span>，那么记 <span class="math inline">\(a&#39; := \dfrac ac, b&#39; := \dfrac bc\)</span>，上述方程组即：</p>
<p><span class="math display">\[
\begin{cases}
\dfrac{1}{\sqrt{a&#39;^2 + b&#39;^2}} = 1 \\
\dfrac{|3a&#39; + 4b&#39; + 1|}{\sqrt{a&#39;^2 + b&#39;^2}} = 4 \\
\end{cases}
\Rightarrow
\begin{cases}
\sqrt{a&#39;^2 + b&#39;^2} = 1 \\
|3a&#39; + 4b&#39; + 1| = 4 \\
\end{cases}
\]</span></p>
<p>分情况讨论，若 <span class="math inline">\(3a&#39; + 4b&#39; + 1 = 4 \iff 3a&#39; + 4b&#39; = 3\)</span>，那么：</p>
<p><span class="math display">\[
b&#39; = \frac{3 - 3a&#39;}{4} \Rightarrow a&#39;^2 + b&#39;^2 = a&#39;^2 + \left(\frac{3 - 3a&#39;}{4}\right)^2 = 1
\]</span></p>
<p>即：</p>
<p><span class="math display">\[
25a&#39;^2 - 18a&#39; - 7 = 0 \iff a&#39; \in \left\{1, -\frac{7}{25}\right\}
\]</span></p>
<p>对应的 <span class="math inline">\(b&#39;\)</span> 分别为 <span class="math inline">\(0\)</span> 和 <span class="math inline">\(\dfrac{24}{25}\)</span>。</p>
<p>若 <span class="math inline">\(3a&#39; + 4b&#39; + 1 = -4 \iff 3a&#39; + 4b&#39; = -5\)</span>，那么：</p>
<p><span class="math display">\[
b&#39; = \frac{-5 - 3a&#39;}{4} \Rightarrow a&#39;^2 + b&#39;^2 = a&#39;^2 + \left(\frac{-5 - 3a&#39;}{4}\right)^2 = 1
\]</span></p>
<p>得到 <span class="math inline">\(a&#39; = -\dfrac35\)</span>，对应的 <span class="math inline">\(b&#39; = -\dfrac45\)</span>。</p>
<p>从而得到答案为 <span class="math inline">\(x = -1\)</span> 或 <span class="math inline">\(-7x + 24y + 25 = 0\)</span> 或 <span class="math inline">\(-3x - 4y + 5 = 0\)</span>。</p>
<h2 id="problem-15">Problem 15</h2>
<p>若曲线 <span class="math inline">\(y = (x + a)e^x\)</span> 有两条过坐标原点的切线，求 <span class="math inline">\(a\)</span> 的取值范围。</p>
<hr />
<p>首先：</p>
<p><span class="math display">\[
y&#39; = (x + a + 1)e^x
\]</span></p>
<p>那么曲线在 <span class="math inline">\(x = x_0\)</span> 处切线方程为：</p>
<p><span class="math display">\[
y = (x_0 + a + 1)e^{x_0}(x - x_0) + (x_0 + a)e^{x_0}
\]</span></p>
<p>该切线过坐标原点等价于：</p>
<p><span class="math display">\[
-x_0(x_0 + a + 1)e^{x_0} + (x_0 + a)e^{x_0} = 0 \iff x_0 + a = x_0(x_0 + a + 1)
\]</span></p>
<p>也就是说切线过坐标原点等价于 <span class="math inline">\(x_0\)</span> 为下述二次方程的根：</p>
<p><span class="math display">\[
x_0^2 + ax_0 - a = 0
\]</span></p>
<p>根据题设，上述方程有两个互不相同的实根，即：</p>
<p><span class="math display">\[
\Delta = a^2 + 4a &gt; 0 \iff a \in (-\infty, -4) \cup (0, +\infty)
\]</span></p>
<p>所以答案为 <span class="math inline">\((-\infty, -4) \cup (0, +\infty)\)</span>。</p>
<h2 id="problem-16">Problem 16</h2>
<p>已知椭圆 <span class="math inline">\(C: \dfrac{x^2}{a^2} + \dfrac{y^2}{b^2} = 1(a &gt; b &gt; 0)\)</span>，<span class="math inline">\(C\)</span> 的上顶点为 <span class="math inline">\(A\)</span>，两个焦点为 <span class="math inline">\(F_1, F_2\)</span>，离心率为 <span class="math inline">\(\dfrac12\)</span>。过 <span class="math inline">\(F_1\)</span> 且垂直于 <span class="math inline">\(AF_2\)</span> 的直线交 <span class="math inline">\(C\)</span> 于 <span class="math inline">\(D, E\)</span> 两点，<span class="math inline">\(|DE| = 6\)</span>，求 <span class="math inline">\(\triangle ADE\)</span> 的周长。</p>
<hr />
<p>根据离心率，不妨假设 <span class="math inline">\(a = 2t, b = \sqrt3 t, c = t(t &gt; 0)\)</span>。那么 <span class="math inline">\(A\)</span> 坐标为 <span class="math inline">\((0, \sqrt3 t)\)</span>，<span class="math inline">\(F_1, F_2\)</span> 坐标为 <span class="math inline">\((\pm t, 0)\)</span>。</p>
<p>那么 <span class="math inline">\(AF_2\)</span> 斜率为 <span class="math inline">\(-\sqrt 3\)</span>，得知 <span class="math inline">\(DE\)</span> 的斜率为 <span class="math inline">\(\dfrac{1}{\sqrt 3}\)</span>，那么 <span class="math inline">\(DE\)</span> 方程为 <span class="math inline">\(x = \sqrt3y - t\)</span>。代入椭圆方程得到：</p>
<p><span class="math display">\[
\dfrac{(\sqrt3y - t)^2}{4t^2} + \dfrac{y^2}{3t^2} = 1 \iff 13y^2 - 6\sqrt3 yt - 9t^2 = 0
\]</span></p>
<p>假设上述关于 <span class="math inline">\(y\)</span> 的方程的两个根为 <span class="math inline">\(y_1, y_2\)</span>，那么 <span class="math inline">\(y_1 + y_2 = \dfrac{6\sqrt3 t}{13}, y_1y_2 = -\dfrac{9}{13}t^2\)</span>。</p>
<p>我们显然知道：</p>
<p><span class="math display">\[
\begin{aligned}
|DE|^2 &amp;= 4(y_1 - y_2)^2 = 4((y_1 + y_2)^2 - 4y_1y_2) \\
&amp;= \left(\frac{48t}{13}\right)^2 = 36
\end{aligned}
\]</span></p>
<p>得到 <span class="math inline">\(t = \dfrac{13}{8}\)</span>。</p>
<p>另外，直接求解方程得到：</p>
<p><span class="math display">\[
y_{1, 2} = \frac{3\sqrt 3 \pm 12}{13}t = \frac{3\sqrt 3}{8} \pm \frac32
\]</span></p>
<p>从而得到 <span class="math inline">\(D, E\)</span> 的坐标为：</p>
<p><span class="math display">\[
\left(\frac{3\sqrt 3}{2} - \frac12, \frac{3\sqrt 3}{8} + \frac32\right), \left(-\frac{3\sqrt 3}{2} - \frac12, \frac{3\sqrt 3}{8} - \frac32\right)
\]</span></p>
<p>考虑到 <span class="math inline">\(A\)</span> 坐标为 <span class="math inline">\(\left(0, \dfrac{13\sqrt 3}{8}\right)\)</span>，得到：</p>
<p><span class="math display">\[
\begin{aligned}
|AD|^2 &amp;= \left(\frac{3\sqrt 3}{2} - \frac12\right)^2 + \left(\frac{3\sqrt 3}{8} + \frac32 - \dfrac{13\sqrt 3}{8}\right)^2 \\
&amp;= \frac{223 - 84\sqrt 3}{16} \\
|BD|^2 &amp;= \left(-\frac{3\sqrt 3}{2} - \frac12\right)^2 + \left(\frac{3\sqrt 3}{8} - \frac32 - \dfrac{13\sqrt 3}{8}\right)^2 \\
&amp;= \frac{223 + 84\sqrt 3}{16} \\
\end{aligned}
\]</span></p>
<p>不难发现 <span class="math inline">\((14 \pm 3\sqrt 3)^2 = 223 \pm 84\sqrt 3\)</span>，所以：</p>
<p><span class="math display">\[
|AD| + |BD| = \frac{14 - 3\sqrt 3}{4} + \frac{14 + 3\sqrt 3}{4} = 7
\]</span></p>
<p>从而需要求的三角形周长为 <span class="math inline">\(13\)</span>。即最后的答案为 <span class="math inline">\(13\)</span>。</p>
<hr />
<p>【另解】我自己也是算完之后才回想起来有这么一个简单的结论我忘了，离心率为 <span class="math inline">\(\dfrac12\)</span> 的椭圆，其上顶点和两个焦点构成等边三角形。</p>
<p>这个事实意味着直线 <span class="math inline">\(DE\)</span> 不仅垂直于 <span class="math inline">\(AF_2\)</span>，而且是垂直平分 <span class="math inline">\(AF_2\)</span>。也就是说 <span class="math inline">\(\triangle ADE\)</span> 全等于 <span class="math inline">\(\triangle DEF_2\)</span>。那么其周长：</p>
<p><span class="math display">\[
C_{\triangle DEF_2} = (|DF_1| + |DF_2|) + (|EF_1| + |EF_2|) = 4a = 13
\]</span></p>
<h1 id="解答题">解答题</h1>
<p>这次解答题的顺序是数列、解三角形、立体几何、统计、解析几何、导数，中规中矩的顺序。</p>
<h2 id="problem-17">Problem 17</h2>
<p>记 <span class="math inline">\(S_n\)</span> 为数列 <span class="math inline">\(\{a_n\}\)</span> 的前 <span class="math inline">\(n\)</span> 项和，已知 <span class="math inline">\(a_1 = 1\)</span>，且数列 <span class="math inline">\(\left\{\dfrac{S_n}{a_n}\right\}\)</span> 是公差为 <span class="math inline">\(\dfrac13\)</span> 的等差数列。</p>
<ol type="1">
<li><p>求 <span class="math inline">\(\{a_n\}\)</span> 的通项公式。</p></li>
<li><p>求证：</p></li>
</ol>
<p><span class="math display">\[
\sum_{k = 1}^n \frac{1}{a_k} &lt; 2, n \in \mathbb N
\]</span></p>
<hr />
<p>【第一问】根据数列 <span class="math inline">\(\left\{\dfrac{S_n}{a_n}\right\}\)</span> 是公差为 <span class="math inline">\(\dfrac13\)</span> 的等差数列，并且我们能得到其首项为：</p>
<p><span class="math display">\[
\frac{S_1}{a_1} = 1
\]</span></p>
<p>那么我们得到其通项公式为：</p>
<p><span class="math display">\[
\frac{S_n}{a_n} = \frac13 n + \frac23 \iff 3S_n = (n + 2)a_n
\]</span></p>
<p>取 <span class="math inline">\(n + 1\)</span> 代替 <span class="math inline">\(n\)</span>，得到等式 <span class="math inline">\(3S_{n + 1} = (n + 3)a_{n + 1}\)</span>，上述两式相减：</p>
<p><span class="math display">\[
3(S_{n + 1} - S_n) = (n + 3)a_{n + 1} - (n + 2)a_n \iff (n + 2)a_n = na_{n + 1}
\]</span></p>
<p>也就是下述关系：</p>
<p><span class="math display">\[
\frac{a_{n + 1}}{a_n} = \frac{n + 2}{n}, n \in \mathbb N
\]</span></p>
<p>那么对于 <span class="math inline">\(n \geq 2\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
a_n &amp;= \frac{a_n}{a_{n - 1}} \cdot \frac{a_{n - 1}}{a_{n - 2}} \cdot \cdots \cdot \frac{a_2}{a_1} = \frac{n + 1}{n - 1} \cdot \frac{n}{n - 2} \cdot \cdots \cdot \frac{3}{1} \\
&amp;= \frac{n(n + 1)}{2}
\end{aligned}
\]</span></p>
<p>经检验，<span class="math inline">\(n = 1\)</span> 时上述通项公式也成立，所以数列 <span class="math inline">\(\{a_n\}\)</span> 的通项公式为：</p>
<p><span class="math display">\[
a_n = \frac{n(n + 1)}{2}, n \in \mathbb N
\]</span></p>
<p>【第二问】可以计算得到：</p>
<p><span class="math display">\[
\begin{aligned}
\sum_{k = 1}^n \frac{1}{a_k} = \sum_{k = 1}^n \frac{2}{k(k + 1)} = 2\sum_{k = 1}^n \left(\frac{1}{k} - \frac{1}{k + 1}\right) = 2\left(1 - \frac{1}{n + 1}\right) &lt; 2
\end{aligned}
\]</span></p>
<h2 id="problem-18">Problem 18</h2>
<p>记 <span class="math inline">\(\triangle ABC\)</span> 的内角 <span class="math inline">\(A, B, C\)</span> 的对边分别为 <span class="math inline">\(a, b, c\)</span>。已知下述关系：</p>
<p><span class="math display">\[
\frac{\cos A}{1 + \sin A} = \frac{\sin 2B}{1 + \cos 2B}
\]</span></p>
<ol type="1">
<li><p>若 <span class="math inline">\(C = \dfrac{2\pi}{3}\)</span>，求 <span class="math inline">\(B\)</span></p></li>
<li><p>求 <span class="math inline">\(\dfrac{a^2 + b^2}{c^2}\)</span> 的最小值</p></li>
</ol>
<hr />
<p>【第一问】根据二倍角公式有：</p>
<p><span class="math display">\[
\frac{\sin 2B}{1 + \cos 2B} = \frac{2\sin B\cos B}{1 + (2\cos^2 B - 1)} = \frac{\sin B}{\cos B}
\]</span></p>
<p>代入已知等式：</p>
<p><span class="math display">\[
\frac{\cos A}{1 + \sin A} = \frac{\sin B}{\cos B}
\]</span></p>
<p>整理得到：</p>
<p><span class="math display">\[
\cos A\cos B = \sin B + \sin A\sin B \Rightarrow \sin B = \cos A\cos B - \sin A\sin B = \cos(A + B)
\]</span></p>
<p>根据三角形内角和，有 <span class="math inline">\(A + B + C = \pi \Rightarrow A + B = \pi - C\)</span>，即：</p>
<p><span class="math display">\[
\sin B = \cos(\pi - C) = -\cos C
\]</span></p>
<p>已知 <span class="math inline">\(C = \dfrac{2\pi}{3}\)</span>，所以：</p>
<p><span class="math display">\[
\sin B =  -\cos\frac{2\pi}{3} = \frac12
\]</span></p>
<p>由于 <span class="math inline">\(B\)</span> 位于三角形内，所以 <span class="math inline">\(B \in (0, \pi)\)</span>。</p>
<p>另外，考虑到 <span class="math inline">\(C = \dfrac{2\pi}{3}\)</span>，若 <span class="math inline">\(B &gt; \dfrac\pi2\)</span>，则 <span class="math inline">\(A = \pi - C - B &lt; 0\)</span>，不符合要求，所以 <span class="math inline">\(B &lt; \dfrac\pi2\)</span>。</p>
<p>从而 <span class="math inline">\(B = \dfrac\pi6\)</span>。</p>
<p>【第二问】根据上一问：</p>
<p><span class="math display">\[
\cos(A + B) = \sin B = \cos\left(\frac\pi2 - B\right)
\]</span></p>
<p>由于 <span class="math inline">\(A + B, \dfrac\pi2 - B \in (0, \pi)\)</span>，而余弦函数在这一个区间单调，所以：</p>
<p><span class="math display">\[
A + B = \dfrac\pi2 - B \iff A + 2B = \frac\pi2
\]</span></p>
<p>根据正弦定理：</p>
<p><span class="math display">\[
\frac{a^2 + b^2}{c^2} = \frac{\sin^2A + \sin^2B}{\sin^2C}
\]</span></p>
<p>使用 <span class="math inline">\(-\cos C = \sin B\)</span> 替换，并代入 <span class="math inline">\(A + 2B = \dfrac\pi2\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
\frac{a^2 + b^2}{c^2} &amp;= \frac{\sin^2A + \sin^2B}{\sin^2C} = \frac{\sin^2\left(\dfrac\pi2 - 2B\right) + \sin^2B}{1 - \cos^2C} \\
&amp;= \frac{\cos^2 2B + \sin^2B}{1 - \sin^2B} = \frac{(2\cos^2 B - 1)^2 + (1 - \cos^2B)}{\cos^2B} \\
&amp;= 4\cos^2B + \frac{2}{\cos^2B} - 5 \geq 4\sqrt2 - 5
\end{aligned}
\]</span></p>
<p>等号成立当且仅当 <span class="math inline">\(\cos B = \dfrac{1}{\sqrt[4]{2}}\)</span>。</p>
<p>即 <span class="math inline">\(\dfrac{a^2 + b^2}{c^2}\)</span> 的最小值为 <span class="math inline">\(4\sqrt2 - 5\)</span>。</p>
<h2 id="problem-19">Problem 19</h2>
<p>已知直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 的体积为 <span class="math inline">\(4\)</span>，<span class="math inline">\(\triangle A_1BC\)</span> 的面积为 <span class="math inline">\(2\sqrt 2\)</span>。</p>
<ol type="1">
<li><p>求 <span class="math inline">\(A\)</span> 到平面 <span class="math inline">\(A_1BC\)</span> 的距离</p></li>
<li><p>设 <span class="math inline">\(D\)</span> 为 <span class="math inline">\(A_1C\)</span> 的中点，已知 <span class="math inline">\(AA_1 = AB\)</span> 且平面 <span class="math inline">\(A_1BC\)</span> 垂直于平面 <span class="math inline">\(ABB_1A_1\)</span>，求二面角 <span class="math inline">\(A-BD-C\)</span> 的正弦值。</p></li>
</ol>
<hr />
<p>【第一问】考虑三棱锥 <span class="math inline">\(A_1-ABC\)</span>，其和直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 有相同的底面 <span class="math inline">\(\triangle ABC\)</span> 且有相同的高 <span class="math inline">\(AA_1\)</span>，所以其体积为直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 的三分之一，即：</p>
<p><span class="math display">\[
V_{A_1-ABC} = \frac13 \times 4 = \frac43
\]</span></p>
<p>如果记 <span class="math inline">\(A\)</span> 到平面 <span class="math inline">\(A_1BC\)</span> 的距离为 <span class="math inline">\(h\)</span>，<span class="math inline">\(\triangle A_1BC\)</span> 的面积为 <span class="math inline">\(S\)</span>，那么 <span class="math inline">\(V_{A_1-ABC} = \dfrac13 Sh\)</span>。从而得到：</p>
<p><span class="math display">\[
\dfrac13 Sh = \frac43 \Rightarrow Sh = 4
\]</span></p>
<p>由题设有 <span class="math inline">\(S = 2\sqrt 2\)</span>，所以 <span class="math inline">\(A\)</span> 到平面 <span class="math inline">\(A_1BC\)</span> 的距离为：</p>
<p><span class="math display">\[
h = \frac{4}{2\sqrt 2} = \sqrt 2
\]</span></p>
<p>【第二问】</p>
<p>在直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 中，我们有 <span class="math inline">\(BB_1\)</span> 垂直于平面 <span class="math inline">\(ABC\)</span>，考虑到 <span class="math inline">\(BC \subset\)</span> 平面 <span class="math inline">\(ABC\)</span>，所以 <span class="math inline">\(BB_1 \bot BC\)</span>。</p>
<p>另一方面，直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 中侧面 <span class="math inline">\(ABB_1A_1\)</span> 为长方形，而 <span class="math inline">\(AA_1 = AB\)</span>，所以该侧面为正方形，进而 <span class="math inline">\(AB_1 \bot A_1B\)</span>。</p>
<p>由于平面 <span class="math inline">\(A_1BC\)</span> 垂直于平面 <span class="math inline">\(ABB_1A_1\)</span> 且两平面交于 <span class="math inline">\(A_1B\)</span>，考虑到 <span class="math inline">\(AB_1 \subset\)</span> 平面 <span class="math inline">\(ABB_1A_1\)</span>，所以 <span class="math inline">\(AB_1\)</span> 垂直于平面 <span class="math inline">\(A_1BC\)</span>。而又由于 <span class="math inline">\(BC \subset\)</span> 平面 <span class="math inline">\(ABC\)</span>，所以 <span class="math inline">\(AB_1 \bot BC\)</span>。</p>
<p>因为 <span class="math inline">\(AB_1, BB_1\)</span> 都是平面 <span class="math inline">\(ABB_1A_1\)</span> 内的直线且两者相交于 <span class="math inline">\(B_1\)</span>，而直线 <span class="math inline">\(BC\)</span> 与两者均垂直，所以 <span class="math inline">\(BC\)</span> 垂直于平面 <span class="math inline">\(ABB_1A_1\)</span>。考虑到 <span class="math inline">\(AB \subset\)</span> 平面 <span class="math inline">\(ABB_1A_1\)</span>，所以 <span class="math inline">\(AB \bot BC\)</span>。同理依然有 <span class="math inline">\(A_1B \bot BC\)</span>。</p>
<p>也就是说 <span class="math inline">\(\triangle ABC\)</span> 为以 <span class="math inline">\(AC\)</span> 为斜边的直角三角形，<span class="math inline">\(\triangle A_1BC\)</span> 为以 <span class="math inline">\(A_1C\)</span> 为斜边的直角三角形。设 <span class="math inline">\(AA_1 = AB = a, BC = b\)</span>，那么 <span class="math inline">\(A_1B = \sqrt2 a\)</span>，<span class="math inline">\(\triangle ABC\)</span> 面积为 <span class="math inline">\(\dfrac12 ab\)</span>，<span class="math inline">\(\triangle A_1BC\)</span> 面积为 <span class="math inline">\(\dfrac{\sqrt 2}{2}ab = 2\sqrt 2\)</span>。</p>
<p>那么直三棱柱 <span class="math inline">\(ABC-A_1B_1C_1\)</span> 的体积为 <span class="math inline">\(a\cdot \dfrac12 ab = \dfrac12 a^2b = 4\)</span>。</p>
<p>从而得到 <span class="math inline">\(a = b = 2\)</span>。</p>
<p>上述论述中我们已经说明了 <span class="math inline">\(AB, B_1B, BC\)</span> 两两垂直，所以以 <span class="math inline">\(B\)</span> 为坐标原点，<span class="math inline">\(BC, BA, BB_1\)</span> 分别为 <span class="math inline">\(x, y, z\)</span> 轴建立空间直角坐标系。</p>
<p>那么 <span class="math inline">\(A\)</span> 坐标为 <span class="math inline">\((0, 2, 0)\)</span>，<span class="math inline">\(A_1\)</span> 坐标为 <span class="math inline">\((0, 2, 2)\)</span>，<span class="math inline">\(C\)</span> 坐标为 <span class="math inline">\((2, 0, 0)\)</span>。</p>
<p>由于 <span class="math inline">\(D\)</span> 为 <span class="math inline">\(A_1C\)</span> 中点，所以其坐标为 <span class="math inline">\((1, 1, 1)\)</span>。</p>
<p>那么 <span class="math inline">\(\vec{BA} = (0, 2, 0), \vec{BD} = (1, 1, 1), \vec{BC} = (2, 0, 0)\)</span>。</p>
<p>假设平面 <span class="math inline">\(ABD\)</span> 的法向量为 <span class="math inline">\(\boldsymbol{n} = (x_1, y_1, z_1)\)</span>，根据 <span class="math inline">\(\boldsymbol{n} \bot \vec{BA}, \vec{BD}\)</span> 得到：</p>
<p><span class="math display">\[
\begin{cases}
x_1 + y_1 + z_1 = 0 \\
2y_1 = 0
\end{cases}
\]</span></p>
<p>不妨取 <span class="math inline">\(\boldsymbol{n} = (1, 0, -1)\)</span>。同理可以取平面 <span class="math inline">\(CBD\)</span> 的法向量 <span class="math inline">\(\boldsymbol{m} = (0, 1, -1)\)</span>。</p>
<p>记欲求二面角大小为 <span class="math inline">\(\theta\)</span>，可以得到二面角 <span class="math inline">\(A-BD-C\)</span> 的余弦值绝对值为：</p>
<p><span class="math display">\[
|\cos\langle\boldsymbol{n}, \boldsymbol{m}\rangle| = \left|\frac{\boldsymbol{n} \cdot \boldsymbol{m}}{|\boldsymbol{n}| \cdot |\boldsymbol{m}|}\right| = \frac{1}{2}
\]</span></p>
<p>从而得到该二面角的正弦值为：</p>
<p><span class="math display">\[
\sin\theta = \sqrt{1 - |\cos\theta|^2} = \frac{\sqrt 3}{2}
\]</span></p>
<h2 id="problem-20">Problem 20</h2>
<p>概率统计相关问题。医疗团队针对某一种疾病和个人卫生的关系做调查，抽样 <span class="math inline">\(100\)</span> 名该病患者构成病例组和 <span class="math inline">\(100\)</span> 名未患有该病的健康人构成对照组，调查他们的个人卫生，得到下述数据：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">个人卫生不够良好</th>
<th style="text-align: center;">个人卫生良好</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">病例组</td>
<td style="text-align: center;"><span class="math inline">\(40\)</span></td>
<td style="text-align: center;"><span class="math inline">\(60\)</span></td>
</tr>
<tr class="even">
<td style="text-align: center;">对照组</td>
<td style="text-align: center;"><span class="math inline">\(10\)</span></td>
<td style="text-align: center;"><span class="math inline">\(90\)</span></td>
</tr>
</tbody>
</table>
<ol type="1">
<li><p>能否有 <span class="math inline">\(99\%\)</span> 的把握认为患该病的群体和未患该病的群体个人卫生情况有差异</p></li>
<li><p>从该地区人群中任选一人，记 <span class="math inline">\(A\)</span> 表示事件“选到的人卫生习惯不够良好”，<span class="math inline">\(B\)</span> 表示事件“选到的人患有该疾病”。记指标 <span class="math inline">\(R\)</span> 为：</p></li>
</ol>
<p><span class="math display">\[
R = \frac{P(B \mid A)}{P(\overline B \mid A)} \cdot \frac{P(\overline B | \overline A)}{P(B \mid \overline A)}
\]</span></p>
<ol type="i">
<li>证明：</li>
</ol>
<p><span class="math display">\[
R = \frac{P(A \mid B)}{P(\overline A \mid B)} \cdot \frac{P(\overline A | \overline B)}{P(A \mid \overline B)}
\]</span></p>
<ol start="2" type="i">
<li>利用调查数据估计 <span class="math inline">\(P(A \mid B), P(A \mid \overline B)\)</span>，并根据上述结论估计 <span class="math inline">\(R\)</span> 值。</li>
</ol>
<hr />
<p>【第一问】直接使用卡方检验：</p>
<p><span class="math display">\[
K^2 = \frac{n(ad - bc)^2}{(a + b)(c + d)(a + c)(b + d)} = \frac{200 \times (40 \times 90 - 10 \times 60)^2}{100 \times 100 \times 50 \times 150} = 24 &gt; 6.635
\]</span></p>
<p>可知我们有 <span class="math inline">\(99\%\)</span> 的把握认为患该病的群体和未患该病的群体个人卫生情况有差异。</p>
<p>【第二问】我们首先证明第一小问的等式：</p>
<p>根据 <span class="math inline">\(R\)</span> 的定义和条件概率的定义：</p>
<p><span class="math display">\[
\begin{aligned}
R &amp;= \frac{P(B \mid A)}{P(\overline B \mid A)} \cdot \frac{P(\overline B | \overline A)}{P(B \mid \overline A)} = \frac{\dfrac{P(AB)}{P(A)} \cdot \dfrac{P(\overline A\overline B)}{P(\overline A)}}{\dfrac{P(A\overline B)}{P(A)} \cdot \dfrac{P(\overline AB)}{P(\overline A)}} \\
&amp;= \frac{P(AB)P(\overline A\overline B)}{P(A\overline B)P(\overline AB)} \\
&amp;= \frac{\dfrac{P(AB)}{P(B)} \cdot \dfrac{P(\overline A\overline B)}{P(\overline B)}}{\dfrac{P(A\overline B)}{P(\overline B)} \cdot \dfrac{P(\overline AB)}{P(B)}} = \frac{P(A \mid B)}{P(\overline A \mid B)} \cdot \frac{P(\overline A | \overline B)}{P(A \mid \overline B)}
\end{aligned}
\]</span></p>
<p>容易根据调查数据估计出：</p>
<p><span class="math display">\[
P(A \mid B) = 0.4, P(\overline A \mid B) = 0.6, P(\overline A | \overline B) = 0.9, P(A \mid \overline B) = 0.1
\]</span></p>
<p>此时 <span class="math inline">\(R = 6\)</span>。</p>
<h2 id="problem-21">Problem 21</h2>
<p>已知点 <span class="math inline">\(A(2, 1)\)</span> 在双曲线 <span class="math inline">\(C: \dfrac{x^2}{a^2} - \dfrac{y^2}{a^2 - 1} = 1(a &gt; 1)\)</span> 上，直线 <span class="math inline">\(l\)</span> 交 <span class="math inline">\(C\)</span> 于 <span class="math inline">\(P, Q\)</span> 两点，直线 <span class="math inline">\(AP, AQ\)</span> 的斜率之和为 <span class="math inline">\(0\)</span>。</p>
<ol type="1">
<li><p>求 <span class="math inline">\(l\)</span> 的斜率</p></li>
<li><p>若 <span class="math inline">\(\tan\angle PAQ = 2\sqrt 2\)</span>，求 <span class="math inline">\(\triangle PAQ\)</span> 的面积</p></li>
</ol>
<hr />
<p>【第一问】由于 <span class="math inline">\(A(2, 1)\)</span> 在双曲线 <span class="math inline">\(C\)</span> 上，所以：</p>
<p><span class="math display">\[
\dfrac{4}{a^2} - \dfrac{1}{a^2 - 1} = 1 \Rightarrow a^2 = 2
\]</span></p>
<p>不妨记 <span class="math inline">\(AP\)</span> 的斜率为 <span class="math inline">\(k\)</span>，那么 <span class="math inline">\(AQ\)</span> 的斜率为 <span class="math inline">\(-k\)</span>。从而 <span class="math inline">\(AP\)</span> 的方程为 <span class="math inline">\(y = k(x - 2) + 1\)</span>，将其代入双曲线方程得到：</p>
<p><span class="math display">\[
\dfrac{x^2}{2} - (kx - 2k + 1)^2 = 1
\]</span></p>
<p>整理为：</p>
<p><span class="math display">\[
\left(\frac{1}{2} - k^2\right)x^2 + 2(2k - 1)kx - (1 + (2k - 1)^2) = 0
\]</span></p>
<p>由于 <span class="math inline">\(A\)</span> 为双曲线和 <span class="math inline">\(AP\)</span> 的交点之一，所以 <span class="math inline">\(x = 2\)</span> 为其一根，另一根为 <span class="math inline">\(P\)</span> 的横坐标。</p>
<p>上述方程的两根之积为：</p>
<p><span class="math display">\[
-\frac{1 + (2k - 1)^2}{\dfrac{1}{2} - k^2} = -\frac{2 + 2(2k - 1)^2}{1 - 2k^2}
\]</span></p>
<p>得知其横坐标即可计算其纵坐标，所以 <span class="math inline">\(P\)</span> 的坐标为：</p>
<p><span class="math display">\[
\left(-\frac{1 + (2k - 1)^2}{1 - 2k^2}, \frac{2k^2 - 4k + 1}{1 - 2k^2}\right)
\]</span></p>
<p>将 <span class="math inline">\(k\)</span> 替换为 <span class="math inline">\(-k\)</span> 得到 <span class="math inline">\(Q\)</span> 的坐标：</p>
<p><span class="math display">\[
\left(-\frac{1 + (2k + 1)^2}{1 - 2k^2}, \frac{2k^2 + 4k + 1}{1 - 2k^2}\right)
\]</span></p>
<p>也就是说 <span class="math inline">\(l\)</span> 的斜率为：</p>
<p><span class="math display">\[
k_l = \frac{-\dfrac{1 + (2k + 1)^2}{1 - 2k^2} + \dfrac{1 + (2k - 1)^2}{1 - 2k^2}}{\dfrac{2k^2 + 4k + 1}{1 - 2k^2} - \dfrac{2k^2 - 4k + 1}{1 - 2k^2}} = -1
\]</span></p>
<p>【第二问】由于 <span class="math inline">\(\tan\angle PAQ &gt; 0\)</span>，所以其为锐角。我们可以知道 <span class="math inline">\(\tan\dfrac12\angle PAQ = \dfrac1k\)</span>，这里 <span class="math inline">\(k\)</span> 为 <span class="math inline">\(AP, AQ\)</span> 斜率的绝对值。从而：</p>
<p><span class="math display">\[
\tan\angle PAQ = \frac{2\tan\dfrac12\angle PAQ}{1 - \tan^2\dfrac12\angle PAQ} = \frac{2 / k}{1 - 1 / k^2} = 2\sqrt 2
\]</span></p>
<p>由 <span class="math inline">\(k &gt; 0\)</span> 得到 <span class="math inline">\(k = \sqrt 2\)</span>。</p>
<p>从而根据上一问的结果，我们得到：</p>
<p><span class="math display">\[
P\left(\frac{10 - 4\sqrt 2}{3}, \frac{4\sqrt 2 - 5}{3}\right), Q\left(\frac{10 + 4\sqrt 2}{3}, \frac{-4\sqrt 2 - 5}{3}\right)
\]</span></p>
<p>此时 <span class="math inline">\(PQ\)</span> 方程为 <span class="math inline">\(y = -x + \dfrac53\)</span>，<span class="math inline">\(A\)</span> 到此的距离为：</p>
<p><span class="math display">\[
d = \frac{|2 + 1 - 5 / 3|}{\sqrt 2} = \frac{2\sqrt 2}{3}
\]</span></p>
<p>而：</p>
<p><span class="math display">\[
|PQ| = \sqrt 2 \left(\frac{10 + 4\sqrt 2}{3} - \frac{10 - 4\sqrt 2}{3}\right) = \frac{16}{3}
\]</span></p>
<p>所以需要求的面积为：</p>
<p><span class="math display">\[
S = \frac12 |PQ| \cdot d = \frac{16\sqrt 2}{9}
\]</span></p>
<h2 id="problem-22">Problem 22</h2>
<p>已知函数 <span class="math inline">\(f(x) = e^x - ax\)</span> 与函数 <span class="math inline">\(g(x) = ax - \ln x\)</span> 有相同的最小值。</p>
<ol type="1">
<li><p>求 <span class="math inline">\(a\)</span></p></li>
<li><p>证明存在实数 <span class="math inline">\(b\)</span>，令直线 <span class="math inline">\(y = b\)</span> 和曲线 <span class="math inline">\(y = f(x), y = g(x)\)</span> 共计有三个不同的交点，且这三个交点的横坐标从小到大排列构成等差数列。</p></li>
</ol>
<hr />
<p>【第一问】显然：</p>
<p><span class="math display">\[
f&#39;(x) = e^x - a, g&#39;(x) = a - \frac1x
\]</span></p>
<p>由于这两个函数有相同的最小值，所以：</p>
<p><span class="math display">\[
f(\ln a) = a - a\ln a = 1 + \ln a = g\left(\frac1a\right)
\]</span></p>
<p>也就是说：</p>
<p><span class="math display">\[
\ln a - \frac{a - 1}{a + 1} = 0
\]</span></p>
<p>另外，由最小值的存在性显然有 <span class="math inline">\(a &gt; 0\)</span>。考虑函数：</p>
<p><span class="math display">\[
\phi(x) := \ln x - \frac{x - 1}{x + 1}, x &gt; 0
\]</span></p>
<p>其有：</p>
<p><span class="math display">\[
\phi&#39;(x) = \frac1x - \frac{2}{(x + 1)^2} = \frac{x^2 + 1}{x(x + 1)^2} &gt; 0
\]</span></p>
<p>由 <span class="math inline">\(\phi(a) = \phi(1) = 0\)</span> 得到 <span class="math inline">\(a = 1\)</span>。</p>
<p>【第二问】首先证明，<span class="math inline">\(f(x) - g(x) = 0\)</span> 在 <span class="math inline">\((0, +\infty)\)</span> 上有唯一的解 <span class="math inline">\(x_0\)</span>。</p>
<p>定义函数 <span class="math inline">\(h(x) := f(x) - g(x)\)</span>。</p>
<p>根据上一问，得知 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\((0, +\infty)\)</span> 上递增，<span class="math inline">\(g(x)\)</span> 在 <span class="math inline">\((0, 1)\)</span> 上递减，这说明 <span class="math inline">\(h(x)\)</span> 在 <span class="math inline">\((0, 1)\)</span> 上递增。</p>
<p>另外：</p>
<p><span class="math display">\[
h&#39;(x) = e^x + \frac1x - 2 &gt; e - 2 &gt; 0, x &gt; 1
\]</span></p>
<p>所以 <span class="math inline">\(h(x)\)</span> 在 <span class="math inline">\((1, +\infty)\)</span> 上递增，即 <span class="math inline">\(h(x)\)</span> 在 <span class="math inline">\((0, +\infty)\)</span> 上递增。</p>
<p>此外：</p>
<p><span class="math display">\[
h(1) = e - 2 &gt; 0
\]</span></p>
<p>另外：</p>
<p><span class="math display">\[
g(e^{1 - e}) = e^{1 - e} - (1 - e) &gt; e - 1 = f(1) &gt; f(e^{1 - e})
\]</span></p>
<p>故 <span class="math inline">\(h(e^{1 - e}) &lt; 0\)</span>。</p>
<p>这说明了 <span class="math inline">\(x_0\)</span> 唯一存在于区间 <span class="math inline">\((e^{1 - e}, 1)\)</span> 上。</p>
<p>下面证明 <span class="math inline">\(b = f(x_0) = g(x_0)\)</span> 满足条件。</p>
<p>在此之前，我们需要知道由于 <span class="math inline">\(0 &lt; x_0 &lt; 1\)</span>，所以 <span class="math inline">\(1 = f(0) &lt; b = f(x_0) &lt; e - 1 = f(1)\)</span>。</p>
<p>首先证明 <span class="math inline">\(f(x) = b\)</span> 有除 <span class="math inline">\(x_0\)</span> 外，还具有一根 <span class="math inline">\(x_1 \in (-\infty, 0)\)</span>。由于 <span class="math inline">\(f(x)\)</span> 在 <span class="math inline">\((-\infty, 0)\)</span> 上递减，并且 <span class="math inline">\(f(0) &lt; b\)</span>，且 <span class="math inline">\(f(1 - e) = e^{1 - e} + (e - 1) &gt; e - 1 &gt; b\)</span>。</p>
<p>这说明了 <span class="math inline">\(x_1\)</span> 唯一存在于 <span class="math inline">\((1 - e, 0)\)</span> 上。</p>
<p>再证明 <span class="math inline">\(g(x) = b\)</span> 有除 <span class="math inline">\(x_0\)</span> 外，还具有一根 <span class="math inline">\(x_2 \in (1, +\infty)\)</span>。由于 <span class="math inline">\(g(x)\)</span> 在 <span class="math inline">\((1, +\infty)\)</span> 上递增，并且 <span class="math inline">\(g(1) = 1 &lt; b\)</span>，且 <span class="math inline">\(g(e) = e - 1 &gt; b\)</span>。</p>
<p>这说明了 <span class="math inline">\(x_2\)</span> 唯一存在于 <span class="math inline">\((1, e)\)</span> 上。</p>
<p>也就是说直线 <span class="math inline">\(y = b\)</span> 和曲线 <span class="math inline">\(y = f(x), y = g(x)\)</span> 共计有三个不同的交点，其横坐标从小到大为 <span class="math inline">\(x_1, x_0, x_2\)</span>。</p>
<p>现在观察下述：</p>
<p><span class="math display">\[
\begin{cases}
f(\ln x_0) = e^{\ln x_0} - \ln x_0 = x_0 - \ln x_0 = g(x_0) = b \\
g(e^{x_0}) = e^{x_0} - \ln e^{x_0} = e^{x_0} - x_0 = f(x_0) = b \\
\end{cases}
\]</span></p>
<p>这说明 <span class="math inline">\(\ln x_0, e^{x_0}\)</span> 也是直线 <span class="math inline">\(y = b\)</span> 和曲线 <span class="math inline">\(y = f(x), y = g(x)\)</span> 交点的横坐标，但我们已经证明了一共仅有三个交点，这只能说明 <span class="math inline">\(x_1 = \ln x_0, x_2 = e^{x_0}\)</span>。</p>
<p>由于 <span class="math inline">\(f(x_0) = g(x_0)\)</span>，所以 <span class="math inline">\(e^{x_0} + \ln x_0 = x_1 + x_2 = 2x_0\)</span>。</p>
<p>所以这三个横坐标从小到大排列为等差数列，证明完毕。</p>
<h1 id="后记">后记</h1>
<p>卷子做完了，Holder 也已经明白了我已经没有高中时候那种手算能力了。</p>
<p>不少人说这份卷子很难，其实我看真正算得上是难题的几乎没有，几乎每道题都有很自然的思考角度和解决方式。</p>
<p>但问题就是现在大部分的高考备考流于做模板题，练死思路，结果就是这次高考连稍微难点的解三角形、立体几何都做不出来。</p>
<p>复习不够全面，可能连条件概率的定义、棱台的体积公式都会忘记。</p>
<hr />
<p>这份卷子只不过是把平时用来送分的解答题前几条，数列、解三角形、立体几何稍微出得有了点新意，稍微加了点门槛。卷子其他地方平心而论，概率与统计只要记得条件概率定义五分钟就能写完，解析几何是考烂了的二级结论，选择填空也乏善可陈。但就是这样，就能把平时的中档生直接卡住。</p>
<p>而且这份卷子的特征就是，思路的高下直接影响分数。想到了妙手，就能一分钟内看出答案，想不到，那就和我做填空题最后一问一样算到起飞还得不到答案。一旦陷入了这种状况，如果不及时调整思路，可能影响的是后面的解题状态。</p>
<p>说明死方法没用了，脑子要灵活。总而言之，是一份好卷子，但是被骂也是理所应当。</p>
]]></content>
      <categories>
        <category>【杂谈】数学</category>
      </categories>
  </entry>
  <entry>
    <title>大二春季学期学期总结</title>
    <url>/2021/06/19/grade-2-spring-conclusion/</url>
    <content><![CDATA[<p>魔幻的大二春季学期最终还是随着自动机考试的结束而落幕了，随意写一点东西来总结一下吧。</p>
<span id="more"></span>
<p>虽然还没有出分，但我能够预料到这一学期如果按照绩点来评判，可以说过得十分坎坷。但是，这一学期还有更多的比绩点更值得重视的一些东西。</p>
<h2 id="课内学习">课内学习</h2>
<p>课内总体而言过得很不平凡，即使这一学期只有 24 学分的课程。与一年前那种 OOP 作业一发下来就赶快刷榜完成，高代选讲还愿意在课外学习很多内容的热情相比，我这一学期对课内显然是淡薄了很多。标志性的事件可以罗列出来：</p>
<ul>
<li><p>人智导 PA2 是在黄浦江上遥控卫爷写的，PA3 是在上海桌游店里打山屋惊魂的间隙交的</p></li>
<li><p>在各种情况下写过数电实验报告，包括在人大门口醉酒的时候、在去上海的火车上、在轰趴的自动麻将机上（除了考试，我每一次实验的代码都是抄的）</p></li>
<li><p>一个学期没有见过数电、自动机、人智导的老师，这三门课均让我在考试周通了宵（一个大二学生用 24 小时创造一个奇迹）</p></li>
<li><p>软件工程大作业不到最后一周都没有认真写 UI</p></li>
<li><p>高性能一气之下决定退课，虽然从未后悔过这个决定</p></li>
<li><p>英语课一个学期就做了一份作业，占比最大的 Task C（团队 pre）只花了三四天准备</p></li>
<li><p>物理实验报告分数为 9, 8.5, 8.7, 8, 8.7，上学期则是 9, 9, 9, 9.3, 9</p></li>
</ul>
<p>总之就是这学期浪了一些，或许是认清楚你清贵系的教学水平甚至还不如高中之后的一些合理举动。如果要我来评价大二下学期这些课程的话，我只能说除了《不朽的艺术》这一门课，其他的课程我丝毫没有觉得学习到了什么有用的东西。再加上期末四门专业课考试两门可以说出事故的情况，我更是愿意给这一学期以低评价。</p>
<p>我大概算了一下，反正现在绩点的浮动不会多大，还不如抓紧时间，做一些我觉得有意义的事情。</p>
<h2 id="thuinfo">THUInfo</h2>
<p>我也说过，这是我唯一拿得出来的作品。虽然之前有写过一些小型项目，它们虽然也是我探索的足迹，但总体没有 THUInfo 给我带来的成就感大。</p>
<p>但比较愧疚的是这一学期没有给 THUInfo 作出很大的贡献。寒假的时候翻新了“计划”功能，修了几个小 bug 之后，学期中除了加了比如说“今日高亮”这种小功能之外，我也就没有作出什么贡献了。</p>
<p>但是，暑假确实是想要做很大的事情的。一方面是和校内 iOS Club 搭上了关系，对方也恰好想要找到一个重点支持的项目，双方互相需要，何乐而不为呢。通过它我们找到了美工，目前也有了一个较为简单的 UI 效果图（不得不说，做设计的就是做设计的）。另外一方面是<a href="https://www.zhihu.com/question/63407413">栋栋</a>加入了团队，总之多一个技能熟练的人手是很不错的。</p>
<p>敬请期待暑假过后的 THUInfo 3 系列版本。</p>
<h2 id="社工">社工</h2>
<p>大一下学期一番折腾之后，一个学期没有加入任何学生组织。但是一个转变的契机就是 xge 和我说他和栋栋准备开发日麻，随后将我纳入了 308（科协 &amp; 算协活动室）常驻人员之中。在 308 蹲守的过程中，我也认识了科协的许多同学（再次点名“表扬”大恶人安頔）。最后决定加入科协，大概是那天去出去散心醉酒，隔天回校的时候恰好赶上 C 楼门口的智能体嘉年华。本来是不打算去的，想着去看看也没啥问题，就突然发现科协办的东西还挺有意思。随后又去蹭了智能体决赛，还坑了 Omega Fantasy 一顿饭。</p>
<p>随后大约是某晚和安頔夜谈，经过一番交流，决定去混一个科协副主席。</p>
<p>怎么说呢，或许真的是如同之前一些人的评价——“你大一下学期的那种情况实属罕见，哪有人开局社工就是王炸的”一般，社工并不是我想的那么不堪。现在大概是发现，有一群志同道合的人一起做事情是多么愉悦。</p>
<h2 id="sakana">Sakana</h2>
<p>这一段没有什么特别想说的，总之揭开了一些过往，给一些问题作出了解答，这应该也是这个学期我应该可以说最为重视的一件事。虽然有很多的小细节，有很多的瞬间，但还是就留下我之前发在空间里的一段话吧：</p>
<blockquote class="blockquote-center">
<p>虽然我真的不会挑时间，不会好好规划安排行程，或许会因为冲动把事情做得很离谱。 但真的感谢包容我的愚拙。</p>

</blockquote>
<h2 id="一些总结与闲话">一些总结与闲话</h2>
<p>这一学期的 Holder 发生了相当大的改变，应该是真的去思考过我的大学应该如何度过这个问题了。之后就确立了“<strong>我要帮助后辈们尽可能少走弯路</strong>”这样的一个简单的目标，于是和改制的科协网络部不谋而合，于是和高中班主任谈好了回高中给学弟学妹讲数学竞赛。在确立好自己的真正想做的事情之后，便是卸下一些伪装。先前的我大概因为完全不能找到我自己的目标，而将自己浸没在无意义的内卷之中，也不敢面对自己的一些感情。这一切的一切，都在稍微通透之后被瓦解了。</p>
<p>当然我感觉需要警惕的，就是我暂且需要约束一下自己无限膨胀的野心，不能给自己捞太多的锅，接太多的任务，应该让自己慢慢达到一种平衡。</p>
<p>不如现在，来说说之后想要做的事情吧：</p>
<ul>
<li><p>接着跟进在刘知远实验室的任务，努力发篇文章，发完就撤退</p></li>
<li><p>翻新 THUInfo 的 UI，开发一些新功能</p></li>
<li><p>在科协把“技能引导文档”这件事做好，做到宣讲会上的“为了创建一个 user-friendly 的计算机系而奋斗”</p></li>
<li><p>好好地生活，让自己的大学不仅仅是绩点和社工</p></li>
</ul>
<p>还有就是一些暑假要做的事情，比如说 GRE，比如说科目二，比如说回高中讲竞赛，比如尝试一下图形学。</p>
<p>写这篇潦草的总结的时候，我应该还因为昨晚通宵复习自动机而头晕目眩，但是我的神志却异常清醒，因为我的大学似乎是真的开始了。</p>
<p>我有分享歌词的习惯，这里也来一句吧。但不同于之前我喜欢分享那种长长的，哲学家写散文式的歌词，这个歌词很朴素：</p>
<blockquote class="blockquote-center">
<p>ケーキも大好き，君も大好き。</p>
<p>——「とある一家の御茶会議」</p>

</blockquote>
<p>祝愿我余下的一半本科时光，能过得有意义。这里是 Holder，我们一起接着走下去吧。</p>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>大三秋季学期学期总结</title>
    <url>/2022/01/05/grade-3-autumn-conclusion/</url>
    <content><![CDATA[<p>今天考完了最后一门《编译原理》，随后参加了年级会。这样看来，我的大三上学期，这个被学长们称为渡劫的学期，就这样平平无奇结束了。</p>
<span id="more"></span>
<h2 id="对自己的质疑">对自己的质疑</h2>
<p>这学期之所以被称为渡劫，是因为按照教学计划计算机系的最核心的四大原理课是在这学期修读。这四大原理是《计算机组成原理》《计算机网络原理》《编译原理》《信号处理原理》。而我所说的对自己的质疑，就是我发现我完全对这四门课里的大部分提不起任何兴趣。</p>
<p>在成为大三学生之前，我从未质疑过我为什么要来这个专业，甚至一定程度上庆幸虽然选择计算机是随大流，但自己却也莫名其妙混得不算差。大一和大二修读的课程，我大多都能学得比较明白，再不济也能做到考前 overfit 一波混个考试分数。得益于此，我大三之前的 GPA 可以说还挺不错的。</p>
<p>但是进入大三之后，我明显感受到力不从心。比如说造计算机，其实我早就在《数字电路实验》这门大二下学期的入门课里面认识到了我似乎对硬件设计一窍不通，或者说完全没有一种愿意学习这类知识的冲动。另外比如说计算机网络相关，我对网络只是单纯知道一些简单的概念，深入了解却让我相当抗拒，我不是抗拒特定的课程，我是对整个计算机网络这个领域感到深刻的无力，甚至是生理性不适。</p>
<p>所以我有意无意地拖延了造机，不到最后一周没有真正开工。我有意无意地只用一下午复习网原，有意无意地没有去任何一堂除了体育之外的课。</p>
<p>因为我抗拒，我理解不了这些知识背后的逻辑，支撑着我学习新的领域的动力不能直接迁移到计组和网原这些课程上。</p>
<p>与此对应的，我课余在尝试着学习一些数学，研究生方向也想尽量往数学相关方向贴近一下。在学习《信号组成原理》的时候，常常痛斥其数学基础不牢靠（毕竟是工科面向应用的学问，其宁愿牺牲严谨性也要保证易用性），也曾钻牛角尖一样地和别人争执过信号这门课里的数学体系是不是矛盾的。</p>
<p>我发现我对知识有一点奇妙的偏执，我希望我学习的东西是体系的、有逻辑的，或者说我希望学习一个由人类<strong>发现</strong>的学科，而非由人类<strong>发明</strong>的学科。比如说网络协议往往充满了历史包袱、前人的失败经历、欠考虑的机制和随后而来的零碎补丁，它不是一个等待人类来发掘的逻辑体系，它本身就是人类在实践中堆叠的经验谈。与此类似的，还有我拒绝研究 CSS 的那一堆难以理解的属性，不想深究 Web 混沌初开时的前端技术。</p>
<p>所以我开始反思，我或许真的应该当时听从一些劝诫去学习数学什么的，但实际上我也知道这不过是虚无的懊悔，不过是这山望着那山高般的幻觉。但基于这样的自我认识，我尝试着去选择和数学关系较大的计算机领域作为研究生方向，比如说渲染。</p>
<h2 id="课内学习">课内学习</h2>
<p>和之前说的一样，这学期六门课，四大原理加两门限选。网原和网安都是网络方向的课程，考试几乎全都是背诵就行，但悲哀的是我厌恶计算机网络，连课件都懒得打开看两眼。不过还好网安不难，但是网原我估计差不多就是 B+ / B / B- 里面随机给分了，自我认为 3.3 绝对不亏，3.6 绝对血赚。</p>
<p>计组确实硬核，而且我也不喜欢写硬件语言，因为它思维逻辑和我常用的软件语言相当不同，所以造机大实验着实让我一个星期没睡好觉。但是计组和网原最大的不同是，计组学不好我认为原因是客观上我能力不行，网络学不好我认为原因是主观上我厌恶。所以即使计组不简单，考试也不简单，但我依然很努力地去学了三四天，虽然感觉也没考多好。</p>
<p>编原今年史诗级削弱，取消实验考试改为期末周后的附加实验，删减考纲，降低试题难度，提升平时作业占比。就说最明显的，今天在考场上看到 SLR(1) 文法的题选的语言竟然是 <span class="math inline">\(\{a^n: n \geq 1\}\)</span> 的时候，我已经真的深刻领悟到，什么是把分送到你手上。</p>
<p>信号原理自己学得挺开心，毕竟自己也喜欢有事没事钻一钻所谓事物本质的东西。比如说当我期末复习的时候，把数字滤波器、传递函数、 Z 变换、收敛域与系统性质那一套在课间上混乱不堪的概念理清楚的时候，自己真的有一种豁然开朗而想继续深入学习的感觉。</p>
<hr />
<p>要说总体的话，就是这学期估计 GPA 还得继续往下掉，但我也只能说 Who cares。大一大二到大三，自己也经历了微积分不考 4.0 就是挂科，数据结构 3.6 就是胜利到网原 3.3 也不算亏这一路的心态变化。</p>
<p>但似乎 Holder 还是没有摆脱那一种奇妙的思维惯性，peer pressure 还是在隐隐约约给我带来一些不愉悦。</p>
<h2 id="科协">科协</h2>
<p>上学期奇妙地成为了副主席，那这学期就应该做点事情了。</p>
<p>在还没有开始造机、造路由器之前，由于课业压力暂且还不大，我便抽了一点空余时间把技能引导文档搭建起来了，并且写了一些东西进去。</p>
<p>技能引导文档大约是一种课程前置知识的补全，因为我确实见过不少同学都已经开始上课了，却连前置技术栈都不了解，最后只能网上随便找点资料混过去。秉持着能做点什么都是好的的想法，索性借着科协这个平台，搭建起了这样的一个文档共享的网站。</p>
<p>但是随着造机、造路由器和期末周，文档维护也就暂且搁置。现在考试完了，寒假是一大波开工的好时机。</p>
<hr />
<p>说到科协就必须要提到安老板，就要提到我最终估计就会采纳安老板的提议，去媒体所混日子了。</p>
<p>现在还在绝赞学习《GAMES101》，感觉自己摸鱼摸得太过了其实。</p>
<h2 id="摸鱼摸鱼摸">摸鱼摸鱼摸</h2>
<p>这个学期虽然很辛苦，但依然可以忙里偷闲摸不少鱼。小学期莫名其妙搞到了一个日区 App store 账号，于是又可以开始玩 Project Sekai 了。这种又有音游难度，又能抽抽卡养养妹子看看剧情的小游戏我确实喜欢，所以这个学期也基本一直都在玩，Phigros 基本都荒废了。</p>
<p>要说还有什么的话，就是打牌，无穷无尽的打牌。毕竟打牌确实没那么多限制，特别是打网络麻将，随时随地就开一把打着玩就行。所以 Holder 倒也经常在学累了的时候开一把，消遣消遣倒也不错。考试周其实打了不少牌，基本上一天打五六把还是有可能的。可能也是频率上来了，这学期也总算把四人麻将打上玉之间了。</p>
<p>除了网络麻将就是宿舍里搓牌，本学期最大的进展就是大约通过次世代认识了一些八字班学长一起打牌，不过确实也算是见识到了我这类图乐子打牌和认真打牌人的水平差距。</p>
<hr />
<p>另外可能就是通过 V+ 吹水群认识了另外一些人，平常也是交流交流 Vocaloid 相关，吹水聊天。可能偶尔会在周末的时候组织去国贸唱 K，自己也去过两三回了，确实是放松的好机会。</p>
<p>不过也因此渐渐喜欢上了学习的时候唱歌，虽然之前也偶尔会这样，但是真正感觉有意识地哼唱一些歌还是这个学期的事情。</p>
<h2 id="一些碎片">一些碎片</h2>
<h3 id="小学期的精神问题">小学期的精神问题</h3>
<p>暑假的时候我处于一种神经敏感的状态，整个人还在五月份那一次大崩溃的余震之中喜怒无常。而八月中旬的小学期，由于众所周知的屑课《Java 语言程序设计》，以及当时一些早已遗忘的情感问题的引子，Holder 又成功经历了一次情绪崩盘。</p>
<p>大约，那某一个夜晚，在工物馆和美院停车场之间小路上，漫无目的地晃荡着和 Sakana 哭诉着的场景，是我小学期记忆最深刻的事情。</p>
<h3 id="无界美术馆">无界美术馆</h3>
<p>上海的一个美术馆，在一个周末 Holder 偷偷跑去和 Sakana 到那里参观去了。</p>
<p>Holder 向来是不太解风情的，对这个美术馆里展出的那些灯光艺术、雕塑、投影交互等等作品，我只能说“好闪”“好亮”“好鲜艳”这些明显语言贫瘠的评价。所以说 Holder 还只能读死书，或者有事没事和舍友抬抬杠，精神世界倒也是一片荒芜。</p>
<h3 id="造机的三星期">造机的三星期</h3>
<p>其实我也说了，虽然造机确实给了三星期，但实际上我只在最后一个星期加紧做了不少事情。当时最喜欢的工作模式就是在 308 一个人坐着，手机挑一部没有很烧脑剧情的日常番，边看番边等 Vivado 编译或者看波形图。就这样半悠闲半紧张地工作着，倒也几天内写掉了不少东西。但平心而论，我依然没能从硬件设计中获取多少快乐，虽然最终看着自己写的 CPU 上能运行自己写的贪吃蛇游戏，但要让我回到那三星期，我说还不如打两三把牌。</p>
<h2 id="所以呢">所以呢？</h2>
<p>所以说大三上学期也就这样结束了，课业成绩并不理想，人也过得疲惫不堪，其中一大半责任是网原。但是换一种角度，我认识了新的一起打牌的朋友，认识了能和我一起唱 V 曲的同学，Project Sekai 时不时能抽出好看的角色，打牌虽然会恶调但确实缓解了一些紧张情绪。自己也逐步和自己和解，不再纠结于一些得失，自己也在尝试着尽力做一些帮助他人的事。</p>
<p>所以其实我也不知道我这个学期究竟是什么样的，这篇总结我也写得磕磕绊绊不知道什么是这学期的主线。传统意义上四大原理的主线在我这里断裂了，因为我精力分配中它们并不优先。</p>
<p>但总归是看到了本科生活的尽头，自己也已经有了意向性的导师，也对自己究竟想学什么、想做些什么有了模糊的应答。虽然还是时不时感叹我真的不适合计算机系，感叹自己怎么过得这么惨，时不时在空间或者朋友圈发一些意味不明的文字，但总体上 Holder 还是履行了上个学期的诺言，尽力地享受着自己的本科生活。</p>
<p>寒假的话，可能要做不少事了。</p>
<ul>
<li><p>技能引导文档寒假宣传</p></li>
<li><p>THUInfo 翻新</p></li>
<li><p>实验室科研的一些事务</p></li>
<li><p>自学一些数学以及日语</p></li>
</ul>
<p>下学期也选了若干看起来还挺有意思的课程，希望下学期能过得更快乐一些。</p>
<blockquote class="blockquote-center">
<p>失うことに慣れてく中で失くさずにいた大事な思いを、</p>
<p>抱きしめたら不意に涙が落ちたのは、</p>
<p>この街でまだ生きていたいと思うから。</p>
<p>——「幽霊東京」</p>

</blockquote>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>大三秋季学期前的一些碎话</title>
    <url>/2021/09/12/grade-3-autumn-preview/</url>
    <content><![CDATA[<p>自己似乎就这样莫名其妙成为了一个大三学生，其实还隐隐约约记得一年前刚进实验室的时候刘知远的一句“没想到这么快八字班也要造机了啊”。现在想来，九字班这个词语从原先的代指新生，渐渐地变成了代指一群大三老油条，而自己的一字班学弟也正在憧憬着四年的本科时光，一时间竟觉得大学原来也快结束了。</p>
<p>今夜突然接到 Sakana 的一句“我还是好焦虑”，唐突地自己也开始陷入了一种窘迫的心理。自己，真的准备好去迎接之后的生活了么。</p>
<span id="more"></span>
<h1 id="学业和大三的渡劫">学业和大三的渡劫</h1>
<p>清华大学的计算机系向来会把大三上学期称为渡劫，原因是计算机核心专业课四大原理一大工程（计算机组成原理、计算机网络原理、编译原理、信号处理原理、软件工程）将会在一个学期内学习完成。虽然自己已经提前把软件工程这门课草草了结，但是作为一个对硬件和计算机系统没有感觉的人，四大原理就足以让我恐惧。已经能够预见到，将来的 Holder 或许会被造计算机、造路由器、造编译器、写 Matlab 处理信号等各种困难的作业包围，然后还要抽出时间应付掉 VLSI 和网安两门限选课的平时学习。</p>
<p>其实也正如一些人对我的评价所说，我不是一个害怕困难或者折磨的人，但是我在受折磨的时候会习惯性一个人顶着。我只是默默地担心着自己的心理健康情况，自己这近几个月来时不时的情绪崩溃足以让我感到害怕。</p>
<p>但实际上，我还是在安慰着自己没有问题，劝慰着自己造机造路由器会顺利，或许还会有点乐趣。也或许会安慰自己，信号处理原理全是微积分，自己微积分学得挺明白不用担心。然而即便如此，还是抵挡不住现在的焦虑和不安。</p>
<h1 id="科研的不顺和前途的迷茫">科研的不顺和前途的迷茫</h1>
<p>我大一就跑到组里去了，是一个进组挺早的人，家里人一直比较关心我这么早进组会怎么样，当时还不以为意，但现在看来还是有点不大行。过早的进组让我缺少时间去打基础而过快地投入到实际工作之中，我对人工智能的理解本身就是几乎为零，和同组的那些曾经 C++ 手搓神经网络的大神相比自然不可相提并论。想到自己每周二的组会都会想尽办法编造一个自己没认真做完事情的理由的时候，那种窘迫和尴尬又涌了上来。</p>
<p>至今还记忆犹新的一个场景就是，中期汇报的时候刘知远老师在场，到我上去汇报的时候，应该是说出了大量幼稚或者说根本不合理的想法。那个时候刘知远说了这样一句：“现在 Holder 这个样子，我们需要反思一下我们的指导方式”。</p>
<p>这种看似自责的说法实则，看得出来他们的意见。</p>
<p>或许从那以后，我投入了大量的精力弥补我的基础，我开始看人工智能相关网课，从全联接层开始看到 CNN / RNN，再到 Encoder-decoder 或者 Transformer，然后开始使用 HuggingFace 的 BERT 和 T5 轮子，钻研 API 设计和源码。这一定程度上牵扯了我大量本应该用于课内的时间，但收获也是不错的，我 finetune 的 BERT 模型做出了被学长们称为“promising”的成果。</p>
<p>但是后续是无休无止的挫败，我 T5 相关的工作至今都处于停滞状态。在那段时间，我经历了第一次情绪崩溃，一时间万念俱灰，每天醒来只有想睡回去的想法。那段时间，身体也一直不是很好，时不时就会有心脏疼的感觉。这种情况下的我，选择了实质上的彻底放弃，虽然一直没有和带我的学长提出我要退出。</p>
<p>现在我也不想继续学习人工智能了，每每看到那些曾经熟悉且能熟练运用的数学公式、轮子、模型，只会让我想起那段折磨至极的时光。但大三上学期的我，早就已经浪费了一年的时光，现在的 Holder 的后路究竟如何，完全还是未知的，我该如何面临毕业，也还是未知的。</p>
<h1 id="或许还是有些好消息的">或许还是有些好消息的</h1>
<p>稍微能够宽慰我的，就是我现在过得还不错。至少我身边的一切，我的学业成绩、我的感情、我的朋友们、我的家人们都处于稳定的状态上，除了我自己的出路，其余暂且不需要我过多担心。</p>
<p>这已经足够了，如果不去太担忧未来的不确定，活在当下自然是自由而快乐的。中厅的麻将还能用，新笔记本上还有若干没有玩的游戏，Sakana 还在身边，我还是有一群能聊得来的朋友，这一切的一切，暂且能够让我不再过分担忧今后。</p>
<h1 id="holder-的一些自述">Holder 的一些自述</h1>
<p>在别人眼中，特别是我高中的老师眼中，我是一个特别会规划的人。然而实际上，Holder 永远是一个走到哪里算哪里的人，只不过总是喜欢回忆，总是喜欢和过去的自己斤斤计较，懊恼于一时的失误。</p>
<p>Holder 是一个喜欢沉浸在回忆中的人，我对过去的记忆可能过于清晰。我的一个习惯性动作是，无聊的时候将记忆中的场景构建出来，比如说尝试构建出：</p>
<blockquote class="blockquote-center">
<p>2018 年的 8 月份，在高中的三层小楼中，Holder 和同学们正在为升入高三做准备。除去我们升高三的理科实验班同学，其他人早已放假。那座小楼已经老旧不堪，空调毫无用处，电风扇没有力气。外面是炽热的阳光和扭曲的蝉鸣。</p>
<p>Holder 趁着下课偷偷跑出小楼，听着下课铃在早已空荡的学校中回响。</p>

</blockquote>
<p>我或许会把这个场景构建得和刚经历差不多，然后自己沉浸在这个场景里回忆当时自己的所思所想。这个习惯来源于初中睡午觉，当时为了让自己快速入睡，就会使用这种方法——在脑海中完全重建回忆的场景，这种方法消耗脑力很多，有的时候没有构建完成就慢慢睡着了。</p>
<p>这个习惯一般会让我很难忘记一些事情，但是坏处就是：</p>
<blockquote class="blockquote-center">
<p>我忘不掉一些应该忘却的事情。</p>

</blockquote>
<p>所以至今我的思维包袱是很重的，回忆构建的数据库足够庞大，能够支撑我思维的快速切换跳转和联想。但是一旦联想到一些本应该忘却的场景，比如说曾经的尴尬场面、自己伤害别人的行为，那 Holder 可能就会沉溺在这里，然后一遍一遍鞭尸自己。</p>
<p>这还是挺折磨的，这让我很难聚焦于当下应该做的事。</p>
<h1 id="所以说">所以说？</h1>
<p>这些文字其实没有任何意义，可能明天起来就会觉得幼稚和不成熟，但是确实是现在困困的 Holder 想要记录下来的。</p>
<p>Holder 就要成为大三的学生了，在此之前，12 号先要去北大吃一顿烤串，这足以让我暂且安静地睡去。</p>
<p>晚安。</p>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>大三春季学期学期总结</title>
    <url>/2022/07/07/grade-3-spring-conclusion/</url>
    <content><![CDATA[<p>这个学期说实话比较不太平凡。</p>
<span id="more"></span>
<h1 id="课内学习">课内学习</h1>
<p>这学期最一开始的打算是修完培养计划，所以除了 OS、系统结构、数学实验三大必修课之外，还选了整整六门限选课，远超于正常人的两三门。</p>
<p>学期一开始实际上没有什么体会，毕竟什么课都还没有给压力，加上当时没有封校，所以甚至还能保持每周都有出校活动，比如打四口机、打八口机、V+ 群聚、浮生群聚等等。而且当时也是刚刚加入徐昆的实验室，刚刚给我分配了工位，还在布置工位的硬件，所以过得总体而言还算快乐。</p>
<p>但是问题就在之后慢慢出现了，我们来梳理一下我选的所有课的任务列表：</p>
<ul>
<li>OS。六个 Lab，期中期末考试</li>
<li>系统结构。每周书面作业，两个 Lab，期末考试</li>
<li>数学实验。十个 Lab，期末考试</li>
<li>现代密码学。三个 Lab，期末考试，考勤</li>
<li>数据挖掘。六个 Lab，大作业，考勤</li>
<li>搜索引擎技术基础。两个 Lab，大作业</li>
<li>计算机图形学基础。四个 Lab，大作业，考勤</li>
<li>数据库专题训练。五个 Lab</li>
<li>存储技术基础。两个 Lab，论文笔记</li>
</ul>
<p>这些东西加起来快四十个 Lab，哪怕就是平均分配到学期十六周，每周都会有两到三个 Lab 要去做。而且这些 Lab 都不太算是一天能写完的量，少的可能一天一夜，大的比如说现代密码学的 Lab2、存储技术基础的 Lab2，都是占用了半个星期乃至一整个星期没日没夜地写的。而且数学实验的 Lab 一个都几千字，写得人都发麻。</p>
<p>再加上 OS 的 Lab 和数据库的 Lab 的截止日期一般都是某个周日，这就更加恐怖了，我有的时候周日需要快速赶工两个 Lab，然后数据库这门课的 Lab 如果不做他的很难的拓展功能是拿不到 4.0 的。</p>
<p>在这些东西交杂之下，我不得已先是退掉了数据库，因为 OS 当时已经期中考完了。然后做存储技术基础的 Lab2 写到人都快废了之后，为了 keep 绩点也最后退掉了。</p>
<p>我已经对这一学期的后半学期没什么印象了，因为每天都在赶工，每天都在为课内的事情折腾。再加上当时北京疫情封校，导致几乎所有的娱乐活动坍缩成为了活动室打麻将，更让这学期后半段一点记忆点都没有。</p>
<hr />
<p>好在你清良心发现给了记两门课 PF 的机会，我立刻记了 OS 和系统结构，这样的话我就可以摆烂到底，最后考试我也直接裸考，反正谁怕谁。</p>
<p>不过即使如此，选课选多了的弊端还是会在期末周浮现，那就是大作业。这么多课里面，有三门课有大作业，而且在我期末逃难的时候，还有系统结构的 Lab2 没写，这些东西构成了我六月底考试全部结束之后的噩梦，这些作业成功让我四天五天左右没有碰到床，都是在自家沙发上睡过去的。</p>
<p>这中间的插曲就是数学实验的事情，因为取消了期末考试，所以评分只能依据十次 Lab，但是这十次 Lab 大家几乎都是满分，一点区分度没有。所以当时老师就提到了需要把上课情况纳入考量，但问题就在于我是一个巨大习惯自学的人，真的是一次课没有去过。当时在政策说明的时候，老师甚至说出了考勤分可能占比到一半的政策。</p>
<p>这就有可能导致挂科，而挂科真的会非常难弄。于是我只能去和助教说明我的情况，自证自己真的这门课学明白了。</p>
<p>不过结局也是戏剧性的，助教最后透露了考勤分只占总评两分，但是我认识的带我一共四个一次考勤没去的同学，两个 4.0 两个 3.3，我们平时分都是几乎一样的。这就很奇怪，没有人知道老师最后怎么给分。</p>
<hr />
<p>就结果而言，这个学期可谓是成功的，因为我每一门都是 4.0。但是就过程而言，这段过程可谓是艰难至极，我可再也不想经历一遍。</p>
<p>不过已经最终了，绩点排名 26%，方案内也只剩下 4 学分，体育没有挂科，专业主修也都完成，应该进推免推荐名单问题不大。加上名额也已经口头确定，我自己做实验室的事情也还不错，总之结果上而言，我的本科看起来已经快完成任务了。</p>
<h1 id="实验室">实验室</h1>
<p>这是这学期最大的破事。</p>
<p>本来是在徐昆的图形学实验室的，也分配了工位，白嫖了一个台式机，自己还稍微布置了一下工位。</p>
<p>基于此我觉得我应该就安定在徐昆这里了，不过也确实，除了猫猫之外这里没有其他九字班的同学，而猫猫打算出国，并不会和我抢名额，而且当时徐昆和他的对话也暗示着名额应该会有给我的倾向。</p>
<p>就这么一系列的事情我就觉得问题不大了，应该就定在这里了。</p>
<p>这里稍微给自己辩解两句，如果我真的想做好一件事，我可能会花很长时间去打基础然后去做，但这样的问题就是会有一个月乃至更长的时间没有什么明显的产出。然而实验室的组会并不会允许你一周没有什么产出。那么问题就显而易见了，我在组里的很长一段时间内，都在学 GAMES101、学习什么是可微渲染、研究学长代码的架构，而毫无可以在组会上说的东西。</p>
<p>大约是四月底的某一天，带我的学长给我介绍了项目的新成员，一位茶园过来的九字班同学，当时我就隐约觉得不大对劲，但是也没说什么。</p>
<p>最后也就是大家都知道的，我的名额被挤掉了，五月份的时候，还要去找新老师。先是飘到 Prof. Ji 那里打算去做量子计算，但是考虑到前景和自己兴趣，最终还是 quit 了。</p>
<hr />
<p>在这之后我有时间就会去看媒体所的导师介绍页面，我几乎给上面每个老师都发送了简历，但是大部分老师都因为没有名额回绝了我。然而在这些老师里面，贾珈老师虽然已经没有名额，但是她愿意把我推荐给其他老师，这样我就认识了孙立峰老师。</p>
<p>之后便是简简单单的互相见面，我自我介绍，他分配学长和我交流。不过不得不说黄天驰学长真的好好交流，就没有什么交流障碍，很舒服的一位学长。</p>
<p>这之后就是简简单单的流程，开组会些项目，最后在七月份我们口头确定了名额，这样这件事情才最终落定。</p>
<p>虽然中间还有一些奇奇怪怪的经历，不过也没有什么特别值得介绍的，所以就算了。</p>
<hr />
<p>不过现在反思回来，徐昆那边我其实还是有点咕咕咕的，因为课内真的选太多课了。</p>
<p>衷心建议，大三没必要选这么多课，还有大四可以选。这段时间就应该好好去和导师交流，做好他给的项目。否则真的很容易丢掉名额。</p>
<h1 id="科协-thuinfo">科协 &amp; THUInfo</h1>
<p>有点心怀愧疚的两件事，因为确实没有给这两方面做出什么贡献。</p>
<p>没什么好说的了，没什么好辩解的了。</p>
<h1 id="sakana">Sakana</h1>
<p>本来在寒假的时候，Sakana 在计划着周末来北京玩，结果是大家都知道的四月封上海五月封北京。于是一整个学期没有线下遇到 Sakana。</p>
<p>然而甚至连视频都没有怎么弄过，因为我课内非常之忙，她也并不空闲。</p>
<p>说实话异地是真的痛苦，没有感情基础的话很容易因为失去共同话题、失去热情等一系列的东西直接炸裂。</p>
<hr />
<p>不过好事就是我和她都提前回家了，忙完期末之后我们大约是见了很多次的，她也开始打日麻，我也尝试着再次入坑王者。</p>
<p>比较好玩的是，我每每会以出来干活的名义约她去星巴克坐一下午，然后实际情况是，我和她贴贴摸鱼一下午。想起来 Sakana 就已经说过两人在一起是不太可能干得了活的，现在确实也是这样。</p>
<p>最近也终于有一种关系走向正轨的感觉，当贴贴变得自然的时候。</p>
<h1 id="还有什么呢">还有什么呢</h1>
<p>打牌，打全高赛。虽然进了所谓校队，但是你清直接在全高赛被暴打，遗憾倒数第一出局。事后也算是发生了一些奇妙的摩擦。</p>
<p>但是确实借助这个机会认识了很多人，也和很多人加深了联系。</p>
<p>唱歌，但是在封校之后也只是在操场上唱过几回。</p>
<hr />
<p>说实话，Holder 还是觉得自己好像很无趣，娱乐活动真的好稀少。</p>
<h1 id="还有一些别的什么呢">还有一些别的什么呢</h1>
<p>其实这一学期应该说经历了开头斗志满满，中间疲劳过度，五月陷入困境，六月初见曙光，七月挣脱这样的一个流程。就小说的故事性而言，这样的情节走向比较符合一般的小说。</p>
<p>根据上面的描述，大家也都发现了，课内真的占据了我这个学期几乎所有时间，哪怕就是理论上最忙碌的大三上学期我也写了很多打牌、V+ 群、科协相关的一些事情。</p>
<p>我也不止一次被学长批评没有必要把大三下学期课内塞这么满，卷卷科研争取名额才是最优解。不过即使如此，我也没怎么听进去，还是我行我素继续和课内搏斗，最终自然还是吃到苦头。</p>
<hr />
<p>那么，现在已经是基本确定后路的状态了，大四也选了一些好玩、对胃口的课，那么，继续享受剩下来的一年吧。</p>
<p>不过今年的毕业季确实看得我眼馋，我好想毕业。</p>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年寒假总结</title>
    <url>/2022/02/13/grade-3-winter-conclusion/</url>
    <content><![CDATA[<p>寒假也快结束了吧。</p>
<p>其实依然是什么事情都没有做的一段时间。</p>
<span id="more"></span>
<h2 id="打牌">打牌</h2>
<p>在放寒假之前雄心壮志地想好了很多想做的事情，从 THUInfo 到技能引导文档，乃至实验室工作甚至是学抽象代数。但实际上我的寒假大约一大半时间在打牌。</p>
<p>在寒假回家的前一天，我打了一个通宵的雀，从那以后就莫名其妙比以往更沉浸在打雀之中。一方面可能和当时刚刚打上玉间有关，更重要的可能是当时我恰好处于绝好调的状态。那段时间我几乎是一四流选手，顺风的时候不需要读牌，不需要防守，牌局前期一般就能通过奇妙的运气和出亲跳和若干亲满奠定靠近五万点的胜局，后续哪怕铳几个子家满贯也不过洒洒水。</p>
<p>所以我从刚进玉间到冲上豪三并未花很长时间，大约两个星期而已。但是随后而来的是恶调，那段时间牌谱屋的数据表明我的起手平均向听数直接飙升。这个时候原先漏洞百出的打法显然完全不能适应，所以掉回了豪二。</p>
<p>在寒假快要结束的时候，接到了你清打算组织参加全高赛的信息，即使当时已经有点觉得自己过于打雀而疏忽要做的事情，但是还是毅然决定参赛。目前的结果呢，即使自己技术拉跨，但还是靠着奇妙的狗运挂边入选了代表队。</p>
<hr />
<p>我之前在 QQ 空间以及朋友圈都发过一个反省自己打雀水平的小短文，一定程度上也和这次选拔赛四位评委对我的评价类似。</p>
<p>我对我自己的一个评价就是过于死板或者直线，不够灵活，这和自己面麻喜欢打快牌以及还有时在家和家里人搓牌有关。快牌的一个显著特点就是几乎没有什么读牌的时间，因为构建自己手牌的方向就足够耗时间，所以我应对快牌的方式就是不顾一切地进攻，烂牌也全牌效，抓到明显的危险张也往往手比脑子快拍出去放大炮。并且，另外一种应对就是尽早立直进入摸切，这样能获得一点休整时间。</p>
<p>过于欠缺的防守和读牌技术使得我这一次在比赛中，即使有意识在防守，也常常会在半途发现自己没有安而侥幸着遵循“没有安就日”的信条重新回到进攻路线，然而心中的不安和紧张又会在摸到模棱两可但安全度还可以的牌的时候转为防守。我猜测这也就是评委认为我不稳定的原因之一。</p>
<p>但其实我说没有安的时候真的没有安么？其实很多时候是可以通过读牌获取一些安度其实还可以的安的。我的防守理论只有筋牌和壁牌，我对手顺的认识是相当低的，比如说连切 64m 时一般而言 58m 铳率低，这一点我很难注意到，我只会认为 58m 是没有通过的筋而完全缩。</p>
<p>还是想找找有无讲防守的一些书籍什么的。</p>
<hr />
<p>不够灵活的另外一个致命体现就是甚至可以看漏听牌，比如说名场面：</p>
<p><img src="/uploads/winter-conclusion/1.png" /></p>
<p>这里吃 1s 后打什么呢？实战我打了 8s，连切 3m 听牌都没有发现，这就是梦游切牌的技术。</p>
<h2 id="技能引导文档">技能引导文档</h2>
<p>这是我在寒假前期一直在做的事情，后期想接着做但是有点懒而且有点缺乏动力。</p>
<p>简单来说技能引导文档的初期还是取得了不错的成绩，推送有不错的浏览量，也有一定的用户反馈，编写者们也算是很有责任心。但“这个文档是不是一个造轮子的项目？”，这个问题还一直萦绕着我。目前来看文档确实是走入了一些困境，我们编写了一些编程语言的入门指导，编写了一些简单的算法入门文档，但是我们发现我们真正需要人手来编写的 advanced topics 却恰恰没有人来写。</p>
<p>我一开始设想的核心竞争力，一方面是面对你清这些已经有一定编程基础的学生，没有必要讲解那些相当基础的内容，也就是说，我们简洁。另外一个，就是我们有一些更为 advanced 的知识，比如图形学、人机交互、操作系统等一系列的入门指导，无论是简单的介绍还是课程、资料推荐，都是不错的。</p>
<p>然而现在的困境就是没有人来编写这些 advanced topics。现在也渐渐有点沉默下去，不太想打理这一份文档了。</p>
<h2 id="thuinfo-以及其他">THUInfo 以及其他</h2>
<p>目前绝赞咕咕咕 THUInfo 的开发工作，我希望下学期开头不太忙碌的时候能做一些事情。</p>
<p>当然，现在有点希望去做一些实习，这样的话能稍微了解一下业界和真实的软件开发环境。目前规划问问有没有去微软的实习机会吧。</p>
<h2 id="其他的一些">其他的一些</h2>
<p>整个寒假过得其实挺快乐，前期虽然和社区的沙雕书记起了不少摩擦，但隔离的时候也算是最认真的时候，发布了文档第一版本还确确实实提升了一些雀力。</p>
<p>回家过年则很一般，过年也就是在各处亲戚串门，闲工夫出去看电影。初三往后去了姜堰见了同学，和 Sakana 玩了两三天，和我弟交流了不少高中相关的事务。最后回家，打牌。</p>
<p>总而言之就是一种完全放松而不想做事情的态度。</p>
<hr />
<p>下学期，我打算把培养方案直接全部完成，虽然可能中途会退缩。然后 V+ 那边也会时常参加线下活动，雀的话应该也会经常约训练赛。THUInfo 那边就只能慢慢磨，实验室只能说徐老师暂且还没找我麻烦而已，但后续肯定是不能再咕咕咕了（毕竟关系到自己的后路）。</p>
<p>总之每一个学期或者假期结束的时候都会有一种下一学期（这个假期）好好干什么什么事这样的想法，但最后往往漂亮地事与愿违，这一切最后，还是归根于 Holder 这个人的惰性和摸鱼，先给那些被我摸鱼耽误事情的人道个歉。</p>
<p>但不管怎么说，生活还要继续过。下一步，应该是主要先应付实验室，不能真的一点事情不做了。然而在此之前，今天约了人出去吃饭，生活嘛，就是这样。</p>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>大四了，要干什么呢？</title>
    <url>/2022/08/19/grade-4-autumn-preview/</url>
    <content><![CDATA[<p>就这样 Holder 也已经大四了，似乎自己其实还什么都没有想好。</p>
<span id="more"></span>
<p>8.19 的晚上，我想着不如早一些回北京，于是和家里人商量好了买好了 8.22 的火车票。但是等到现在冷静下来之后，反倒是有一点觉得，这样是不是有点太仓促了，我似乎好像还没有想好我大四应该干些什么。</p>
<p>不过比较确定的是，我现在需要罗列一下我已经安排好的事情：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">8.20</th>
<th style="text-align: center;">8.21</th>
<th style="text-align: center;">8.22</th>
<th style="text-align: center;">8.23</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">早上</td>
<td style="text-align: center;">-</td>
<td style="text-align: center;">早起去做核酸</td>
<td style="text-align: center;">-</td>
<td style="text-align: center;">注册 &amp; 收拾宿舍等事务</td>
</tr>
<tr class="even">
<td style="text-align: center;">午饭</td>
<td style="text-align: center;">在家</td>
<td style="text-align: center;">万象城</td>
<td style="text-align: center;">回老家</td>
<td style="text-align: center;">食堂</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下午</td>
<td style="text-align: center;">寄回 MBP &amp; 摸鱼</td>
<td style="text-align: center;">和 Sakana 贴贴、出勤</td>
<td style="text-align: center;">收拾行李 &amp; 出发</td>
<td style="text-align: center;">-</td>
</tr>
<tr class="even">
<td style="text-align: center;">晚饭</td>
<td style="text-align: center;">【已安排的应酬】</td>
<td style="text-align: center;">【已安排的应酬】</td>
<td style="text-align: center;">-</td>
<td style="text-align: center;">-</td>
</tr>
<tr class="odd">
<td style="text-align: center;">半夜</td>
<td style="text-align: center;">学习 &amp; 四系联赛</td>
<td style="text-align: center;">收拾行李 &amp; 入校申请</td>
<td style="text-align: center;">多半打雀</td>
<td style="text-align: center;">-</td>
</tr>
</tbody>
</table>
<p>回北京之后的第一件事果然还是赶快和导师和学长见面聊聊，稍微加深一些了解，准备正式接入实验室，并且实验室应当成为下学期的主线工作。</p>
<p>课内的预习就简单看书做题就行了，可以在下午这种精力不太充足但是又有时间的时候做。</p>
<p>THUInfo 最近应该需要加紧做做，科协那边的 308 权限系统和两个技能引导新文档也需要做，但这些都是短程任务，不需要花很多时间。把这些做完后，科协那边可以基本放手，THUInfo 也只要做做日常维护就行了。</p>
<p>主要还有一件事就是体育运动，我还是计划好好游泳的，可能初期还是每两天去一趟游泳馆，每天晚上去游上小几百米可能还是比较好的。</p>
<p>然后就是下学期省钱的事情，说实话有点经济稍稍紧张了，说不定可以接一下商业单子之类的。</p>
<p>其余的大事情其实说实话毫无想法，最多就是一些可能的娱乐活动，出勤、纯 K、打打雀什么的。生日估计就是几个人出去玩一下午，然后 ZLR 约着喝酒，国庆随便怎么过，学期中看 Sakana 情况也可以去看看她或者她来玩。</p>
<p>总之很具体的事情还暂且不需要太去规划，毕竟也不知道后面什么情况。</p>
<p>但是大体而言，果然还是以实验室事务、推免流程为主线，课内随便混混的生活。</p>
]]></content>
      <categories>
        <category>【生活记录】学期总结</category>
      </categories>
  </entry>
  <entry>
    <title>Hello world</title>
    <url>/2021/06/16/hello-world/</url>
    <content><![CDATA[<p>刚刚建立好这个地方，暂且也没什么特别想说的，不如就来玩一下 hexo 的各个语法吧。</p>
<span id="more"></span>
<p>首先玩玩代码块，自然首先试试 cpp。</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::cout &lt;&lt; <span class="string">&quot;Hello world!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再来试一下 Python。</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Hello world!&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>不如玩一下 JavaScript。</p>
<figure class="highlight js"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;Hello world!&quot;</span>);</span><br></pre></td></tr></table></figure>
<p>然后玩一下数学公式。</p>
<p>我们可以把机器学习抽象描述为以下过程，这里 <span class="math inline">\(X\)</span> 表示输入集合，<span class="math inline">\(Y\)</span> 表示输出集合，<span class="math inline">\(L\)</span> 表示损失函数，<span class="math inline">\(\boldsymbol{w}\)</span> 表示模型参数，<span class="math inline">\(f_\boldsymbol{w}\)</span> 表示在某一系列参数之下的模型函数。</p>
<p><span class="math display">\[
\boldsymbol{w}^*=\mathop{\arg\min}_{\boldsymbol{w} \in \Omega}\sum_{x_i \in X, y_i \in Y} L(f_\boldsymbol{w}(x_i), y_i)
\]</span></p>
<p>再来试一下它自带的一些引用块。</p>
<blockquote><p>你成功建好了自己的第一个 hexo 站点！</p>
</blockquote>
<p>hexo 文档里面还提到了一种奇怪的东西，来试一下。</p>
<blockquote class="pullquote"><p>这个东西被称为 Pull Quote。</p>
</blockquote>
<p>似乎还有奇怪的东西。</p>
<div class="note success"><p>这个是提示成功的引用块。</p>
</div>
<p>下面是一个居中引用。</p>
<blockquote class="blockquote-center">
<p>这里我们居中一定的文本。</p>

</blockquote>
<p>这里还似乎提供了用于查询浏览器支持方法的插件。</p>
<iframe data-feature="fetch" src="https://caniuse.bitsofco.de/embed/index.html?feat=fetch&periods=current&accessible-colours=false" frameborder="0" width="100%" height="400px"></iframe>
<p>暂且玩到这里吧，目前的话想要做的一些事情包括：</p>
<ul>
<li><p>写（搬运）点有点价值的东西</p></li>
<li><p>有没有可能做一些类似于管理员才可访问的东西呢</p></li>
<li><p>搞一下评论系统、浏览计数之类的</p></li>
</ul>
<p>当然我们知道明天下午就考数电了，所以 Holder 该滚去复习了。</p>
]]></content>
      <categories>
        <category>【导航】</category>
      </categories>
  </entry>
  <entry>
    <title>摸索 NexT 注入实录与实现振假名渲染</title>
    <url>/2022/08/20/inject-ruby/</url>
    <content><![CDATA[<p>由于日语文本中经常出现振假名（可以理解为国内小学课本上汉字上的拼音），但是 Markdown 并没有方便的振假名语法，所以只能摸索了。</p>
<span id="more"></span>
<p>首先是我们注意到 HTML 是有振假名相关的标签的，但是实在是太长了：</p>
<figure class="highlight html"><figcaption><span>HTML</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span> WRITTEN <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span> READ <span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>那么为了解决这个问题，有两种选择：</p>
<ul>
<li>定义一种新的 Markdown 语法，在将 Raw Markdown 传入解释器之前先做一步正则替换，将自定义的语法替换为 HTML 标签</li>
<li>在渲染后的 HTML 标签中找到所有打过标记的节点，将其替换为 <code>&lt;ruby&gt;</code> 标签</li>
</ul>
<p>我一开始是摸索第一种解决方式的，然后遍历了一波 Hexo 的 Markdown Parser 的文档，没有找到如何解决这个问题。</p>
<p>我之所以想到这个解决方案，是因为之前有一个 VSCode 的 Markdown 插件提供了一个 <code>onWillParseMarkdown</code> 的函数，用户可以通过其参数获得 Raw Markdown，然后自行处理后返回交给解释器。</p>
<p>但是 Hexo 似乎并没有给我开这个后门。</p>
<hr />
<p>于是只能思考第二种解决方案，这个时候我想到了 NexT 注入。</p>
<p>因为先前编写过 Twikoo Recent Comments，就是现在我的网站侧边栏上展现的最近评论，其就是在 <code>sidebar.njk</code> 内注入一个指定 <code>class</code> 的容器，然后在 <code>head.njk</code> 内部利用 jQuery 首先拉取最近评论然后再处理为列表项塞到指定容器中的。</p>
<p>那么我们考虑到，Markdown 的代码块会被渲染为 <code>&lt;code&gt;</code> 标签，我们完全可以利用此特性。而我们为这些需要替换的标签打的标记就是其以 <code>@</code> 开头并且用空格分为三块，我们识别到这个标记就进行替换。</p>
<p>我们只需要注入这样一段代码：</p>
<figure class="highlight javascript"><figcaption><span>JavaScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">replaceRuby</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">        .filter(<span class="function">(<span class="params">_, node</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> list = $(node).text().split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> list.length === <span class="number">3</span> &amp;&amp; list[<span class="number">0</span>] === <span class="string">&quot;@&quot;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .replaceWith(<span class="function">(<span class="params">_, text</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> list = text.split(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">            <span class="keyword">var</span> written = list[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">var</span> read = list[<span class="number">2</span>];</span><br><span class="line">            <span class="keyword">return</span> $(<span class="string">`&lt;ruby&gt;<span class="subst">$&#123;written&#125;</span>&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;<span class="subst">$&#123;read&#125;</span>&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样我们就可以用类似：</p>
<figure class="highlight markdown"><figcaption><span>Markdown</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="code">`@ WRITTEN READ`</span></span><br></pre></td></tr></table></figure>
<p>的语法书写振假名。</p>
<p>效果的话可以看下述歌词的渲染效果：</p>
<div class="note info no-icon"><p><code>@ 言葉 ことば</code>より<code>@ 単純 たんじゅん</code>な<code>@ 方法 ほうほう</code>で、いますぐ<code>@ 地獄 じごく</code>に<code>@ 落 お</code>としてくれよ。さよならはあんたも<code>@ 知 し</code>っている、<code>@ 笑 わら</code>ってくれよ、<code>@ 笑 わら</code>ってくれよ、いますぐに。</p>
</div>
<p>总之，这样就可以很方便地写振假名了，之后应该会逐步在涉及到日语的地方把之前的旧写法更换成新写法。</p>
<hr />
<p>另外还有一个小细节，似乎部署后访问字体会出现 403，根据 <a href="https://github.com/theme-next/hexo-theme-next/issues/613">相关 Issue 的提示</a>，应该是 Referrer 的问题。</p>
]]></content>
      <categories>
        <category>【杂谈】开发</category>
      </categories>
  </entry>
  <entry>
    <title>日语语法手册（2021 年）</title>
    <url>/2021/11/01/ja-0/</url>
    <content><![CDATA[<p>了解 Holder 的人都明白，我几乎没有按照任何成体系的教材学过日语，所以我对日语语法的理解的变动是很快的，甚至有时会出现整个体系的重构。</p>
<p>这个手册基本基于原先的单词变形手册。但是考虑到 Holder 这段时间又从各处获取到了一些古日语知识、日语历史和一些浅薄的语言学知识，与其在原先的手册上修订，不如重新编写。</p>
<span id="more"></span>
<h2 id="编写准则">编写准则</h2>
<p>本手册会首先介绍现代日语采用的动词、形容词、形容动词等用言的活用规则，随后会介绍若干助词和助动词的词性和活用规则，最后会讲解这些用言各种活用的应用场景。基于此，基本上大多数现代日语句子都可以分析明白了，基础文字阅读上应该不会有特别大的问题（基于词汇量充分的基础）。</p>
<p>本手册的编写依据是我自己对日语语法的理解，并不能作为严谨的语法教材使用。</p>
<h2 id="现代日语用言活用规则">现代日语用言活用规则</h2>
<p>日语中用言的活用一般分为七种，即：</p>
<ul>
<li><p><strong>未然形</strong>。主要用于表述未发生的形态，用言的否定和被动常常使用未然形接续相关助动词表示。</p></li>
<li><p><strong>连用形</strong>。主要用于接续其他用言，部分动词的连用形用于将动词名词化。</p></li>
<li><p><strong>终止形</strong>。一般认为是用言的基础形态，用于接续终止助词表现句子终结。</p></li>
<li><p><strong>连体形</strong>。主要用于接续体言。</p></li>
<li><p><strong>假定性</strong>。古日语中称<strong>已然形</strong>。现代日语中常用于接续表示假定的助动词。</p></li>
<li><p><strong>命令形</strong>。不接续或接续终止助词表示命令。</p></li>
<li><p><strong>意志形</strong>。主要用于表达意志。</p></li>
</ul>
<div class="note info"><p>意志形是现代日语新产生的一种活用类型，部分语法书认为意志形也是未然形的一种。</p>
</div>
<h3 id="动词活用规则">动词活用规则</h3>
<p>现代日语的动词按照活用规则的不同分类为：</p>
<ul>
<li><p><strong>五段动词</strong>。形式为词干加上某一个ウ段假名构成，现代日语中合法的五段动词词尾有「く、ぐ、う、つ、る、ぶ、む、ぬ、す」，比如「書く、読む、話す」。</p></li>
<li><p><strong>一段动词</strong>。形式一般为一个イ段假名或者エ段假名结尾的词干加上「る」构成，比如「食べる、教える、起きる」。有一些细化为<strong>上一段动词</strong>和<strong>下一段动词</strong>的说法，这里可以简单理解为以イ段假名接续的是上一段动词，以エ段假名接续的是下一段动词。</p></li>
<li><p><strong>サ变动词</strong>。形式为「する」或者某一个词干加上「する」，同时也有一些以「ずる」结尾的动词也是サ变动词。比如「する、勉強する、散歩する、感ずる、禁ずる」。</p></li>
<li><p><strong>カ变动词</strong>。只有「来る」是カ变动词。</p></li>
</ul>
<p>下面将给出动词六种活用的变形规则。这里额外说明，动词的连用形分成两类，即第一连用形和第二连用形。动词的第二连用形是第一连用形接续某些特殊助动词时发生音便产生的。此外，还有部分动词是不规则的，会在表后的注释中给出。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">五段動詞「か行」</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書か</td>
<td style="text-align: center;">書き</td>
<td style="text-align: center;">書い</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書こ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「が行」</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳が</td>
<td style="text-align: center;">泳ぎ</td>
<td style="text-align: center;">泳い</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳ご</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「ば行」</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛ば</td>
<td style="text-align: center;">飛び</td>
<td style="text-align: center;">飛ん</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛ぼ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ま行」</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読ま</td>
<td style="text-align: center;">読み</td>
<td style="text-align: center;">読ん</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読も</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「な行」</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死な</td>
<td style="text-align: center;">死に</td>
<td style="text-align: center;">死ん</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死ね</td>
<td style="text-align: center;">死ね</td>
<td style="text-align: center;">死の</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「あ行」</td>
<td style="text-align: center;">歌う</td>
<td style="text-align: center;"><strong>歌わ</strong></td>
<td style="text-align: center;">歌い</td>
<td style="text-align: center;">歌っ</td>
<td style="text-align: center;">歌う</td>
<td style="text-align: center;">歌え</td>
<td style="text-align: center;">歌え</td>
<td style="text-align: center;">歌お</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「た行」</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立た</td>
<td style="text-align: center;">立ち</td>
<td style="text-align: center;">立っ</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立と</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ら行」</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降ら</td>
<td style="text-align: center;">降り</td>
<td style="text-align: center;">降っ</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降ろ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「さ行」</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話さ</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話そ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞</td>
<td style="text-align: center;">起きる</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起きる</td>
<td style="text-align: center;">起きれ</td>
<td style="text-align: center;">起きよ／起きろ</td>
<td style="text-align: center;">起きよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下一段動詞</td>
<td style="text-align: center;">教える</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教える</td>
<td style="text-align: center;">教えれ</td>
<td style="text-align: center;">教えよ／教えろ</td>
<td style="text-align: center;">教えよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">し／せ／さ</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">すれ</td>
<td style="text-align: center;">しろ／せよ</td>
<td style="text-align: center;">しよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">カ変動詞</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">こ</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">くれ</td>
<td style="text-align: center;">こい</td>
<td style="text-align: center;">こよ</td>
</tr>
</tbody>
</table>
<p>上述规则的例外包括：</p>
<ul>
<li>五段动词「行く」的第二连用形发生促音便而非イ音变。</li>
</ul>
<div class="note info no-icon"><p>横浜に<strong>行っ</strong>たことがある。</p>
</div>
<ul>
<li>五段动词「問う、乞う」的第二连用形发生罕见的ウ音便而非促音变。</li>
</ul>
<div class="note info no-icon"><p>この大事な件，ぜひ<strong>問う</strong>てください。</p>
</div>
<ul>
<li>五大敬语动词「いらっしゃる、くださる、なさる、おっしゃる、ござる」除去「ござる」之外的四个动词的命令形词尾为「い」而非「れ」。</li>
</ul>
<div class="note info no-icon"><p>鉛筆一本を<strong>ください</strong>。</p>
<p>なんでも<strong>ござれ</strong>。</p>
</div>
<ul>
<li>一段动词「くれる」的命令形为「くれ」而非「くれろ」。</li>
</ul>
<div class="note info no-icon"><p>あの新聞を取って<strong>くれ</strong>。</p>
</div>
<ul>
<li>口语中允许以「する」结尾的サ变动词按照类似五段动词的方式活用，如下表所示。</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;">愛し／愛せ／愛さ</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;">愛すれ</td>
<td style="text-align: center;">愛しろ／愛せよ</td>
<td style="text-align: center;">愛しよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;"><strong>愛さ</strong></td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;"><strong>愛す</strong></td>
<td style="text-align: center;"><strong>愛せ</strong></td>
<td style="text-align: center;"><strong>愛せ</strong></td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>而以「ずる」结尾的サ变动词可以按照类似一段动词的方式活用，如下表所示。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;">信じ／信ぜ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;">信ずれ</td>
<td style="text-align: center;">信じろ／信ぜよ</td>
<td style="text-align: center;">信じよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">一段動詞</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;"><strong>信じ</strong></td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;"><strong>信じる</strong></td>
<td style="text-align: center;"><strong>信じれ</strong></td>
<td style="text-align: center;"><strong>信じろ／信じよ</strong></td>
<td style="text-align: center;">信じよ</td>
</tr>
</tbody>
</table>
<h3 id="形容词活用规则">形容词活用规则</h3>
<p>现代日语的形容词缺少命令形和意志形，这两种活用具有其他的替代表达。形容词依然具有两种连用形，其区别在于接续的助动词的不同。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞</td>
<td style="text-align: center;">高い</td>
<td style="text-align: center;">高かろ</td>
<td style="text-align: center;">高く</td>
<td style="text-align: center;">高かっ</td>
<td style="text-align: center;">高い／高き</td>
<td style="text-align: center;">高けれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>形容词的命令形一般可以用第一连用形接续动词命令形来完成。</p>
<div class="note info no-icon"><p>もう遅刻から，<strong>はやく</strong>しろう。</p>
</div>
<p>而意志形可以使用助动词「です」的活用表达。</p>
<div class="note info no-icon"><p>この服はデザインが良くて値段が安い，買って<strong>いい</strong>でしょう？</p>
</div>
<p>现代日语中仅有一个不规则形容词，即「いい」。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞「特別」</td>
<td style="text-align: center;">いい</td>
<td style="text-align: center;">よかろ</td>
<td style="text-align: center;">よく</td>
<td style="text-align: center;">よかっ</td>
<td style="text-align: center;">いい</td>
<td style="text-align: center;">よけれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<h3 id="形容动词活用规则">形容动词活用规则</h3>
<p>现代日语的形容动词分为两类，即ダ活用形容动词和タルト活用形容动词，两者分别对应古日语的ナリ活用形容动词和タリ活用形容动词。一般而言，タルト活用形容动词是词干为汉字叠字或者以「然」结尾的汉字词，其一般只具有连用形和连体形，分别作副词和形容词使用。ダ活用形容动词则缺少命令形和意志形，其余活用方式均存在，而缺失的两种活用具有其他的替代表达。另外，ダ活用形容动词有三种连用形，用于不同的场景。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">第一連用形</th>
<th style="text-align: center;">第二連用形</th>
<th style="text-align: center;">第三連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ダ活用</td>
<td style="text-align: center;">静かだ</td>
<td style="text-align: center;">静かだろ</td>
<td style="text-align: center;">静かで</td>
<td style="text-align: center;">静かだっ</td>
<td style="text-align: center;">静かに</td>
<td style="text-align: center;">静かな</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">タルト活用</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">平然と</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>ダ活用形容动词还有一种特殊的终止形，即「静かです」。这并不是严格的形容动词终止形，因为其中包含了助动词「です」，该助动词还可以继续活用表达更多的含义。可以理解为形容动词的某一种终止形必须借助给定的助动词完成，但是后续在这个助动词上的活用并不是形容动词的活用。</p>
<p>ダ活用形容动词命令形的替代表达类似形容词，即连用形接续动词的命令形。</p>
<div class="note info no-icon"><p>うるさ過ぎて，<strong>静かに</strong>しろう。</p>
</div>
<p>ダ活用形容动词意志形的替代表达有两种，一种类似于形容词，即使用助动词「です」的活用表达，一种是使用未然形。</p>
<div class="note info no-icon"><p>この街は<strong>にぎやか</strong>でしょう。</p>
<p>この街は<strong>にぎやかだろ</strong>う。</p>
</div>
<p>形容动词的活用规则具有以下的例外。</p>
<ul>
<li>古日语形容词退化得到的形容动词「同じだ」有两种连体形，除去规则变化的「同じな」，还具有另外一种继承自古日语形容词的「同じ」形式。规则变化的连体形用于接续「の、ので、のに」等助词，而修饰一般体言的时候使用特殊变化的连体形。</li>
</ul>
<div class="note info no-icon"><p>韓国語の文法が日本語のとほとんど<strong>同じな</strong>ので，それほど難しくないです。</p>
<p>私たちは<strong>同じ</strong>学校の卒業生。</p>
</div>
<p>此外，「同じ」可以用作副词使用。并且与之类似的副词「同じく」也在现代日语中使用，但现代日语已经不认为这属于「同じだ」的活用，而是认为是新词汇。</p>
<ul>
<li>部分古日语中的ナリ活用形容动词在现代日语中退化，仅保留了连体形活用，而丢失了其他活用形式。这些形容动词包括「大きな、小さな、おかしな」等。</li>
</ul>
<h2 id="古日语用言活用规则简介">古日语用言活用规则简介</h2>
<p>本部分会简要介绍古日语的用言活用规则，主要目的是解释现代日语语法中部分古语残留。</p>
<p>古日语的动词分为五个正格类型和四个变格类型。</p>
<ul>
<li><p><strong>四段动词</strong>。古语的四段动词基本上演化成为了现代的五段动词，新增加的一段即现代语之中的意志形。四段动词合法的词尾包括「く、ぐ、ふ、つ、る、ぶ、む、す」，这里与现代语相比缺失「ぬ」，这是因为古语中「死ぬ」并非四段动词。</p></li>
<li><p><strong>上一段动词</strong>。古语的上一段动词基本上演化成为了现代的上一段动词。</p></li>
<li><p><strong>下一段动词</strong>。这类动词包括「蹴る」，这些动词演化为现代的五段动词。</p></li>
<li><p><strong>上二段动词</strong>。古语的上二段动词基本上通过将词尾固化为イ段后添加新词尾「る」的方式演化成为了现代的上一段动词。</p></li>
<li><p><strong>下二段动词</strong>。古语的下二段动词基本上通过将词尾固化为エ段后添加新词尾「る」的方式演化成为了现代的下一段动词。</p></li>
<li><p><strong>ラ变动词</strong>。这类动词包括「あり、をり、はべり、いまそかり」，这些动词演化为现代的五段动词。</p></li>
<li><p><strong>ナ变动词</strong>。这类动词包括「死ぬ、往ぬ」，其中「死ぬ」演化为现代的五段动词，而「往ぬ」被废弃不使用。</p></li>
<li><p><strong>カ变动词</strong>。这类动词包括「く」，这些动词演化为现代的カ变动词。</p></li>
<li><p><strong>サ变动词</strong>。这类动词包括「す」，这些动词演化为现代的サ变动词。</p></li>
</ul>
<p>古日语中动词的活用仅有六种，缺失现代语的意志形，且假定性此时称为已然形。另外，古日语动词不区分第一和第二连用形。据此，古日语动词的活用规则表现如下表。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">四段動詞「か行」</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書か</td>
<td style="text-align: center;">書き</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書け</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「が行」</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳が</td>
<td style="text-align: center;">泳ぎ</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳げ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「ば行」</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛ば</td>
<td style="text-align: center;">飛び</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛べ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「ま行」</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読ま</td>
<td style="text-align: center;">読み</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読め</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「は行」</td>
<td style="text-align: center;">歌ふ</td>
<td style="text-align: center;">歌は</td>
<td style="text-align: center;">歌ひ</td>
<td style="text-align: center;">歌ふ</td>
<td style="text-align: center;">歌へ</td>
<td style="text-align: center;">歌へ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「た行」</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立た</td>
<td style="text-align: center;">立ち</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立て</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「ら行」</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降ら</td>
<td style="text-align: center;">降り</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降れ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「さ行」</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話さ</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話せ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「か行」</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;">きよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「な行」</td>
<td style="text-align: center;">似る</td>
<td style="text-align: center;">に</td>
<td style="text-align: center;">に</td>
<td style="text-align: center;">にる</td>
<td style="text-align: center;">にれ</td>
<td style="text-align: center;">によ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「は行」</td>
<td style="text-align: center;">干る</td>
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">ひる</td>
<td style="text-align: center;">ひれ</td>
<td style="text-align: center;">ひよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「ま行」</td>
<td style="text-align: center;">見る</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">みる</td>
<td style="text-align: center;">みれ</td>
<td style="text-align: center;">みよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「や行」</td>
<td style="text-align: center;">射る</td>
<td style="text-align: center;">い</td>
<td style="text-align: center;">い</td>
<td style="text-align: center;">いる</td>
<td style="text-align: center;">いれ</td>
<td style="text-align: center;">いよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「わ行」</td>
<td style="text-align: center;">居る</td>
<td style="text-align: center;">ゐ</td>
<td style="text-align: center;">ゐ</td>
<td style="text-align: center;">ゐる</td>
<td style="text-align: center;">ゐれ</td>
<td style="text-align: center;">ゐよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下一段動詞</td>
<td style="text-align: center;">蹴る</td>
<td style="text-align: center;">け</td>
<td style="text-align: center;">け</td>
<td style="text-align: center;">ける</td>
<td style="text-align: center;">けれ</td>
<td style="text-align: center;">けよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「か行」</td>
<td style="text-align: center;">生く</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生くる</td>
<td style="text-align: center;">生くれ</td>
<td style="text-align: center;">生きよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「が行」</td>
<td style="text-align: center;">過ぐ</td>
<td style="text-align: center;">過ぎ</td>
<td style="text-align: center;">過ぎ</td>
<td style="text-align: center;">過ぐる</td>
<td style="text-align: center;">過ぐれ</td>
<td style="text-align: center;">過ぎよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「た行」</td>
<td style="text-align: center;">落つ</td>
<td style="text-align: center;">落ち</td>
<td style="text-align: center;">落ち</td>
<td style="text-align: center;">落つる</td>
<td style="text-align: center;">落つれ</td>
<td style="text-align: center;">落ちよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「だ行」</td>
<td style="text-align: center;">閉づ</td>
<td style="text-align: center;">閉ぢ</td>
<td style="text-align: center;">閉ぢ</td>
<td style="text-align: center;">閉づる</td>
<td style="text-align: center;">閉づれ</td>
<td style="text-align: center;">閉ぢよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「は行」</td>
<td style="text-align: center;">恋ふ</td>
<td style="text-align: center;">恋ひ</td>
<td style="text-align: center;">恋ひ</td>
<td style="text-align: center;">恋ふる</td>
<td style="text-align: center;">恋ふれ</td>
<td style="text-align: center;">恋ひよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「ば行」</td>
<td style="text-align: center;">詫ぶ</td>
<td style="text-align: center;">詫び</td>
<td style="text-align: center;">詫び</td>
<td style="text-align: center;">詫ぶる</td>
<td style="text-align: center;">詫ぶれ</td>
<td style="text-align: center;">詫びよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「ま行」</td>
<td style="text-align: center;">恨む</td>
<td style="text-align: center;">恨み</td>
<td style="text-align: center;">恨み</td>
<td style="text-align: center;">恨むる</td>
<td style="text-align: center;">恨むれ</td>
<td style="text-align: center;">恨みよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「や行」</td>
<td style="text-align: center;">老ゆ</td>
<td style="text-align: center;">老い</td>
<td style="text-align: center;">老い</td>
<td style="text-align: center;">老ゆる</td>
<td style="text-align: center;">老ゆれ</td>
<td style="text-align: center;">老いよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「ら行」</td>
<td style="text-align: center;">懲る</td>
<td style="text-align: center;">懲り</td>
<td style="text-align: center;">懲り</td>
<td style="text-align: center;">懲るる</td>
<td style="text-align: center;">懲るれ</td>
<td style="text-align: center;">懲りよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「か行」</td>
<td style="text-align: center;">受く</td>
<td style="text-align: center;">受け</td>
<td style="text-align: center;">受け</td>
<td style="text-align: center;">受くる</td>
<td style="text-align: center;">受くれ</td>
<td style="text-align: center;">受けよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「が行」</td>
<td style="text-align: center;">告げ</td>
<td style="text-align: center;">告げ</td>
<td style="text-align: center;">告げ</td>
<td style="text-align: center;">告ぐる</td>
<td style="text-align: center;">告ぐれ</td>
<td style="text-align: center;">告げよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「た行」</td>
<td style="text-align: center;">捨つ</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨つる</td>
<td style="text-align: center;">捨つれ</td>
<td style="text-align: center;">捨てよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「だ行」</td>
<td style="text-align: center;">出づ</td>
<td style="text-align: center;">出で</td>
<td style="text-align: center;">出で</td>
<td style="text-align: center;">出づる</td>
<td style="text-align: center;">出づれ</td>
<td style="text-align: center;">出でよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「は行」</td>
<td style="text-align: center;">答ふ</td>
<td style="text-align: center;">答へ</td>
<td style="text-align: center;">答へ</td>
<td style="text-align: center;">答ふる</td>
<td style="text-align: center;">答ふれ</td>
<td style="text-align: center;">答へよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「ば行」</td>
<td style="text-align: center;">並ぶ</td>
<td style="text-align: center;">並べ</td>
<td style="text-align: center;">並べ</td>
<td style="text-align: center;">並ぶる</td>
<td style="text-align: center;">並ぶれ</td>
<td style="text-align: center;">並べよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「さ行」</td>
<td style="text-align: center;">失す</td>
<td style="text-align: center;">失せ</td>
<td style="text-align: center;">失せ</td>
<td style="text-align: center;">失する</td>
<td style="text-align: center;">失すれ</td>
<td style="text-align: center;">失せよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「ざ行」</td>
<td style="text-align: center;">混ず</td>
<td style="text-align: center;">混ぜ</td>
<td style="text-align: center;">混ぜ</td>
<td style="text-align: center;">混ずる</td>
<td style="text-align: center;">混ずれ</td>
<td style="text-align: center;">混ぜよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「ま行」</td>
<td style="text-align: center;">求む</td>
<td style="text-align: center;">求め</td>
<td style="text-align: center;">求め</td>
<td style="text-align: center;">求むる</td>
<td style="text-align: center;">求むれ</td>
<td style="text-align: center;">求めよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「や行」</td>
<td style="text-align: center;">見ゆ</td>
<td style="text-align: center;">見え</td>
<td style="text-align: center;">見え</td>
<td style="text-align: center;">見ゆる</td>
<td style="text-align: center;">見ゆれ</td>
<td style="text-align: center;">見えよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「ら行」</td>
<td style="text-align: center;">入る</td>
<td style="text-align: center;">入れ</td>
<td style="text-align: center;">入れ</td>
<td style="text-align: center;">入るる</td>
<td style="text-align: center;">入るれ</td>
<td style="text-align: center;">入れよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「わ行」</td>
<td style="text-align: center;">植う</td>
<td style="text-align: center;">植ゑ</td>
<td style="text-align: center;">植ゑ</td>
<td style="text-align: center;">植うる</td>
<td style="text-align: center;">植うれ</td>
<td style="text-align: center;">植ゑよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「あ行単字」</td>
<td style="text-align: center;">う（得）</td>
<td style="text-align: center;">え</td>
<td style="text-align: center;">え</td>
<td style="text-align: center;">うる</td>
<td style="text-align: center;">うれ</td>
<td style="text-align: center;">えよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「な行単字」</td>
<td style="text-align: center;">ぬ（寝）</td>
<td style="text-align: center;">ね</td>
<td style="text-align: center;">ね</td>
<td style="text-align: center;">ぬる</td>
<td style="text-align: center;">ぬれ</td>
<td style="text-align: center;">ねよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「は行単字」</td>
<td style="text-align: center;">ふ（経）</td>
<td style="text-align: center;">へ</td>
<td style="text-align: center;">へ</td>
<td style="text-align: center;">ふる</td>
<td style="text-align: center;">ふれ</td>
<td style="text-align: center;">へよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ラ変動詞</td>
<td style="text-align: center;">有り</td>
<td style="text-align: center;">有ら</td>
<td style="text-align: center;">有り</td>
<td style="text-align: center;">有る</td>
<td style="text-align: center;">有れ</td>
<td style="text-align: center;">有れ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ナ変動詞</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死な</td>
<td style="text-align: center;">死に</td>
<td style="text-align: center;">死ぬる</td>
<td style="text-align: center;">死ぬれ</td>
<td style="text-align: center;">死ね</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">す</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">すれ</td>
<td style="text-align: center;">せよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">カ変動詞</td>
<td style="text-align: center;">く</td>
<td style="text-align: center;">こ</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">くれ</td>
<td style="text-align: center;">こ／こよ</td>
</tr>
</tbody>
</table>
<p>和现代语对比，可以得到以下的规律。</p>
<ul>
<li><p>古语四段动词几乎完全演化为现代语五段动词，且除了假名标记发生一次变动（即「ふ」转写为「う」）和增加意志形之外，其余保持规则。</p></li>
<li><p>古语的上一段动词几乎完全演化为现代的上一段动词，且几乎没有发生活用规则变动。而古语唯一的下一段动词则直接变为现代的五段动词。</p></li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文語</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;">きよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;"><strong>きろ／きよ</strong></td>
</tr>
</tbody>
</table>
<ul>
<li>古语的二段动词在现代语之中的残留痕迹较为明显。特征是除去词干外，有类似「きる、ける」这样的以イエ段假名加上「る」结尾的双假名词尾。这里的イエ段假名是古语残留的词尾，但是已经固化，而「る」则是现代语的词尾。另外，由于古语下一段动词完全消失，所以现代的下一段动词几乎全部都是古语下二段动词的演变产物。</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文語</td>
<td style="text-align: center;">捨つ</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨つる</td>
<td style="text-align: center;">捨つれ</td>
<td style="text-align: center;">捨てよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">捨てる</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;"><strong>捨てる</strong></td>
<td style="text-align: center;"><strong>捨てれ</strong></td>
<td style="text-align: center;"><strong>捨てろ／捨てよ</strong></td>
</tr>
</tbody>
</table>
<p>但是在合流过程中，三个单音节的下二段动词「う、ぬ、ふ」演化路径有差别。「ぬ、ふ」类似一般的下二段动词，演化为现代的下一段动词「寝る、経る」。但是「う」则一定程度上保留了下二段动词的痕迹，演化出了两个动词「うる、える」，汉字表记均为「得る」。一般而言，使用较多的是「える」读音，但是「うる」音依然可能会出现，这也就是一种演化残留。</p>
<ul>
<li>ラ变动词完全合并进现代语五段动词，并且在一部分情况下可以看出遗留。现代语五大敬语动词有一部分实际上是古语中的ラ变复合动词，比如「ござる」来源于「ござあり」。</li>
</ul>
<hr />
<p>古语形容词分为两类，即ク活用形容词和シク活用形容词，活用规则见下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ク活用「第一」</td>
<td style="text-align: center;">無し</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無く</td>
<td style="text-align: center;">無き</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">ク活用「第二」</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無から</td>
<td style="text-align: center;">無かり</td>
<td style="text-align: center;">無かる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無かれ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">シク活用「第一」</td>
<td style="text-align: center;">美し</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しく</td>
<td style="text-align: center;">美しき</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">シク活用「第二」</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しから</td>
<td style="text-align: center;">美しかり</td>
<td style="text-align: center;">美しかる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しかれ</td>
</tr>
</tbody>
</table>
<p>这里的第二活用则是一种特殊的使用方法，也就是将形容词连用形「○く」加上「あり」后用「あり」的活用来弥补原先形容词规则中缺失的未然形和命令形。在演变过程中，「○くあり」逐渐连读为「○かり」，从而可以认为这是形容词的一种特殊活用，不将其认为是「あり」的活用。</p>
<p>古语形容词演变为现代语形容词的时候，两种活用合流，并且黏性词尾从「し」变为「い」。具体演变为，ク活用形容词直接将「し」变为「い」，而シク活用形容词直接加上新词尾「い」。而各种活用中，加「あり」词尾产生的活用逐步消失或进一步演变，而现代语中形容词规则占主流的依然是形容词最初的活用规则。对比表如下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ク活用「第一」</td>
<td style="text-align: center;">無し</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無く</td>
<td style="text-align: center;">無き</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">ク活用「第二」</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無から</td>
<td style="text-align: center;">無かり</td>
<td style="text-align: center;">無かる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">無かれ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">無い</td>
<td style="text-align: center;">無かろ</td>
<td style="text-align: center;">無く／無かっ</td>
<td style="text-align: center;">無い／無き</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">シク活用「第一」</td>
<td style="text-align: center;">美し</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しく</td>
<td style="text-align: center;">美しき</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">シク活用「第二」</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しから</td>
<td style="text-align: center;">美しかり</td>
<td style="text-align: center;">美しかる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">美しかれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">美しい</td>
<td style="text-align: center;">美しかろ</td>
<td style="text-align: center;">美しく／美しかっ</td>
<td style="text-align: center;">美しい／美しき</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>这种演变解释了一个语言现象，即现代语中有大量的「しい」结尾的形容词，这些形容词几乎全部是古语シク活用形容词演变的遗留。另外，现代语的形容词依然保留了部分古语用法，比如以「し」作词尾的形容词依然存留于口语中，比如「なし、よし」等惯用语。</p>
<hr />
<p>古语形容动词分为两类，即ナリ活用形容词和タリ活用形容词，活用规则见下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ナリ活用</td>
<td style="text-align: center;">静かなり</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">静かなり／静かに</td>
<td style="text-align: center;">静かなる</td>
<td style="text-align: center;">静かなれ</td>
<td style="text-align: center;">静かなれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">タリ活用</td>
<td style="text-align: center;">平然たり</td>
<td style="text-align: center;">平然たら</td>
<td style="text-align: center;">平然たり／平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">平然たれ</td>
<td style="text-align: center;">平然たれ</td>
</tr>
</tbody>
</table>
<p>这里所有的活用和ラ变动词很类似。有一种看法是，形容动词活用本身就是词干连用形接续「あり」后用「あり」的活用表达的，而和形容词第二活用类似「○にあり／○とあり」随后连读为「○なり／○たり」，从而形成了形容动词活用规则。</p>
<p>古语形容动词演变为现代语形容词的时候，两种活用并未合流，并且活用词尾发生了较大的变化。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ナリ活用</td>
<td style="text-align: center;">静かなり</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">静かなり／静かに</td>
<td style="text-align: center;">静かなる</td>
<td style="text-align: center;">静かなれ</td>
<td style="text-align: center;">静かなれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語ダ活用</td>
<td style="text-align: center;">静かだ</td>
<td style="text-align: center;">静かだろ</td>
<td style="text-align: center;">静かで／静かだっ／静かに</td>
<td style="text-align: center;">静かな</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">タリ活用</td>
<td style="text-align: center;">平然たり</td>
<td style="text-align: center;">平然たら</td>
<td style="text-align: center;">平然たり／平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">平然たれ</td>
<td style="text-align: center;">平然たれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語タルト活用</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>目前来看，形容动词的演变是相当不规则的。</p>
<div class="note info no-icon"><p>目前我正使用的古日语课程之中，是这样介绍ナリ活用形容动词演变的。</p>
<p>首先是「○で」连用形的产生。在使用ナリ活用形容动词修饰的时候常常需要使用连用形接续助词「て」，也就是ナリ活用形容动词常常具有词尾「○にて」。最后「に」音脱落并发生浊化，将助词「て」吸收产生现代语第一连用形「○で」。</p>
<p>室町时代，ナリ活用形容动词已经出现了尾音「る」脱落的现象，即连体形已经逐步以「な」音结尾，并且在部分情况下，终止形也开始使用「な」结尾的形式。另一方面，新产生的连用形「○で」接续动词「ある」产生了新的连体和终止形「○である」，这种形式之后又发生了尾音「る」脱落，演变为「○であ」。而这个形式在关西演化为「○ぢゃ」，在关东演化为「○だ」。此时这些形式均处于混用状态，最后「○だ」使用频率压过其余形式变为现代语的终止形，「○な」则压过其他形式变为现代语的连体形。</p>
<p>上述演化中的连体·终止形「○ぢゃ」开始用于接续「う、た」两个助词，分别表示意识和过去，这分别是未然形和连用形的作用。也就是说未然形接续「う」开始出现「○ぢゃらう」的形式，连用形接续「た」开始出现「○ぢゃった」的形式。随后「ぢゃら」和「ぢゃっ」音便为「だろ」和「だっ」，形成了现代语的未然形和第二连用形。</p>
<p>现代语假定形「○なら」则是由古语已然形「○なれ」接续助词「ば」得到「○なれば」后约音产生。</p>
<p>命令形则在演化的时候由于可以使用动词命令形代替表示而逐步丢失。</p>
</div>
<h2 id="现代日语常用助动词和活用">现代日语常用助动词和活用</h2>
<p>用言的各种活用需要通过助动词进行辅助表意，这里介绍现代日语中较为常用的助动词。另外注意，助动词本身还可以继续活用，一方面是可以表达更深的含义，另一方面是为了补偿用言为了接续助动词而牺牲的进一步活用可能。</p>
<p>此外，这里可能会介绍部分接续体言的助动词。</p>
<p>首先给出接续列表，即这些助动词前面的用言应当使用何种形式。这里可能会遇到用词干接续的情况，词干本身不属于活用的一种，所以没有在上述部分介绍。形容词的词干是终止形去掉「い」，形容动词的词干是终止形去掉「だ」，而动词词干比较模糊，这里不介绍。</p>
<p>另外，这里形容动词一般特指ダ活用形容动词，现代日语的タルト活用形容动词几乎不接续助动词。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">助動詞</th>
<th style="text-align: center;">五段動詞</th>
<th style="text-align: center;">一段動詞</th>
<th style="text-align: center;">サ変動詞</th>
<th style="text-align: center;">カ変動詞</th>
<th style="text-align: center;">形容詞</th>
<th style="text-align: center;">形容動詞</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">だ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（終止形）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">原形</td>
</tr>
<tr class="even">
<td style="text-align: center;">です</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（終止形）</td>
<td style="text-align: center;">語幹</td>
<td style="text-align: center;">原形</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ない</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">「し」未然形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">ず・ぬ・ん</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">「せ」未然形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">れる</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">「さ」未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">られる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">せる</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">「さ」未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">させる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ます</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">たい</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">たがる</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">そうだ②</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">連用形①</td>
<td style="text-align: center;">語幹</td>
<td style="text-align: center;">語幹</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">た</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">連用形②</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">ようだ</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">+「の」</td>
</tr>
<tr class="odd">
<td style="text-align: center;">そうだ①</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">+「だ」</td>
</tr>
<tr class="even">
<td style="text-align: center;">らしい</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">語幹</td>
<td style="text-align: center;">原形</td>
</tr>
<tr class="odd">
<td style="text-align: center;">べし</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">（―）</td>
<td style="text-align: center;">（―）</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">まい</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">う</td>
<td style="text-align: center;">意志形</td>
<td style="text-align: center;">意志形</td>
<td style="text-align: center;">意志形</td>
<td style="text-align: center;">意志形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>首先解释表中打括号的项，这表示这一项可能不正确。其一是形容词终止形接续「だ、です」的问题。现代日语确实常常使用形容词终止形直接接续「だ、です」，但有一种说法是这种用法来源于形容词连体首先接续形式体言「の」，之后由形式体言「の」接续助动词「だ、です」形成的，最后形式体言「の」脱落才有这种用法，此时由于现代日语形容词连体形和终止形同构才有这类说法。</p>
<p>其二是形容词、形容动词接续「べし」的问题。现代日语中这类用法已经很罕见了，所以一般而言认为不存在，但是古日语中存在相关用法。</p>
<p>之后是打星号的项，这表示可能的接续方式不唯一。这里一段动词、カ变动词和サ变动词接续「まい」的时候还可以使用未然形接续。另一方面，由于「まい、べし」均为古日语助动词，サ变动词还可以使用古语终止形「す」接续。</p>
<hr />
<p>之后介绍这些接续规则的特例</p>
<ul>
<li>五段动词「ある」使用未然形接续助动词「ない」的时候直接变为「ない」而非「あらない」。</li>
</ul>
<div class="note info no-icon"><p>この部屋に何も<strong>ない</strong>ので，静かだったんだ。</p>
</div>
<p>而其未然形接续其他助动词的时候形成的「あられる、あらせる、あらぬ」理论存在，但实际很少使用。所以有的时候也有语法书称「ある」的未然形就是「ない」。</p>
<ul>
<li>表示样态的助动词「そうだ」使用第三连用形「そうに」接续助动词「ない」形成「そうにない」更为常见，和普通形容动词一样使用第一连用形接续形成「そうでない」的形式存在但少用：</li>
</ul>
<div class="note info no-icon"><p>今日は寒くて凍え<strong>そうにない</strong>。</p>
</div>
<ul>
<li>五大敬语动词「いらっしゃる、くださる、なさる、おっしゃる、ござる」为五段动词，但是其第一连用形接续助动词「ます」的时候词尾变为「い」而非「り」。</li>
</ul>
<div class="note info no-icon"><p>嫌だから近づかないで<strong>ください</strong>ませんか？</p>
</div>
<p>但是这些动词的第一连用形在其他场景下词尾依然为「り」。</p>
<div class="note info no-icon"><p>先生はそのように<strong>おっしゃり</strong>たかったようですが，結局口に出されなかったです。</p>
</div>
<ul>
<li>表示样态的助动词「そうだ」在接续形容词「いい、ない」的时候变为「よさそうだ、なさそうだ」而非「いいそうだ、ないそうだ」。</li>
</ul>
<div class="note info no-icon"><p>元気が<strong>よさ</strong>そうだね。</p>
<p>あいつは少しも楽しく<strong>なさ</strong>そうな顔なんですね。</p>
</div>
<hr />
<p>这些助动词的含义和使用细节会在后面详细讲解，这里首先讲解它们的活用。助动词的活用可以类似于正常的用言，但是它们可能会因为语意的问题缺失一些活用类型。</p>
<p>「たがる」的活用类似于五段动词。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">五段</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降ら</td>
<td style="text-align: center;">降り／降っ</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降ろ</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">たがる</td>
<td style="text-align: center;">たがら</td>
<td style="text-align: center;">たがり／たがっ</td>
<td style="text-align: center;">たがる</td>
<td style="text-align: center;">たがれ</td>
<td style="text-align: center;"><strong>×</strong></td>
<td style="text-align: center;">たがろ</td>
</tr>
</tbody>
</table>
<p>「れる、られる、せる、させる」的活用类似于五段动词。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一段</td>
<td style="text-align: center;">生きる</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生きる</td>
<td style="text-align: center;">生きれ</td>
<td style="text-align: center;">生きろ／生きよ</td>
<td style="text-align: center;">生きよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">れる</td>
<td style="text-align: center;">れ</td>
<td style="text-align: center;">れ</td>
<td style="text-align: center;">れる</td>
<td style="text-align: center;">れれ</td>
<td style="text-align: center;">れろ／れよ</td>
<td style="text-align: center;">れよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">られる</td>
<td style="text-align: center;">られ</td>
<td style="text-align: center;">られ</td>
<td style="text-align: center;">られる</td>
<td style="text-align: center;">られれ</td>
<td style="text-align: center;">られろ／られよ</td>
<td style="text-align: center;">られよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">せる</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">せる</td>
<td style="text-align: center;">せれ</td>
<td style="text-align: center;">せろ／せよ</td>
<td style="text-align: center;">せよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">させる</td>
<td style="text-align: center;">させ</td>
<td style="text-align: center;">させ</td>
<td style="text-align: center;">させる</td>
<td style="text-align: center;">させれ</td>
<td style="text-align: center;">させろ／させよ</td>
<td style="text-align: center;">させよ</td>
</tr>
</tbody>
</table>
<p>「たい、らしい、ない」的活用类似于形容词，这里忽略形容词以「き」结尾的连体形。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞</td>
<td style="text-align: center;">高い</td>
<td style="text-align: center;">高かろ</td>
<td style="text-align: center;">高く／高かっ</td>
<td style="text-align: center;">高い</td>
<td style="text-align: center;">高けれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">たい</td>
<td style="text-align: center;">たかろ</td>
<td style="text-align: center;">たく／たかっ</td>
<td style="text-align: center;">たい</td>
<td style="text-align: center;">たけれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">らしい</td>
<td style="text-align: center;"><strong>×</strong></td>
<td style="text-align: center;">らしく／らしかっ</td>
<td style="text-align: center;">らしい</td>
<td style="text-align: center;">らしけれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">ない</td>
<td style="text-align: center;">なかろ</td>
<td style="text-align: center;">なく／なかっ</td>
<td style="text-align: center;">ない</td>
<td style="text-align: center;">なけれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>「だ、ようだ、そうだ（様態）」的活用类似于ダ活用形容动词。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ダ活用形容動詞</td>
<td style="text-align: center;">静かだ</td>
<td style="text-align: center;">静かだろ</td>
<td style="text-align: center;">静かで／静かだっ／静かに</td>
<td style="text-align: center;">静かな</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">だ</td>
<td style="text-align: center;">だろ</td>
<td style="text-align: center;">で／だっ／（に）</td>
<td style="text-align: center;">（な）</td>
<td style="text-align: center;">なら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">ようだ</td>
<td style="text-align: center;">ようだろ</td>
<td style="text-align: center;">ようで／ようだっ／ように</td>
<td style="text-align: center;">ような</td>
<td style="text-align: center;">ようなら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">そうだ「様態」</td>
<td style="text-align: center;">そうだろ</td>
<td style="text-align: center;">そうで／そうだっ／そうに</td>
<td style="text-align: center;">そうな</td>
<td style="text-align: center;">そうなら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>「べし」的活用类似于古语形容词。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文語形容詞</td>
<td style="text-align: center;">高し</td>
<td style="text-align: center;">高から</td>
<td style="text-align: center;">高く</td>
<td style="text-align: center;">高き</td>
<td style="text-align: center;">高けれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">べし</td>
<td style="text-align: center;">べから</td>
<td style="text-align: center;">べく</td>
<td style="text-align: center;">べき</td>
<td style="text-align: center;">べけれ</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<p>其余助动词大多不具有多数的活用或者活用很不规则。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">そうだ「伝聞」</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">そうで</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">そうなら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">です</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">でし</td>
<td style="text-align: center;">（です）</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">でしょ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">ます</td>
<td style="text-align: center;">ませ</td>
<td style="text-align: center;">まし</td>
<td style="text-align: center;">ます</td>
<td style="text-align: center;">ますれ</td>
<td style="text-align: center;">まし／ませ</td>
<td style="text-align: center;">ましょ</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">う</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">（う）</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">た</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">た</td>
<td style="text-align: center;">たら</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">たろ</td>
</tr>
<tr class="even">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">ず・ん・ぬ</td>
<td style="text-align: center;">ざら</td>
<td style="text-align: center;">ざり・ず</td>
<td style="text-align: center;">ざる・ぬ</td>
<td style="text-align: center;">ざれ・ね</td>
<td style="text-align: center;">ざれ</td>
<td style="text-align: center;">×</td>
</tr>
<tr class="odd">
<td style="text-align: center;">助動詞</td>
<td style="text-align: center;">まい</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">（まい）</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
<td style="text-align: center;">×</td>
</tr>
</tbody>
</table>
<h2 id="现代日语用言活用的应用">现代日语用言活用的应用</h2>
<p>下述的用言包含动词、形容词、形容动词和助动词。另外，助动词中类似「れる、られる、せる、させる」等实际上可以认为是动词的一种，「たい、ない、らしい、べし」也可以认为是形容词的一种，「だ、ようだ、そうだ」则认为是形容动词的一种。我们把去掉上述提到的这些词后剩余的变形不规则的助动词称为<strong>（狭义）助动词</strong>，做出这样的区分是为了方便后续的讨论。</p>
<h3 id="用言终止形">用言终止形</h3>
<h4 id="直接终结句子">直接终结句子</h4>
<p>动词终止形一般用于终结一句话，但是不同种类用言的终止形被用来结句的常见程度有不同。一般而言，狭义助动词终止形用于结句相对多见，形容动词和形容动词型助动词终止形次之，形容词和形容词型助动词终止形又次，动词和动词型助动词终止形则较为少见。</p>
<p>考虑下述用狭义助动词终止形结句的例子，这些句子都是常见的教科书例句。</p>
<div class="note info no-icon"><p>わたしは今二十四歳，学生<strong>です</strong>。</p>
<p>わたしは毎日公園で散歩してい<strong>ます</strong>。</p>
<p>一緒に食事に行きましょ<strong>う</strong>。</p>
<p>この部屋に誰もいませ<strong>ん</strong>。</p>
</div>
<p>而形容动词或形容词终止形结句例句有这些，这些句子大多偏口语化。</p>
<div class="note info no-icon"><p>ほら見て，あの犬はめっちゃ<strong>可愛い</strong>。</p>
<p>昨夜睡眠不足だから，今眠くてとても寝<strong>たい</strong>。</p>
<p>そう言っても，わたし実は歌が<strong>上手だ</strong>。</p>
<p>ドアの鍵はまた忘れてしまうん<strong>だ</strong>。</p>
</div>
<p>而使用动词终止形结局，则显得较为直白，故这种用法相对上述较为少见。</p>
<div class="note info no-icon"><p>春になると，桜が<strong>咲く</strong>。</p>
</div>
<h4 id="接续助动词表意">接续助动词表意</h4>
<p>使用用言终止形接续的助动词包括：</p>
<ul>
<li>用言终止形接续表示传闻的「そうだ」</li>
<li>动词和形容词终止形接续「らしい」</li>
<li>动词终止形接续「べし」「まい」</li>
<li>形容词终止形接续「だ」「です」</li>
</ul>
<p>用言终止形接续表示传闻的「そうだ」，一般表示传闻：</p>
<div class="note info no-icon"><p>天気予報によると，明日は雨になる<strong>そうだ</strong>。</p>
<p>新聞によると，今年の冬は暖かい<strong>そうだ</strong>。</p>
</div>
<p>这两句话也就分别表示“根据天气预报，明天似乎要下雨”以及“根据报纸，今年冬天似乎会暖和”，这些都是根据传闻得到的推断的结果。</p>
<hr />
<p>动词和形容词终止形接续「らしい」（也可以使用体言原形接续）则可能有两种含义。其一表达当前描述对象具有某种事物的特征：</p>
<div class="note info no-icon"><p>学生なら，学生<strong>らしく</strong>勉強しなさい。</p>
<p>「自分<strong>らしく</strong>生きて」なんて言わないで，<strong>らしさ</strong>なんて最初からないから。</p>
</div>
<p>这里类似「学生らしい」这样的结构就表示“像学生那样”，即表示描述对象具有学生的特征。所以第一句话就表示“是学生的话就要像学生一样学习”，或者意译为“学生就要有学生学习的样”。第二句话则表示“不要说什么‘活出自我’，因为自我从一开始就不存在”，这里“活出自我”就是「自分らしく生きて」的意译。</p>
<p>其二则用于表达“根据外部信息得到的较为确切的推断”，这一点和表示传闻的「そうだ」有一定的类似之处：</p>
<div class="note info no-icon"><p>天気予報によると，明日は雨になる<strong>らしい</strong>。</p>
</div>
<p>这句话依然表示“根据天气预报，明天似乎要下雨”。</p>
<p>但是在表达通过其他类型的间接信息获取推断的时候，比如通过所见得到的信息获得推断的时候，就不能用表示传闻的「そうだ」，而更倾向于「らしい」：</p>
<div class="note info no-icon"><p>バスで田中さん<strong>らしい</strong>人を見かけました。</p>
<p>道が濡れていると言うことで，昨日雨が降った<strong>らしい</strong>。</p>
</div>
<p>「らしい」的特点是推断较为确信，所以有时也用于表示语气婉转的断定：</p>
<div class="note info no-icon"><p>どうやら事実<strong>らしい</strong>。</p>
<p>彼女は落選した<strong>らしい</strong>。</p>
</div>
<p>这两句实际上表达的是一种断定的语气，分别为“无论怎样都像事实”以及“她好像落选了”。</p>
<hr />
<p>「べし」为古语助动词，表示“应当”的语气：</p>
<div class="note info no-icon"><p>気づいたらもう一袋のお菓子を食べちゃった。食欲の秋，恐る<strong>べし</strong>。</p>
<p>静寂，流れる時間と守る<strong>べき</strong>何か。</p>
<p>なる<strong>べく</strong>永く一緒にいたいんだよ。</p>
</div>
<p>这里第一句「恐るべし」就表示“应当惧怕的”，意译为“可怕的”，所以一整句话的含义为“回过神来已经吃了一袋点心。食欲之秋，令人恐惧”。而第二句话则含义为“寂静，流逝的时间与应当守护的事物”。</p>
<p>这里第三句的「なるべく」目前已经成为固定表达，含义为“尽可能”，所以整句话含义为“想尽可能和你多在一起”。</p>
<hr />
<p>「まい」也是古语助动词，其表达否定的意志或者推测：</p>
<div class="note info no-icon"><p>ケーキを買う<strong>まい</strong>と思っても買ってしまった。</p>
<p>あの紛争は簡単に解決す<strong>まい</strong>と思うから，両方の努力は必要だ。</p>
</div>
<p>这两句中，第一句表达的是否定的意志，句子含义为“本不想买蛋糕的最后还是买了”。第二句话则表达否定的推断，含义为“那种纠纷我想不太能简单解决，所以两方的努力是必要的”。</p>
<hr />
<p>形容词终止形接续「だ」「です」则是先前提过的话题，这里不再赘述。</p>
<h3 id="用言连体形">用言连体形</h3>
<h4 id="用于修饰体言">用于修饰体言</h4>
<p>连体形顾名思义是接续体言的，其用途就是具体修饰一个名词具有的性质：</p>
<div class="note info no-icon"><p>明日の会議に<strong>使う書類</strong>。</p>
<p><strong>勉強する時</strong>に。</p>
</div>
<p>这个可以说是相当常用的一种用法了，不过这里要介绍几个东西，也就是<strong>形式体言</strong>，这种体言没有实际含义，但是可以辅助作为句子成分。形式体言往往是实际的体言退化得到的，虽然保留了原先体言的部分含义，但基本上已经固化成为固定搭配的一部分，用于构成表达固定含义的词组。</p>
<h5 id="形式体言事ことの">形式体言：事「こと」／の</h5>
<p>这是相当常见的形式体言，其汉字表示为「事」，常常用来接在连体后表达一种抽象的概念，常常构成类似「ことがある」「ことになる」「ことにする」「と言うことだ」这样的短语存在。</p>
<p>「の」也是相当常见的形式体言，但显然比较“轻量级”。</p>
<p>一般情况下，只是单纯完成动词名词化的时候，这两个形式体言是可以互换的：</p>
<div class="note info no-icon"><p>日本語を<strong>勉強すること</strong>は楽しいです。</p>
<p>日本語を<strong>勉強するの</strong>は楽しいです。</p>
</div>
<p>不过这两者之间存在一些小区别，这里首先说一下一般用「の」的情况。比如说如果名词化的动词是「みる」「聞こえる」等表示感知的动词的宾语的时候，或者比如说名词化的动词比较具像化的时候。</p>
<div class="note info no-icon"><p>あいつが本を<strong>読むの</strong>を聞こえます。</p>
<p>山田さんが<strong>来るの</strong>を待っています。</p>
</div>
<p>常常用「こと」的情况可能是接续的动词是「言う」「話す」「考える」「決める」等发言动词或决定性动词，也可以是直接接续「です」「だ」等动词，或者是构成了常用短语：</p>
<div class="note info no-icon"><p>アメリカに<strong>留学すること</strong>を考えている。</p>
<p>日本語を勉強し<strong>続くこと</strong>を決めました。</p>
<p>団長の仕事は団員を<strong>守ること</strong>だ。</p>
<p>今日からタバコを<strong>止めること</strong>にしました。</p>
</div>
<p>额外说明一点，有的时候「のです／のだ」也可以使用，但是在口语之中常常简化为「んです／んだ」。</p>
<hr />
<p>这里可能需要进一步说明的是包含有「こと」的一些常用短语，这些短语一般已经具有了固定的含义。</p>
<p>「ことがある」表示“这样的事件可能存在”：</p>
<div class="note info no-icon"><p>自分で料理を<strong>作ることがある</strong>。</p>
</div>
<p>「ことになる」表示“事态发展到了某一种状况，这种发展不是主观可控的”：</p>
<div class="note info no-icon"><p>学校のプールは六月一日から<strong>始まることになっ</strong>ている。</p>
</div>
<p>「ことにする」表示“下决心做什么事”：</p>
<div class="note info no-icon"><p>最後，彼はアメリカに<strong>留学することにし</strong>ました。</p>
</div>
<p>「ことには」有的时候用于表达一种强烈的情感和强调：</p>
<div class="note info no-icon"><p><strong>困ることには</strong>，今お金がないんです。</p>
</div>
<p>「ことができる」表示“有能力做到”：</p>
<div class="note info no-icon"><p>彼はこの歌を<strong>歌うことができ</strong>ます。</p>
</div>
<p>「ないことには」表示“如果不...就...”：</p>
<div class="note info no-icon"><p>やってみ<strong>ないことには</strong>，何もわからないです。</p>
</div>
<p>这句话就可以翻译为“不试试看的话，就什么都不知道了”。</p>
<p>「たことにする」表示“知道这件事，但是主观上不想重视”的意思：</p>
<div class="note info no-icon"><p>そんな話を聞こえなかっ<strong>たことにし</strong>よう。</p>
</div>
<p>这句话就可以翻译为“就当作没听见这样的话吧”。</p>
<p>「たことがある」表示“曾经有过这个经验”：</p>
<div class="note info no-icon"><p>横浜へ行っ<strong>たことがある</strong>よ。</p>
</div>
<p>这句话就可以翻译为“我曾去过横滨”。</p>
<h5 id="形式体言物もの">形式体言：物「もの」</h5>
<p>这种形式体言最为重要的应用就是表示“情理之中的行为”或者“真理”。</p>
<div class="note info no-icon"><p>太陽は東方から<strong>登るもの</strong>です。</p>
<p>そんなことを言わ<strong>ないもの</strong>です。</p>
</div>
<p>与「こと」类似，「もの」这个词也形成了如下所述的大量固定短语。</p>
<p>「たいものだ」表示“相当强的欲望”：</p>
<div class="note info no-icon"><p>世界各地を旅行し<strong>たいものだ</strong>。</p>
</div>
<p>「ものがある」表示相当强调的语气：</p>
<div class="note info no-icon"><p>あいつがやったことには，目に<strong>余るものがある</strong>。</p>
</div>
<p>「目に余る」表示“看不下去”，所以这句话的含义为“那家伙所做的事根本看不下去”。</p>
<p>「たものだ」表示“对过去经历的怀念”：</p>
<div class="note info no-icon"><p>これで君とよく遊びに来<strong>たものだ</strong>。</p>
</div>
<p>「もの／もので／ものだから」这三个词应用于表达原因，其语气一个比一个强烈。第一个含有一种轻微的因果感觉，而第三个则为相当强的因果关系：</p>
<div class="note info no-icon"><p>子供と<strong>いうもの</strong>，仕方ないですね。</p>
<p>あまり天気が<strong>いいもので</strong>，どこかへ遊びに行きたくなった。</p>
<p>雨が<strong>酷いものだから</strong>，どうしても出掛けたくない。</p>
</div>
<p>「ものなら」表示一种假设。如果接续表示可能的动词连体形，就表示“如果...的话，就...”，如果接续助动词「う」就表示“万一...的话，就...”：</p>
<div class="note info no-icon"><p><strong>できるものなら</strong>，やってみなさい。</p>
<p>失敗しよ<strong>うものなら</strong>，大目玉を食う。</p>
</div>
<p>「大目玉を食う」表示“受到严厉训斥”。这两句话分别表示“如果能做到的话，做做试试看吧”以及“万一失败了的话，就会被骂得很惨”。</p>
<p>「ものの」表示“虽然...但是...”：</p>
<div class="note info no-icon"><p>苦しいことは<strong>苦しいものの</strong>，楽しいこともあるんだ。</p>
</div>
<p>「ものを」是一个逆接的助词，表达转折含义：</p>
<div class="note info no-icon"><p>そんな上手に<strong>歌えるものを</strong>，なぜ歌わなかったのですか？</p>
</div>
<h5 id="形式体言所ところ">形式体言：所「ところ」</h5>
<p>这个体言最基本的含义就是“地点”或者“场所”，所以也可以表示虚化的“场合”：</p>
<div class="note info no-icon"><p>お<strong>忙しいところ</strong>をおいでくださいましてありがとうございました。</p>
</div>
<p>这里「おいで」是「来ること」等的尊敬语格式，这里可以理解为“出席”。这句话直译就是“能从繁忙的事务之中抽身出席，非常感谢”，也就是“感谢您百忙之中出席”。</p>
<p>这个体言也可以被引申后用来表示“某一点”或者“某一方面”：</p>
<div class="note info no-icon"><p>あなただって足りてい<strong>ないところ</strong>だらけ。</p>
<p>あなたの<strong>悪いところ</strong>はすぐ怒ることです。</p>
</div>
<p>同时也可以被引申为“范围”：</p>
<div class="note info no-icon"><p>私が知っているのは大体<strong>こんなところ</strong>です。</p>
</div>
<p>之后就是一些更为抽象的引申义。首先是表示程度，可以理解为“已经到了这个地步了”这样的意思：</p>
<div class="note info no-icon"><p>もう少しで車に引かれて<strong>しまうところ</strong>だった。</p>
</div>
<h5 id="形式体言訳わけ">形式体言：訳「わけ」</h5>
<h5 id="形式体言筈はず">形式体言：筈「はず」</h5>
<h5 id="形式体言為ため">形式体言：為「ため」</h5>
<h5 id="形式体言つもり">形式体言：つもり</h5>
<p>这个体言最基本的意义就是“计划、打算”。</p>
<div class="note info no-icon"><p>僕もタバコを<strong>やめるつもり</strong>だ。</p>
</div>
<p>另一方面，这个词语就可以表示主观意愿上的“估算、评价”（下述第一句），但有的时候会翻译为“自以为”（下述第二句），带有一定的贬义色彩：</p>
<div class="note info no-icon"><p><strong>君のつもり</strong>では，どれほど費用がかかるんだか？</p>
<p>あの人は自分が<strong>有能なつもり</strong>だが，彼の仕事ぶりに対する周囲の評価は低い。</p>
</div>
<p>另外一种是表示假设，翻译为“就当作”。但一般形成短语「たつもり」：</p>
<div class="note info no-icon"><p>先生になっ<strong>たつもり</strong>で，みんなに説明しよう。</p>
</div>
<p>另外说一下这个体言的否定，「〜ないつもり」表示“不打算这么做”，「〜つもりはない」则根本上否定，表示“完全不打算”：</p>
<div class="note info no-icon"><p>進学し<strong>ないつもり</strong>だ。</p>
<p>率直的にいう，俺は<strong>進学するつもりはない</strong>んだ。</p>
</div>
<h5 id="形式体言方ほう">形式体言：方「ほう」</h5>
<p>这个词一般被运用在比较句之中，用来形成比较的语气：</p>
<div class="note info no-icon"><p><strong>あちらの方</strong>はデザインがいいんだ。</p>
</div>
<h5 id="形式体言儘まま">形式体言：儘「まま」</h5>
<p>这个词核心意思就是“保持某一种状态不变”：</p>
<div class="note info no-icon"><p><strong>そのまま</strong>でいいでしょう？</p>
<p>前に<strong>向こうまま</strong>歩いている。</p>
<p>自分の<strong>意のまま</strong>にいこう。</p>
</div>
<p>第一句表示“就这样下去也不错吧？”，而第二句意思为“一直向前走”，第三句意思为“随着自己的意思行动”。这三句话都蕴含着“保持一种状态不变”或者“跟随某一种状态不变”的含义。而如果表明的是“跟随自己的意见”，这个词可以酌情翻译为“任性”，并且这个时候常常带有些许贬义。比如说常见的形容动词「わがままだ」。</p>
<h5 id="形式体言通とおり">形式体言：通「とお」り</h5>
<p>这个词核心意思为“按照”或者“正如”：</p>
<div class="note info no-icon"><p>教え<strong>た通り</strong>にやってみよう。</p>
<p><strong>ご覧の通り</strong>なんでもない。</p>
</div>
<p>这两句话的意思就是“按着刚刚教的做做试试看吧”以及“正如您所见，什么都没有”。</p>
<h5 id="形式体言上うえ">形式体言：上「うえ」</h5>
<p>首先这个词有个非常直观的意思，就是“...上”，用来表示一个方面：</p>
<div class="note info no-icon"><p><strong>仕事の上</strong>で問題はない。</p>
</div>
<p>这句话很简单的翻译为“工作上没有问题”。</p>
<p>另外，这个词还可以表示“添加评注”，也就是添加一段对某个人或物性质的描述：</p>
<div class="note info no-icon"><p>このカメラはよく<strong>映る上</strong>に，値段がやすいです。</p>
</div>
<p>这句话直接翻译的话就是“这个照相机除了拍照片很好，还很便宜”。</p>
<p>另外，如果用「た」接续，就表明“在...之后再...”：</p>
<div class="note info no-icon"><p>お目にかかっ<strong>た上</strong>で決めましょう。</p>
</div>
<p>这里「お目にかかる」表示“会面”，所以这句话意思为“见面之后再决定吧”。</p>
<p>还有一种意思表示“既然...那么...”：</p>
<div class="note info no-icon"><p>事実はそうであっ<strong>た上</strong>で，仕方はないでしょう？</p>
</div>
<h5 id="形式体言うち">形式体言：うち</h5>
<p>这个词的核心意思就是“范围”：</p>
<div class="note info no-icon"><p><strong>三人のうち</strong>で誰が一番年長ですか？</p>
</div>
<p>这句话可以简单翻译为“这三个人（的范围）里面，谁年龄最大？”</p>
<h5 id="形式体言元もと">形式体言：元「もと」</h5>
<p>这个词核心的意思就是“范围”，进而引申出“在...之下”的含义：</p>
<div class="note info no-icon"><p><strong>親のもと</strong>を離れる。</p>
<p>先生の<strong>指導のもと</strong>で研究を続ける。</p>
</div>
<p>第一句话直接翻译就是“离开了父母的范围”，意思就是“与父母分离”。第二句话使用了引申义，意思是“在老师的指导之下，研究得以继续”。</p>
<h5 id="形式体言限かぎり">形式体言：限「かぎ」り</h5>
<p>这个词最简单的含义就是表示“极限”。但是作为形式体言，其可以构成“只要...就...”的句式：</p>
<div class="note info no-icon"><p>このうるさい音が<strong>続く限り</strong>，私は眠れない。</p>
</div>
<p>这句话就表示“只要那烦人的声音还在响，我就睡不着”。</p>
<p>当然，这个词如果接续在否定的「ない」后面，就表达“除非...就不...”，这实际上就是上面的“只要...就...”的否定：</p>
<div class="note info no-icon"><p>病気が<strong>ない限り</strong>学校を休まない。</p>
</div>
<p>这句话就可以翻译为“只要没生病就不能请假”。</p>
<h5 id="形式体言代かわりに">形式体言：代「か」わりに</h5>
<p>这个词可以作为实际含义的词，表示“代替”：</p>
<div class="note info no-icon"><p>私の<strong>母の代わりに</strong>，ご挨拶します。</p>
</div>
<p>但是其作为形式体言，有一个作用就是构成“虽然...但也...”的句式：</p>
<div class="note info no-icon"><p>スポーツがあまり上手では<strong>ない代わりに</strong>，大病もしたことがない。</p>
</div>
<p>这句话就被翻译为“虽然我运动不是很好，但是也从未生过大病”。</p>
<p>同时，这个形式体言也可以表示两者之间的一个交换条件：</p>
<div class="note info no-icon"><p>英語を教えて<strong>もらう代わりに</strong>，日本語を教えてあげます。</p>
</div>
<p>这句话可以形象翻译为“你来教我英语，作为交换，我教你日语”，实际上就是表明两个行为是一种交换的行为。</p>
<h5 id="形式体言次第しだい">形式体言：次第「しだい」</h5>
<p>这个词本质上也是一个实质体言，意思为“次序”，但是其作为形式体言就表示“全凭，全靠”的意思：</p>
<div class="note info no-icon"><p>全ては君の<strong>決心の次第</strong>です。</p>
</div>
<p>这句话意为“这全靠你的决心”。</p>
<h5 id="形式体言癖くせに">形式体言：癖「くせ」に</h5>
<p>这个词附加在动词上往往表达一种不满的、责备的语气，一般含有“明明怎么样，却怎么样”的感觉：</p>
<div class="note info no-icon"><p>お前は知って<strong>いるくせに</strong>，なんで私に教えてくれなかったの？</p>
<p>あいつはバスケットボールが<strong>下手なくせに</strong>，選手になりたいなんて夢を見ている。</p>
</div>
<p>这两句话可以根据语气分别翻译为“你明明知道，为什么不告诉我”以及“他篮球明明打得不好，却还想做当运动员的梦”。</p>
<h2 id="不视作活用的变形">不视作活用的变形</h2>
<p>在现代日语中，我们有时还是能看到一些比较规律的变形。比如说形容词词尾变为「さ、み、め」似乎就可以变为名词，某些自动词和他动词存在较为规则的对应关系等等。</p>
<h2 id="现代日语常用助词和简介">现代日语常用助词和简介</h2>
<p>助词和助动词的差别在于，助词一般不具有活用。日语中的助词相当庞杂，含义也各异，和用言的接续方式更是杂乱，且在实际使用中也可能是不完全严谨的。所以我们将其脱离用言变形的体系独立进行讲解。</p>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>日语单词变形手册</title>
    <url>/2021/06/18/ja-1/</url>
    <content><![CDATA[<p>这是一个相当长的文档，几乎可以说记录了我对日语单词变形能想到的一切。即使日语有的时候和中文很相似，但是它作为黏着语还是让它的语法成为了汉语母语者学习的巨大障碍。</p>
<p>这个文档随时更新，欢迎大家关注。</p>
<span id="more"></span>
<p>首先说一下这个文档整理的原则。由于日语的词汇可以很灵活地变形，比如「書く」先变成第一连用形后接续「たい」形成类似形容词的「書きたい」，之后再按照形容词过去否定的规则变为「書きたくなかった」后，在按照连体形规则接上助动词「ので」变成「書きたくなかったので」。在这样的背景下，本文档不可能穷尽所有的变形以及这种变形的所有应用方式，不过本文档会这样表述：“这样变形之后，词汇将类似于形容词”。这样的话后续进行第二次变形的时候就可以在形容词栏目之下进行寻找。</p>
<h1 id="日语动词的变形">日语动词的变形</h1>
<p>在介绍变形之前，我们要首先介绍日语动词的分类。日语动词按照活用类型可以分为四类：</p>
<ul>
<li>五段动词</li>
</ul>
<p>形式为词干加上某一个ウ段假名构成，比如「書く、読む、話す」。</p>
<ul>
<li>一段动词</li>
</ul>
<p>形式一般为一个イ段假名或者エ段假名结尾的词干加上「る」构成，比如「食べる、教える、起きる」。</p>
<p>有一些细化为上一段动词和下一段动词的说法，这里可以简单理解为以イ段假名接续的是上一段动词，以エ段假名接续的是下一段动词。</p>
<ul>
<li>サ变动词</li>
</ul>
<p>形式为「する」或者某一个词干加上「する」，同时也有一些以「ずる」结尾的动词也是サ变动词。比如「する、勉強する、散歩する、感ずる、禁ずる」。</p>
<ul>
<li>カ变动词</li>
</ul>
<p>只有「来る」是カ变动词。</p>
<h2 id="原形辞书形连体形">原形/辞书形/连体形</h2>
<p>这种形式就是字典上表示动词的形式，所以称为“原形”或者“辞书形”。其用途也是较为多的。</p>
<h3 id="用于终结一句话">用于终结一句话</h3>
<p>动词原形可以直接用于终结一个句子，提示动作：</p>
<div class="note info no-icon"><p>今朝，朝ごはんを<strong>食べる</strong>。 そこで<strong>立つ</strong>。</p>
</div>
<p>但是用原形终结一句话有的时候会给人一种语气直接了当的感觉，现实对话之中也较少使用原形直接终结句子。</p>
<h3 id="用于修饰体言">用于修饰体言</h3>
<p>实际上，动词原形同时也是连体形。连体形顾名思义是接续体言的，其用途就是具体修饰一个名词具有的性质：</p>
<div class="note info no-icon"><p>明日の会議に<strong>使う書類</strong>。 <strong>勉強する時</strong>に。</p>
</div>
<p>这个可以说是相当常用的一种用法了，不过这里要介绍几个东西，也就是<strong>形式体言</strong>，这种体言没有实际含义，但是可以辅助作为句子成分。</p>
<h4 id="形式体言事ことの">形式体言：事「こと」／の</h4>
<p>这是相当常见的形式体言，其汉字表示为「事」，常常用来接在连体后表达一种抽象的概念，常常构成类似「ことがある」「ことになる」「ことにする」「と言うことだ」这样的短语存在。</p>
<p>「の」也是相当常见的形式体言，但显然比较“轻量级”。</p>
<p>一般情况下，只是单纯完成动词名词化的时候，这两个形式体言是可以互换的：</p>
<div class="note info no-icon"><p>日本語を<strong>勉強すること</strong>は楽しいです。 日本語を<strong>勉強するの</strong>は楽しいです。</p>
</div>
<p>不过这两者之间存在一些小区别，这里首先说一下一般用「の」的情况。比如说如果名词化的动词是「みる」「聞こえる」等表示感知的动词的宾语的时候，或者比如说名词化的动词比较具像化的时候。</p>
<div class="note info no-icon"><p>あいつが本を<strong>読むの</strong>を聞こえます。 山田さんが<strong>来るの</strong>を待っています。</p>
</div>
<p>常常用「こと」的情况可能是接续的动词是「言う」「話す」「考える」「決める」等发言动词或决定性动词，也可以是直接接续「です」「だ」等动词，或者是构成了常用短语：</p>
<div class="note info no-icon"><p>アメリカに<strong>留学すること</strong>を考えている。 日本語を<strong>勉強し続くこと</strong>を決めました。 団長の仕事は団員を<strong>守ること</strong>だ。 今日からタバコを<strong>止めること</strong>にしました。</p>
</div>
<p>额外说明一点，有的时候「のです／のだ」也可以使用，但是在口语之中常常简化为「んです／んだ」。</p>
<p>这里可能需要进一步说明的是包含有「こと」的一些常用短语，这些短语一般已经具有了独特的含义了。</p>
<p>「ことがある」表示“这样的事件可能存在”：</p>
<div class="note info no-icon"><p>自分で料理を<strong>作ることがある</strong>。</p>
</div>
<p>「ことになる」表示“事态发展到了某一种状况，这种发展不是主观可控的”：</p>
<div class="note info no-icon"><p>学校のプールは六月一日から<strong>始まることになっ</strong>ている。</p>
</div>
<p>「ことにする」表示“下决心做什么事”：</p>
<div class="note info no-icon"><p>最後，彼はアメリカに<strong>留学することにし</strong>ました。</p>
</div>
<p>「ことには」有的时候用于表达一种强烈的情感和强调：</p>
<div class="note info no-icon"><p><strong>困「こま」ることには</strong>，今お金がないんです。</p>
</div>
<p>「ことができる」表示“有能力做到”：</p>
<div class="note info no-icon"><p>彼はこの歌を<strong>歌うことができ</strong>ます。</p>
</div>
<p>这里我们发现接续「こと」的全都是原形，但很多时候还可以使用第二连用形加「た／だ」之后接续「こと」，或者使用未然形加上「ない」之后接续「こと」，并且这些时候意思会产生一些微妙的变化。</p>
<div class="note default"><p><strong>注解：</strong>从这里开始，形式体言部分会涉及到许多不是原形进行接续的场合，但这些东西不会拆分到对应的条目（比如第二连用形加「た／だ」之后接续就不会放到第二连用形部分），这是因为形容词或者第二连用形加「た／だ」之后接续体言是相当自然的事情，故不如只设定一个条目统一管理。在第二连用形部分以及形容词部分会设置跳转提示，提示形式体言均放在此处记录。</p>
</div>
<p>「ないことには」表示“如果不...就...”：</p>
<div class="note info no-icon"><p>やって<strong>みないことには</strong>，何もわからないです。</p>
</div>
<p>这句话就可以翻译为“不试试看的话，就什么都不知道了”。</p>
<p>「たことにする」表示“知道这件事，但是主观上不想重视”的意思：</p>
<div class="note info no-icon"><p>そんな話を<strong>聞こえなかったことにし</strong>よう。</p>
</div>
<p>这句话就可以翻译为“就当作没听见这样的话吧”。</p>
<p>「たことがある」表示“曾经有过这个经验”：</p>
<div class="note info no-icon"><p>横浜へ<strong>行ったことがある</strong>よ。</p>
</div>
<p>这句话就可以翻译为“我曾去过横滨”。</p>
<h4 id="形式体言物もの">形式体言：物「もの」</h4>
<p>这种形式体言最为重要的应用就是表示“情理之中的行为”或者“真理”。补充说明一下，这里也可以使用未然形加上「ない」之后接续：</p>
<div class="note info no-icon"><p>太陽は東方から<strong>登るもの</strong>です。 そんなことを<strong>言わないもの</strong>です。</p>
</div>
<p>与「こと」类似，「もの」这个词的灵魂在于大量的短语以及固定表达，这里直接介绍。</p>
<p>「たいものだ」表示“相当强的欲望”：</p>
<div class="note info no-icon"><p>世界各地を<strong>旅行したいものだ</strong>。</p>
</div>
<p>「ものがある」表示相当强调的语气：</p>
<div class="note info no-icon"><p>あいつがやったことには，目に<strong>余るものがある</strong>。</p>
</div>
<p>「目に余る」表示“看不下去”，所以这句话就是说“那家伙所做的事根本看不下去”。</p>
<p>「たものだ」表示“对过去经历的怀念”：</p>
<div class="note info no-icon"><p>これで君とよく遊びに<strong>来たものだ</strong>。</p>
</div>
<p>「もの／もので／ものだから」这三个词应用于表达原因，其语气是一个比一个强烈。第一个含有一种轻微的因果感觉，而第三个就是相当强的因果关系：</p>
<div class="note info no-icon"><p><strong>子供というもの</strong>，仕方ないですね。 あまり天気が<strong>いいもので</strong>，どこかへ遊びに行きたくなった。 雨が<strong>酷いものだから</strong>，どうしても出掛けたくない。</p>
</div>
<p>「ものなら」表示一种假设。如果接续在表示可能的动词原形后面，就表示“如果...的话，就...”，如果接续在助动词「よう／う」后面就表示“万一...的话，就...”：</p>
<div class="note info no-icon"><p><strong>できるものなら</strong>，やってみなさい。 <strong>失敗しようものなら</strong>，大目玉を食う。</p>
</div>
<p>「大目玉を食う」表示“受到严厉训斥”。这两句话分别表示“如果能做到的话，做做试试看吧”以及“万一失败了的话，就会被骂得很惨”。</p>
<p>「ものの」表示“虽然...但是...”：</p>
<div class="note info no-icon"><p>苦しいことは<strong>苦しいものの</strong>，楽しいこともあるんだ。</p>
</div>
<p>「ものを」是一个逆接的助词，表达转折含义：</p>
<div class="note info no-icon"><p>そんな上手に<strong>歌えるものを</strong>，なぜ歌わなかったのですか？</p>
</div>
<h4 id="形式体言所ところ">形式体言：所「ところ」</h4>
<p>这个体言最基本的含义就是“地点”或者“场所”，所以也可以表示虚化的“场合”：</p>
<div class="note info no-icon"><p>お<strong>忙しいところ</strong>をおいでくださいましてありがとうございました。</p>
</div>
<p>这里「おいで」是「来ること」等的尊敬语格式，这里可以理解为“出席”。这句话直译就是“能从繁忙的事务之中抽身出席，非常感谢”，也就是“感谢您百忙之中出席”。</p>
<p>这个体言也可以被引申后用来表示“某一点”或者“某一方面”：</p>
<div class="note info no-icon"><p>あなただって足りて<strong>いないところ</strong>だらけ。 あなたの<strong>悪いところ</strong>はすぐ怒ることです。</p>
</div>
<p>同时也可以被引申为“范围”：</p>
<div class="note info no-icon"><p>私が知っているのは大体<strong>こんなところ</strong>です。</p>
</div>
<p>之后就是一些更为抽象的引申义。首先是表示程度，可以理解为“已经到了这个地步了”这样的意思：</p>
<div class="note info no-icon"><p>もう少しで車に引かれて<strong>しまうところ</strong>だった。</p>
</div>
<h4 id="形式体言訳わけ">形式体言：訳「わけ」</h4>
<h4 id="形式体言筈はず">形式体言：筈「はず」</h4>
<h4 id="形式体言為ため">形式体言：為「ため」</h4>
<h4 id="形式体言つもり">形式体言：つもり</h4>
<p>这个体言最基本的意义就是“计划、打算”。</p>
<div class="note info no-icon"><p>僕もタバコを<strong>やめるつもり</strong>だ。</p>
</div>
<p>另一方面，这个词语就可以表示主观意愿上的“估算、评价”（下述第一句），但有的时候会翻译为“自以为”（下述第二句），带有一定的贬义色彩：</p>
<div class="note info no-icon"><p><strong>君のつもり</strong>では，どれほど費用がかかるんだか？ あの人は自分が<strong>有能なつもり</strong>だが，彼の仕事ぶりに対する周囲の評価は低い。</p>
</div>
<p>另外一种是表示假设，翻译为“就当作”。但一般形成短语「たつもり」：</p>
<div class="note info no-icon"><p>先生に<strong>なったつもり</strong>で，みんなに説明しよう。</p>
</div>
<p>另外说一下这个体言的否定，「〜ないつもり」表示“不打算这么做”，「〜つもりはない」则根本上否定，表示“完全不打算”：</p>
<div class="note info no-icon"><p><strong>進学しないつもり</strong>だ。 率直的「そっちょくてき」にいう，俺は<strong>進学するつもりはない</strong>んだ。</p>
</div>
<h4 id="形式体言方ほう">形式体言：方「ほう」</h4>
<p>这个词一般被运用在比较句之中，用来形成比较的语气：</p>
<div class="note info no-icon"><p><strong>あちらの方</strong>はデザインがいいんだ。</p>
</div>
<h4 id="形式体言儘まま">形式体言：儘「まま」</h4>
<p>这个词核心意思就是“保持某一种状态不变”：</p>
<div class="note info no-icon"><p><strong>そのまま</strong>でいいでしょう？ 前に<strong>向こうまま</strong>歩いている。 自分の<strong>意のまま</strong>にいこう。</p>
</div>
<p>第一句表示“就这样下去也不错吧？”，而第二句意思为“一直向前走”，第三句意思为“随着自己的意思行动”。这三句话都蕴含着“保持一种状态不变”或者“跟随某一种状态不变”的含义。而如果表明的是“跟随自己的意见”，这个词可以酌情翻译为“任性”，并且这个时候常常带有些许贬义。比如说常见的形容动词「わがままだ」。</p>
<h4 id="形式体言通とおり">形式体言：通「とお」り</h4>
<p>这个词核心意思为“按照”或者“正如”：</p>
<div class="note info no-icon"><p><strong>教えた通り</strong>にやってみよう。 <strong>ご覧の通り</strong>なんでもない。</p>
</div>
<p>这两句话的意思就是“按着刚刚教的做做试试看吧”以及“正如您所见，什么都没有”。</p>
<h4 id="形式体言上うえ">形式体言：上「うえ」</h4>
<p>首先这个词有个非常直观的意思，就是“...上”，用来表示一个方面：</p>
<div class="note info no-icon"><p><strong>仕事の上</strong>で問題はない。</p>
</div>
<p>这句话很简单的翻译为“工作上没有问题”。</p>
<p>另外，这个词还可以表示“添加评注”，也就是添加一段对某个人或物性质的描述：</p>
<div class="note info no-icon"><p>このカメラはよく<strong>映る上</strong>に，値段がやすいです。</p>
</div>
<p>这句话直接翻译的话就是“这个照相机除了拍照片很好，还很便宜”。</p>
<p>另外，如果用「た」接续，就表明“在...之后再...”：</p>
<div class="note info no-icon"><p>お目に<strong>かかった上</strong>で決めましょう。</p>
</div>
<p>这里「お目にかかる」表示“会面”，所以这句话意思为“见面之后再决定吧”。</p>
<p>还有一种意思表示“既然...那么...”：</p>
<div class="note info no-icon"><p>事実はそうで<strong>あった上</strong>で，仕方はないでしょう？</p>
</div>
<h4 id="形式体言うち">形式体言：うち</h4>
<p>这个词的核心意思就是“范围”：</p>
<div class="note info no-icon"><p><strong>三人のうち</strong>で誰が一番年長ですか？</p>
</div>
<p>这句话可以简单翻译为“这三个人（的范围）里面，谁年龄最大？”</p>
<h4 id="形式体言元もと">形式体言：元「もと」</h4>
<p>这个词核心的意思就是“范围”，进而引申出“在...之下”的含义：</p>
<div class="note info no-icon"><p><strong>親のもと</strong>を離れる。 先生の<strong>指導のもと</strong>で研究を続ける。</p>
</div>
<p>第一句话直接翻译就是“离开了父母的范围”，意思就是“与父母分离”。第二句话使用了引申义，意思是“在老师的指导之下，研究得以继续”。</p>
<h4 id="形式体言限かぎり">形式体言：限「かぎ」り</h4>
<p>这个词最简单的含义就是表示“极限”。但是作为形式体言，其可以构成“只要...就...”的句式：</p>
<div class="note info no-icon"><p>このうるさい音が<strong>続く限り</strong>，私は眠れない。</p>
</div>
<p>这句话就表示“只要那烦人的声音还在响，我就睡不着”。</p>
<p>当然，这个词如果接续在否定的「ない」后面，就表达“除非...就不...”，这实际上就是上面的“只要...就...”的否定：</p>
<div class="note info no-icon"><p>病気が<strong>ない限り</strong>学校を休まない。</p>
</div>
<p>这句话就可以翻译为“只要没生病就不能请假”。</p>
<h4 id="形式体言代かわりに">形式体言：代「か」わりに</h4>
<p>这个词可以作为实际含义的词，表示“代替”：</p>
<div class="note info no-icon"><p>私の<strong>母の代わりに</strong>，ご挨拶します。</p>
</div>
<p>但是其作为形式体言，有一个作用就是构成“虽然...但也...”的句式：</p>
<div class="note info no-icon"><p>スポーツがあまり上手では<strong>ない代わりに</strong>，大病もしたことがない。</p>
</div>
<p>这句话就被翻译为“虽然我运动不是很好，但是也从未生过大病”。</p>
<p>同时，这个形式体言也可以表示两者之间的一个交换条件：</p>
<div class="note info no-icon"><p>英語を教えて<strong>もらう代わりに</strong>，日本語を教えてあげます。</p>
</div>
<p>这句话可以形象翻译为“你来教我英语，作为交换，我教你日语”，实际上就是表明两个行为是一种交换的行为。</p>
<h4 id="形式体言次第しだい">形式体言：次第「しだい」</h4>
<p>这个词本质上也是一个实质体言，意思为“次序”，但是其作为形式体言有两种意思。如果接在连用形后面，就表示“全凭，全靠”的意思，如果接在第一连用形后面，就表示“一...就...”的意思：</p>
<div class="note info no-icon"><p>全ては君の<strong>決心の次第</strong>です。 <strong>出来次第</strong>，お届けいたします。</p>
</div>
<p>这里「出来次第」可能一下子看不出来，实际上就是动词「できる」的第一连用形「出来」加上「次第」的形式。这两句话意为“这全靠你的决心”以及“一旦做出来就给您送过去”。</p>
<h4 id="形式体言癖くせに">形式体言：癖「くせ」に</h4>
<p>这个词附加在动词上往往表达一种不满的、责备的语气，一般含有“明明怎么样，却怎么样”的感觉：</p>
<div class="note info no-icon"><p>お前は知って<strong>いるくせに</strong>，なんで私に教えてくれなかったの？ あいつはバスケットボールが<strong>下手なくせに</strong>，選手になりたいなんて夢を見ている。</p>
</div>
<p>这两句话可以根据语气分别翻译为“你明明知道，为什么不告诉我”以及“他篮球明明打得不好，却还想做当运动员的梦”。</p>
<h3 id="接续助词辅助表意">接续助词辅助表意</h3>
<p>另外，还可以接续一些助词，比如说表达客观原因的「ので」。</p>
<div class="note info no-icon"><p>横浜へ行ったことがあるよ。</p>
</div>
<h2 id="第一连用形">第一连用形</h2>
<p>首先我们给出第一连用形的变形规则：</p>
<ul>
<li><p>五段动词将词尾ウ段假名改为イ段假名</p></li>
<li><p>一段动词将词尾「る」删去</p></li>
<li><p>サ变动词删去词尾「する／ずる」加上「し／じ」</p></li>
<li><p>カ变动词变为「き」</p></li>
</ul>
<p>这里直接给出变形例子：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">原形／辞書形</th>
<th style="text-align: center;">語幹／第一連用形</th>
<th style="text-align: center;">第一連用形＋ます</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">五段動詞「く」</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書き</td>
<td style="text-align: center;">書きます</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ぐ」</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳ぎ</td>
<td style="text-align: center;">泳ぎます</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「す」</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話します</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「つ」</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立ち</td>
<td style="text-align: center;">立ちます</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「ぬ」</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死に</td>
<td style="text-align: center;">死にます</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ぶ」</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛び</td>
<td style="text-align: center;">飛びます</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「む」</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読み</td>
<td style="text-align: center;">読みます</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「る」</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降り</td>
<td style="text-align: center;">降ります</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「う」</td>
<td style="text-align: center;">歌う</td>
<td style="text-align: center;">歌い</td>
<td style="text-align: center;">歌います</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞</td>
<td style="text-align: center;">起きる</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起きます</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下一段動詞</td>
<td style="text-align: center;">教える</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教えます</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞「基本」</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">します</td>
</tr>
<tr class="odd">
<td style="text-align: center;">サ変動詞「語幹ある」</td>
<td style="text-align: center;">勉強する</td>
<td style="text-align: center;">勉強し</td>
<td style="text-align: center;">勉強します</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞「濁点ある」</td>
<td style="text-align: center;">感ずる</td>
<td style="text-align: center;">感じ</td>
<td style="text-align: center;">感じます</td>
</tr>
<tr class="odd">
<td style="text-align: center;">カ変動詞</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きます</td>
</tr>
</tbody>
</table>
<p>之后我们就可以介绍第一连用形的用途了。</p>
<h3 id="接续助词辅助表意-1">接续助词辅助表意</h3>
<h4 id="助动词ます">助动词ます</h4>
<p>「ます」在一定程度上是一种很常用的助动词，常常用来表示一种稍稍表敬意的语气。</p>
<p>「ます」在一定意义上也具有各种的变形来表达各种含义（毕竟原本的动词为了接续「ます」只能变为第一连用形，从而就不能再变形来表达含义了）。</p>
<ul>
<li>基本形「ます」</li>
</ul>
<p>最为基本的用法，不做介绍。</p>
<ul>
<li>未然形「ませ」</li>
</ul>
<p>接续「ん／ぬ」表示否定。不过要注意，接续「ぬ」已经是比较古老的用法，现今基本不使用。</p>
<div class="note info no-icon"><p>私はお茶を飲み<strong>ません</strong>。 そんなことを知り<strong>ませぬ</strong>。</p>
</div>
<ul>
<li>连用形「まし」</li>
</ul>
<p>接续「て」表示停顿或者接续「た」表达过去。</p>
<div class="note info no-icon"><p>昨日は新聞を読み<strong>ました</strong>。 昨日は雑誌を読み<strong>ませんでした</strong>。 初め<strong>まして</strong>。</p>
</div>
<p>这里稍微说说「ませんでした」这样的形式是怎么样构成的。因为日语构建过去否定都是先否定再过去，在形容词上面就已经有较多体现：</p>
<p>暑い <span class="math inline">\(\Rightarrow\)</span> 暑くない <span class="math inline">\(\Rightarrow\)</span> 暑くなかった</p>
<p>那么我们对「ます」的否定形式「ません」该如何处理呢？它不是用言，我们必须用助动词修饰之后才能进行过去化：</p>
<p>ません <span class="math inline">\(\Rightarrow\)</span> ませんです <span class="math inline">\(\Rightarrow\)</span> ませんでした</p>
<p>这里的「ませんです」只是一个变形中间体，不具有任何语言用途，不能在实际用语中出现。</p>
<ul>
<li>终止形「ます」</li>
</ul>
<p>终结句子用，没有实际含义。</p>
<ul>
<li>推量形「ましょ」</li>
</ul>
<p>接续「う」表示劝说、意见或者推论。</p>
<div class="note info no-icon"><p>今夜，一緒に食事をし<strong>ましょう</strong>。</p>
</div>
<h4 id="助动词たいたがる">助动词たい／たがる</h4>
<p>「たい／たがる」是表达欲望的助动词，其中第一人称常用「たい」，而其他人称常用「たがる」。不过要注意的是使用「たい」之后，其行为类似于形容词，而「たがる」行为类似于动词。</p>
<div class="note info no-icon"><p>私はお菓子を<strong>食べたい</strong>です。 今何も<strong>したくない</strong>です。 昨日は買い物<strong>したかった</strong>。 昨夜は宿題を<strong>やりたくなかった</strong>。 <strong>遊びたければ</strong>，一緒にいこう。 うちの子は，いつもケーキを<strong>食べたがる</strong>のよ。</p>
</div>
<p>不过要注意的一点是，「たがる」是用来推测别人的愿望的，是蕴涵着自上而下审视的语气的。比如说上面的例句，实际上有一种“孩子爱吃蛋糕，别给吃胖了”或者“吃这么多，多费钱啊”这样的隐含负面语气，所以尽量少使用。</p>
<h4 id="助动词ながらつつ">助动词ながら／つつ</h4>
<p>「ながら」最为基本的意思是“一边”或者“同时”。如果要描述某个人一边如何一边如何，就可以用这个助词：</p>
<div class="note info no-icon"><p>山を<strong>登りながら</strong>，こう思った。</p>
</div>
<p>但是这个词有的时候会表达一种很轻微的转折，在一定程度上可以酌情表达为“但是”：</p>
<div class="note info no-icon"><p>我が国の労働者は仕事を<strong>しながら</strong>，勉強もできる。</p>
</div>
<p>这句话可以理解为“劳动者一边工作一边学习”，但是实际上如果语气适当，会表现出一种“我国劳动者会工作，但是也可以一边学习”种种带有转折含义的语气。</p>
<p>「つつ」有的时候也可以表达这种“一边”或者“同时”的含义，比如说：</p>
<div class="note info no-icon"><p>帰りのバスで外の景色を<strong>眺めつつ</strong>，明日の仕事を考えていた。</p>
</div>
<p>但是这个词似乎在更多的场合会被用来强调“言行不一”的转折含义，并且常常和主观动词「言う」「思う」「考える」「悩む」「知る」「嫌う」等连接使用，并且常常形成「つつも」的形式：</p>
<div class="note info no-icon"><p>今日は勉強しようと<strong>思いつつも</strong>，テレビを見てしまった。</p>
</div>
<p>这个助词还可以构成「つつある」的形式在口语中表示动作的持续，一定程度上类似后面要说到的「ている」形式：</p>
<div class="note info no-icon"><p>彼は今自分が<strong>死につつある</strong>ことを意識していた。</p>
</div>
<h3 id="接续辅助动词构成复合动词">接续辅助动词构成复合动词</h3>
<p>复合动词是日语中常用的一种动词，常常是动词后面接续辅助动词或者形容动词接续辅助动词构成的，前面的动词或者形容动词构成主要意思，后面的辅助动词提供补充含义。当然，也有一些复合动词演化出了较为独特的含义。这里简单举出一些例子。</p>
<ul>
<li>辅助动词「合う」</li>
</ul>
<p>这个辅助动词的含义一般是“互相”，所以经常用来表达一些双方之间互相进行的行为，比如“互相帮助”或者“互相理解”。但是有的时候这个动词也可以表达出“汇合”的感觉。这类复合动词有：</p>
<div class="note info no-icon"><p>愛し合う、巡り合う、話し合う、語り合う、助け合う、理解し合う、分かり合う</p>
</div>
<ul>
<li>辅助动词「込む」</li>
</ul>
<p>这个辅助动词的含义一般是“程度深”，所以一般用来表示前面的动词进行的较为深入。所以可以接在“申请”后面表示“申请进入”或者接在“饮用”后面表示“吞噬”等含义。这种这类复合动词有：</p>
<div class="note info no-icon"><p>申し込む、読み込む、落ち込む、飲み込む、飛び込む</p>
</div>
<ul>
<li>辅助动词「出す」</li>
</ul>
<p>这个辅助动词的含义一般是“...出来”，这样的表述在汉语里也很多，类似“说出来”或者“飞出来”等等，所以这种复合动词很好理解。这类复合动词有：</p>
<div class="note info no-icon"><p>言い出す、思い出す、呼び出す、飛び出す、逃げ出す、考え出す</p>
</div>
<ul>
<li>辅助动词「上がる／上げる」</li>
</ul>
<p>这个辅助动词的含义一般是“完成”，但是会根据前面的动词是自动词还是他动词进行区分使用。如果是自动词就使用「上がる」，如果是他动词就使用「上げる」。这类复合动词有：</p>
<div class="note info no-icon"><p>飛び上がる、打ち上げる、晴れ上がる</p>
</div>
<p>实际上复合动词接续的辅助动词绝对不限于这些，比如说「始める」「続ける」「終わる」「残す」「返す」「かける」「切る」「兼ねる」都可以作为辅助动词使用。</p>
<h3 id="接续辅助形容词构成复合形容词">接续辅助形容词构成复合形容词</h3>
<p>这里着重介绍「やすい」「にくい」这两个形容词。这两个形容词常常接续在第一连用形之后，分别表示“这个动作容易做”以及“这个动作不好做”的意思。由于不是重点，这里简单写两个例句表明用法：</p>
<div class="note info no-icon"><p>この薬は<strong>飲みやすい</strong>です。 冬の日に食べ物は悪く<strong>なりにくい</strong>です。</p>
</div>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>日本高中课程《漢文》学习笔记</title>
    <url>/2021/08/16/ja-2/</url>
    <content><![CDATA[<p>这门课大致就是讲日本人是如何阅读中文文言文的。学这个纯属是觉得日语这门语言真的很有意思，借鉴中文的文字，却采用了和中文几乎完全不一样的语法。另一方面也是因为好奇中国的典籍传到日本是如何被翻译的。</p>
<p>虽然自己现代日语都还没学明白，但作为随缘学习人，不如再开新坑。</p>
<span id="more"></span>
<h1 id="基本语序">基本语序</h1>
<p>首先我们需要知道，汉语之中的语序是“主谓宾”，而日语却是“主宾谓”。</p>
<p>所以说日本人在阅读文言文的时候，第一件事就是要把各种词语的顺序调节成日本人能够用日语思维理解的样子。这个时候，日本人发明了<strong>返点（返り点）</strong>和<strong>送假名（送り仮名）</strong>，将其标注在文言文原文旁，用于辅助阅读。</p>
<h2 id="送假名">送假名</h2>
<p>日本人阅读文言文的时候，为了标记出宾语（日本一般称为“目的语”）的位置，常常在表示宾语的汉字右下侧标记「ヲ／ニ／ト」三个假名之一，这就是送假名。这三个假名也是现代日语之中相当重要的三个助词，其表明了三种不同的语法关系。比如说（按理应该使用竖排文字，但是考虑到排版问题，就使用横排文字了。角标位置相应逆时针旋转九十度）：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \text{陳康粛公善}_{\text{レ}}^{\text{クス}} \text{射}^{\text{ヲ}}。\\
&amp; \text{項梁乃}^{\text{チ}}\text{教}^{\text{フ}}_{\text{一}}\text{籍}^{\text{ニ}}\text{兵法}^{\text{ヲ}}_{\text{二}}。 \\
\end{aligned}
\]</span></p>
<p>这里“射”“籍”以及“兵法”右上方（由于改为横排，故旋转到右上方）标注的「ヲ／ニ／ト」就是送假名了，其作用就是标注出宾语的位置。</p>
<p>除去这三个假名，还有一些送假名的目的是将汉语汉字添加上黏性词尾转化为日语词。比如说这里的“教”标注了「フ」假名，实际上代表了「教ふ」这个日语词（注意这里使用古代假名用法而非现代用法）。</p>
<h2 id="返点">返点</h2>
<p>返点指的是用于提示读者调换文字阅读顺序的提示文字，常常标记在汉字左下角（横排的时候位于右下角）。返点常用的三种为「レ点」「一二点」「上下点」，写法就是汉字左下角的「レ」假名、汉字数字「一二三」和汉字「上下」。</p>
<p>「レ点」的作用是<strong>标记此处返回一个文字</strong>，也就是说位于「レ点」两侧的汉字实际的阅读顺序是反过来的。比如说此句：</p>
<p><span class="math display">\[
\text{行}^{\text{ク}}_{\text{レ}}\text{海}^{\text{ニ}}。
\]</span></p>
<p>这里「レ点」表明“行”和“海”两个汉字的阅读顺序恰好和印刷顺序是相反的，也就是先读“海”，再读“行”。</p>
<p>如果返回汉字的数量超过一个，则使用「一二点」标记。阅读顺序是从标有「一」的位置跳转到标有「二」的位置。比如说此句：</p>
<p><span class="math display">\[
\text{思}^{\text{フ}}_{\text{二}}\text{君}^{\text{ノ}}\text{事}^{\text{ヲ}}_{\text{一}}。
\]</span></p>
<p>此时的阅读顺序是首先跳过“思”，先阅读“君”和“事”，之后跳转去阅读“思”。</p>
<p>「上下点」用于标记嵌套的跳转。在两个「一二点」嵌套的时候，为了消歧义，将外层的「一二点」变为「上下点」。比如说此句：</p>
<p><span class="math display">\[
\text{有}^{\text{リ}}_{\text{下}} \text{観}^{\text{ル}}_{\text{二}} {}^{\text{ばい}}\text{梅} {}^{\text{か}}\text{花}^{\text{ヲ}}_{\text{一}} \text{者}_{\text{上}}。
\]</span></p>
<p><strong>注解：</strong>这里在右上方（横排的时候在左上方）标注的平假名是这个汉字的注音。</p>
<p>此时的阅读顺序是从“梅花”开始，从“花”跳转到“観”，之后向下阅读到“者”，再跳转到“有”。</p>
<p>如果涉及到更为深层的跳转嵌套，可能会使用到天干地支。但对于大部分的转读，这三类就已经够用了。</p>
<hr />
<p>综合这三种返点的话，可以看这一个例句（只保留返点）：</p>
<p><span class="math display">\[
\text{無}_{\text{下}} \text{不}_{\text{レ}} \text{知}_{\text{レ}} \text{愛}_{\text{二}} \text{其} \text{親}_{\text{一}} \text{者}_{\text{上}}。
\]</span></p>
<p>这一句话首先阅读“其親”，之后根据「一二点」跳转到“愛”，遇到「レ点」则逐个倒着读“知不”，之后向下读到“者”，最后根据「上下点」读到“無”。所以最后的汉字阅读顺序是“其親愛知不者無”，当然这和真正的日语还有距离，但至少汉字顺序已经符合日语思维了，之后就是需要利用送假名填充各种助词和词尾。</p>
<h2 id="其他的一些概念">其他的一些概念</h2>
<p>首先需要介绍<strong>置字（置き字）</strong>，其含义是在转读为日语的时候不需要读出的汉字。其不会直接在文章中标出来，基本靠读者自身的文言能力来判定。比如说：</p>
<p><span class="math display">\[
\text{念} \text{莫}_{\text{下}} \text{可}_{\text{レ}} \text{使}_{\text{レ}} \text{用}_{\text{二}} \text{於} \text{秦}_{\text{一}} \text{者}_{\text{上}}。
\]</span></p>
<p>这里的“於”实际上是不会读出来的，所以说阅读顺序是“念秦用使可者莫”，并不包含汉字“於”。</p>
<p>置字常常是古汉语之中常见的一些助词，比如说“而”“於”“乎”“矣”“焉”之类的。</p>
<p>另外，有的时候「レ点」「一二点」或者「レ点」「上下点」会出现在同一个汉字的左下角，这个时候就会发生<strong>合写</strong>。这种合写形式的返点是有专门的 Unicode 字符的，但是这里无法打出来，所以直接分立写出：</p>
<p><span class="math display">\[
\text{勿}^{\text{カレ}}_{\text{下}} \text{以}^{\text{テ}}_{\text{二}} \text{悪}^{\text{ノ}} \text{小}^{\text{ナルヲ}}_{\text{一}} \text{為}^{\text{ス}}_{\text{上レ}} \text{之}^{\text{ヲ}}。
\]</span></p>
<p>这个时候「レ点」「上下点」虽然合写，但发挥各自作用。</p>
<p>此外，有些时候文言之中有部分双字或者四字熟语不能拆分理解，这些熟语的汉字之间会用短横连接，表示作为整体处理（这里由于短横渲染问题，使用左右括号标志）。比如：</p>
<p><span class="math display">\[
\text{欲}^{\text{ス}}_{\text{三}} (\text{学}_{\text{二}} \text{習}^{\text{セント}}) \text{漢} \text{文}^{\text{ヲ}}_{\text{一}}。
\]</span></p>
<h1 id="书下文">书下文</h1>
<p>书下文（書き下し文）指的是通过返点和送假名，将文言文直接转化成的，符合日语语法习惯但不一定完全通顺的文句。其转写方式是，首先通过返点调转汉字阅读顺序，最后通过送假名填入日语助词和词尾。</p>
<p>比如说这一句：</p>
<p><span class="math display">\[
\text{有}^{\text{リ}}_{\text{下}} \text{観}^{\text{ル}}_{\text{二}} {}^{\text{ばい}}\text{梅} {}^{\text{か}}\text{花}^{\text{ヲ}}_{\text{一}} \text{者}_{\text{上}}。
\]</span></p>
<p>首先通过返点得到汉字顺序为“梅花観者有”，之后在各个汉字后补上送假名之后就得到这句话的书下文：</p>
<p><span class="math display">\[
\text{梅花を観る者有り。}
\]</span></p>
<p>不过在转写书下文的时候，要注意三点：</p>
<ul>
<li><p>注意日语助词和助动词不写作汉字。</p></li>
<li><p>注意置字不写入书下文。</p></li>
<li><p>注意再读汉字的转写（具体转写方式见后续）。</p></li>
</ul>
<p>比如说这一句：</p>
<p><span class="math display">\[
\text{子} \text{曰}^{\text{ク}} \text{温}^{\text{メテ}}_{\text{レ}} \text{故}^{\text{キヲ}} \text{而} \text{知}^{\text{ラバ}}_{\text{レ}} \text{新}^{\text{シキヲ}} \text{可}^{\text{シ}}_{\text{二}} \text{以}^{\text{テ}} \text{為}^{\text{ル}}_{\text{一レ}} \text{師} \text{矣}。
\]</span></p>
<p>首先得到汉字的阅读顺序为“子曰故温新知以師為可”，这里“而”和“矣”是置字，不需要写入书下文。之后填充假名得到书下文：</p>
<p><span class="math display">\[
\text{子曰く故きを温めて新しきを知らば以て師為るべし。}
\]</span></p>
<p>这里注意，「可し（べし）」是一个助动词，不应当写为汉字。</p>
<p>常见的助词包括：</p>
<div class="note info no-icon"><p>の，か，や，より，と，かな，のみ</p>
</div>
<p>这里，「の」常写作“之”，「のみ」常写作“耳”。</p>
<p>常见的助动词包括：</p>
<div class="note info no-icon"><p>ず，しむ，る，らる，なり，べし，ごとし</p>
</div>
<p>这里，「べし」常写作“可”，「ごとし」常写作“若”，「なり」常写作“也”。</p>
<h1 id="再读汉字">再读汉字</h1>
<p>再读汉字指的就是在转写的时候需要读两次的汉字，其往往代表了日语之中的一些固定句式。再读汉字的第一次读的注音用平假名标在汉字右上角（横排的时候在左上方），第二次读的注音用平假名标在汉字左上角（横排的时候在左下方），而第二次的送假名则和返点一样在左下角（横排的时候在右下方），以表区分，这里用空格隔开。</p>
<p>另外注意，<strong>一般而言，再读汉字第一遍读的时候作实词写成汉字，而第二遍读的时候作虚词不写成汉字</strong>。比如说这样的例句：</p>
<p><span class="math display">\[
{}^{\text{まさ}}_{\text{べ}}\text{当}^{\text{ニ}}_{\text{二 シ}} \text{勉} \text{強}^{\text{ス}}_{\text{一}}。
\]</span></p>
<p>注意到再读汉字“当”读两次，这句话汉字的阅读顺序应该为“当勉强当”，第二遍读“当”的时候不写为汉字。则书下文为：</p>
<p><span class="math display">\[
\text{当に勉強すべし。}
\]</span></p>
<p>日本高中要求掌握的再读汉字包括：</p>
<div class="note info no-icon"><p>宜，当，未，猶，応，将，盍，須，且</p>
</div>
<p>这些汉字的读法为（这里平假名标注的是汉字本身的读音，片假名标注的是相应的送假名。而在「」之中标注的，则是紧接在再读汉字第二次读之前的汉字的送假名。「動詞形式」指的是紧接在再读汉字第二次读之前的动词应当采取的变形）：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">再読漢字</th>
<th style="text-align: center;">読み方</th>
<th style="text-align: center;">意味</th>
<th style="text-align: center;">動詞形式</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未</td>
<td style="text-align: center;">いまダ〜ず</td>
<td style="text-align: center;">まだ〜ない</td>
<td style="text-align: center;">未然形</td>
</tr>
<tr class="even">
<td style="text-align: center;">且 &amp; 将</td>
<td style="text-align: center;">まさニ〜「ント」す</td>
<td style="text-align: center;">これから〜しようとする</td>
<td style="text-align: center;">未然形</td>
</tr>
<tr class="odd">
<td style="text-align: center;">当 &amp; 応</td>
<td style="text-align: center;">まさニ〜べシ</td>
<td style="text-align: center;">当然〜すべきだ</td>
<td style="text-align: center;">終止形／ラ変連体形</td>
</tr>
<tr class="even">
<td style="text-align: center;">須</td>
<td style="text-align: center;">すべかラク〜べシ</td>
<td style="text-align: center;">ぜひとも〜する必要がある</td>
<td style="text-align: center;">終止形／ラ変連体形</td>
</tr>
<tr class="odd">
<td style="text-align: center;">宜</td>
<td style="text-align: center;">よろシク〜べシ</td>
<td style="text-align: center;">〜するのがよい</td>
<td style="text-align: center;">終止形／ラ変連体形</td>
</tr>
<tr class="even">
<td style="text-align: center;">猶</td>
<td style="text-align: center;">なホ〜ごとシ</td>
<td style="text-align: center;">ちょうど〜のようだ</td>
<td style="text-align: center;">名詞＋「の」／動詞連体形＋「が」</td>
</tr>
<tr class="odd">
<td style="text-align: center;">盍</td>
<td style="text-align: center;">なんゾ〜ざル</td>
<td style="text-align: center;">どうして〜しないのか</td>
<td style="text-align: center;">未然形</td>
</tr>
</tbody>
</table>
<h1 id="使役动词">使役动词</h1>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 1 生词表</title>
    <url>/2022/08/21/ja-tutorial-ch1-vocab/</url>
    <content><![CDATA[<p>本文章为自学手册 Chapter 1 生词表。</p>
<span id="more"></span>
<p>考虑到这里还未讲解用言、助动词活用，故会同时列举出本章内出现的词语的活用形和相对应的原形，活用形使用小括号括出并写在原形下方以示区分。</p>
<p>动词生词表中词性一列的具体含义参见第二章动词活用分类。另外，对于动词、形容词、形容动词，方括号括出的为该词语在古日语中的形式与词性，若没有方括号标记，则表明古日语中该词语和现代形式或词性一致。</p>
<p>另外补充说明，由于动词的第一连用形可以用于将动词名词化。如果名词化后形成的名词和原先动词的含义类似，我们就将动词形式纳入生词表，其名词形式作为其衍生。而若含义差别较大，则其动词和名词形式分别纳入生词表。</p>
<p>本章生词表选择性收录 Chapter 1 Section 3 中的词语。</p>
<h1 id="动词生词表">动词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 気付 きづ</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">发现、察觉</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 縮 ちぢ</code>む</td>
<td style="text-align: center;">動マ五[動マ四]</td>
<td style="text-align: center;">缩小、收缩</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 居 い</code>る[<code>@ 居 ゐ</code>る] <br /> （い）</td>
<td style="text-align: center;">動ア上一[動ワ上一]</td>
<td style="text-align: center;">①（有生命事物）存在 <br /> ②居住、逗留 <br /> ③保持在某一状态</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 調 しら</code>べる[<code>@ 調 しら</code>ぶ] <br /> （<code>@ 調 しら</code>べ）</td>
<td style="text-align: center;">動バ下一[動バ下二]</td>
<td style="text-align: center;">调查、查询</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 下 くだ</code>さる <br /> （ください）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">①（给我方）送、给 <br /> ②（作补助动词）请</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 作 つく</code>る <br /> （<code>@ 作 つく</code>り）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">制作</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 過 す</code>ぎる[<code>@ 過 す</code>ぐ] <br /> （<code>@ 過 す</code>ぎ）</td>
<td style="text-align: center;">動ガ上一[動ガ上二]</td>
<td style="text-align: center;">①经过、通过 <br /> ②（时间）流逝、消逝 <br /> ③（作补助动词）过度、过分</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 持 も</code>つ <br /> （<code>@ 持 も</code>っ）</td>
<td style="text-align: center;">動タ五[動タ四]</td>
<td style="text-align: center;">①（用手）拿、持 <br /> ②携带 <br /> ③（某种物品）拥有、具有</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 行 い</code>く <br /> （<code>@ 行 い</code>っ）</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">①去、走、前往 <br /> ②步行</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 上 あ</code>げる[<code>@ 上 あ</code>ぐ] <br /> （<code>@ 上 あ</code>げ）</td>
<td style="text-align: center;">動ガ下一[動ガ下二]</td>
<td style="text-align: center;">①举起、抬起 <br /> ②（给他方）给、送给</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 仕舞 しま</code>う[<code>@ 仕舞 しま</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">结束、终结</td>
</tr>
<tr class="even">
<td style="text-align: center;">する[す] <br /> （し）</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">做、办、进行</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 思 おも</code>う[<code>@ 思 おも</code>ふ] <br /> （<code>@ 思 おも</code>い）</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">①思考、思索 <br /> ②相信、确信 <br /> ③预想、预料 <br /> ④希望、期待</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 使 つか</code>い<code>@ 古 ふる</code>す[<code>@ 使 つか</code>ひ<code>@ 古 ふる</code>す]</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">用旧、因长时间多次使用而变旧</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 来 く</code>る[<code>@ 来 く</code>]</td>
<td style="text-align: center;">動カ変[動カ変]</td>
<td style="text-align: center;">来、来到</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 話 はな</code>す</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">说话、讲话</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 飛 と</code>ぶ</td>
<td style="text-align: center;">動バ五[動バ四]</td>
<td style="text-align: center;">①飞行 <br /> ②（因外力）飞舞</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 立 た</code>つ</td>
<td style="text-align: center;">動タ五[動タ四]</td>
<td style="text-align: center;">站立</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 書 か</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">书写</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 出来 でき</code>る[<code>@ 出来 いでく</code>] <br /> （でき）</td>
<td style="text-align: center;">動カ上一[動カ変]</td>
<td style="text-align: center;">①做好、形成 <br /> ②能够做到、有能力</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 出 だ</code>す <br /> （<code>@ 出 だ</code>し）</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">取出</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 送 おく</code>る <br /> （<code>@ 送 おく</code>り）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">①送、邮寄、派遣 <br /> ②送行 <br /> ③传送、放送</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 見 み</code>る <br /> （<code>@ 見 み</code>）</td>
<td style="text-align: center;">動マ上一[動マ上一]</td>
<td style="text-align: center;">①看、观看 <br /> ②（作补助动词）尝试</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 誤魔化 ごまか</code>す <br /> （<code>@ 誤魔化 ごまか</code>し）</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">糊弄、搪塞</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 逃 に</code>げる[<code>@ 逃 に</code>ぐ] <br /> （<code>@ 逃 に</code>げ）</td>
<td style="text-align: center;">動ガ下一[動ガ下二]</td>
<td style="text-align: center;">逃跑、逃走、逃出</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 成功 せいこう</code>する[<code>@ 成功 せいこう</code>す]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">成功</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 会 あ</code>う[<code>@ 会 あ</code>ふ] <br /> （<code>@ 会 あ</code>い）</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">会面、见面</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 軽 かろ</code>んずる[<code>@ 軽 かろ</code>んず]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">轻视</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 消 き</code>える[<code>@ 消 き</code>ゆ]</td>
<td style="text-align: center;">動ア下一[動ヤ下二]</td>
<td style="text-align: center;">消失</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 消 け</code>す</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">使熄灭、关闭、解除</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 芽生 めば</code>える[<code>@ 芽生 めば</code>ゆ]</td>
<td style="text-align: center;">動ア下一[動ヤ下二]</td>
<td style="text-align: center;">出芽、发芽</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 生 い</code>きる[<code>@ 生 い</code>く]</td>
<td style="text-align: center;">動カ上一[動カ上二]</td>
<td style="text-align: center;">生存、生活</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 生 う</code>まれつく</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">天生、生来就有</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 笑 わら</code>う[<code>@ 笑 わら</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">笑</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 迷 まよ</code>う[<code>@ 迷 まよ</code>ふ] <br /> （<code>@ 迷 まよ</code>っ）</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">迷失、迷惘</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 辿 たど</code>る <br /> （<code>@ 辿 たど</code>り）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">沿路前进、追寻</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 着 つ</code>く <br /> （<code>@ 着 つ</code>い）</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">到达、抵达</td>
</tr>
<tr class="even">
<td style="text-align: center;">やる <br /> （やっ）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">做、干、进行、派遣</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 知 し</code>る <br /> （<code>@ 知 し</code>ら）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">知道、了解</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 拠 よ</code>る <br /> （<code>@ 拠 よ</code>っ）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">基于、根据、按照</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 降 ふ</code>る <br /> （<code>@ 降 ふ</code>り）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">降下、落下</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 始 はじ</code>まる <br /> （<code>@ 始 はじ</code>まり）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">开始</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 有 あ</code>る[<code>@ 有 あ</code>り] <br /> （あれ、あり）</td>
<td style="text-align: center;">動ラ五[動ラ変]</td>
<td style="text-align: center;">①（无生命事物）存在 <br /> ②属于、归于</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 終 お</code>わる[<code>@ 終 を</code>はる] <br /> （<code>@ 終 お</code>わり）</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">结束、终结</td>
</tr>
</tbody>
</table>
<h1 id="形容词生词表">形容词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 速 はや</code>い[<code>@ 速 はや</code>し] <br /> （はやく）</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">动作迅速的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 煩 うるさ</code>い・<code>@ 五月蠅 うるさ</code>い[<code>@ 煩 うるさ</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">嘈杂的、烦人的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 軽 かる</code>い[<code>@ 軽 かる</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">轻的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 重 おも</code>い[<code>@ 重 おも</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">重的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 赤 あか</code>い[<code>@ 赤 あか</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">红色的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 黒 くろ</code>い[<code>@ 黒 くろ</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">黑色的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 長 なが</code>い[<code>@ 長 なが</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">长的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 広 ひろ</code>い[<code>@ 広 ひろ</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">宽广的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 美 うつく</code>しい[<code>@ 美 うつく</code>し]</td>
<td style="text-align: center;">形[形シク]</td>
<td style="text-align: center;">美丽的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 難 むずか</code>しい[<code>@ 難 むずか</code>し]</td>
<td style="text-align: center;">形[形シク]</td>
<td style="text-align: center;">困难的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 素晴 すば</code>らしい[<code>@ 素晴 すば</code>らし]</td>
<td style="text-align: center;">形[形シク]</td>
<td style="text-align: center;">美好的</td>
</tr>
</tbody>
</table>
<h1 id="形容动词生词表">形容动词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 素敵 すてき</code>だ[<code>@ 素敵 すてき</code>なり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">美好的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 好 す</code>きだ[<code>@ 好 す</code>きなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">喜欢的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 嫌 きら</code>いだ[<code>@ 嫌 きら</code>いなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">讨厌的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 静 しず</code>かだ[<code>@ 静 しず</code>かなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">安静的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 大変 たいへん</code>だ[<code>@ 大変 たいへん</code>なり] <br /> （<code>@ 大変 たいへん</code>に）</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">极重要的、非常</td>
</tr>
</tbody>
</table>
<h1 id="助词助动词生词表">助词、助动词生词表</h1>
<p>助词和助动词的细节用法会在后续章节讲解，这里不需要过度关注各个助词和助动词的含义。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">は</td>
<td style="text-align: center;">副助</td>
<td style="text-align: center;">标注语句的主题</td>
</tr>
<tr class="even">
<td style="text-align: center;">が</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注语句的主语</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ます <br /> （ましょ、ませ）</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示一般尊敬陈述语气</td>
</tr>
<tr class="even">
<td style="text-align: center;">の</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注从属或者同位关系</td>
</tr>
<tr class="odd">
<td style="text-align: center;">を</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注语句的宾语</td>
</tr>
<tr class="even">
<td style="text-align: center;">て</td>
<td style="text-align: center;">接助</td>
<td style="text-align: center;">标注语句的中顿</td>
</tr>
<tr class="odd">
<td style="text-align: center;">た</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示过去时态</td>
</tr>
<tr class="even">
<td style="text-align: center;">ので</td>
<td style="text-align: center;">接助</td>
<td style="text-align: center;">标注客观原因</td>
</tr>
<tr class="odd">
<td style="text-align: center;">に</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注动作发生的时间、动作的方向等</td>
</tr>
<tr class="even">
<td style="text-align: center;">も</td>
<td style="text-align: center;">副助</td>
<td style="text-align: center;">①标注同类追加（类似“也”） <br /> ②标注极端语气（类似“甚至”）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">か</td>
<td style="text-align: center;">終助</td>
<td style="text-align: center;">标注疑问语气</td>
</tr>
<tr class="even">
<td style="text-align: center;">だ <br /> （だっ）</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">（简体）作为判断词提示断定语气</td>
</tr>
<tr class="odd">
<td style="text-align: center;">で</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注动作发生的地点、动作的手段等</td>
</tr>
<tr class="even">
<td style="text-align: center;">ない</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示否定语义</td>
</tr>
<tr class="odd">
<td style="text-align: center;">から</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注时间、地点的起始，标注主观原因</td>
</tr>
<tr class="even">
<td style="text-align: center;">まで</td>
<td style="text-align: center;">格助</td>
<td style="text-align: center;">标注时间、地点的终止等</td>
</tr>
<tr class="odd">
<td style="text-align: center;">だけ</td>
<td style="text-align: center;">副助</td>
<td style="text-align: center;">标注程度限定（类似“只”）</td>
</tr>
<tr class="even">
<td style="text-align: center;">う</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示自发意志</td>
</tr>
<tr class="odd">
<td style="text-align: center;">べし <br /> （べから）</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示应当、可能等语气</td>
</tr>
<tr class="even">
<td style="text-align: center;">ず・ぬ・ん</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示否定语义</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ば</td>
<td style="text-align: center;">接助</td>
<td style="text-align: center;">标注假设、可能</td>
</tr>
<tr class="even">
<td style="text-align: center;">そうだ <br /> （そうに）</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">提示样态</td>
</tr>
<tr class="odd">
<td style="text-align: center;">です <br /> （でし）</td>
<td style="text-align: center;">助動</td>
<td style="text-align: center;">（一般尊敬语气）作为判断词提示断定语气</td>
</tr>
</tbody>
</table>
<h1 id="副词生词表">副词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">しっかり</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">①（身体）健壮、结实 <br /> ②（结构）稳固、牢靠 <br /> ③（含义）明确 <br /> ④（性格）坚强、坚定</td>
</tr>
<tr class="even">
<td style="text-align: center;">もう</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">①已经 <br /> ②就要、将要、快要 <br /> ③再、还、另外</td>
</tr>
<tr class="odd">
<td style="text-align: center;">さっぱり</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">整洁、利落</td>
</tr>
<tr class="even">
<td style="text-align: center;">たくさん</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">大量、许多</td>
</tr>
<tr class="odd">
<td style="text-align: center;">なんでも</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">①无论什么、无论如何 <br /> ②据说是</td>
</tr>
<tr class="even">
<td style="text-align: center;">いつか</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">①不知不觉的 <br /> ②曾经 <br /> ③早晚、迟早</td>
</tr>
<tr class="odd">
<td style="text-align: center;">きっと</td>
<td style="text-align: center;">副</td>
<td style="text-align: center;">一定</td>
</tr>
</tbody>
</table>
<h1 id="名词代词数词生词表">名词、代词、数词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 大阪 おおさか</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">大阪</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 経済 けいざい</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">经济</td>
</tr>
<tr class="odd">
<td style="text-align: center;">フィルム</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">胶卷</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 俺 おれ</code></td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（男性对同辈、下级使用）我</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 兄弟 きょうだい</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">兄弟</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 三人 さんにん</code></td>
<td style="text-align: center;">数</td>
<td style="text-align: center;">三人</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 容疑者 ようぎしゃ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">嫌疑人</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 情報 じょうほう</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">消息、信息</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ケーキ</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">蛋糕</td>
</tr>
<tr class="even">
<td style="text-align: center;">これ</td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（名词性事物近称）这个、这些</td>
</tr>
<tr class="odd">
<td style="text-align: center;">お<code>@ 婆 ばあ</code>さん</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">①（敬称）祖母、奶奶 <br /> ②（敬称）外祖母、外婆 <br /> ③（对老年女性的敬称）老太太</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 伊呂波 いろは</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">①伊吕波歌（一首用平假名编制的歌曲） <br /> ②初步、入门</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 山 やま</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">山</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 奈美 なみ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（女性名）奈美</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 共和 きょうわ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">共和</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 当 あ</code>て<code>@ 字 じ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">假借字</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 仕付 しつけ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">管教、约束</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 仕方 しかた</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">方法、手段</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 仕草 しぐさ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">台词、说辞</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 仕事 しごと</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">工作</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 亜細亜 アジア</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">亚洲</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 麦酒 ビール</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">啤酒</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 俱楽部 クラブ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">俱乐部</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 言葉 ことば</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">话语</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 何度 なんど</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">多少次、多少回</td>
</tr>
<tr class="even">
<td style="text-align: center;">の</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（形式体言）起动词名词化的作用</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 送 おく</code>り<code>@ 仮名 がな</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">送假名</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 事 こと</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">①事物、事情 <br /> ②（形式体言）起动词名词化的作用</td>
</tr>
<tr class="odd">
<td style="text-align: center;">あれ</td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（名词性事物远称）那个、那些</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 去年 きょねん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">去年</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 私 わたし</code></td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（通用）我</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 日本語 にほんご</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">日语</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 手紙 てがみ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">书信</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 資料 しりょう</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">资料</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 改 かい</code>ざん</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">篡改</td>
</tr>
<tr class="even">
<td style="text-align: center;">この</td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（连体性近称）这个</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 番組 ばんぐみ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">节目</td>
</tr>
<tr class="even">
<td style="text-align: center;">ご<code>@ 覧 らん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（尊他语）看、所看</td>
</tr>
<tr class="odd">
<td style="text-align: center;">スポンサー</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">赞助方</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 提供 ていきょう</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">提供</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 上海 シャンハイ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">上海</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 東京 とうきょう</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">东京</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 飛行機 ひこうき</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">飞机</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 振 ふ</code>り</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">①振动、摆动 <br /> ②（外表）样子、打扮 <br /> ③（作补助名词）装作、假装 <br /> ④（舞蹈）动作、姿势 <br /> ⑤陌生 <br /> ⑥临时、突然</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 囚人 しゅうじん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">犯人</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 看守 かんしゅ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">看守</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 目 め</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">①眼睛、眼球 <br /> ②眼光、眼神 <br /> ③外表、外观 <br /> ④监视、看守</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 彼 かれ</code></td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（通用）他</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 勤勉家 きんべんか</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">实干家、用功的人</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 当 あ</code>たり<code>@ 前 まえ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">理所应当</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 明日 あした</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">明天</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 七時 しちじ</code></td>
<td style="text-align: center;">数</td>
<td style="text-align: center;">七点</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 会社 かいしゃ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">公司</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 受付 うけつけ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">前台</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 一寸 いっすん</code></td>
<td style="text-align: center;">数</td>
<td style="text-align: center;">一寸</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 光陰 こういん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">光阴</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 世界 せかい</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">世界</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 祝福 しゅくふく</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">祝福</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 橋 はし</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">桥梁</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 石 いし</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">石头</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 生 なま</code>ビール</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">生啤酒</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 五月雨 さみだれ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">梅雨、阴历五月的阴雨</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 時雨 しぐれ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（秋冬之交的）阵雨</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 村雨 むらさめ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">阵雨、骤雨</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 梅雨 つゆ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">梅雨</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 一昨日 おととい</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">前天</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 明後日 あさって</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">后天</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 晦日 みそか</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（阴历的）每月最后一天</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 足袋 たび</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">（日式）短布袜</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 吹雪 ふぶき</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">暴风雪</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 芝生 しばふ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">草坪、矮草地</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 合図 あいず</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">信号、暗号</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 馬鹿 ばか</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">愚蠢的人、傻子</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 額縁 がくぶち</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">画框、相框</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 残高 ざんだか</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">余额</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 虚 うつ</code>ろ</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">空虚、空洞</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 午前 ごぜん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">午前、正午之前、上午</td>
</tr>
<tr class="even">
<td style="text-align: center;">そこ</td>
<td style="text-align: center;">代</td>
<td style="text-align: center;">（名词性地点中称）那里</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ハッピー</td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">快乐</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 天気予報 てんきよほう</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">天气预报</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 雨 あめ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">雨</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 申 もう</code>し<code>@ 訳 わけ</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">辩解</td>
</tr>
</tbody>
</table>
<h1 id="其他类型词语生词表">其他类型词语生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 御 お</code></td>
<td style="text-align: center;">接続</td>
<td style="text-align: center;">①您、您的 <br /> ②表尊敬的接头词</td>
</tr>
</tbody>
</table>
<h1 id="常用交际语表">常用交际语表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">よろしくお<code>@ 願 ねが</code>いします。</td>
<td style="text-align: center;">请多指教。</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 1 日语文字系统</title>
    <url>/2022/08/21/ja-tutorial-ch1/</url>
    <content><![CDATA[<p>本章主要介绍日语之中并行的三套语言系统——汉字、平假名、片假名，以及其历史和其使用惯例。之后，会简单论述日语的汉字读音法则和汉字词典使用方式。</p>
<span id="more"></span>
<h1 id="日语假名与五十音图">日语假名与五十音图</h1>
<p>说到日语的文字系统，就需要从日语假名，即平假名和片假名开始讲解。几乎所有的日语学习者第一个接触的日语相关知识，就是日语假名表，即五十音图：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">五十音図</th>
<th style="text-align: center;">あ段</th>
<th style="text-align: center;">い段</th>
<th style="text-align: center;">う段</th>
<th style="text-align: center;">え段</th>
<th style="text-align: center;">お段</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">あ行</td>
<td style="text-align: center;">あ ア</td>
<td style="text-align: center;">い イ</td>
<td style="text-align: center;">う ウ</td>
<td style="text-align: center;">え エ</td>
<td style="text-align: center;">お オ</td>
</tr>
<tr class="even">
<td style="text-align: center;">か行</td>
<td style="text-align: center;">か カ</td>
<td style="text-align: center;">き キ</td>
<td style="text-align: center;">く ク</td>
<td style="text-align: center;">け ケ</td>
<td style="text-align: center;">こ コ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">さ行</td>
<td style="text-align: center;">さ サ</td>
<td style="text-align: center;">し シ</td>
<td style="text-align: center;">す ス</td>
<td style="text-align: center;">せ セ</td>
<td style="text-align: center;">そ ソ</td>
</tr>
<tr class="even">
<td style="text-align: center;">た行</td>
<td style="text-align: center;">た タ</td>
<td style="text-align: center;">ち チ</td>
<td style="text-align: center;">つ ツ</td>
<td style="text-align: center;">て テ</td>
<td style="text-align: center;">と ト</td>
</tr>
<tr class="odd">
<td style="text-align: center;">な行</td>
<td style="text-align: center;">な ナ</td>
<td style="text-align: center;">に ニ</td>
<td style="text-align: center;">ぬ ヌ</td>
<td style="text-align: center;">ね ネ</td>
<td style="text-align: center;">の ノ</td>
</tr>
<tr class="even">
<td style="text-align: center;">は行</td>
<td style="text-align: center;">は ハ</td>
<td style="text-align: center;">ひ ヒ</td>
<td style="text-align: center;">ふ フ</td>
<td style="text-align: center;">へ へ</td>
<td style="text-align: center;">ほ ホ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ま行</td>
<td style="text-align: center;">ま マ</td>
<td style="text-align: center;">み ミ</td>
<td style="text-align: center;">む ム</td>
<td style="text-align: center;">め メ</td>
<td style="text-align: center;">も モ</td>
</tr>
<tr class="even">
<td style="text-align: center;">や行</td>
<td style="text-align: center;">や ヤ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">ゆ ユ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">よ ヨ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ら行</td>
<td style="text-align: center;">ら ラ</td>
<td style="text-align: center;">り リ</td>
<td style="text-align: center;">る ル</td>
<td style="text-align: center;">れ レ</td>
<td style="text-align: center;">ろ ロ</td>
</tr>
<tr class="even">
<td style="text-align: center;">わ行</td>
<td style="text-align: center;">わ ワ</td>
<td style="text-align: center;"><strong>ゐ ヰ</strong></td>
<td style="text-align: center;">―</td>
<td style="text-align: center;"><strong>ゑ ヱ</strong></td>
<td style="text-align: center;">を ヲ</td>
</tr>
</tbody>
</table>
<p>上述就是随处可见的经典的五十音图。这里每一个单元格内，左侧为平假名，右侧为相对应的、读音一致的片假名。另外，表格内以加粗标记的两个单元格，是两个古日语中使用但目前已经停用的历史假名。</p>
<p>此外，我们需要注意的是，日语的假名除去五十音图内的清音假名之外，还有增加浊化标记的浊音假名、表示鼻音的拨音假名、表示多元音的拗音假名以及促音和长音表记法则等。接下来逐一介绍。</p>
<p>か行、さ行、た行、は行的清音假名可以加上浊点「゛」表示浊化。此外，は行的清音假名还能加上半浊点「゜」表示半浊化。所有浊音假名为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">濁音</th>
<th style="text-align: center;">あ段</th>
<th style="text-align: center;">い段</th>
<th style="text-align: center;">う段</th>
<th style="text-align: center;">え段</th>
<th style="text-align: center;">お段</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">が行</td>
<td style="text-align: center;">が ガ</td>
<td style="text-align: center;">ぎ ギ</td>
<td style="text-align: center;">ぐ グ</td>
<td style="text-align: center;">げ ゲ</td>
<td style="text-align: center;">ご ゴ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ざ行</td>
<td style="text-align: center;">ざ ザ</td>
<td style="text-align: center;">じ ジ</td>
<td style="text-align: center;">ず ズ</td>
<td style="text-align: center;">ぜ ゼ</td>
<td style="text-align: center;">ぞ ゾ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">だ行</td>
<td style="text-align: center;">だ ダ</td>
<td style="text-align: center;">ぢ ヂ</td>
<td style="text-align: center;">づ ヅ</td>
<td style="text-align: center;">で デ</td>
<td style="text-align: center;">ど ド</td>
</tr>
<tr class="even">
<td style="text-align: center;">ば行</td>
<td style="text-align: center;">ば バ</td>
<td style="text-align: center;">び ビ</td>
<td style="text-align: center;">ぶ ブ</td>
<td style="text-align: center;">べ べ</td>
<td style="text-align: center;">ぼ ボ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ぱ行</td>
<td style="text-align: center;">ぱ パ</td>
<td style="text-align: center;">ぴ ピ</td>
<td style="text-align: center;">ぷ プ</td>
<td style="text-align: center;">ぺ ぺ</td>
<td style="text-align: center;">ぽ ポ</td>
</tr>
</tbody>
</table>
<p>部分い段的假名可以附加小写的「ゃ」「ゅ」「ょ」等构成多元音，即拗音。浊音假名也可以形成拗音，所有的拗音包括：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">拗音</th>
<th style="text-align: center;">＋「ゃ」</th>
<th style="text-align: center;">＋「ゅ」</th>
<th style="text-align: center;">＋「ょ」</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">き</td>
<td style="text-align: center;">きゃ キャ</td>
<td style="text-align: center;">きゅ キュ</td>
<td style="text-align: center;">きょ キョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">し</td>
<td style="text-align: center;">しゃ シャ</td>
<td style="text-align: center;">しゅ シュ</td>
<td style="text-align: center;">しょ ショ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ち</td>
<td style="text-align: center;">ちゃ チャ</td>
<td style="text-align: center;">ちゅ チュ</td>
<td style="text-align: center;">ちょ チョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">に</td>
<td style="text-align: center;">にゃ ニャ</td>
<td style="text-align: center;">にゅ ニュ</td>
<td style="text-align: center;">にょ ニョ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">ひゃ ヒャ</td>
<td style="text-align: center;">ひゅ ヒュ</td>
<td style="text-align: center;">ひょ ヒョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">み</td>
<td style="text-align: center;">みゃ ミャ</td>
<td style="text-align: center;">みゅ ミュ</td>
<td style="text-align: center;">みょ ミョ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">り</td>
<td style="text-align: center;">りゃ リャ</td>
<td style="text-align: center;">りゅ リュ</td>
<td style="text-align: center;">りょ リョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぎ</td>
<td style="text-align: center;">ぎゃ ギャ</td>
<td style="text-align: center;">ぎゅ ギュ</td>
<td style="text-align: center;">ぎょ ギョ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">じ</td>
<td style="text-align: center;">じゃ ジャ</td>
<td style="text-align: center;">じゅ ジュ</td>
<td style="text-align: center;">じょ ジョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぢ</td>
<td style="text-align: center;">ぢゃ ヂャ</td>
<td style="text-align: center;">ぢゅ ヂュ</td>
<td style="text-align: center;">ぢょ ヂョ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">び</td>
<td style="text-align: center;">びゃ ビャ</td>
<td style="text-align: center;">びゅ ビュ</td>
<td style="text-align: center;">びょ ビョ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぴ</td>
<td style="text-align: center;">ぴゃ ピャ</td>
<td style="text-align: center;">ぴゅ ピュ</td>
<td style="text-align: center;">ぴょ ピョ</td>
</tr>
</tbody>
</table>
<p>此外，拨音假名仅有一个，其平假名形式为「ん」，片假名形式为「ン」，表示鼻音。</p>
<p>促音的含义是这一个音节不发音，停留一个假名的时长。促音标记是小写的「っ」，片假名形式为「ッ」。</p>
<p>长音的含义是延长上一个假名的发音一个音节。平假名中使用あ行假名标记长音，而片假名有专用的长音记号「ー」。</p>
<p>平假名的长音标记法则为如下。前一个假名位于あ段则使用「あ」标记，位于い段则使用「い」标记，位于う段则使用「う」标记，位于え段则使用「い」标记，位于お段则使用「う」标记。例如「かあ」「しい」「むう」「けい」「のう」等。可能出现的例外是「え」和「お」的长音可以标记为「ええ」和「おお」。</p>
<p>接下来我们需要简单说明罗马字注音系统，而目前大部分日语输入法均是基于罗马字注音系统的，我们可以将其理解为日语版本的拼音。</p>
<p>首先说明清浊假名的罗马字表记：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">ローマ字</th>
<th style="text-align: center;">あ段</th>
<th style="text-align: center;">い段</th>
<th style="text-align: center;">う段</th>
<th style="text-align: center;">え段</th>
<th style="text-align: center;">お段</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">あ行</td>
<td style="text-align: center;">a</td>
<td style="text-align: center;">i</td>
<td style="text-align: center;">u</td>
<td style="text-align: center;">e</td>
<td style="text-align: center;">o</td>
</tr>
<tr class="even">
<td style="text-align: center;">か行</td>
<td style="text-align: center;">ka</td>
<td style="text-align: center;">ki</td>
<td style="text-align: center;">ku</td>
<td style="text-align: center;">ke</td>
<td style="text-align: center;">ko</td>
</tr>
<tr class="odd">
<td style="text-align: center;">さ行</td>
<td style="text-align: center;">sa</td>
<td style="text-align: center;">si / shi</td>
<td style="text-align: center;">su</td>
<td style="text-align: center;">se</td>
<td style="text-align: center;">so</td>
</tr>
<tr class="even">
<td style="text-align: center;">た行</td>
<td style="text-align: center;">ta</td>
<td style="text-align: center;">ti / chi</td>
<td style="text-align: center;">tu / tsu</td>
<td style="text-align: center;">te</td>
<td style="text-align: center;">to</td>
</tr>
<tr class="odd">
<td style="text-align: center;">な行</td>
<td style="text-align: center;">na</td>
<td style="text-align: center;">ni</td>
<td style="text-align: center;">nu</td>
<td style="text-align: center;">ne</td>
<td style="text-align: center;">no</td>
</tr>
<tr class="even">
<td style="text-align: center;">は行</td>
<td style="text-align: center;">ha</td>
<td style="text-align: center;">hi</td>
<td style="text-align: center;">hu / fu</td>
<td style="text-align: center;">he</td>
<td style="text-align: center;">ho</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ま行</td>
<td style="text-align: center;">ma</td>
<td style="text-align: center;">mi</td>
<td style="text-align: center;">mu</td>
<td style="text-align: center;">me</td>
<td style="text-align: center;">mo</td>
</tr>
<tr class="even">
<td style="text-align: center;">や行</td>
<td style="text-align: center;">ya</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">yu</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">yo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ら行</td>
<td style="text-align: center;">ra</td>
<td style="text-align: center;">ri</td>
<td style="text-align: center;">ru</td>
<td style="text-align: center;">re</td>
<td style="text-align: center;">ro</td>
</tr>
<tr class="even">
<td style="text-align: center;">わ行</td>
<td style="text-align: center;">wa</td>
<td style="text-align: center;">wi</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">we</td>
<td style="text-align: center;">wo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">が行</td>
<td style="text-align: center;">ga</td>
<td style="text-align: center;">gi</td>
<td style="text-align: center;">gu</td>
<td style="text-align: center;">ge</td>
<td style="text-align: center;">go</td>
</tr>
<tr class="even">
<td style="text-align: center;">ざ行</td>
<td style="text-align: center;">za</td>
<td style="text-align: center;">zi / ji</td>
<td style="text-align: center;">zu</td>
<td style="text-align: center;">ze</td>
<td style="text-align: center;">zo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">だ行</td>
<td style="text-align: center;">da</td>
<td style="text-align: center;">di / ji</td>
<td style="text-align: center;">du / zu</td>
<td style="text-align: center;">de</td>
<td style="text-align: center;">do</td>
</tr>
<tr class="even">
<td style="text-align: center;">ば行</td>
<td style="text-align: center;">ba</td>
<td style="text-align: center;">bi</td>
<td style="text-align: center;">bu</td>
<td style="text-align: center;">be</td>
<td style="text-align: center;">bo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ぱ行</td>
<td style="text-align: center;">pa</td>
<td style="text-align: center;">pi</td>
<td style="text-align: center;">pu</td>
<td style="text-align: center;">pe</td>
<td style="text-align: center;">po</td>
</tr>
</tbody>
</table>
<p>这里有部分的假名有两种罗马字表记，前者是理论表记，即为了保证同行假名使用同一辅音表记，同段假名使用同一元音表记从而得到的表记，而后者是更为贴近事实发音的表记。根据罗马字表记应当和实际发音贴合的原则，我们一般倾向于使用后者。</p>
<p>这里需要注意，「じ」和「ぢ」、「ず」和「づ」的实际发音是完全一致的，我们根据罗马字表记应当和实际发音贴合的原则，这两对同音假名也应当使用相同的罗马字表记。例如「<code>@ 気付 きづ</code>く」的罗马字表记应当为「kizuku」，「<code>@ 縮 ちぢ</code>む」的罗马字表记应当为「chijimu」。但是在实际输入法中输入该假名的时候，需要使用前者，即理论的罗马字表记以区别这两对同音假名。</p>
<p>之后是拗音假名的表记：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">拗音ローマ字</th>
<th style="text-align: center;">＋「ゃ」</th>
<th style="text-align: center;">＋「ゅ」</th>
<th style="text-align: center;">＋「ょ」</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">き</td>
<td style="text-align: center;">kya</td>
<td style="text-align: center;">kyu</td>
<td style="text-align: center;">kyo</td>
</tr>
<tr class="even">
<td style="text-align: center;">し</td>
<td style="text-align: center;">sya / sha</td>
<td style="text-align: center;">syu / shu</td>
<td style="text-align: center;">syo / sho</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ち</td>
<td style="text-align: center;">cya</td>
<td style="text-align: center;">cyu</td>
<td style="text-align: center;">cyo</td>
</tr>
<tr class="even">
<td style="text-align: center;">に</td>
<td style="text-align: center;">nya</td>
<td style="text-align: center;">nyu</td>
<td style="text-align: center;">nyo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">hya</td>
<td style="text-align: center;">hyu</td>
<td style="text-align: center;">hyo</td>
</tr>
<tr class="even">
<td style="text-align: center;">み</td>
<td style="text-align: center;">mya</td>
<td style="text-align: center;">myu</td>
<td style="text-align: center;">myo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">り</td>
<td style="text-align: center;">rya</td>
<td style="text-align: center;">ryu</td>
<td style="text-align: center;">ryo</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぎ</td>
<td style="text-align: center;">gya</td>
<td style="text-align: center;">gyu</td>
<td style="text-align: center;">gyo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">じ</td>
<td style="text-align: center;">zya / jya / ja</td>
<td style="text-align: center;">zyu / jyu / ju</td>
<td style="text-align: center;">zyo / jyo / jo</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぢ</td>
<td style="text-align: center;">dya / jya / ja</td>
<td style="text-align: center;">dyu / jyu / ju</td>
<td style="text-align: center;">dyo / jyo / jo</td>
</tr>
<tr class="odd">
<td style="text-align: center;">び</td>
<td style="text-align: center;">bya</td>
<td style="text-align: center;">byu</td>
<td style="text-align: center;">byo</td>
</tr>
<tr class="even">
<td style="text-align: center;">ぴ</td>
<td style="text-align: center;">pya</td>
<td style="text-align: center;">pyu</td>
<td style="text-align: center;">pyo</td>
</tr>
</tbody>
</table>
<p>同样，这里部分拗音假名有多个表记方式。为了记号统一不引起歧义，我们规定「しゃ」「しゅ」「しょ」使用「sya」「syu」「syo」表记，「じゃ」「じゅ」「じょ」使用「jya」「jyu」「jyo」表记，「ぢゃ」「ぢゅ」「ぢょ」使用「jya」「jyu」「jyo」表记。</p>
<p>拨音的罗马字则始终为「n」，但是根据实际的发音情况可以表记为「m」「ng」。同样，为了记号统一，我们仅使用「n」表记拨音。</p>
<p>长音的表记有两种常用体系。一种是在需要长音的音节的元音上加一个短横表示该音节需要长音，例如「<code>@ 大阪 おおさか</code>」表记为「ōsaka」。而我们采用另外一种表记体系，即如实表记所用假名，例如「<code>@ 経済 けいざい</code>」表记为「keizai」。</p>
<p>促音的表记方式则一般为双写促音后一音节的辅音。例如「しっかり」表记为「shikkari」。</p>
<p>此外，我们额外规定，如果需要用罗马字表记音译的外来语单词，应当使用原语言的拉丁字表记，而非用罗马字表记日语假名。例如，「フィルム」应当表记为「film」，而非「firumu」。这样规定的目的是回避现代日语中用于音译外来词产生的若干新拗音（例如上述例子中的「フィ」）暂且没有正规的罗马字表记的问题。当然，为了将外来语罗马字表记和正常的日语罗马字区分开，可以使用空格、括号等方式表示区分。</p>
<p>最后需要提醒的是三个日语助词的发音和表记规则。「は」「へ」「を」分别为主题助词、方向助词、宾语助词，这三者若按照五十音图的对应关系，应当发音为「ha」「he」「wo」。但是当它们作为助词的时候，应当发音为「wa」「e」「o」，其罗马字表记也需要相应变化。然而在输入法中输入这三个假名的时候，由于输入法不具有语句结构分析功能，所以依然需要按照五十音图的对应规则输入。</p>
<h2 id="chapter-1-section-1-练习">Chapter 1 Section 1 练习</h2>
<p>【第一问】尝试为下述句子给出罗马字表记，语句中的所有汉字已经在其正上方使用假名标记了其读音。考虑到目前还未讲解日语语法，故这里将所有助词均使用加粗标记。</p>
<ul>
<li>よろしくお<code>@ 願 ねが</code>いします。</li>
<li>おれ<strong>は</strong><code>@ 兄弟三人 きょうだいさんにん</code><strong>が</strong>います。</li>
<li>はやく<code>@ 容疑者 ようぎしゃ</code><strong>の</strong><code>@ 情報 じょうほう</code><strong>を</strong><code>@ 調 しら</code>べ<strong>て</strong>ください。</li>
<li>ケーキ<strong>を</strong><code>@ 作 つく</code>りすぎた<strong>ので</strong>、これ<strong>を</strong><code>@ 持 も</code>っ<strong>て</strong>おばあさん<strong>に</strong><code>@ 行 い</code>っ<strong>て</strong>あげ<strong>て</strong>。</li>
</ul>
<p>【第二问】尝试根据罗马音表记写出句子的平假名表示，暂不要求写汉字或者翻译外来语，罗马音表记已经为词语和词语之间加上空格。考虑到目前还未讲解日语语法，故这里将所有助词均使用加粗标记。</p>
<ul>
<li>yat<strong>te</strong> minakere<strong>ba</strong> nande<strong>mo</strong> shiranai<strong>kara</strong> yat<strong>te</strong> miyou.</li>
<li>tenkiyohou<strong>ni</strong> yot<strong>te</strong>, ashita<strong>wa</strong> ame<strong>ga</strong> furisouni<strong>wa</strong> nai.</li>
<li>hajimari<strong>ga</strong> are<strong>ba</strong>, itsuka owari<strong>wa</strong> kitto kuru<strong>kara</strong>.</li>
<li>taihen<strong>ni</strong> moushiwake arimasendeshita.</li>
</ul>
<h1 id="日语三大文字体系的历史和使用惯例">日语三大文字体系的历史和使用惯例</h1>
<p>上一节我们已经讲解了日语中两套假名系统以及罗马字注音系统。平假名、片假名这两套假名，加上从汉语中借鉴的汉字，共同构成了当今日语的文字体系。那么，我们就需要了解，何时使用汉字，何时使用平假名，何时使用片假名。</p>
<h2 id="表音汉字表意汉字假名的历史">表音汉字、表意汉字、假名的历史</h2>
<p>在汉语传入日本之前，日语是一个没有文字的语言。汉语传入日本，为日本带来了两样新事物，一是文字，二是原先日语中不具有的新词汇。</p>
<p>在这后日本人尝试使用汉字表记日语，而由于汉字同时具有音和意两个维度，所以在使用汉字表记日语的时候有两种思路。一是将汉字作为表音文字，用汉字表记与之同音的日语词，二是将汉字作为表意文字，用汉字表记与之同意的日语词。</p>
<p>作为表音文字的汉字最经典的代表就是万叶假名。而万叶假名中最具代表性的一个词就是「<code>@ 伊呂波 いろは</code>」，其用于表记日语词「iroha」，这显然是直接借用了这三个汉字的读音表记日语词。</p>
<p>作为表意文字的汉字则多见于各类训读词。比如日语中将“山”这一事物称为「yama」，而汉字中“山”一字恰好表达相同的意思，那么日语就会把“山”这一个汉字训读成「<code>@ 山 やま</code>」。这类字我们称为训读汉字。当然，训读并不仅仅局限于单字，这些我们后续进行说明。</p>
<p>而表音汉字具有一个缺陷，即使用了笔画繁杂的汉字仅仅表达了一个音节，这造成了书面传抄的极大不便。基于此原因，后续人们传抄的时候，会有意简化笔画来提高传抄效率。而经过足够长的时间，日语形成了两套人们都认可的简体表音汉字，而这就是平假名和片假名。</p>
<p>我们实际依然可以在现代假名中找到汉字的残余。比如说平假名「ぬ」就是从汉字「奴」简化而来，而片假名「イ」则取自汉字「依」的偏旁。</p>
<p>另外，上面提到汉语的传入带来了部分新词汇，这些词汇日语本身不具有，故这些词汇自然而然地使用汉字作为书面表记，且读音尽可能模仿当时的汉语读音。那么这里使用的汉字就和汉语中一样，既表音又表意。这类汉字我们成为音读汉字。</p>
<h2 id="现代日语中的汉字">现代日语中的汉字</h2>
<p>根据上面的论述，可以注意到现代日语中的汉字有三种情况：</p>
<ul>
<li>作为表意汉字表记日语固有词（即训读汉字）</li>
<li>万叶假名的残留，作为表音汉字表记日语固有词</li>
<li>同时作为表音汉字和表意汉字表记汉语借词（即音读汉字）</li>
</ul>
<p>实际上，现代日语中的汉字还有可能出现在下述情况中：</p>
<ul>
<li>作为假借汉字表记各类词语</li>
</ul>
<p>就出现频率而言，现代日语中最为常见的两种汉字使用方式是第 1 种情况和第 3 种情况。第 2 种情况目前几乎仅出现在部分专有名词中，比如姓名中。例如女性名「<code>@ 奈美 なみ</code>」，其汉字仅表音，不表意。</p>
<p>此外，第 3 种情况的音读汉字除去表记汉语借词之外，其实也适用于和制汉语的情形。和制汉语指的是在明治维新时，大量西方语言中的概念传入日本后，日本翻译家模仿汉字词创造的一批汉字词。这些和制汉语和传统汉语借词具有类似的逻辑，其汉字表记同时表音表意，故也可以认为是表音汉字。例如词语「<code>@ 共和 きょうわ</code>」，该词汇后续甚至传入中国，被纳入汉语词汇。</p>
<p>假借汉字，即日语中所谓的「<code>@ 当 あ</code>て<code>@ 字 じ</code>」，其作用一般是如果某一词语难以找到很合适的汉字表记，那么借用已有的表音汉字或者表意汉字对应关系，为该词语选定汉字表记。</p>
<p>比如说日语词「suteki」。因为已经有音读汉字「<code>@ 素 す</code>」和音读汉字「<code>@ 敵 てき</code>」，将其拼接即可得到该词语的汉字表记为「<code>@ 素敵 すてき</code>」。而此词语的含义为“美好”，和其汉字表记的汉语含义并无联系。</p>
<p>另外再举一例，日语词「shikata」。因为已经有音读汉字「<code>@ 仕 し</code>」和训读汉字「<code>@ 方 かた</code>」，将其拼接即可得到该词语的汉字表记为「<code>@ 仕方 しかた</code>」。此词语的含义为“方法、手段”。</p>
<p>这里需要注意的是，音读汉字「<code>@ 仕 し</code>」是现代日语中相当常见的假借字之一，大量以「shi」音开头的词汇均常常使用该字假借表记。比如「<code>@ 仕付 しつけ</code>」「<code>@ 仕方 しかた</code>」「<code>@ 仕草 しぐさ</code>」「<code>@ 仕事 しごと</code>」「<code>@ 仕舞 しま</code>う」。这些词的含义分别为“管教、约束”“方法、手段”“台词、说辞”“工作”“结束、终结”。</p>
<p>这里引出了一个问题。上述的情况 2 中的汉字也仅仅表音而不表意，而刚刚提到的部分假借字也是仅仅表音而不表意，这两者的区别是什么呢？</p>
<div class="note info no-icon"><p>可以这样理解，仅使用表音汉字的假借字拆开来，单个字依然能同时表音表意。比如「<code>@ 素敵 すてき</code>」拆开为「<code>@ 素 す</code>」和「<code>@ 敵 てき</code>」，「<code>@ 素 す</code>」依然表示“本来的、普通的”的含义，「<code>@ 敵 てき</code>」依然表示“敌人”的含义。而情况 2 中的万叶假名残余，其从根本上就没有表意的可能。即使将「<code>@ 奈美 なみ</code>」，拆开为「<code>@ 奈 な</code>」和「<code>@ 美 み</code>」，这两者依然仅仅表音不表意。</p>
</div>
<p>另外一种假借字出现的情况是用汉字表记汉语以外的外来语，这些词汇完全外来，没有原有的汉字表记，所以如果需要使用汉字表记，则必须假借。一般而言，假借表记这些词汇的时候，常常使用表音汉字。当然，如果能做到表音和表意相结合，则更能体现语言的艺术。</p>
<p>例如，来源于英语词 Asia 的日语词「ajia」，其曾用的汉字表记为「<code>@ 亜細亜 アジア</code>」。这里仅仅考虑了汉字的读音，而没有考虑汉字的含义。</p>
<p>仅表意的假借也是存在的。例如来源于英语词 beer 的日语词「biiru」，其曾用的汉字表记为「<code>@ 麦酒 ビール</code>」。这里显然仅仅考虑了汉字的含义，并未考虑汉字读音。</p>
<p>而另外一例，来源于英语词 club 的日语词「kurabu」，其曾用的汉字表记为「<code>@ 俱楽部 クラブ</code>」。这里做到了音意结合，是经典的优秀翻译。该汉字表记后续传入中国，成为了汉语对该英语词的翻译。</p>
<p>此外，假借字还常常出现在文艺作品中产生特别的表达效果。比如说著名的词语「<code>@ 五月蠅 うるさ</code>い」，这类故意不使用常用汉字表记的假借字，一般侧重于表达假借汉字本身的含义。比如说，现在文艺作品中常常会使用「<code>@ 運命 さだめ</code>」而非常用的「<code>@ 定 さだ</code>め」表记固有词「sadame」，这样更能表达出“命运本身就是确定之事”这样的含义。</p>
<p>而假借字甚至可以用来达到反语的表达效果。比如用「<code>@ 軽 おも</code>い」来表记原本含义为“沉重的”的固有词「omoi」，以达到“看似轻浮实则沉重”的表达效果。该假借字取自歌词：</p>
<div class="note info no-icon"><p><code>@ 思 おも</code>いもしない<code>@ 軽 おも</code>い<code>@ 言葉 ことば</code>、<code>@ 何度 なんど</code> <code>@ 使 つか</code>い<code>@ 古 ふる</code>すのか。</p>
<p>——「カワキヲアメク」</p>
</div>
<h2 id="现代日语中的平假名">现代日语中的平假名</h2>
<p>观察现代日语中的动词、形容词、形容动词词例：</p>
<ul>
<li><code>@ 動詞 どうし</code>：<code>@ 行 い</code>く、<code>@ 来 く</code>る、<code>@ 話 はな</code>す、<code>@ 飛 と</code>ぶ、<code>@ 立 た</code>つ</li>
<li><code>@ 形容詞 けいようし</code>：<code>@ 赤 あか</code>い、<code>@ 黒 くろ</code>い、<code>@ 長 なが</code>い、<code>@ 広 ひろ</code>い、<code>@ 美 うつく</code>しい、<code>@ 難 むずか</code>しい</li>
<li><code>@ 形容動詞 けいようどうし</code>：<code>@ 好 す</code>きだ、<code>@ 嫌 きら</code>いだ、<code>@ 静 しず</code>かだ</li>
</ul>
<p>可以注意到这些词语除去表意的训读汉字作为词干之外，还有使用平假名表记的词尾，这些词尾一般称为送假名，即日语「<code>@ 送 おく</code>り<code>@ 仮名 がな</code>」。这些送假名承担的作用是变形以表达语法含义，本身并不表达任何含义。</p>
<p>这些用言的词尾应当以什么样的形式变化来表达语法含义，则在后续的部分进行具体的讲解。</p>
<p>另外，在实际的语用环境下，还有省略送假名的情况。这种省略情况需要在简单介绍日语用言词尾变形原则后具体讲解。</p>
<p>而这也是现代日语文字中平假名的重要作用之一，即表记用言（可以粗略理解为动词、形容词、形容动词的集合）的送假名部分，承担通过变形表达语法含义的作用。</p>
<p>现代日语文字中平假名的第二个重要作用是在含义虚化的词语中取代表意汉字。一个较为典型的例子是词语「koto」，其具有汉字表记「<code>@ 事 こと</code>」。但是如果这个词作为形式体言以承担动词名词化的语法作用的时候，则一般不使用汉字表记，而是直接使用平假名表记为「こと」。比如说下述例句：</p>
<div class="note info no-icon"><p>あれはもう<code>@ 去年 きょねん</code>の<strong><code>@ 事 こと</code></strong>だった。</p>
<p>わたしは<code>@ 日本語 にほんご</code>で<code>@ 手紙 てがみ</code>を<code>@ 書 か</code>く<strong>こと</strong>ができます。</p>
</div>
<p>另外，如果某一词语同时具有实词和含义虚化词语的双重属性，并且这两个含义差异较大，则该词语使用汉字还是使用平假名表记甚至可以影响语句的细节含义。比如说词语「kudasaru」，其作为实词，使用汉字表记「<code>@ 下 くだ</code>さる」时，含义一般为“从他人处获取物品”，而其含义虚化，使用平假名表记「くださる」并接续在助词「て」之后时，其作用是表达请求的语气。那么观察下述例句，这里使用该动词的命令形而非原形：</p>
<div class="note info no-icon"><p><code>@ 資料 しりょう</code>を<code>@ 出 だ</code>して<strong><code>@ 下 くだ</code>さい</strong>。</p>
<p><code>@ 資料 しりょう</code>を<code>@ 出 だ</code>して<strong>ください</strong>。</p>
</div>
<p>前者则更倾向于“把资料取出来给我”的含义，而后者则更倾向于“请取出资料”的含义。补充一点，上述两句话在口语中无法区分，但是可以通过对话情境上下文作出区分。</p>
<p>而在新闻标题、标识语等需要节省文字空间的书面条件下，这类词语无论表达何种细节含义也倾向于使用汉字表记以节省空间。</p>
<p>此外，部分日语词语本身不具有汉字表记，这类词语仅能使用假名表记。这类词主要是各类助词和助动词，以及部分本土的副词。例如，表示否定的助动词「ない」和含义为“整洁、利落”的副词「さっぱり」。</p>
<p>而现代日语中，部分原本具有汉字表记的词语由于使用者习惯的变化，逐渐不会使用其汉字表记。例如，含义为“大量、许多”的副词「takusan」，原本具有汉字表记「<code>@ 沢山 たくさん</code>」，而现在大部分时候使用的是其平假名表记「たくさん」。</p>
<p>这类逐渐丢失汉字表记的词语还包括由于汉字表记过于复杂导致使用者逐步放弃汉字表记的词语。比如词语「<code>@ 改竄 かいざん</code>」，由于汉字过于复杂，目前常见的表记方式为「<code>@ 改 かい</code>ざん」。</p>
<p>最后需要指出，上述规则也可能是存在例外的。也就是说，实际条件下具体应当选择何种表记，需要视实际环境，或者根据母语者的偏好决定。</p>
<h2 id="现代日语中的片假名">现代日语中的片假名</h2>
<p>现代日语中片假名最重要的作用是表记外来语，例如：</p>
<div class="note info no-icon"><p>この<code>@ 番組 ばんぐみ</code>はご<code>@ 覧 らん</code>の<strong>スポンサー</strong>の<code>@ 提供 ていきょう</code>でお<code>@ 送 おく</code>りします。</p>
</div>
<p>这里的片假名即用于表记来自英语的外来词 sponsor。</p>
<p>此外，即使我们使用假借字表记了外来词，其注音假名（写在汉字上方表明其发音的假名，又称振假名）也应当写为片假名。这一规则常用于来自现代汉语的借词，这类借词往往有汉字表记，但是表记其读音的时候依然需要使用片假名。例如：</p>
<div class="note info no-icon"><p><code>@ 上海 シャンハイ</code>から<code>@ 東京 とうきょう</code>までの<code>@ 飛行機 ひこうき</code>。</p>
</div>
<p>除去表记外来语，片假名还有一个重要作用，即表记需要强调的词语。例如下述歌词：</p>
<div class="note info no-icon"><p><code>@ 見 み</code>て<code>@ 見 み</code>ぬ<strong>フリ</strong>なだけ。</p>
<p>——「キュートなカノジョ」</p>
</div>
<p>这里「<code>@ 見 み</code>て<code>@ 見 み</code>ぬふり」是日语熟语，含义为“视而不见”。这里将表达“装作”含义的「furi」使用片假名表记，则更为强调“我早已知晓，只不过是装作不知道”这样的含义。</p>
<h2 id="chapter-1-section-2-练习">Chapter 1 Section 2 练习</h2>
<p>【第一问】根据我们对日语中汉字的了解，除去假借字外，训读汉字和音读汉字均有表意的作用。所以当日语词的汉字表记难以使用汉字的汉语含义理解的时候，其往往是假借汉字。基于这样的认知，尝试指出下述句子中的假借汉字。下述各个句子均已经给出其汉语翻译：</p>
<ul>
<li><code>@ 囚人 しゅうじん</code>は<code>@ 看守 かんしゅ</code>の<code>@ 目 め</code>を<code>@ 誤魔化 ごまか</code>して<code>@ 逃 に</code>げた。（犯人糊弄过看守的监视逃走了。）</li>
<li><code>@ 彼 かれ</code>は<code>@ 勤勉家 きんべんか</code>だから、<code>@ 成功 せいこう</code>するのは<code>@ 当 あ</code>たり<code>@ 前 まえ</code>だ。（他作为实干家成功是当然的。）</li>
</ul>
<p>【第二问】音读汉字和训读汉字的差别在于训读汉字往往不表音，所以其读音往往和汉语读音有所差别。基于这样的认知，首先指出下面句子中的假借字，然后将所有汉字分为音读和训读两类。下述各个句子均已经给出其汉语翻译：</p>
<ul>
<li><code>@ 明日 あした</code> <code>@ 七時 しちじ</code>に<code>@ 会社 かいしゃ</code>の<code>@ 受付 うけつけ</code>で<code>@ 会 あ</code>いましょう。（明天七点在公司前台见吧。）</li>
<li><code>@ 一寸 いっすん</code>の<code>@ 光陰 こういん</code>を<code>@ 軽 かろ</code>んずべからず。（一寸光阴不可轻。）</li>
<li>この<code>@ 素晴 すば</code>らしい<code>@ 世界 せかい</code>に<code>@ 祝福 しゅくふく</code>を。（为这个美好的世界献上祝福。）</li>
<li>この<code>@ 橋 はし</code>は<code>@ 石 いし</code>で<code>@ 出来 でき</code>ている。（这座桥是用石头修的。）</li>
</ul>
<h1 id="日语汉字的训读和音读">日语汉字的训读和音读</h1>
<p>我们再次回忆日语中的汉字出现的场合，实际上主要依然是两类，即训读汉字和音读汉字，而假借字也一般从这两类字假借。</p>
<p>那么这一部分将会深入探讨汉字的训读和音读，讲解区分训读和音读的基本方法，基于此即可简单掌握日语汉字的发音。当然，大量的阅读日语语料开拓词汇量也是学习日语汉字发音的重要步骤。</p>
<h2 id="单字训熟字训词组训读">单字训、熟字训、词组训读</h2>
<p>我们最常见的训读形式就是单字训。单字训的逻辑是使用汉字表记与该汉字同义的日语词，从而我们称将这个汉字训读为日语词的读音。比如说我们用汉字“山”表记同义日语词「yama」，我们就称将“山”训读成「やま」。</p>
<p>此外，我们需要提醒动词等涉及到词尾的词语的训读。比如说表示“消失”的动词「kieru」和表示“使熄灭”的动词「kesu」，它们的常用表记为「<code>@ 消 き</code>える」和「<code>@ 消 け</code>す」。可以注意到他们使用了同样的汉字，但是这个汉字读音并不一致。所以为了区分，我们在提到“消”这个汉字的训读的时候，需要加上词尾，称将“消”训读为「き‐える」和「け‐す」。</p>
<p>另外，由于汉字多义，导致单个汉字可以用于表记多个日语词，这就带来了训读多音字。比如说“生”这个汉字，其表示“未经加工的”的含义的时候，训读为「なま」，词例为「<code>@ 生 なま</code>ビール」。表示“生长”的含义的时候，训读为「は‐やす」，词例为「<code>@ 芽生 めば</code>える」。表示“生存”的含义的时候，训读为「い‐きる」，词例为「<code>@ 生 い</code>きる」。表示“生产、分娩”的含义的时候，训读为「う‐む」，词例为「<code>@ 生 う</code>まれつく」。</p>
<p>此外，同一个日语词也可以用多种汉字表记。比如说「warau」，其最常用的表记为「<code>@ 笑 わら</code>う」。而当这个词倾向于表示“嘲笑、嗤笑”的含义的时候，也可以表记为「<code>@ 嗤 わら</code>う」。</p>
<p>熟字训指的是使用一个汉字词组来表记一个日语词，在这种情况下我们并不能说这个汉字词组里面具体某个汉字训读的读音，只能说这个词组整体训读成某个音。熟字训往往是具有日本文化特色的词语，另外，大量的植物和动物名也使用了熟字训。</p>
<p>常见的熟字训包括：</p>
<ul>
<li><code>@ 五月雨 さみだれ</code>、<code>@ 時雨 しぐれ</code>、<code>@ 村雨 むらさめ</code>、<code>@ 梅雨 つゆ</code></li>
<li><code>@ 一昨日 おととい</code>、<code>@ 昨日 きのう</code>、<code>@ 今日 きょう</code>、<code>@ 明日 あした</code>、<code>@ 明後日 あさって</code>、<code>@ 今朝 けさ</code>、<code>@ 昨夜 ゆうべ</code></li>
<li><code>@ 二十日 はつか</code>、<code>@ 二十歳 はたち</code>、<code>@ 一日 ついたち</code>、<code>@ 晦日 みそか</code>、<code>@ 一人 ひとり</code>、<code>@ 二人 ふたり</code></li>
<li><code>@ 田舎 いなか</code>、<code>@ 玩具 おもちゃ</code>、<code>@ 団扇 うちわ</code>、<code>@ 相撲 すもう</code>、<code>@ 台詞 せりふ</code>、<code>@ 太刀 たち</code>、<code>@ 足袋 たび</code>、<code>@ 土産 みやげ</code></li>
<li><code>@ 浴衣 ゆかた</code>、<code>@ 吹雪 ふぶき</code>、<code>@ 紅葉 もみじ</code>、<code>@ 芝生 しばふ</code></li>
</ul>
<p>词组训读指的是使用一个汉字表达一个日语词组。比如说，日语词「<code>@ 祭 まつ</code>り」和「<code>@ 事 こと</code>」的合成词「<code>@ 祭 まつ</code>り<code>@ 事 ごと</code>」具有衍生含义“政治”，所以可以使用一个字“政”表记，从而“政”单字训读为「まつりごと」。</p>
<p>这样的例子还包括：</p>
<ul>
<li><strong><code>@ 黄泉 よみ</code></strong> ＋ <code>@ 帰 かえ</code>る ＝ <code>@ 黄泉帰 よみがえ</code>る → <code>@ 蘇 よみがえ</code>る</li>
<li><code>@ 坂 さか</code> ＋ <code>@ 登 のぼ</code>る ＝ <code>@ 坂登 さかのぼ</code>る → <code>@ 遡 さかのぼ</code>る</li>
<li><code>@ 神 かみ</code> ＋ <code>@ 鳴 な</code>り ＝ <code>@ 神鳴 かみな</code>り → <code>@ 雷 かみなり</code></li>
<li><code>@ 屋 や</code> ＋ <code>@ 取 と</code>る ＝ <code>@ 屋取 やど</code>る → <code>@ 宿 やど</code>る</li>
<li><code>@ 日 ひ</code> ＋ <code>@ 回 まわ</code>り ＝ <code>@ 日回 ひまわ</code>り → <strong><code>@ 向日葵 ひまわり</code></strong></li>
</ul>
<p>根据上述例子中加粗的部分，可以注意到词组训读可能和熟字训结合。</p>
<h2 id="音读汉字的规律">音读汉字的规律</h2>
<p>大部分音读汉字都是一字一音，而且大多都是一个或者两个音节。如果双音节汉字的两个音节不是在模仿一个双音节字，那么第二个音节往往是「く」「き」「つ」等模仿古汉语入声的音节，或者拨音，或者长音。</p>
<p>一般而言，古汉语中具有入声的字，日语音读中会有模仿入声的音节：</p>
<ul>
<li><code>@ 学生 がくせい</code> ＝ が<strong>く</strong>せい</li>
<li><code>@ 責任 せきにん</code> ＝ せ<strong>き</strong>にん</li>
<li><code>@ 刹那 せつな</code> ＝ せ<strong>つ</strong>な</li>
</ul>
<p>而鼻音可能使用拨音去模仿，也可能是使用长音去模仿：</p>
<ul>
<li><code>@ 反対 はんたい</code> ＝ は<strong>ん</strong>たい</li>
<li><code>@ 形容 けいよう</code> ＝ け<strong>い</strong>よ<strong>う</strong></li>
</ul>
<p>这里有一个经验规律，即现代汉语中为前鼻音的字往往在日语音读中是拨音结尾，为后鼻音的字往往在日语音读中是长音结尾。</p>
<p>在了解单个汉字如何音读的基础上，我们需要简单了解音读汉字连读时可能发生的音便。</p>
<p>首先，入声字后面接续送气音的时候，往往发生促音便：</p>
<ul>
<li><code>@ 学校 がっこう</code> ＝ が<strong>く</strong> ＋ <strong>こ</strong>う → が<strong>っこ</strong>う</li>
<li><code>@ 察 さっ</code>する ＝ さ<strong>つ</strong> ＋ <strong>す</strong>る → さ<strong>っす</strong>る</li>
</ul>
<p>如果后面的字的开头是は行假名，往往后者还会发生半浊化：</p>
<ul>
<li><code>@ 八百 はっぴゃく</code> ＝ は<strong>ち</strong> ＋ <strong>ひゃ</strong>く → <strong>はっぴ</strong>ゃく</li>
<li><code>@ 疾風 しっぷう</code> ＝ し<strong>つ</strong> ＋ <strong>ふ</strong>う → <strong>しっぷ</strong>う</li>
</ul>
<p>而如果后面的字开头是浊音，往往不会发生促音便：</p>
<ul>
<li><code>@ 一撃 いちげき</code> ＝ い<strong>ち</strong> ＋ <strong>げ</strong>き → い<strong>ちげ</strong>き</li>
</ul>
<p>其次，如果前一个字以拨音结尾，那么后一个字一般发生浊化，而后面的字的开头是は行假名的时候，也有可能发生半浊化：</p>
<ul>
<li><code>@ 万歳 ばんざい</code> ＝ ば<strong>ん</strong> ＋ <strong>さ</strong>い → ば<strong>んざ</strong>い</li>
<li><code>@ 三百 さんびゃく</code> ＝ さ<strong>ん</strong> ＋ <strong>ひゃ</strong>く → さ<strong>んびゃ</strong>く</li>
<li><code>@ 順風満帆 じゅんぷうまんぱん</code> ＝ じゅ<strong>ん</strong> ＋ <strong>ふ</strong>う ＋ ま<strong>ん</strong> ＋ <strong>は</strong>ん ＝ じゅ<strong>んぷ</strong>うま<strong>んぱ</strong>ん</li>
</ul>
<p>当然，这一规律也是存在例外的：</p>
<ul>
<li><code>@ 関西 かんさい</code> ＝ か<strong>ん</strong> ＋ <strong>さ</strong>い → か<strong>んさ</strong>い</li>
</ul>
<p>另外我们需要注意，由于汉语传入日本是多批次的，所以音读汉字根据传入的时代还会分为吴音、汉音、唐音等等，目前大部分音读汉字遵守汉音规律。但是也会有例外，比如说「<code>@ 老若男女 ろうにゃくなんにょ</code>」一词，并不会按照常用的读音规律读成「<code>@ 老 ろう</code> <code>@ 若 じゃく</code> <code>@ 男 だん</code> <code>@ 女 じょ</code>」。</p>
<h2 id="音训混读">音训混读</h2>
<p>部分日语词中可能同时存在训读汉字和音读汉字，这类音训混读词需要特别记忆。音训混读词根据音读和训读出现的顺序分为「<code>@ 湯桶 ゆとう</code> <code>@ 読 よ</code>み」和「<code>@ 重箱 じゅうばこ</code> <code>@ 読 よ</code>み」两类。</p>
<p>「<code>@ 湯桶 ゆとう</code> <code>@ 読 よ</code>み」指的是类似「<code>@ 湯桶 ゆとう</code>」一样先训读汉字后音读汉字的音训混读词。这类词包括「<code>@ 合図 あいず</code>」「<code>@ 大勢 おおぜい</code>」「<code>@ 高台 たかだい</code>」。</p>
<p>「<code>@ 重箱 じゅうばこ</code> <code>@ 読 よ</code>み」指的是类似「<code>@ 重箱 じゅうばこ</code>」一样先音读汉字后训读汉字的音训混读词。这类词包括「<code>@ 馬 ば</code> <code>@ 鹿 か</code>」「<code>@ 額 がく</code> <code>@ 縁 ぶち</code>」「<code>@ 残 ざん</code> <code>@ 高 だか</code>」「<code>@ 番 ばん</code> <code>@ 組 ぐみ</code>」。注意到，这类词的后一个汉字往往会发生浊化。</p>
<p>这类词语的产生，可能是因为两个汉字本身是两个词，一个训读一个音读，后来合成为一个词的时候分别保留原先的读音，从而导致词语内部音训混读，这样形成的词语往往能够从汉字中理解词语含义。当然，也有可能源于假借汉字，这些词语就不太能够直接从汉字理解含义。</p>
<h2 id="日语数量词的读法">日语数量词的读法</h2>
<p>日语的数量词是不规则读法的集中之处，所以这里需要特别提出。</p>
<p>在讲解数量词之前，我们需要简单介绍目前日语中通行的两套数字，即传统日语中的训读数词和借自汉语的音读数词：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">漢字</th>
<th style="text-align: center;">訓読み数字</th>
<th style="text-align: center;">音読み数字</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;">ひ（と）</td>
<td style="text-align: center;">いち</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;">ふ（た）</td>
<td style="text-align: center;">に</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">さん</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;">よ（ん）</td>
<td style="text-align: center;">し</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">い（つ）</td>
<td style="text-align: center;">ご</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">む</td>
<td style="text-align: center;">ろく</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">な（な）</td>
<td style="text-align: center;">しち</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">や</td>
<td style="text-align: center;">はち</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">ここの</td>
<td style="text-align: center;">きゅう・く</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;">とお</td>
<td style="text-align: center;">じゅう</td>
</tr>
<tr class="odd">
<td style="text-align: center;">百</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">ひゃく</td>
</tr>
<tr class="even">
<td style="text-align: center;">千</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">せん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">万</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">まん</td>
</tr>
</tbody>
</table>
<p>基于此，首先说明日本的大数读法。日本的大数读法中，一般而言“四”需要使用训读（其音读「<code>@ 四 し</code>」和「<code>@ 死 し</code>」同音，需要避讳），“七”训读和音读均可（其音读「<code>@ 七 しち</code>」和「<code>@ 死 し</code>」相似，可以避讳）。</p>
<p>之后，需要注意音读数词直接连接时可能出现的音便。而「<code>@ 四 よん</code>」在这里并不会引发浊音便：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;">＋「百」</th>
<th style="text-align: center;">＋「千」</th>
<th style="text-align: center;">＋「万」</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;"><strong>ひゃく</strong></td>
<td style="text-align: center;"><strong>せん</strong></td>
<td style="text-align: center;">いちまん</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;">にひゃく</td>
<td style="text-align: center;">にせん</td>
<td style="text-align: center;">にまん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;">さ<strong>んびゃ</strong>く</td>
<td style="text-align: center;">さ<strong>んぜ</strong>ん</td>
<td style="text-align: center;">さんまん</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;">よんひゃく</td>
<td style="text-align: center;">よんせん</td>
<td style="text-align: center;">よんまん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">ごひゃく</td>
<td style="text-align: center;">ごせん</td>
<td style="text-align: center;">ごまん</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">ろ<strong>っぴゃ</strong>く</td>
<td style="text-align: center;">ろくせん</td>
<td style="text-align: center;">ろくまん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">ななひゃく</td>
<td style="text-align: center;">ななせん</td>
<td style="text-align: center;">ななまん</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">は<strong>っぴゃ</strong>く</td>
<td style="text-align: center;">は<strong>っせ</strong>ん</td>
<td style="text-align: center;">はちまん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">きゅうひゃく</td>
<td style="text-align: center;">きゅうせん</td>
<td style="text-align: center;">きゅうまん</td>
</tr>
</tbody>
</table>
<p>需要注意的是“一百”“一千”不需要表示出“一”这个数量，以及“六千”并没有发生促音便。其余发音均和上述规律以及音读汉字音便规律一致。</p>
<p>一些大数的示例：</p>
<ul>
<li><code>@ 一万千六百 いちまんせんろっぴゃく</code> (11600)</li>
<li><code>@ 四万八千 よんまんはっせん</code> (48000)</li>
<li><code>@ 七千七百 ななせんななひゃく</code> (7700)</li>
</ul>
<p>在具体叙述数量词搭配的时候，我们需要特别指出，下面的讨论不包含表示日期的量词「<code>@ 日 か・にち</code>」、表示个数的量词「つ」、表示人数的量词「<code>@ 人 り・にん</code>」，因为这三个量词的使用方式完全不规则。</p>
<p>在和具体的量词搭配的时候，具体使用训读数词还是音读数词，大约遵守下面的规律。</p>
<ul>
<li>如果数量大于“十”，则无论量词如何，一般使用音读数词：</li>
</ul>
<div class="note info no-icon"><p><code>@ 三十個 さんじゅうこ</code>、<code>@ 十三夜 じゅうさんや</code></p>
</div>
<p>当然，“二十”“五十”“八百”等可能存在部分类似固定搭配用法的训读形式，然而一般而言这些词语也被认为是熟字训而并非普通的数词和量词的联合使用：</p>
<div class="note info no-icon"><p><code>@ 五十嶋 いそじま</code>、<code>@ 八百屋 やおや</code>、<code>@ 二十歳 はたち</code></p>
</div>
<ul>
<li>如果数量为“一”或者“二”，并且量词为训读量词，则一般使用训读数词与之搭配：</li>
</ul>
<div class="note info no-icon"><p><code>@ 一皿 ひとさら</code>、<code>@ 二組 ふたくみ</code>、<code>@ 一滴 ひとしずく</code></p>
</div>
<p>相应的，即使数量为“一”或者“二”，如果量词为音读数词，则一般使用音读数词，此时需要注意汉字连读时的音便（基本只需要注意“一”和音读量词连用且量词以送气音开头时发生促音便）：</p>
<div class="note info no-icon"><p><code>@ 一匹 いっぴき</code>、<code>@ 二羽 にわ</code>、<code>@ 一番 いちばん</code>、<code>@ 二台 にだい</code></p>
</div>
<p>当然，这也是有例外的，比如说音读量词「<code>@ 駅 えき</code>」，在数量为“一”或者“二”的时候，反而使用训读数词：</p>
<div class="note info no-icon"><p><code>@ 一駅 ひとえき</code>、<code>@ 二駅 ふたえき</code></p>
</div>
<ul>
<li>由于避讳问题，数量为“四”的时候往往使用训读数词，不过需要注意「よん」可能约音为「よ」，并且往往「よん」并不会引发浊音便：</li>
</ul>
<div class="note info no-icon"><p><code>@ 四時 よじ</code>、<code>@ 四回 よんかい</code>、<code>@ 四階 よんかい</code></p>
</div>
<p>当然，部分量词在数量为“四”的时候依然使用音读数词。这些词语往往更类似于固定搭配，比如「<code>@ 則 そく</code>」这个量词很少和其他数量连用，即很少见到“三则”这样的表达：</p>
<div class="note info no-icon"><p><code>@ 四月 しがつ</code>、<code>@ 四角 しかく</code>、<code>@ 四則 しそく</code></p>
</div>
<ul>
<li>而数量为“七”的时候，音读和训读量词几乎可以混用，两种均可：</li>
</ul>
<div class="note info no-icon"><p><code>@ 七月 しちがつ</code>、<code>@ 七時 しちじ</code>、<code>@ 七回 ななかい</code>、<code>@ 七本 ななほん</code></p>
</div>
<p>总而言之，数量为“四”或者“七”的时候具体使用何种数词需要根据母语者使用习惯决定。经验规律则是“四”大多用训读数词，“七”的两种数词使用频率大体类似。</p>
<p>对于余下的数量，即“三”“五”“六”“八”“九”“十”，其通常使用音读数词。当然，数量“三”接续训读量词的时候依然可能使用训读数词：</p>
<div class="note info no-icon"><p><code>@ 三切 みき</code>れ</p>
</div>
<p>这里接续量词的时候，需要可能出现的音便。</p>
<ul>
<li>在送气音开头的量词前，「<code>@ 六 ろく</code>」发生促音便变为「<code>@ 六 ろっ</code>」，「<code>@ 八 はち</code>」发生促音便变为「<code>@ 八 はっ</code>」，「<code>@ 十 じゅう</code>」发生促音便变为「<code>@ 十 じゅっ・じっ</code>」：</li>
</ul>
<div class="note info no-icon"><p><code>@ 六回 ろっかい</code>、<code>@ 八回 はっかい</code>、<code>@ 十回 じゅっかい</code>、<code>@ 六杯 ろっぱい</code>、<code>@ 八杯 はっぱい</code>、<code>@ 十杯 じゅっぱい</code>、<code>@ 十把 じっぱ</code></p>
</div>
<ul>
<li>数量“三”后续的量词如果以は行假名开头，则一般发生浊化，但也可能发生半浊化。另外，以其他可以浊化的假名开头的数词虽然大多不会浊化，但也有浊化的可能：</li>
</ul>
<div class="note info no-icon"><p><code>@ 三杯 さんばい</code>、<code>@ 三発 さんぱつ</code>、<code>@ 三回 さんかい</code>、<code>@ 三階 さんがい</code></p>
</div>
<p>其余的数量则很少发生音便。</p>
<p>当然，现代日语甚至可能使用英语音译数词进行计数。而这种情况经常出现在和英语音译量词连用的情况中：</p>
<div class="note info no-icon"><p><code>@ 二 ツー</code>セット、<code>@ 三 スリー</code>セット</p>
</div>
<p>下面举出部分常用量词和十以内的数词连用的读音情况，部分特殊的加粗注明。</p>
<p>首先是常见的训读数词：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 箱 はこ</code></th>
<th style="text-align: center;"><code>@ 組 くみ</code></th>
<th style="text-align: center;"><code>@ 文字目 もじめ</code></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;">ひとはこ</td>
<td style="text-align: center;">ひとくみ</td>
<td style="text-align: center;">ひともじめ</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;">ふたはこ</td>
<td style="text-align: center;">ふたくみ</td>
<td style="text-align: center;">ふたもじめ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;"><strong>さんはこ</strong></td>
<td style="text-align: center;">さんくみ</td>
<td style="text-align: center;">さんもじめ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;">よんはこ</td>
<td style="text-align: center;">よんくみ</td>
<td style="text-align: center;">よんもじめ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">ごはこ</td>
<td style="text-align: center;">ごくみ</td>
<td style="text-align: center;">ごもじめ</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">ろっぱこ</td>
<td style="text-align: center;">ろっくみ</td>
<td style="text-align: center;">ろくもじめ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">ななはこ</td>
<td style="text-align: center;">ななくみ</td>
<td style="text-align: center;">ななもじめ</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">はっぱこ</td>
<td style="text-align: center;"><strong>はちくみ</strong></td>
<td style="text-align: center;">はちもじめ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">きゅうはこ</td>
<td style="text-align: center;">きゅうくみ</td>
<td style="text-align: center;">きゅうもじめ</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;">じっぱこ</td>
<td style="text-align: center;">じっくみ</td>
<td style="text-align: center;">じゅうもじめ</td>
</tr>
</tbody>
</table>
<p>而常见的音读量词中需要着重注意的包括（这里将接续音读数词的训读量词「<code>@ 羽 わ</code>」列出用于对比）：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 羽 わ</code></th>
<th style="text-align: center;"><code>@ 話 わ</code></th>
<th style="text-align: center;"><code>@ 時 じ</code></th>
<th style="text-align: center;"><code>@ 本 ほん</code></th>
<th style="text-align: center;"><code>@ 分 ふん</code></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;">いちわ</td>
<td style="text-align: center;">いちわ</td>
<td style="text-align: center;">いちじ</td>
<td style="text-align: center;">いっぽん</td>
<td style="text-align: center;">いっぷん</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;">にわ</td>
<td style="text-align: center;">にわ</td>
<td style="text-align: center;">にじ</td>
<td style="text-align: center;">にほん</td>
<td style="text-align: center;">にふん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;">さんわ</td>
<td style="text-align: center;">さんわ</td>
<td style="text-align: center;">さんじ</td>
<td style="text-align: center;">さんぼん</td>
<td style="text-align: center;">さんぶん</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;">よんわ</td>
<td style="text-align: center;">よんわ</td>
<td style="text-align: center;"><strong>よじ</strong></td>
<td style="text-align: center;">よんほん</td>
<td style="text-align: center;"><strong>よんぶん</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">ごわ</td>
<td style="text-align: center;">ごわ</td>
<td style="text-align: center;">ごじ</td>
<td style="text-align: center;">ごほん</td>
<td style="text-align: center;">ごふん</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">ろくわ</td>
<td style="text-align: center;">ろくわ</td>
<td style="text-align: center;">ろくじ</td>
<td style="text-align: center;">ろっぽん</td>
<td style="text-align: center;">ろっぷん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">ななわ</td>
<td style="text-align: center;">ななわ</td>
<td style="text-align: center;"><strong>しちじ</strong></td>
<td style="text-align: center;">ななほん</td>
<td style="text-align: center;">ななふん</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">はちわ</td>
<td style="text-align: center;">はちわ</td>
<td style="text-align: center;">はちじ</td>
<td style="text-align: center;">はっぽん</td>
<td style="text-align: center;">はっぷん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">きゅうわ</td>
<td style="text-align: center;">きゅうわ</td>
<td style="text-align: center;"><strong>くじ</strong></td>
<td style="text-align: center;">きゅうほん</td>
<td style="text-align: center;">きゅうふん</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;"><strong>じゅっぱ</strong></td>
<td style="text-align: center;">じゅうわ</td>
<td style="text-align: center;">じゅうじ</td>
<td style="text-align: center;">じゅっぽん</td>
<td style="text-align: center;">じゅっぷん</td>
</tr>
</tbody>
</table>
<div class="note info no-icon"><p>这里「<code>@ 羽 わ</code>」在数量“十”处的不规则据推测应当是ハ行转呼残留的结果。</p>
</div>
<p>之后就可以介绍三大不规则量词了。首先是较为简单规则的「<code>@ 人 り・にん</code>」，其唯一需要注意的是数量“一”和“二”需要同时改变量词的读音。当然，现在大部分观点认为这两个应该归于熟字训。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 人 り・にん</code></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;"><strong>ひとり</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;"><strong>ふたり</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;">さんにん</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;"><strong>よにん</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">ごにん</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">ろくにん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">ななにん</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">はちにん</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">きゅうにん</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;">じゅうにん</td>
</tr>
</tbody>
</table>
<p>之后介绍量词「つ」，其仅能用于十以内的数量，大于十的数量需要替换成为同义量词「<code>@ 個 こ</code>」。另外，对这个量词提问也应当使用「いくつ」，而非和大部分量词一样直接加上疑问词「<code>@ 何 なん</code>」（例如「<code>@ 何箱 なんはこ</code>」）。而且其和训读数词的接续几乎完全不规则：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;">つ</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;">ひとつ</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;">ふたつ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;">みっつ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;">よっつ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;">いつつ</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;">むっつ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;">ななつ</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;">やっつ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;">ここのつ</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;">とお</td>
</tr>
</tbody>
</table>
<p>最后介绍日语中目前最不规则的量词「<code>@ 日 か・にち</code>」。该量词在这里用于表示序数的日期，即某月的某一天，而不是表示时间长度的天数。如果用该量词表示用于表明时间长度的天数，则其为规则的音读量词「<code>@ 日 にち</code>」，构成的词组包括「<code>@ 一日 いちにち</code>」等。</p>
<p>其不规则的原因在于，十以内需要使用原有的固有表达，甚至对于数量“一”需要使用熟字训特殊表达。另外，由于数量“四”和“七”的避讳问题，需要使用训读数词，而且数量为“四”的时候量词需要变音。再者，“二十”具有熟字训表达。综合上述所有的因素，「<code>@ 日 か・にち</code>」变成了目前最为不规则的量词：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 日 か・にち</code></th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 日 か・にち</code></th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;"><code>@ 日 か・にち</code></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">一</td>
<td style="text-align: center;"><strong>ついたち</strong></td>
<td style="text-align: center;">十一</td>
<td style="text-align: center;">じゅういちにち</td>
<td style="text-align: center;">二十一</td>
<td style="text-align: center;">にじゅういちにち</td>
</tr>
<tr class="even">
<td style="text-align: center;">二</td>
<td style="text-align: center;"><strong>ふつか</strong></td>
<td style="text-align: center;">十二</td>
<td style="text-align: center;">じゅうににち</td>
<td style="text-align: center;">二十二</td>
<td style="text-align: center;">にじゅうににち</td>
</tr>
<tr class="odd">
<td style="text-align: center;">三</td>
<td style="text-align: center;"><strong>みっか</strong></td>
<td style="text-align: center;">十三</td>
<td style="text-align: center;">じゅうさんにち</td>
<td style="text-align: center;">二十三</td>
<td style="text-align: center;">にじゅうさんにち</td>
</tr>
<tr class="even">
<td style="text-align: center;">四</td>
<td style="text-align: center;"><strong>よっか</strong></td>
<td style="text-align: center;">十四</td>
<td style="text-align: center;"><strong>じゅうよっか</strong></td>
<td style="text-align: center;">二十四</td>
<td style="text-align: center;"><strong>にじゅうよっか</strong></td>
</tr>
<tr class="odd">
<td style="text-align: center;">五</td>
<td style="text-align: center;"><strong>いつか</strong></td>
<td style="text-align: center;">十五</td>
<td style="text-align: center;">じゅうごにち</td>
<td style="text-align: center;">二十五</td>
<td style="text-align: center;">にじゅうごにち</td>
</tr>
<tr class="even">
<td style="text-align: center;">六</td>
<td style="text-align: center;"><strong>むいか</strong></td>
<td style="text-align: center;">十六</td>
<td style="text-align: center;">じゅうろくにち</td>
<td style="text-align: center;">二十六</td>
<td style="text-align: center;">にじゅうろくにち</td>
</tr>
<tr class="odd">
<td style="text-align: center;">七</td>
<td style="text-align: center;"><strong>なのか</strong></td>
<td style="text-align: center;">十七</td>
<td style="text-align: center;">じゅうななにち・じゅうしちにち</td>
<td style="text-align: center;">二十七</td>
<td style="text-align: center;">にじゅうななにち・にじゅうしちにち</td>
</tr>
<tr class="even">
<td style="text-align: center;">八</td>
<td style="text-align: center;"><strong>ようか</strong></td>
<td style="text-align: center;">十八</td>
<td style="text-align: center;">じゅうはちにち</td>
<td style="text-align: center;">二十八</td>
<td style="text-align: center;">にじゅうはちにち</td>
</tr>
<tr class="odd">
<td style="text-align: center;">九</td>
<td style="text-align: center;"><strong>ここのか</strong></td>
<td style="text-align: center;">十九</td>
<td style="text-align: center;">じゅうきゅうにち</td>
<td style="text-align: center;">二十九</td>
<td style="text-align: center;">にじゅうきゅうにち</td>
</tr>
<tr class="even">
<td style="text-align: center;">十</td>
<td style="text-align: center;"><strong>とおか</strong></td>
<td style="text-align: center;">二十</td>
<td style="text-align: center;"><strong>はつか</strong></td>
<td style="text-align: center;">三十</td>
<td style="text-align: center;">さんじゅうにち</td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;"></td>
<td style="text-align: center;">三十一</td>
<td style="text-align: center;">さんじゅういちにち</td>
</tr>
</tbody>
</table>
<div class="note info no-icon"><p>「<code>@ 一日 ついたち</code>」的词源为词组训读：</p>
<ul>
<li><code>@ 月 つき</code> ＋ <code>@ 立 た</code>ち ＝ <code>@ 月立 ついた</code>ち → <code>@ 朔 ついたち</code>・<code>@ 一日 ついたち</code></li>
</ul>
</div>
<p>这里注意一点，「<code>@ 三十日 みそか</code>」有熟字训，但是该熟字训并不表示“某个月份的第三十天”这个含义，现在多用于表示“某个月的最后一天”，而且多用于在词组「<code>@ 大晦日 おおみそか</code>」中表示“除夕”这个特殊的日期。</p>
<p>此外，该量词可以和「<code>@ 間 かん</code>」连用来表示时间长度。但是一定需要注意「<code>@ 一日 ついたち</code>」不能直接和「<code>@ 間 かん</code>」连用。这种方式下用于表示“一天”这样的时间长度，可以使用固定短语「<code>@ 一日中 いちにちじゅう</code>」，或者转换为“二十四小时”表达，表达为「<code>@ 二十四時間 にじゅうよじかん</code>」。</p>
<div class="note info no-icon"><p>实际上，古日语在接收汉语数字之前也有完整的数量词体系，但是在演变过程中逐步被汉语数量词体系替换。这里简单讲解一部分古日语数量词体系，基于此我们可以得知现代日语数量词体系的演变脉络。本部分采用历史假名遣，关于历史假名遣可以阅读本系列 Chapter 2.5 古日语语法简介。</p>
<p>首先，一到九的数字在古日语中表现为：</p>
<ul>
<li>ひと、ふた、み、よ、いつ、む、なな、や、ここの</li>
</ul>
<p>其次，作为词根的十、百、千、万分别表现为：</p>
<ul>
<li>そ、ほ、ち、よろづ</li>
</ul>
<p>所以我们可以得到部分整十数的表现：</p>
<ul>
<li>みそ (30)、むほ (600)、やち (8000)、ここのよろづ (90000)</li>
</ul>
<p>例外情况包括，数字五在接续十、百、千、万的时候会简略为「い」：</p>
<ul>
<li>いそ (50)、いほ (500)、いち (5000)、いよろづ (50000)</li>
</ul>
<p>一千、一万的表现中会忽略数字一：</p>
<ul>
<li>ち (1000)、よろづ (10000)</li>
</ul>
<p>十、二十、一百有固定表达：</p>
<ul>
<li>と (10)、はた (20)、もも (100)</li>
</ul>
<p>上述规则可以总结为下述表格：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
<td style="text-align: center;">ひと</td>
<td style="text-align: center;">10</td>
<td style="text-align: center;"><strong>と</strong></td>
<td style="text-align: center;">100</td>
<td style="text-align: center;"><strong>もも</strong></td>
<td style="text-align: center;">1000</td>
<td style="text-align: center;"><strong>ち</strong></td>
<td style="text-align: center;">10000</td>
<td style="text-align: center;"><strong>よろづ</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
<td style="text-align: center;">ふた</td>
<td style="text-align: center;">20</td>
<td style="text-align: center;"><strong>はた</strong></td>
<td style="text-align: center;">200</td>
<td style="text-align: center;">ふたほ</td>
<td style="text-align: center;">2000</td>
<td style="text-align: center;">ふたち</td>
<td style="text-align: center;">20000</td>
<td style="text-align: center;">ふたよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">30</td>
<td style="text-align: center;">みそ</td>
<td style="text-align: center;">300</td>
<td style="text-align: center;">みほ</td>
<td style="text-align: center;">3000</td>
<td style="text-align: center;">みち</td>
<td style="text-align: center;">30000</td>
<td style="text-align: center;">みよろづ</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
<td style="text-align: center;">よ</td>
<td style="text-align: center;">40</td>
<td style="text-align: center;">よそ</td>
<td style="text-align: center;">400</td>
<td style="text-align: center;">よほ</td>
<td style="text-align: center;">4000</td>
<td style="text-align: center;">よち</td>
<td style="text-align: center;">40000</td>
<td style="text-align: center;">よよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
<td style="text-align: center;">いつ</td>
<td style="text-align: center;">50</td>
<td style="text-align: center;"><strong>いそ</strong></td>
<td style="text-align: center;">500</td>
<td style="text-align: center;"><strong>いほ</strong></td>
<td style="text-align: center;">5000</td>
<td style="text-align: center;"><strong>いち</strong></td>
<td style="text-align: center;">50000</td>
<td style="text-align: center;"><strong>いよろづ</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;">6</td>
<td style="text-align: center;">む</td>
<td style="text-align: center;">60</td>
<td style="text-align: center;">むそ</td>
<td style="text-align: center;">600</td>
<td style="text-align: center;">むほ</td>
<td style="text-align: center;">6000</td>
<td style="text-align: center;">むち</td>
<td style="text-align: center;">60000</td>
<td style="text-align: center;">むよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">7</td>
<td style="text-align: center;">なな</td>
<td style="text-align: center;">70</td>
<td style="text-align: center;">ななそ</td>
<td style="text-align: center;">700</td>
<td style="text-align: center;">ななほ</td>
<td style="text-align: center;">7000</td>
<td style="text-align: center;">ななち</td>
<td style="text-align: center;">70000</td>
<td style="text-align: center;">ななよろづ</td>
</tr>
<tr class="even">
<td style="text-align: center;">8</td>
<td style="text-align: center;">や</td>
<td style="text-align: center;">80</td>
<td style="text-align: center;">やそ</td>
<td style="text-align: center;">800</td>
<td style="text-align: center;">やほ</td>
<td style="text-align: center;">8000</td>
<td style="text-align: center;">やち</td>
<td style="text-align: center;">80000</td>
<td style="text-align: center;">やよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">9</td>
<td style="text-align: center;">ここの</td>
<td style="text-align: center;">90</td>
<td style="text-align: center;">ここのそ</td>
<td style="text-align: center;">900</td>
<td style="text-align: center;">ここのほ</td>
<td style="text-align: center;">9000</td>
<td style="text-align: center;">ここのち</td>
<td style="text-align: center;">90000</td>
<td style="text-align: center;">ここのよろづ</td>
</tr>
</tbody>
</table>
<p>下面介绍助数词，这是因为非整十数并不能单独使用，必须辅以助数词表现。助数词包括「つ、ち、ぢ」，其中「つ」用于个位，「ち」用于二十位，「ぢ」用于三十及以上的十位。另外，一十位应当使用「とを」。</p>
<p>添加助数词后上述表格应当表现为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
<th style="text-align: center;">数字</th>
<th style="text-align: center;">表现</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1</td>
<td style="text-align: center;">ひと<strong>つ</strong></td>
<td style="text-align: center;">10</td>
<td style="text-align: center;"><strong>とを</strong></td>
<td style="text-align: center;">100</td>
<td style="text-align: center;"><strong>もも</strong></td>
<td style="text-align: center;">1000</td>
<td style="text-align: center;"><strong>ち</strong></td>
<td style="text-align: center;">10000</td>
<td style="text-align: center;"><strong>よろづ</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;">2</td>
<td style="text-align: center;">ふた<strong>つ</strong></td>
<td style="text-align: center;">20</td>
<td style="text-align: center;"><strong>はたち</strong></td>
<td style="text-align: center;">200</td>
<td style="text-align: center;">ふたほ</td>
<td style="text-align: center;">2000</td>
<td style="text-align: center;">ふたち</td>
<td style="text-align: center;">20000</td>
<td style="text-align: center;">ふたよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">3</td>
<td style="text-align: center;">み<strong>つ</strong></td>
<td style="text-align: center;">30</td>
<td style="text-align: center;">みそ<strong>ぢ</strong></td>
<td style="text-align: center;">300</td>
<td style="text-align: center;">みほ</td>
<td style="text-align: center;">3000</td>
<td style="text-align: center;">みち</td>
<td style="text-align: center;">30000</td>
<td style="text-align: center;">みよろづ</td>
</tr>
<tr class="even">
<td style="text-align: center;">4</td>
<td style="text-align: center;">よ<strong>つ</strong></td>
<td style="text-align: center;">40</td>
<td style="text-align: center;">よそ<strong>ぢ</strong></td>
<td style="text-align: center;">400</td>
<td style="text-align: center;">よほ</td>
<td style="text-align: center;">4000</td>
<td style="text-align: center;">よち</td>
<td style="text-align: center;">40000</td>
<td style="text-align: center;">よよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">5</td>
<td style="text-align: center;">いつ<strong>つ</strong></td>
<td style="text-align: center;">50</td>
<td style="text-align: center;"><strong>いそぢ</strong></td>
<td style="text-align: center;">500</td>
<td style="text-align: center;"><strong>いほ</strong></td>
<td style="text-align: center;">5000</td>
<td style="text-align: center;"><strong>いち</strong></td>
<td style="text-align: center;">50000</td>
<td style="text-align: center;"><strong>いよろづ</strong></td>
</tr>
<tr class="even">
<td style="text-align: center;">6</td>
<td style="text-align: center;">む<strong>つ</strong></td>
<td style="text-align: center;">60</td>
<td style="text-align: center;">むそ<strong>ぢ</strong></td>
<td style="text-align: center;">600</td>
<td style="text-align: center;">むほ</td>
<td style="text-align: center;">6000</td>
<td style="text-align: center;">むち</td>
<td style="text-align: center;">60000</td>
<td style="text-align: center;">むよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">7</td>
<td style="text-align: center;">なな<strong>つ</strong></td>
<td style="text-align: center;">70</td>
<td style="text-align: center;">ななそ<strong>ぢ</strong></td>
<td style="text-align: center;">700</td>
<td style="text-align: center;">ななほ</td>
<td style="text-align: center;">7000</td>
<td style="text-align: center;">ななち</td>
<td style="text-align: center;">70000</td>
<td style="text-align: center;">ななよろづ</td>
</tr>
<tr class="even">
<td style="text-align: center;">8</td>
<td style="text-align: center;">や<strong>つ</strong></td>
<td style="text-align: center;">80</td>
<td style="text-align: center;">やそ<strong>ぢ</strong></td>
<td style="text-align: center;">800</td>
<td style="text-align: center;">やほ</td>
<td style="text-align: center;">8000</td>
<td style="text-align: center;">やち</td>
<td style="text-align: center;">80000</td>
<td style="text-align: center;">やよろづ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">9</td>
<td style="text-align: center;">ここの<strong>つ</strong></td>
<td style="text-align: center;">90</td>
<td style="text-align: center;">ここのそ<strong>ぢ</strong></td>
<td style="text-align: center;">900</td>
<td style="text-align: center;">ここのほ</td>
<td style="text-align: center;">9000</td>
<td style="text-align: center;">ここのち</td>
<td style="text-align: center;">90000</td>
<td style="text-align: center;">ここのよろづ</td>
</tr>
</tbody>
</table>
<p>非整十数则主要通过虚词「あまり」连接，部分百以下数字的例子如下：</p>
<ul>
<li>とを・あまり・ひとつ (11)</li>
<li>はたち・あまり・いつつ (25)</li>
<li>いそぢ・あまり・ここのつ (59)</li>
</ul>
<p>更大规模的非整十数，如 4356 等的表达目前未找到合适的语料支撑，故这里不介绍其表达。</p>
<p>直接添加助数词得到的词语可以用于计数或者表达岁数。</p>
<p>另外，在利用数词接续量词的时候，各个数位都需要接续量词。如表示年数的「とせ」，如果需要表达“二十五年”，应当表达为：</p>
<ul>
<li>はた<strong>とせ</strong>・あまり・いつ<strong>とせ</strong></li>
</ul>
<p>目前这一套数量词体系中十以上的部分已经几乎完全丧失。其中部分整十数固定为若干熟字训，而非整十数几乎完全不使用。另外，这里需要注意的是，数量“五十”在接续量词的时候，一般会约音为「い」。下面给出部分现代日语中留存的整十数熟字训（使用现代假名遣）：</p>
<ul>
<li><code>@ 五十鈴 いすず</code>、<code>@ 八百屋 やおや</code>、<code>@ 八百万 やおよろず</code>の<code>@ 神 かみ</code>、<code>@ 八千代 やちよ</code>、<code>@ 四十路 よそじ</code>、<code>@ 千五百秋 ちいおあき</code></li>
</ul>
<p>而这一套数词的十以下的部分中，依然常用的仅剩下数量“一”以及“二”，即目前对于一般的训读量词，训读的“一”“二”依然常用。而三及以上的数词已经几乎仅使用在「つ、日」等极为特殊的量词中（这两个量词即使站在古日语数词体系下，也依然不规则，其演化到现代日语过程中发生的音便依然是极为特殊而不能用几条规则就能概括的）。其余状况下，古日语数词体系已经几乎完全让位于从中国引入的音读数词体系。</p>
<p>当然正如先前提到的，由于避讳等的问题，“四”与“七”的训读也依然常用。</p>
<p>这里另外需要提到的量词为「人」，其在古日语中训读为「たり」，十及以下的人数在古日语数量词体系中分别为（其中数量“一”以及“二”发生约音）：</p>
<ul>
<li>ひとり、ふたり、みたり、よたり、いつたり、むたり、ななたり、やたり、ここのたり、とたり</li>
</ul>
<p>目前现代标准日语仅保留了数量“一”以及“二”的训读表达，更大的数字则完全替代为音读量词。事实上，在部分方言中依然保留有训读的“三人”“四人”等：</p>
<ul>
<li><code>@ 三人 みったり</code>、<code>@ 四人 よったり</code></li>
</ul>
<p>当然，现在这一套数词依然还有消退的趋势。如「ひとり、ふたり」等词语，现在在「一人前、二人組」等词语中读为「いちにん、ににん」之类的现象也逐步出现。</p>
</div>
<h2 id="如何使用日语汉字词典">如何使用日语汉字词典</h2>
<p>现在我们已经掌握了训读的若干种形态，了解了音读汉字的连读规则，知道了还有音训混读词等例外的存在，且基本上掌握了日语初学者的第一道门槛，日语数量词。那么，现在我们来解决实际问题，即在我们实际阅读日文文本的时候，遇到并不会读的汉字的时候，应当如何查找字典。</p>
<p>这里推荐使用 <a href="https://kanjitisiki.com/">在线日语汉字词典</a>，其对汉字的介绍相对较为全面，且支持多种查询汉字的方式。</p>
<p>这里举出一例，这是「親」字在该网站上的读音查询结果：</p>
<p><code>Picture TODO</code></p>
<p>其上用片假名书写音读读音，用平假名书写训读读音，训读读音中加粗或者标红表示词干而剩余部分为送假名，且基本上训读读音中名词的读音在前，动词、形容词等读音在后。</p>
<p>那我们在实际阅读日文文本的时候，首先需要区分训读和音读汉字，如果遇到并不认识的，则可以直接到在线词典上查找相关读音，如果还是不能确定读音，则可以使用更为专业的词典，按词语为单位查找。</p>
<h2 id="chapter-1-section-3-练习">Chapter 1 Section 3 练习</h2>
<p>【第一问】尝试为下述句子中的汉字注音。可能使用到的汉字读音表均已附在后面。下述句子已经给出其汉语翻译。这里由于涉及到送假名的变形，所以在后续将句子中的活用形和原形的对应标出：</p>
<ul>
<li>虚ろ目の午前四時、迷って辿り着いたそこはハッピー？（眼神空虚的凌晨四点，迷惘着终于抵达的就是所谓的快乐？）</li>
</ul>
<p>活用形和原形的对应：</p>
<ul>
<li>迷っ → 迷う</li>
<li>辿り → 辿る</li>
<li>着い → 着く</li>
</ul>
<p>可能用到的汉字读音表：</p>
<ul>
<li>虚：キョ・コ・うろ・うつ‐ろ・うつ‐ける・むな‐しい</li>
<li>目：モク・ボク・め・ま・まなこ・かなめ・さかん</li>
<li>午：ゴ・うま・ひる</li>
<li>前：ゼン・セン・まえ・さき</li>
<li>迷：メイ・まよ‐う・まど‐う</li>
<li>辿：テン・たど‐る</li>
<li>着：チャク・ジャク・き‐る・き‐せる・つ‐く・つ‐ける</li>
</ul>
<h1 id="练习参考答案">练习参考答案</h1>
<h2 id="chapter-1-section-1-练习答案">Chapter 1 Section 1 练习答案</h2>
<p>【第一问】参考罗马字表记为：</p>
<ul>
<li>yoroshiku onegai shimasu.</li>
<li>orewa kyoudaisanninga imasu.</li>
<li>hayaku yougisyano jyouhouo shirabete kudasai.</li>
<li>[cake]o tsukurisugitanode, koreo motte obaasanni itte agete.</li>
</ul>
<p>【第二问】参考平假名表记为：</p>
<ul>
<li>やってみなければなんでもしらないからやってみよう。</li>
<li>てんきよほうによって、あしたはあめがふりそうにはない。</li>
<li>はじまりがあれば、いつかおわりがきっとくるから。</li>
<li>たいへんにもうしわけありませんでした。</li>
</ul>
<p>上述句子使用汉字的写法为：</p>
<ul>
<li>やってみなければなんでも<code>@ 知 し</code>らないからやってみよう。</li>
<li><code>@ 天気予報 てんきよほう</code>によって、<code>@ 明日 あした</code>は<code>@ 雨 あめ</code>が<code>@ 降 ふ</code>りそうにはない。</li>
<li><code>@ 始 はじ</code>まりがあれば、いつか<code>@ 終 お</code>わりがきっと<code>@ 来 く</code>るから。</li>
<li><code>@ 大変 たいへん</code>に<code>@ 申 もう</code>し<code>@ 訳 わけ</code>ありませんでした。</li>
</ul>
<h2 id="chapter-1-section-2-练习答案">Chapter 1 Section 2 练习答案</h2>
<p>【第一问】</p>
<p>第一句话中的假借汉字为「<code>@ 誤魔化 ごまか</code>」。该假借字仅考虑了汉字的读音。</p>
<p>第二句话中的假借汉字为「<code>@ 当 あ</code>たり<code>@ 前 まえ</code>」。这里可能需要读者了解「<code>@ 当 あ</code>たり<code>@ 前 まえ</code>」整体是一个词。该假借字借用了两个训读汉字「<code>@ 当 あ</code>」和「<code>@ 前 まえ</code>」。「<code>@ 当 あ</code>」的含义为“命中、合适”，「<code>@ 前 まえ</code>」的含义为“前方、之前”。</p>
<p>【第二问】</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">假借字</th>
<th style="text-align: center;">音读汉字</th>
<th style="text-align: center;">训读汉字</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">第一句</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;"><code>@ 七時 しちじ</code>、<code>@ 会社 かいしゃ</code></td>
<td style="text-align: center;"><code>@ 明日 あした</code>、<code>@ 受付 うけつけ</code>、<code>@ 会 あ</code></td>
</tr>
<tr class="even">
<td style="text-align: center;">第二句</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;"><code>@ 一寸 いっすん</code>、<code>@ 光陰 こういん</code></td>
<td style="text-align: center;"><code>@ 軽 かろ</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;">第三句</td>
<td style="text-align: center;"><code>@ 素晴 すば</code></td>
<td style="text-align: center;"><code>@ 世界 せかい</code>、<code>@ 祝福 しゅくふく</code></td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">第四句</td>
<td style="text-align: center;">*<code>@ 出来 でき</code></td>
<td style="text-align: center;">―</td>
<td style="text-align: center;"><code>@ 橋 はし</code>、<code>@ 石 いし</code></td>
</tr>
</tbody>
</table>
<p>这里容易混淆的是「<code>@ 受付 うけつけ</code>」实际上是一般的训读汉字，而非假借字。其为动词「<code>@ 受 う</code>ける」和动词「<code>@ 付 つ</code>ける」构成的复合动词「<code>@ 受 う</code>け<code>@ 付 つ</code>ける」的名词形式。「<code>@ 受 う</code>ける」的含义为“承接、承蒙”。</p>
<p>此外，「<code>@ 出来 でき</code>」回答假借字和训读汉字均可。「<code>@ 出来 でき</code>る」的词源为古日语下二段动词「<code>@ 出 い</code>づ」的连用形「<code>@ 出 い</code>で」与古日语カ变动词「<code>@ 来 く</code>」构成的合成词「<code>@ 出来 いでく</code>」，之后首先发生「い」音脱落变为「<code>@ 出来 でく</code>」，随后由于二段动词和变格活用动词开始附着「る」词尾，该词语进一步演化为「<code>@ 出来 でく</code>る」，最后发生元音转变，中间「く」音转化为「き」音从而形成了现代动词「<code>@ 出来 でき</code>る」。</p>
<p>从词源的角度，该词语也可以认为是训读汉字经过演化而生成的词语。但是由于原先汉字的读音已经脱落，目前使用的汉字读音实际上是原先动词送假名的读音，故也可以认为该词语使用了假借字表记。</p>
<h2 id="chapter-1-section-3-练习答案">Chapter 1 Section 3 练习答案</h2>
<p>【第一问】注音如下：</p>
<ul>
<li><code>@ 虚 うつ</code>ろ<code>@ 目 め</code>の<code>@ 午前四時 ごぜんよじ</code>、<code>@ 迷 まよ</code>って<code>@ 辿 たど</code>り<code>@ 着 つ</code>いたそこはハッピー？</li>
</ul>
<p>首先区分音训读，一般而言动词、形容词等的单字词干、有送假名词尾的多为训读汉字，而构词法类似汉语的、没有送假名词尾的词语多为音读汉字。基本上基于此就可以区分大部分音读训读汉字。</p>
<p>之后根据给出的读音表逐个根据送假名词尾确定读音即可。</p>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 2 生词表</title>
    <url>/2022/08/21/ja-tutorial-ch2-vocab/</url>
    <content><![CDATA[<p>本文章为自学手册 Chapter 2 生词表。</p>
<span id="more"></span>
<p>对于动词、形容词、形容动词，方括号括出的为该词语在古日语中的形式与词性，若没有方括号标记，则表明古日语中该词语和现代形式或词性一致。</p>
<p>另外补充说明，由于动词的第一连用形可以用于将动词名词化。如果名词化后形成的名词和原先动词的含义类似，我们就将动词形式纳入生词表，其名词形式作为其衍生。而若含义差别较大，则其动词和名词形式分别纳入生词表。</p>
<p>本章生词表不录入代词、助动词与助词。</p>
<h1 id="动词生词表">动词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 泳 およ</code>ぐ</td>
<td style="text-align: center;">動ガ五[動ガ四]</td>
<td style="text-align: center;">游泳</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 読 よ</code>む</td>
<td style="text-align: center;">動マ五[動マ四]</td>
<td style="text-align: center;">阅读、朗读</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 死 し</code>ぬ</td>
<td style="text-align: center;">動ナ五[動ナ変]</td>
<td style="text-align: center;">死亡</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 歌 うた</code>う[<code>@ 歌 うた</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">唱歌、咏唱</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 起 お</code>きる[<code>@ 起 お</code>く]</td>
<td style="text-align: center;">動カ上一[動カ上二]</td>
<td style="text-align: center;">①发生 <br /> ②站起、起床</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 捨 す</code>てる[<code>@ 捨 す</code>つ]</td>
<td style="text-align: center;">動タ下一[動タ下二]</td>
<td style="text-align: center;">舍弃、丢弃</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 教 おし</code>える[<code>@ 教 をし</code>ふ]</td>
<td style="text-align: center;">動ア下一[動ハ下二]</td>
<td style="text-align: center;">①教导、指导 <br /> ②告诉、告知</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 勉強 べんきょう</code>する[<code>@ 勉強 べんきょう</code>す]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">学习</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 感 かん</code>ずる[<code>@ 感 かん</code>ず]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">感受</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 上 あ</code>がる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">①上、登 <br /> ②升起、飞扬 <br /> ③提高、长进</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 売 う</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">卖出</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 残 のこ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">留下、剩余、遗留</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 滑 すべ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">滑、滑冰、滑倒</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 入 はい</code>る[<code>@ 入 はひ</code>る]</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">进入</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 許 ゆる</code>す</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">允许、原谅</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 駆 か</code>ける[<code>@ 駆 か</code>く]</td>
<td style="text-align: center;">動カ下一[動カ下二]</td>
<td style="text-align: center;">快速奔跑</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 導 みちび</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">引导、指引</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 塞 ふさ</code>ぐ</td>
<td style="text-align: center;">動ガ五[動ガ四]</td>
<td style="text-align: center;">阻塞</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 決 けっ</code>する[<code>@ 決 けっ</code>す]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">决定、判决</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 出 で</code>る[<code>@ 出 い</code>づ]</td>
<td style="text-align: center;">動ダ下一[動ダ下二]</td>
<td style="text-align: center;">出来、出现</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 積 つ</code>もる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">积累</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 狂 くる</code>う[<code>@ 狂 くる</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">发狂、疯狂、发疯</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 注 そそ</code>ぐ</td>
<td style="text-align: center;">動ガ五[動ガ四]</td>
<td style="text-align: center;">倾注、灌入、流</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 回 まわ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">旋转、转动</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 結 むす</code>ぶ</td>
<td style="text-align: center;">動バ五[動バ四]</td>
<td style="text-align: center;">结合、连结</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 彷徨 さまよ</code>う[<code>@ 彷徨 さまよ</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">彷徨</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 染 そ</code>める[<code>@ 染 そ</code>む]</td>
<td style="text-align: center;">動マ下一[動マ下二]</td>
<td style="text-align: center;">染颜色、涂上颜色</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 逃 のが</code>れる[<code>@ 逃 のが</code>る]</td>
<td style="text-align: center;">動ラ下一[動ラ下二]</td>
<td style="text-align: center;">逃跑、逃出</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 喋 しゃべ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">说、讲、说出</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 高 たか</code>める[<code>@ 高 たか</code>む]</td>
<td style="text-align: center;">動マ下一[動マ下二]</td>
<td style="text-align: center;">提高、抬高、加高</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 拭 ぬぐ</code>う[<code>@ 拭 ぬぐ</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">擦拭</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 信 しん</code>ずる[<code>@ 信 しん</code>ず]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">相信</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 高 たか</code>まる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">高涨、增高</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 踏 ふ</code>む</td>
<td style="text-align: center;">動マ五[動マ四]</td>
<td style="text-align: center;">踩踏、实践、体验</td>
</tr>
<tr class="odd">
<td style="text-align: center;">なさる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">（尊敬语）做、干</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 放 はな</code>つ</td>
<td style="text-align: center;">動タ五[動タ四]</td>
<td style="text-align: center;">放出、释放、发射</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 放 ほう</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">抛出、扔出、弃置不管、丢弃</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 食 た</code>べる[<code>@ 食 た</code>ぶ]</td>
<td style="text-align: center;">動バ下一[動バ下二]</td>
<td style="text-align: center;">吃、食用</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 付 つ</code>き<code>@ 合 あ</code>う[<code>@ 付 つ</code>き<code>@ 合 あ</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">交往</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 問 と</code>う[<code>@ 問 と</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">询问</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 乞 こ</code>う[<code>@ 乞 こ</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">乞求</td>
</tr>
<tr class="even">
<td style="text-align: center;">いらっしゃる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">（「行く、来る、いる、ある」等的尊敬语）</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 仰 おっしゃ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">（尊他语）说、讲、称</td>
</tr>
<tr class="even">
<td style="text-align: center;">ござる</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">（「行く、来る、いる、ある」等的尊敬语）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">くれる[くる]</td>
<td style="text-align: center;">動ラ下一[動ラ下二]</td>
<td style="text-align: center;">①（给我方）送、给 <br /> ②（作补助动词）为我方做</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 愛 あい</code>する[<code>@ 愛 あい</code>す]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">爱、心爱</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 登 のぼ</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">攀登、登上</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 増 ふ</code>える[<code>@ 増 ふ</code>ゆ]</td>
<td style="text-align: center;">動ア下一[動ヤ下二]</td>
<td style="text-align: center;">增加、增多</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 歩 ある</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">行走、步行</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 学 まな</code>ぶ</td>
<td style="text-align: center;">動バ五[動バ四]</td>
<td style="text-align: center;">学习</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 負 ま</code>ける[<code>@ 負 ま</code>く]</td>
<td style="text-align: center;">動カ下一[動カ下二]</td>
<td style="text-align: center;">战败</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 勝 か</code>つ</td>
<td style="text-align: center;">動タ五[動タ四]</td>
<td style="text-align: center;">胜利</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 買 か</code>う[<code>@ 買 か</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">买入</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 痛 いた</code>む</td>
<td style="text-align: center;">動マ五[動マ四]</td>
<td style="text-align: center;">疼痛</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 掃除 そうじ</code>する[<code>@ 掃除 そうじ</code>す]</td>
<td style="text-align: center;">動サ変[動サ変]</td>
<td style="text-align: center;">扫除</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 咲 さ</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">（花）开</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 増 ま</code>す</td>
<td style="text-align: center;">動サ五[動サ四]</td>
<td style="text-align: center;">增多、增大</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 呼 よ</code>ぶ</td>
<td style="text-align: center;">動バ五[動バ四]</td>
<td style="text-align: center;">称呼、呼喊</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 言 い</code>う[<code>@ 言 い</code>ふ]</td>
<td style="text-align: center;">動ワ五[動ハ四]</td>
<td style="text-align: center;">说话</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 入 い</code>る</td>
<td style="text-align: center;">動ラ五[動ラ四]</td>
<td style="text-align: center;">进入、浸入、没入</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 植 う</code>える[<code>@ 植 う</code>う]</td>
<td style="text-align: center;">動ア下一[動ワ下二]</td>
<td style="text-align: center;">栽植、栽种</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 打 う</code>つ</td>
<td style="text-align: center;">動タ五[動タ四]</td>
<td style="text-align: center;">打击、标上记号</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 選 えら</code>ぶ</td>
<td style="text-align: center;">動バ五[動バ四]</td>
<td style="text-align: center;">选择</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 着 き</code>る</td>
<td style="text-align: center;">動カ上一[動カ上一]</td>
<td style="text-align: center;">穿、承担</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 巻 ま</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">卷、缠绕、拧、包围</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 置 お</code>く</td>
<td style="text-align: center;">動カ五[動カ四]</td>
<td style="text-align: center;">①放置、设置 <br /> ②（作补助动词）保持某种状态 <br /> ③（作补助动词）提前做某事</td>
</tr>
</tbody>
</table>
<h1 id="形容词生词表">形容词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 優 やさ</code>しい[<code>@ 優 やさ</code>し]</td>
<td style="text-align: center;">形[形シク]</td>
<td style="text-align: center;">温柔的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 高 たか</code>い[<code>@ 高 たか</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">高的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 良 い</code>い[<code>@ 良 よ</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">好的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 暑 あつ</code>い[<code>@ 暑 あつ</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">（天气）炎热的、温度高的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 嬉 うれ</code>しい[<code>@ 嬉 うれ</code>し]</td>
<td style="text-align: center;">形[形シク]</td>
<td style="text-align: center;">高兴的、喜悦的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 黄色 きいろ</code>い</td>
<td style="text-align: center;">形</td>
<td style="text-align: center;">黄色的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 悪 わる</code>い[<code>@ 悪 わる</code>し]</td>
<td style="text-align: center;">形[形ク]</td>
<td style="text-align: center;">坏的</td>
</tr>
</tbody>
</table>
<h1 id="形容动词生词表">形容动词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 同 おな</code>じだ[<code>@ 同 おな</code>じ]</td>
<td style="text-align: center;">形動[形シク]</td>
<td style="text-align: center;">相同的</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 大 おお</code>きな[<code>@ 大 おほ</code>きなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">大的、巨大的</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>@ 小 ちい</code>さな[<code>@ 小 ちひ</code>さなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">小的、微小的</td>
</tr>
<tr class="even">
<td style="text-align: center;">おかしな[をかしなり]</td>
<td style="text-align: center;">形動[形動ナリ]</td>
<td style="text-align: center;">奇怪的、可笑的</td>
</tr>
</tbody>
</table>
<h1 id="副词生词表">副词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 燦然 さんぜん</code>と[<code>@ 燦然 さんぜん</code>たり]</td>
<td style="text-align: center;">副[形動タリ]</td>
<td style="text-align: center;">璀璨地</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 段々 だんだん</code>と[<code>@ 段々 だんだん</code>たり]</td>
<td style="text-align: center;">副[形動タリ]</td>
<td style="text-align: center;">渐渐地</td>
</tr>
</tbody>
</table>
<h1 id="名词数词生词表">名词、数词生词表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">词性</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>@ 朝 あさ</code>ご<code>@ 飯 はん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">早饭</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>@ 日本 にほん</code></td>
<td style="text-align: center;">名</td>
<td style="text-align: center;">日本</td>
</tr>
</tbody>
</table>
<h1 id="常用交际语表">常用交际语表</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">汉语释义</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ありがとうございます。</td>
<td style="text-align: center;">谢谢。</td>
</tr>
<tr class="even">
<td style="text-align: center;">おめでとうございます。</td>
<td style="text-align: center;">恭喜。</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 2.5 古日语基本语法</title>
    <url>/2022/08/21/ja-tutorial-ch2.5/</url>
    <content><![CDATA[<p>本章主要介绍古代日语的基本语法，并据此分析现代日语中的古日语语法残余。</p>
<span id="more"></span>
<div class="note warning no-icon"><p>初学日语的读者可以暂且不用学习该部分，这一部分知识在大多数日语场景下均没有实际使用可能。本部分仅用于拓展性质学习。</p>
</div>
<h1 id="历史假名遣">历史假名遣</h1>
<p>历史假名遣指的是在现代日语推行假名表音化（即假名严格和发音一一对应）之前所使用的假名表记法。相较于现代假名遣的五十音图，历史假名遣的五十音图的や行和わ行有所不同，其不同之处标注在下表：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">あ段</th>
<th style="text-align: center;">い段</th>
<th style="text-align: center;">う段</th>
<th style="text-align: center;">え段</th>
<th style="text-align: center;">お段</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">や行「現代仮名遣い」</td>
<td style="text-align: center;">や ヤ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">ゆ ユ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">よ ヨ</td>
</tr>
<tr class="even">
<td style="text-align: center;">や行「歴史仮名遣い」</td>
<td style="text-align: center;">や ヤ</td>
<td style="text-align: center;"><strong>い イ</strong></td>
<td style="text-align: center;">ゆ ユ</td>
<td style="text-align: center;"><strong>え エ</strong></td>
<td style="text-align: center;">よ ヨ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">わ行「現代仮名遣い」</td>
<td style="text-align: center;">わ ワ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">を ヲ</td>
</tr>
<tr class="even">
<td style="text-align: center;">わ行「歴史仮名遣い」</td>
<td style="text-align: center;">わ ワ</td>
<td style="text-align: center;"><strong>ゐ ヰ</strong></td>
<td style="text-align: center;"><strong>う ウ</strong></td>
<td style="text-align: center;"><strong>ゑ ヱ</strong></td>
<td style="text-align: center;">を ヲ</td>
</tr>
</tbody>
</table>
<p>由于历史假名遣并不一定满足假名和读音一一严格对应，所以仅使用五十音图是不能完全确定使用历史假名遣书写的文句的。但实际上，历史假名遣中需要注意的读音规则基本上仅有下述条目：</p>
<ul>
<li><p>は行假名不在词头的时候，发音应当为「ワ・イ・ウ・エ・オ」。这是因为著名的语音流变ハ行转呼，其基本含义为不在词头的は行假名在语音流变过程中辅音丢失（あ段则是辅音转变），而书写表记并未随着语音流变更改。例如写作「いはひ」实则读作「イワイ」，写作「いへ」实则读作「イエ」，但写作「はな」依然读作「ハナ」。</p></li>
<li><p>元音重叠组合「あう・いう・えう・おう」的发音应当为「オー・ユー・ヨー・オー」。例如写作「あうむ」实则读作「オーム」，写作「いうなり」实则读作「ユーナリ」，写作「えうじ」实则读作「ヨージ」，写作「おうな」实则读作「オーナ」。</p></li>
<li><p>上述两个规则可以联合使用。如写作「てふ」，首先根据第一条规则得到ハ行转呼后其发音为「てう」，再根据第二条元音重叠规则即可得到其实际的发音为「テヨー」，而这个音在现代的表记法中应当使用拗音标记，即「チョー」。同理，写作「けふ」实则读作「キョー」。</p></li>
<li><p>「ゐ・ゑ・を」的发音分别为「イ・エ・オ」。这也是ハ行转呼中这三个假名丢失辅音的结果。例如写作「ゐる」实则读作「イル」，写作「こゑ」实则读作「コエ」，写作「をる」实则读作「オル」。</p></li>
<li><p>「ぢ・づ」的发音分别为「ジ・ズ」。</p></li>
<li><p>部分「む」的发音为「ン」，包括不在词头的「む」、助动词「む、らむ」以及助词「なむ」中的「む」。例如写作「ひむがし」实则读作「ヒンガシ」，写作「いくらむ」实则读作「イクラン」。</p></li>
</ul>
<h1 id="古日语活用形式与助动词">古日语活用形式与助动词</h1>
<p>相较于现代日语的七种活用形式，古日语仅有六种活用形式，缺失的活用形式为意志形。另外，现代日语中的假定形在古日语中称为已然形。</p>
<p>此外，古日语中常见的助动词与其和用言的接续要求均已经列在下表：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">助動詞</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">る、らる、す、さす、しむ、ず、む、むず、じ、まし、まほし、り</td>
</tr>
<tr class="even">
<td style="text-align: center;">連用形</td>
<td style="text-align: center;">き、けり、つ、ぬ、たり①、けむ、たし</td>
</tr>
<tr class="odd">
<td style="text-align: center;">終止形</td>
<td style="text-align: center;">らむ、らし、めり、べし、まじ、なり①</td>
</tr>
<tr class="even">
<td style="text-align: center;">連体形</td>
<td style="text-align: center;">なり②、たり②、ごとし</td>
</tr>
<tr class="odd">
<td style="text-align: center;">已然形</td>
<td style="text-align: center;">り</td>
</tr>
<tr class="even">
<td style="text-align: center;">命令形</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>需要注意的是，正常应当接续在用言终止形之后的助动词「らむ、らし、めり、べし、まじ、なり①」应用在在ラ变形（ラ变动词以及遵守ラ变动词变化规则的用言与助动词）之后时，ラ变形应当使用连体形。ラ变形、ラ变动词等概念后续具体阐释。</p>
<p>另外，助动词「り」应用在四段动词之后时，四段动词应当使用已然形。应用在サ变动词之后时，サ变动词应当使用未然形。四段动词、サ变动词等概念后续具体阐释。</p>
<p>常用助词则后续进行补充。</p>
<h1 id="古日语的动词分类与活用">古日语的动词分类与活用</h1>
<p>古日语的动词分为五个正格类型和四个变格类型。</p>
<ul>
<li><strong>四段动词</strong>。古语的四段动词基本上演化成为了现代的五段动词，新增加的一段即现代语之中的意志形。四段动词合法的词尾包括「く、ぐ、ふ、つ、る、ぶ、む、す」。这里与现代语相比缺失「ぬ」，这是因为古语中「死ぬ」并非四段动词。</li>
<li><strong>上一段动词</strong>。古语的上一段动词基本上演化成为了现代的上一段动词。</li>
<li><strong>下一段动词</strong>。这类动词包括「蹴る」，该动词演化为现代的五段动词。</li>
<li><strong>上二段动词</strong>。古语的上二段动词基本上通过将词尾固化为イ段后添加新词尾「る」的方式演化成为了现代的上一段动词。</li>
<li><strong>下二段动词</strong>。古语的下二段动词基本上通过将词尾固化为エ段后添加新词尾「る」的方式演化成为了现代的下一段动词。</li>
<li><strong>ラ变动词</strong>。这类动词包括「あり、をり、はべり、いまそかり」，其中「あり」演化为现代的五段动词，而「をり、はべり、いまそかり」被废弃不使用。</li>
<li><strong>ナ变动词</strong>。这类动词包括「死ぬ、往ぬ」，其中「死ぬ」演化为现代的五段动词，而「往ぬ」被废弃不使用。</li>
<li><strong>カ变动词</strong>。这类动词包括「く」，该动词演化为现代的カ变动词。</li>
<li><strong>サ变动词</strong>。这类动词包括「す、おはす」，其中「す」演化为现代的サ变动词，而「おはす」被废弃不使用。</li>
</ul>
<p>这些动词的六种活用形式如下所示：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">四段動詞「か行」</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書か</td>
<td style="text-align: center;">書き</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書け</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「が行」</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳が</td>
<td style="text-align: center;">泳ぎ</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳げ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「ば行」</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛ば</td>
<td style="text-align: center;">飛び</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛べ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「ま行」</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読ま</td>
<td style="text-align: center;">読み</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読め</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「は行」</td>
<td style="text-align: center;">歌ふ</td>
<td style="text-align: center;">歌は</td>
<td style="text-align: center;">歌ひ</td>
<td style="text-align: center;">歌ふ</td>
<td style="text-align: center;">歌へ</td>
<td style="text-align: center;">歌へ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「た行」</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立た</td>
<td style="text-align: center;">立ち</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立て</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「ら行」</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降ら</td>
<td style="text-align: center;">降り</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降れ</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「さ行」</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話さ</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話せ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「か行」</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;">きよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「な行」</td>
<td style="text-align: center;">似る</td>
<td style="text-align: center;">に</td>
<td style="text-align: center;">に</td>
<td style="text-align: center;">にる</td>
<td style="text-align: center;">にれ</td>
<td style="text-align: center;">によ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「は行」</td>
<td style="text-align: center;">干る</td>
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">ひ</td>
<td style="text-align: center;">ひる</td>
<td style="text-align: center;">ひれ</td>
<td style="text-align: center;">ひよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「ま行」</td>
<td style="text-align: center;">見る</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">み</td>
<td style="text-align: center;">みる</td>
<td style="text-align: center;">みれ</td>
<td style="text-align: center;">みよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上一段動詞「や行」</td>
<td style="text-align: center;">射る</td>
<td style="text-align: center;">い</td>
<td style="text-align: center;">い</td>
<td style="text-align: center;">いる</td>
<td style="text-align: center;">いれ</td>
<td style="text-align: center;">いよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞「わ行」</td>
<td style="text-align: center;">居る</td>
<td style="text-align: center;">ゐ</td>
<td style="text-align: center;">ゐ</td>
<td style="text-align: center;">ゐる</td>
<td style="text-align: center;">ゐれ</td>
<td style="text-align: center;">ゐよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下一段動詞</td>
<td style="text-align: center;">蹴る</td>
<td style="text-align: center;">け</td>
<td style="text-align: center;">け</td>
<td style="text-align: center;">ける</td>
<td style="text-align: center;">けれ</td>
<td style="text-align: center;">けよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「か行」</td>
<td style="text-align: center;">生く</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生き</td>
<td style="text-align: center;">生くる</td>
<td style="text-align: center;">生くれ</td>
<td style="text-align: center;">生きよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「が行」</td>
<td style="text-align: center;">過ぐ</td>
<td style="text-align: center;">過ぎ</td>
<td style="text-align: center;">過ぎ</td>
<td style="text-align: center;">過ぐる</td>
<td style="text-align: center;">過ぐれ</td>
<td style="text-align: center;">過ぎよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「た行」</td>
<td style="text-align: center;">落つ</td>
<td style="text-align: center;">落ち</td>
<td style="text-align: center;">落ち</td>
<td style="text-align: center;">落つる</td>
<td style="text-align: center;">落つれ</td>
<td style="text-align: center;">落ちよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「だ行」</td>
<td style="text-align: center;">閉づ</td>
<td style="text-align: center;">閉ぢ</td>
<td style="text-align: center;">閉ぢ</td>
<td style="text-align: center;">閉づる</td>
<td style="text-align: center;">閉づれ</td>
<td style="text-align: center;">閉ぢよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「は行」</td>
<td style="text-align: center;">恋ふ</td>
<td style="text-align: center;">恋ひ</td>
<td style="text-align: center;">恋ひ</td>
<td style="text-align: center;">恋ふる</td>
<td style="text-align: center;">恋ふれ</td>
<td style="text-align: center;">恋ひよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「ば行」</td>
<td style="text-align: center;">詫ぶ</td>
<td style="text-align: center;">詫び</td>
<td style="text-align: center;">詫び</td>
<td style="text-align: center;">詫ぶる</td>
<td style="text-align: center;">詫ぶれ</td>
<td style="text-align: center;">詫びよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「ま行」</td>
<td style="text-align: center;">恨む</td>
<td style="text-align: center;">恨み</td>
<td style="text-align: center;">恨み</td>
<td style="text-align: center;">恨むる</td>
<td style="text-align: center;">恨むれ</td>
<td style="text-align: center;">恨みよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">上二段動詞「や行」</td>
<td style="text-align: center;">老ゆ</td>
<td style="text-align: center;">老い</td>
<td style="text-align: center;">老い</td>
<td style="text-align: center;">老ゆる</td>
<td style="text-align: center;">老ゆれ</td>
<td style="text-align: center;">老いよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上二段動詞「ら行」</td>
<td style="text-align: center;">懲る</td>
<td style="text-align: center;">懲り</td>
<td style="text-align: center;">懲り</td>
<td style="text-align: center;">懲るる</td>
<td style="text-align: center;">懲るれ</td>
<td style="text-align: center;">懲りよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「か行」</td>
<td style="text-align: center;">受く</td>
<td style="text-align: center;">受け</td>
<td style="text-align: center;">受け</td>
<td style="text-align: center;">受くる</td>
<td style="text-align: center;">受くれ</td>
<td style="text-align: center;">受けよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「が行」</td>
<td style="text-align: center;">告ぐ</td>
<td style="text-align: center;">告げ</td>
<td style="text-align: center;">告げ</td>
<td style="text-align: center;">告ぐる</td>
<td style="text-align: center;">告ぐれ</td>
<td style="text-align: center;">告げよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「た行」</td>
<td style="text-align: center;">捨つ</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨つる</td>
<td style="text-align: center;">捨つれ</td>
<td style="text-align: center;">捨てよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「だ行」</td>
<td style="text-align: center;">出づ</td>
<td style="text-align: center;">出で</td>
<td style="text-align: center;">出で</td>
<td style="text-align: center;">出づる</td>
<td style="text-align: center;">出づれ</td>
<td style="text-align: center;">出でよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「は行」</td>
<td style="text-align: center;">答ふ</td>
<td style="text-align: center;">答へ</td>
<td style="text-align: center;">答へ</td>
<td style="text-align: center;">答ふる</td>
<td style="text-align: center;">答ふれ</td>
<td style="text-align: center;">答へよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「ば行」</td>
<td style="text-align: center;">並ぶ</td>
<td style="text-align: center;">並べ</td>
<td style="text-align: center;">並べ</td>
<td style="text-align: center;">並ぶる</td>
<td style="text-align: center;">並ぶれ</td>
<td style="text-align: center;">並べよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「さ行」</td>
<td style="text-align: center;">失す</td>
<td style="text-align: center;">失せ</td>
<td style="text-align: center;">失せ</td>
<td style="text-align: center;">失する</td>
<td style="text-align: center;">失すれ</td>
<td style="text-align: center;">失せよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「ざ行」</td>
<td style="text-align: center;">混ず</td>
<td style="text-align: center;">混ぜ</td>
<td style="text-align: center;">混ぜ</td>
<td style="text-align: center;">混ずる</td>
<td style="text-align: center;">混ずれ</td>
<td style="text-align: center;">混ぜよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「ま行」</td>
<td style="text-align: center;">求む</td>
<td style="text-align: center;">求め</td>
<td style="text-align: center;">求め</td>
<td style="text-align: center;">求むる</td>
<td style="text-align: center;">求むれ</td>
<td style="text-align: center;">求めよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「や行」</td>
<td style="text-align: center;">見ゆ</td>
<td style="text-align: center;">見え</td>
<td style="text-align: center;">見え</td>
<td style="text-align: center;">見ゆる</td>
<td style="text-align: center;">見ゆれ</td>
<td style="text-align: center;">見えよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「ら行」</td>
<td style="text-align: center;">入る</td>
<td style="text-align: center;">入れ</td>
<td style="text-align: center;">入れ</td>
<td style="text-align: center;">入るる</td>
<td style="text-align: center;">入るれ</td>
<td style="text-align: center;">入れよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「わ行」</td>
<td style="text-align: center;">植う</td>
<td style="text-align: center;">植ゑ</td>
<td style="text-align: center;">植ゑ</td>
<td style="text-align: center;">植うる</td>
<td style="text-align: center;">植うれ</td>
<td style="text-align: center;">植ゑよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「あ行単字」</td>
<td style="text-align: center;"><code>@ 得 う</code></td>
<td style="text-align: center;">え</td>
<td style="text-align: center;">え</td>
<td style="text-align: center;">うる</td>
<td style="text-align: center;">うれ</td>
<td style="text-align: center;">えよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">下二段動詞「な行単字」</td>
<td style="text-align: center;"><code>@ 寝 ぬ</code></td>
<td style="text-align: center;">ね</td>
<td style="text-align: center;">ね</td>
<td style="text-align: center;">ぬる</td>
<td style="text-align: center;">ぬれ</td>
<td style="text-align: center;">ねよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下二段動詞「は行単字」</td>
<td style="text-align: center;"><code>@ 経 ふ</code></td>
<td style="text-align: center;">へ</td>
<td style="text-align: center;">へ</td>
<td style="text-align: center;">ふる</td>
<td style="text-align: center;">ふれ</td>
<td style="text-align: center;">へよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">ラ変動詞</td>
<td style="text-align: center;">有り</td>
<td style="text-align: center;">有ら</td>
<td style="text-align: center;">有り</td>
<td style="text-align: center;">有る</td>
<td style="text-align: center;">有れ</td>
<td style="text-align: center;">有れ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ナ変動詞</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死な</td>
<td style="text-align: center;">死に</td>
<td style="text-align: center;">死ぬる</td>
<td style="text-align: center;">死ぬれ</td>
<td style="text-align: center;">死ね</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">す</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">すれ</td>
<td style="text-align: center;">せよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">カ変動詞</td>
<td style="text-align: center;">く</td>
<td style="text-align: center;">こ</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">くれ</td>
<td style="text-align: center;">こ・こよ</td>
</tr>
</tbody>
</table>
<p>和现代语对比，可以基本归纳出下述动词演变规律：</p>
<ul>
<li><p>古语的四段动词几乎完全演化为现代语五段动词，且除了某一行假名标记发生变动（即「ふ」转写为「う」）和增加意志形之外，其余保持规则。当然，该规则存在例外，类似「借る、足る、飽く」等四段动词则演化为了现代的上一段动词「借りる、足りる、飽きる」。</p></li>
<li><p>古语的二段动词在现代语之中的残留痕迹较为明显。特征是除去词干外，有类似「きる、ける」的以イ段或者エ段假名加上「る」结尾的双假名词尾。这里的イ段或者エ段假名是古语残留的词尾，但是已经固化，而「る」则是现代语的词尾。另外，由于古语下一段动词完全合并入现代语五段动词，所以现代的下一段动词几乎全部都是古语下二段动词的演变产物。</p></li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文語</td>
<td style="text-align: center;">捨つ</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨つる</td>
<td style="text-align: center;">捨つれ</td>
<td style="text-align: center;">捨てよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">捨てる</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;">捨て</td>
<td style="text-align: center;"><strong>捨てる</strong></td>
<td style="text-align: center;"><strong>捨てれ</strong></td>
<td style="text-align: center;"><strong>捨てろ・捨てよ</strong></td>
</tr>
</tbody>
</table>
<p>但是在合流过程中，三个单音节的下二段动词「う、ぬ、ふ」演化路径有差别。「ぬ、ふ」类似一般的下二段动词，演化为现代的下一段动词「寝る、経る」。但是「う」则一定程度上保留了下二段动词的痕迹，演化出了两个动词「うる、える」，汉字表记均为「得る」。一般而言，使用较多的是「える」读音，但是「うる」音依然可能会出现，这也就是一种演化残留。</p>
<p>当然，该规则存在例外，类似「恨む」等上二段动词则演化为了现代的五段动词「恨む」。</p>
<ul>
<li>古语的上一段动词几乎完全演化为现代的上一段动词，且几乎没有发生活用规则变动。而古语唯一的下一段动词则直接变为现代的五段动词。</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">文語</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;">きよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">着る</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">きる</td>
<td style="text-align: center;">きれ</td>
<td style="text-align: center;"><strong>きろ・きよ</strong></td>
</tr>
</tbody>
</table>
<p>可以发现现代语中结构简单的上一段动词大部分为古语上一段动词的残余。事实上古语中的上一段动词也极少，大约仅有二十个左右。</p>
<p>当然，该规则存在例外，古语上一段动词「射る」演化为了现代上一段动词「射る」，但是该动词在部分条件下出现了五段动词的活用形式，如「射った」。</p>
<ul>
<li>古语的ラ变动词以及ナ变动词除了部分不常用词语外完全合并进现代语五段动词，而カ变动词以及サ变动词除了部分不常用词语外在现代语中保持变格活用。</li>
</ul>
<h1 id="古日语的形容词分类与活用">古日语的形容词分类与活用</h1>
<p>古语形容词分为两类，即ク活用形容词和シク活用形容词，活用规则见下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ク活用「第一」</td>
<td style="text-align: center;">無し</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無く</td>
<td style="text-align: center;">無き</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">ク活用「第二」</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無から</td>
<td style="text-align: center;">無かり</td>
<td style="text-align: center;">無かる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無かれ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">シク活用「第一」</td>
<td style="text-align: center;">美し</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しく</td>
<td style="text-align: center;">美しき</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">シク活用「第二」</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しから</td>
<td style="text-align: center;">美しかり</td>
<td style="text-align: center;">美しかる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しかれ</td>
</tr>
</tbody>
</table>
<p>这里的第二活用则是一种特殊的使用方法，也就是将形容词连用形「○く」加上「あり」后用「あり」的活用来弥补原先形容词规则中缺失的未然形和命令形。在演变过程中，「○くあり」逐渐连读为「○かり」，从而可以认为这是形容词的一种特殊活用，不将其认为是「あり」的活用。由于形容词第二活用继承自ラ变动词的活用，所以第二活用的形容词是一种ラ变形。</p>
<p>一般而言，第一活用也称为主活用，第二活用也称为辅助活用。第二活用的主要使用场景为接续各类助动词以及利用命令形表达命令，其余场景下形容词多采用第一活用。当然，该规则存在例外，形容词接续打消接续助词「で」的时候使用第二活用，而接续断定助动词「なり」的时候使用第一活用。</p>
<p>古语形容词演变为现代语形容词的时候，两种活用合流，并且黏性词尾从「し」变为「い」。具体演变为，ク活用形容词直接将「し」变为「い」，而シク活用形容词直接加上新词尾「い」。而各种活用中，加「あり」词尾产生的活用逐步消失或进一步演变，而现代语中形容词规则占主流的依然是形容词的第一活用规则。对比表如下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ク活用「第一」</td>
<td style="text-align: center;">無し</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無く</td>
<td style="text-align: center;">無き</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">ク活用「第二」</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無から</td>
<td style="text-align: center;">無かり</td>
<td style="text-align: center;">無かる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">無かれ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">無い</td>
<td style="text-align: center;">無かろ</td>
<td style="text-align: center;">無く・無かっ</td>
<td style="text-align: center;">無い</td>
<td style="text-align: center;">無けれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">シク活用「第一」</td>
<td style="text-align: center;">美し</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しく</td>
<td style="text-align: center;">美しき</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">シク活用「第二」</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しから</td>
<td style="text-align: center;">美しかり</td>
<td style="text-align: center;">美しかる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">美しかれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語</td>
<td style="text-align: center;">美しい</td>
<td style="text-align: center;">美しかろ</td>
<td style="text-align: center;">美しく・美しかっ</td>
<td style="text-align: center;">美しい</td>
<td style="text-align: center;">美しけれ</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>这种演变解释了一个语言现象，即现代语中有大量的「しい」结尾的形容词，这些形容词几乎全部是古语シク活用形容词演变的遗留。另外，现代语的形容词依然保留了部分古语用法，比如以「し」作词尾的形容词依然存留于口语中，比如「なし、よし」等惯用语。</p>
<h1 id="古日语的形容动词分类与活用">古日语的形容动词分类与活用</h1>
<p>古语形容动词分为两类，即ナリ活用形容词和タリ活用形容词，活用规则见下。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ナリ活用</td>
<td style="text-align: center;">静かなり</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">静かなり・静かに</td>
<td style="text-align: center;">静かなる</td>
<td style="text-align: center;">静かなれ</td>
<td style="text-align: center;">静かなれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">タリ活用</td>
<td style="text-align: center;">平然たり</td>
<td style="text-align: center;">平然たら</td>
<td style="text-align: center;">平然たり・平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">平然たれ</td>
<td style="text-align: center;">平然たれ</td>
</tr>
</tbody>
</table>
<p>这里所有的活用和ラ变动词很类似。有一种看法是，形容动词活用本身就是词干连用形接续「あり」后用「あり」的活用表达的。而和形容词第二活用发生连读类似，「○にあり・○とあり」随后连读为「○なり・○たり」，从而形成了形容动词活用规则。基于此，由于形容动词活用继承自ラ变动词的活用，所以形容动词是一种ラ变形。</p>
<p>一般而言，形容动词接续一般动词、接续助词「て、して」的时候使用「○に・○と」连用形，其余场景下使用「○なり・○たり」连用形。</p>
<p>古语形容动词演变为现代语形容词的时候，两种活用并未合流，并且活用词尾发生了较大的变化。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">形容動詞類型</th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ナリ活用</td>
<td style="text-align: center;">静かなり</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">静かなり・静かに</td>
<td style="text-align: center;">静かなる</td>
<td style="text-align: center;">静かなれ</td>
<td style="text-align: center;">静かなれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語ダ活用</td>
<td style="text-align: center;">静かだ</td>
<td style="text-align: center;">静かだろ</td>
<td style="text-align: center;">静かで・静かだっ・静かに</td>
<td style="text-align: center;">静かな</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">タリ活用</td>
<td style="text-align: center;">平然たり</td>
<td style="text-align: center;">平然たら</td>
<td style="text-align: center;">平然たり・平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">平然たれ</td>
<td style="text-align: center;">平然たれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">現代語タルト活用</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">平然と</td>
<td style="text-align: center;">平然たる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>目前来看，形容动词的演变是相当不规则的。</p>
<div class="note info no-icon"><p>目前我正使用的古日语课程之中，是这样介绍ナリ活用形容动词演变的。</p>
<p>首先是「○で」连用形的产生。在使用ナリ活用形容动词修饰的时候常常需要使用连用形接续助词「て」，也就是ナリ活用形容动词常常具有词尾「○にて」。最后「に」音脱落并发生浊化，将助词「て」吸收产生现代语第一连用形「○で」。</p>
<p>室町时代，ナリ活用形容动词已经出现了尾音「る」脱落的现象，即连体形已经逐步以「な」音结尾，并且在部分情况下，终止形也开始使用「な」结尾的形式。另一方面，新产生的连用形「○で」接续动词「ある」产生了新的连体和终止形「○である」，这种形式之后又发生了尾音「る」脱落，演变为「○であ」。而这个形式在关西演化为「○ぢゃ」，在关东演化为「○だ」。此时这些形式均处于混用状态，最后「○だ」使用频率压过其余形式变为现代语的终止形，「○な」则压过其他形式变为现代语的连体形。</p>
<p>上述演化中的连体（终止）形「○ぢゃ」开始用于接续「う、た」两个助词，分别表示意识和过去，这分别是未然形和连用形的作用。也就是说未然形接续「う」开始出现「○ぢゃらう」的形式，连用形接续「た」开始出现「○ぢゃった」的形式。随后「ぢゃら」和「ぢゃっ」音便为「だろ」和「だっ」，形成了现代语的未然形和第二连用形。</p>
<p>现代语假定形「○なら」则是由古语已然形「○なれ」接续助词「ば」得到「○なれば」后约音产生。</p>
<p>命令形则在演化的时候由于可以使用动词命令形代替表示而逐步丢失。</p>
</div>
<div class="note info no-icon"><p>形容词和形容动词的词干指的是，形容词删去活用词尾「し」，形容动词删去活用词尾「なり・たり」之后剩余的部分。词干具有以下常见的使用场景：</p>
<ul>
<li>与感叹词「あな」和间投助词「や」形成「あな、○○や」的句式，这里间投助词可省略。如「あな、をさなや」以及「あな、きよら」。该句式用于形成感叹，语意基本类似现代语「ああ、○○だなあ」。</li>
<li>接续格助词「の」形成连体修饰词用于修饰体言。如「<code>@ 心憂 こころう</code>のことや」以及「をこのしれもの」。</li>
<li>（仅限形容词词干）与体言「××」、间投助词「を」和接尾词「み」形成「××を○○み」的句式，这里间投助词可省略。该句式常见于和歌。如「瀬をはやみ」。该句式语意基本类似现代语「××が○○なので」。</li>
</ul>
</div>
<h1 id="用言的音便准则">用言的音便准则</h1>
<p>四段动词、ラ变动词与ナ变动词的连用形在接续助词「て、たり」的时候会发生音便，其音便的准则如下表：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">元の形</th>
<th style="text-align: center;">音便形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">四段動詞「か行」</td>
<td style="text-align: center;">書きて</td>
<td style="text-align: center;">書いて</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「が行」</td>
<td style="text-align: center;">急ぎて</td>
<td style="text-align: center;">急いで</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「は行」</td>
<td style="text-align: center;">思ひて</td>
<td style="text-align: center;">思うて</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「ま行」</td>
<td style="text-align: center;">頼みて</td>
<td style="text-align: center;">頼うで</td>
</tr>
<tr class="odd">
<td style="text-align: center;">四段動詞「ば行」</td>
<td style="text-align: center;">飛びて</td>
<td style="text-align: center;">飛んで</td>
</tr>
<tr class="even">
<td style="text-align: center;">四段動詞「た行」</td>
<td style="text-align: center;">立ちて</td>
<td style="text-align: center;">立つて</td>
</tr>
<tr class="odd">
<td style="text-align: center;">ナ変動詞</td>
<td style="text-align: center;">死にて</td>
<td style="text-align: center;">死んで</td>
</tr>
<tr class="even">
<td style="text-align: center;">ラ変動詞</td>
<td style="text-align: center;">ありて</td>
<td style="text-align: center;">あつて</td>
</tr>
</tbody>
</table>
<p>古语中的促音标记「つ」依然使用大字书写，但是读音依然是促音。</p>
<p>另外，形容词第一活用的连体形也会发生音便，具体形式为活用词尾的「き」辅音脱落为「い」。其音便的准则如下表：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">元の形</th>
<th style="text-align: center;">音便形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞「ク活用」</td>
<td style="text-align: center;">強き人</td>
<td style="text-align: center;">強い人</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容詞「シク活用」</td>
<td style="text-align: center;">美しき人</td>
<td style="text-align: center;">美しい人</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 2 日语基础语法与用言活用规则</title>
    <url>/2022/08/21/ja-tutorial-ch2/</url>
    <content><![CDATA[<p>本章主要介绍日语的基本语法和基本的语句结构，并且简单介绍日语用言活用系统。本章节的作用为为下一章节的助动词、助词接续规则做铺垫。</p>
<span id="more"></span>
<h1 id="日语词语的分类">日语词语的分类</h1>
<p>日语所有的词语可以大体分为下述四类：</p>
<ul>
<li><strong>附属词语</strong>。包括助词、助动词，其必须附属在其他词语之上才能表达含义。助词和助动词的区别在于，助动词具有活用而助词不具有。</li>
<li><strong>独立词语</strong>。包括感叹词等不可附属其他成分的词语。</li>
<li><strong>装饰词语</strong>。包括副词等用于修饰其余成分的词语。</li>
<li><strong>自立词语</strong>。包含用言和体言。用言和体言的区别在于，用言具有活用而体言不具有。用言一般包括动词、形容词和形容动词。体言一般包括名词、代词和数词。</li>
</ul>
<p>我们最需要关注的两类词语为自立词语（用言、体言），日语语句中大多数的词语均属于自立词语。另外，用言的活用规则、用言与附属词语的联合使用是日语语法中的重中之重。</p>
<h2 id="动词的分类">动词的分类</h2>
<p>我们观察下面的动词词例：</p>
<ul>
<li><code>@ 書 か</code>く、<code>@ 泳 およ</code>ぐ、<code>@ 読 よ</code>む、<code>@ 死 し</code>ぬ、<code>@ 飛 と</code>ぶ、<code>@ 降 ふ</code>る、<code>@ 立 た</code>つ、<code>@ 歌 うた</code>う、<code>@ 話 はな</code>す</li>
<li><code>@ 見 み</code>る、<code>@ 居 い</code>る、<code>@ 生 い</code>きる、<code>@ 起 お</code>きる、<code>@ 捨 す</code>てる、<code>@ 教 おし</code>える</li>
<li><code>@ 来 く</code>る</li>
<li>する、<code>@ 勉強 べんきょう</code>する、<code>@ 感 かん</code>ずる</li>
</ul>
<p>可以注意到所有的动词原形都以う段假名结尾。而这里的动词分为四行，即为按照送假名活用规则不同分类得到的四个种类的动词。</p>
<p>第一行是<strong>五段动词</strong>，现代日语五段动词的合法词尾为「く、ぐ、む、ぬ、ぶ、る、つ、う、す」。</p>
<p>第二行是<strong>一段动词</strong>，现代日语一段动词仅能以「る」结尾，并且倒数第二个假名仅可以在い段或者え段。其中倒数第二个假名位于い段的称为<strong>上一段动词</strong>，倒数第二个假名位于え段的称为<strong>下一段动词</strong>。</p>
<p>第三行是<strong>カ变动词</strong>，现代日语仅有「<code>@ 来 く</code>る」为カ变动词。</p>
<p>第四行是<strong>サ变动词</strong>，现代日语仅有「する」以及以汉字等为词干并以「する、ずる」结尾的动词为サ变动词。</p>
<p>这里需要注意的是，以「る」结尾的并且不是サ变动词的动词，既可能是五段动词也可能是一段动词。其辨别方式为，首先确定倒数第二个假名所在段，如果不在い段或者え段，则一定是五段动词。例如「<code>@ 上 あ</code>がる、<code>@ 売 う</code>る、<code>@ 残 のこ</code>る」即为五段动词。相应的，如果在い段或者え段则大概率为一段动词，但是这依然有例外，仅能通过查询词典确认。例如「<code>@ 滑 すべ</code>る、<code>@ 入 はい</code>る」即为五段动词。</p>
<h2 id="形容词和形容动词的特征">形容词和形容动词的特征</h2>
<p>我们观察下面的形容词词例：</p>
<ul>
<li><code>@ 赤 あか</code>い、<code>@ 黒 くろ</code>い、<code>@ 長 なが</code>い、<code>@ 広 ひろ</code>い、<code>@ 美 うつく</code>しい、<code>@ 難 むずか</code>しい</li>
</ul>
<p>可以注意到所有的形容词原形都以「い」结尾。</p>
<p>进一步，我们观察下面的形容动词词例：</p>
<ul>
<li><code>@ 好 す</code>きだ、<code>@ 嫌 きら</code>いだ、<code>@ 静 しず</code>かだ</li>
</ul>
<p>可以注意到所有的形容动词原形都以「だ」结尾。</p>
<div class="note info no-icon"><p>事实上，有一种观点认为现代日语存在两种形容动词。通常的形容动词称为「ダ活用形容動詞」，而还有一类形容动词称为「タルト活用形容動詞」。「タルト活用形容動詞」的词例很少，并且其原形已经丢失，仅以「○○と、○○たる」两种形式存在。词例包括「<code>@ 燦然 さんぜん</code>と、<code>@ 段々 だんだん</code>と」。</p>
<p>本手册并不考虑「タルト活用形容動詞」，因为考虑到「○○たる」形式已经较为少见，故直接将「○○と」形式视为装饰词语中的副词，而不再视为自立词语中的用言（形容动词）的一种活用形式。</p>
</div>
<div class="note info no-icon"><p>部分观点将形容词和形容动词都归为形容词，因为在现代日语中两者都起到了类似于形容词的作用。这里我们依然按照传统的语法概念保留形容动词这个概念。</p>
<p>形容词和形容动词的差别在于，形容动词有一定的动词的属性。例如「<code>@ 好 す</code>きだ」的含义为“喜欢”，其本质上是一种动作，但是可以应用在“喜欢的事物”这样的短语中起到形容词的语法作用。</p>
</div>
<h2 id="日语常见助动词">日语常见助动词</h2>
<p>日语的助动词常常附属在用言的活用形后，辅助用言表达更丰富的语言含义。现在将本手册着重讨论的日语助动词的原形罗列如下：</p>
<ul>
<li>たがる</li>
<li>れる・られる、せる・させる</li>
<li>ない、たい、らしい</li>
<li>べし</li>
<li>だ、そうだ②、ようだ</li>
<li>です、ます、た、そうだ①、まい、う、ず・ぬ・ん</li>
</ul>
<p>上述分类的标准为助动词的活用规则。第一类助动词与五段动词活用规则近似，第二类与一段动词近似，第三类与形容词近似，第四类与古语形容词近似，第五类与形容动词近似，第六类则为不规则活用助动词。</p>
<p>这里注意到「そうだ」被分为了「そうだ①」和「そうだ②」，这是因为其表达的语法含义并不相同，其中「そうだ①」表达“传闻”，而「そうだ②」表达“样态”。更具体的使用方式，我们在后续的部分讲解。</p>
<h2 id="日语常见助词">日语常见助词</h2>
<p>日语助词系统，包括日语助词的分类，各个观点并不统一。而我们采用的助词分类方式为：</p>
<ul>
<li><strong>格助词</strong>。格助词为标识主语、宾语、动作目标、动作主观原因、动作客观原因等逻辑关系的助词，其作用为保证句意并不受语序排列不同的影响。常见的格助词包括「が①、から、で、と①、に、の①、へ、まで①、より、を」。</li>
<li><strong>终止助词</strong>。终止助词的作用为用于语句的最后，用于表达不同的语气。常见的终止助词包括「か①、かしら、け、こと、さ、ぜ、ぞ、とも、な①、な②、ね、の②、もの・もん、ものか、よ、わ」。</li>
<li><strong>副助词</strong>。副助词往往接续在格助词或者动词等后，用于进一步修饰语意。常见的副助词包括「か②、か③、きり、くらい・ぐらい、こそ、さえ、しか、すら、だけ、とか、など・なんて、なり、のみ、は、ばかり、ほど、まで②、も、や」。</li>
<li><strong>接续助词</strong>。接续助词的作用为置于两个小句之间，用于表示两个小句之间的关系，例如表达顺接、逆接等关系。常见的接续助词包括「が②、けれど・けど・けれども、し、たり・だり、て・で、ても・でも、と②、ながら①、ながら②、ので、のに、ば、ものの、ものを」。</li>
</ul>
<p>这里我们需要额外注意接续助词「て・で」，其几乎可以认为是日语中最重要的助词，因为其后可以继续接续补助动词进一步表达语意。本手册中会着重讨论的补助动词包括：</p>
<ul>
<li>いる、おる、ある</li>
<li>いく、くる</li>
<li>やる、あげる、さしあげる</li>
<li>もらう、くれる、くださる、いただく</li>
<li>しまう、おく、みる</li>
<li>ほしい</li>
</ul>
<div class="note warning no-icon"><p>读者此时可能困惑于如此多的助动词和助词，暂且不明白这些助动词和助词的含义和使用方式。</p>
<p>这些我们将会在后续部分细致展开，在这里我们只是将这些助词和助动词分类枚举，以方便读者先形成基本的助动词和助词的简单分类概念。在学习完毕这些助词和助动词的用法之后，这种分类概念会帮助读者从一个更高的角度理解这些附属词语的运用。</p>
</div>
<h2 id="chapter-2-section-1-练习">Chapter 2 Section 1 练习</h2>
<p>【第一问】下述给出若干个动词的原形，请判定其为五段动词、一段动词、カ变动词、サ变动词中的哪一类。如有需要，可以通过词典确认。</p>
<ul>
<li><code>@ 許 ゆる</code>す、<code>@ 出 だ</code>す、<code>@ 駆 か</code>ける、<code>@ 導 みちび</code>く、<code>@ 塞 ふさ</code>ぐ</li>
<li><code>@ 決 けっ</code>する、<code>@ 出 で</code>る、<code>@ 積 つ</code>もる、<code>@ 狂 くる</code>う、<code>@ 注 そそ</code>ぐ</li>
<li><code>@ 回 まわ</code>る、<code>@ 結 むす</code>ぶ、<code>@ 彷徨 さまよ</code>う、<code>@ 染 そ</code>める、<code>@ 逃 のが</code>れる</li>
<li><code>@ 来 く</code>る、<code>@ 喋 しゃべ</code>る、<code>@ 高 たか</code>める、<code>@ 拭 ぬぐ</code>う、<code>@ 信 しん</code>ずる</li>
<li><code>@ 高 たか</code>まる、<code>@ 踏 ふ</code>む、なさる、<code>@ 放 はな</code>つ、<code>@ 放 ほう</code>る</li>
</ul>
<h1 id="日语语句的基本语序">日语语句的基本语序</h1>
<p>在正式学习日语语法之前，首先需要了解日语的语序。相较于汉语的主谓宾语序，日语采用了主宾谓语序。另外，日语另外一个和汉语差别较大的点在于助词后置。例如下述句子：</p>
<div class="note info no-icon"><p>私<strong>は</strong>（我）今朝七時<strong>に</strong>（在今早七点）朝ご飯<strong>を</strong>（早饭）食べました（吃了）。</p>
</div>
<p>这里为了表述清晰，将句子按照词语分解并把所有助词加粗。这里各个词语的汉语翻译均已经标注在其后。</p>
<p>显然可以发现，作为谓语的“吃了”位于句子末尾而作为宾语的“早饭”位于谓语之前，这也就是日语的主宾谓语序。</p>
<p>另外，在状语“在今早七点”中，提示动作发生时间的助词「に」位于该词组的末尾，和汉语的助词“在”位于词组开头恰好相反。</p>
<p>之后，我们还发现日语中有两个未翻译的助词「は」「を」，这两个助词的作用均为提示其之前的实词在该句子之中的语法作用。比如说在「朝ご飯を」中，助词「を」的作用是表明实词「朝ご飯」是这句话的宾语。这类助词在汉语中并没有对应，所以一般不翻译。</p>
<p>而正是由于日语中存在这一类助词，所以划分句子的各类成分会较为容易，只需要将语句拆分为若干的词组，对于有这一类助词提示的词组则根据助词的作用判定各个词组在语句中的作用即可。</p>
<p>这里简单介绍常用的助词以方便读者先行阅读简单日语语句，更为具体的讲解则见后续的部分。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">助词</th>
<th style="text-align: center;">作用</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">は</td>
<td style="text-align: center;">标注语句的主题</td>
</tr>
<tr class="even">
<td style="text-align: center;">が</td>
<td style="text-align: center;">标注语句的主语</td>
</tr>
<tr class="odd">
<td style="text-align: center;">を</td>
<td style="text-align: center;">标注语句的宾语</td>
</tr>
<tr class="even">
<td style="text-align: center;">に</td>
<td style="text-align: center;">标注动作发生的时间、动作的方向等</td>
</tr>
<tr class="odd">
<td style="text-align: center;">へ</td>
<td style="text-align: center;">标注动作的方向</td>
</tr>
<tr class="even">
<td style="text-align: center;">の</td>
<td style="text-align: center;">标注从属或者同位关系</td>
</tr>
<tr class="odd">
<td style="text-align: center;">で</td>
<td style="text-align: center;">标注动作发生的地点、动作的手段等</td>
</tr>
<tr class="even">
<td style="text-align: center;">から</td>
<td style="text-align: center;">标注时间、地点的起始，标注主观原因</td>
</tr>
<tr class="odd">
<td style="text-align: center;">まで</td>
<td style="text-align: center;">标注时间、地点的终止等</td>
</tr>
<tr class="even">
<td style="text-align: center;">ので</td>
<td style="text-align: center;">标注客观原因</td>
</tr>
</tbody>
</table>
<div class="note info no-icon"><p>读者可能会注意到<strong>主题</strong>和<strong>主语</strong>的区分，这也就代表了副助词「は」和格助词「が」的语法差别。这一差别较为微妙，难以简单概括，我们后续阐述。当前读者可以暂且认为两个助词的作用基本一致。</p>
</div>
<h2 id="chapter-2-section-2-练习">Chapter 2 Section 2 练习</h2>
<p>【第一问】尝试根据助词分划下述日语句子，并尝试翻译，部分可能用到的词汇列表标注在后面：</p>
<ul>
<li>上海から東京までの飛行機で日本へ来ました。</li>
<li>彼は優しいので、付き合いたい。</li>
</ul>
<p>可能使用的词汇表：</p>
<ul>
<li>飛行機（飞机）</li>
<li>来ました（来了）</li>
<li>彼（他）</li>
<li>優しい（温柔的）</li>
<li>付き合いたい（想交往）</li>
</ul>
<h1 id="日语指示词">日语指示词</h1>
<p>日语的指示词指的是一系列代词，主要分为近称、中称、远称、不定称四类，这四类代词的开头假名分别为「こ、そ、あ、ど」。这四种代称的含义为：</p>
<ul>
<li><strong>近称</strong>表示需要指代的事物距离说话人较近，对应汉语的“这”</li>
<li><strong>中称</strong>表示需要指代的事物距离听话人较近，可以对应汉语的“这”，也可以对应汉语的“那”，视具体语境确定</li>
<li><strong>远称</strong>表示需要指代的事物距离说话人和听话人都较远，对应汉语的“那”</li>
<li><strong>不定称</strong>表示不知道需要指代的事物的远近，常用于疑问，对应汉语的“哪”</li>
</ul>
<p>每一种代称的代词包含指代事物、地点、方位、人物等的名词性代词、指代从属的连体性代词、指代状态的副词性代词以及形容动词性代词共四类，这些代词如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">近称</th>
<th style="text-align: center;">中称</th>
<th style="text-align: center;">远称</th>
<th style="text-align: center;">不定称</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">名词性（事物）</td>
<td style="text-align: center;">これ</td>
<td style="text-align: center;">それ</td>
<td style="text-align: center;">あれ</td>
<td style="text-align: center;">どれ</td>
</tr>
<tr class="even">
<td style="text-align: center;">名词性（地点）</td>
<td style="text-align: center;">ここ</td>
<td style="text-align: center;">そこ</td>
<td style="text-align: center;">あそこ</td>
<td style="text-align: center;">どこ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">名词性（方位）</td>
<td style="text-align: center;">こちら・こっち</td>
<td style="text-align: center;">そちら・そっち</td>
<td style="text-align: center;">あちら・あっち</td>
<td style="text-align: center;">どちら・どっち</td>
</tr>
<tr class="even">
<td style="text-align: center;">名词性（人物）</td>
<td style="text-align: center;">こいつ</td>
<td style="text-align: center;">そいつ</td>
<td style="text-align: center;">あいつ</td>
<td style="text-align: center;">どいつ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">连体性</td>
<td style="text-align: center;">この</td>
<td style="text-align: center;">その</td>
<td style="text-align: center;">あの</td>
<td style="text-align: center;">どの</td>
</tr>
<tr class="even">
<td style="text-align: center;">副词性</td>
<td style="text-align: center;">こう</td>
<td style="text-align: center;">そう</td>
<td style="text-align: center;">ああ</td>
<td style="text-align: center;">どう</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容动词性</td>
<td style="text-align: center;">こんなだ</td>
<td style="text-align: center;">そんなだ</td>
<td style="text-align: center;">あんなだ</td>
<td style="text-align: center;">どんなだ</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容动词性（连体形式）</td>
<td style="text-align: center;">こんな</td>
<td style="text-align: center;">そんな</td>
<td style="text-align: center;">あんな</td>
<td style="text-align: center;">どんな</td>
</tr>
</tbody>
</table>
<p>这里给出近称代词的汉语翻译，可以作为理解这些代词的参考：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">日语</th>
<th style="text-align: center;">これ</th>
<th style="text-align: center;">ここ</th>
<th style="text-align: center;">こちら</th>
<th style="text-align: center;">この</th>
<th style="text-align: center;">こう</th>
<th style="text-align: center;">こんな</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">汉语</td>
<td style="text-align: center;">这个（名词性）</td>
<td style="text-align: center;">这里</td>
<td style="text-align: center;">这边</td>
<td style="text-align: center;">这个（连体性）</td>
<td style="text-align: center;">这样</td>
<td style="text-align: center;">这样的、这种</td>
</tr>
</tbody>
</table>
<h1 id="日语用言与助动词的活用规则">日语用言与助动词的活用规则</h1>
<p>现代日语中，具有活用的词语仅有用言和助动词两类。而现代日语中，这些词语一共有七种活用类型。下述为七种活用类型的基本用法介绍：</p>
<ul>
<li><strong>未然形</strong>。主要用于表述未发生的形态，用言的否定和被动常常使用未然形接续相关助动词表示。</li>
<li><strong>连用形</strong>。主要用于接续其他用言，部分动词的连用形用于将动词名词化。</li>
<li><strong>终止形</strong>。一般认为是用言的基础形态，也称为<strong>原形</strong>，用于直接或接续终止助词表现句子终结。</li>
<li><strong>连体形</strong>。主要用于接续体言。</li>
<li><strong>假定形</strong>。古日语中称<strong>已然形</strong>。现代日语中常用于接续表示假定的助动词。</li>
<li><strong>命令形</strong>。不接续或接续终止助词表示命令语气。</li>
<li><strong>意志形</strong>。主要用于表达意志。</li>
</ul>
<p>更为具体的使用方式，包括用言和助动词、助词的接续方式我们将会在后续展开，现在我们首先研讨用言和助动词如何进行这七种活用。</p>
<h2 id="动词及类动词助动词的活用规则">动词及类动词助动词的活用规则</h2>
<p>日语动词的七种活用规则如下表，这里注意，动词的连用形有两种形式：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">五段動詞「か行」</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書か</td>
<td style="text-align: center;">書き</td>
<td style="text-align: center;">書い</td>
<td style="text-align: center;">書く</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書け</td>
<td style="text-align: center;">書こ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「が行」</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳が</td>
<td style="text-align: center;">泳ぎ</td>
<td style="text-align: center;">泳い</td>
<td style="text-align: center;">泳ぐ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳げ</td>
<td style="text-align: center;">泳ご</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「ば行」</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛ば</td>
<td style="text-align: center;">飛び</td>
<td style="text-align: center;">飛ん</td>
<td style="text-align: center;">飛ぶ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛べ</td>
<td style="text-align: center;">飛ぼ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ま行」</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読ま</td>
<td style="text-align: center;">読み</td>
<td style="text-align: center;">読ん</td>
<td style="text-align: center;">読む</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読め</td>
<td style="text-align: center;">読も</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「な行」</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死な</td>
<td style="text-align: center;">死に</td>
<td style="text-align: center;">死ん</td>
<td style="text-align: center;">死ぬ</td>
<td style="text-align: center;">死ね</td>
<td style="text-align: center;">死ね</td>
<td style="text-align: center;">死の</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「あ行」</td>
<td style="text-align: center;">歌う</td>
<td style="text-align: center;"><strong>歌わ</strong></td>
<td style="text-align: center;">歌い</td>
<td style="text-align: center;">歌っ</td>
<td style="text-align: center;">歌う</td>
<td style="text-align: center;">歌え</td>
<td style="text-align: center;">歌え</td>
<td style="text-align: center;">歌お</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「た行」</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立た</td>
<td style="text-align: center;">立ち</td>
<td style="text-align: center;">立っ</td>
<td style="text-align: center;">立つ</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立て</td>
<td style="text-align: center;">立と</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞「ら行」</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降ら</td>
<td style="text-align: center;">降り</td>
<td style="text-align: center;">降っ</td>
<td style="text-align: center;">降る</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降れ</td>
<td style="text-align: center;">降ろ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">五段動詞「さ行」</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話さ</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話し</td>
<td style="text-align: center;">話す</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話せ</td>
<td style="text-align: center;">話そ</td>
</tr>
<tr class="even">
<td style="text-align: center;">上一段動詞</td>
<td style="text-align: center;">起きる</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起き</td>
<td style="text-align: center;">起きる</td>
<td style="text-align: center;">起きれ</td>
<td style="text-align: center;">起きよ・起きろ</td>
<td style="text-align: center;">起きよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">下一段動詞</td>
<td style="text-align: center;">教える</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教え</td>
<td style="text-align: center;">教える</td>
<td style="text-align: center;">教えれ</td>
<td style="text-align: center;">教えよ・教えろ</td>
<td style="text-align: center;">教えよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ変動詞「清音」</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">し・せ・さ</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">し</td>
<td style="text-align: center;">する</td>
<td style="text-align: center;">すれ</td>
<td style="text-align: center;">しろ・せよ</td>
<td style="text-align: center;">しよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">サ変動詞「濁音」</td>
<td style="text-align: center;">ずる</td>
<td style="text-align: center;">じ・ぜ・ざ</td>
<td style="text-align: center;">じ</td>
<td style="text-align: center;">じ</td>
<td style="text-align: center;">ずる</td>
<td style="text-align: center;">ずれ</td>
<td style="text-align: center;">じろ・ぜよ</td>
<td style="text-align: center;">じよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">カ変動詞</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">こ</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">き</td>
<td style="text-align: center;">くる</td>
<td style="text-align: center;">くれ</td>
<td style="text-align: center;">こい</td>
<td style="text-align: center;">こよ</td>
</tr>
</tbody>
</table>
<p>可以发现五段动词的送假名除了第二连用形外全部在五十音图同一行内变化，并且可以变为这一行的任一段假名。而一段动词则除了词尾「る」发生变化外，倒数第二个假名固定在该行该段不发生变化。サ变动词和カ变动词则完全不规则。</p>
<p>唯一需要注意的是あ行的五段动词的未然形的送假名并不变为「あ」，而是变为「わ」。</p>
<p>类动词的助动词的活用则基本可以根据上述活用表推理出：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">類五段動詞</td>
<td style="text-align: center;">たがる</td>
<td style="text-align: center;">たがら</td>
<td style="text-align: center;">たがり</td>
<td style="text-align: center;">たがっ</td>
<td style="text-align: center;">たがる</td>
<td style="text-align: center;">たがれ</td>
<td style="text-align: center;">たがれ</td>
<td style="text-align: center;">たがろ</td>
</tr>
<tr class="even">
<td style="text-align: center;">類一段動詞</td>
<td style="text-align: center;">れる</td>
<td style="text-align: center;">れ</td>
<td style="text-align: center;">れ</td>
<td style="text-align: center;">れ</td>
<td style="text-align: center;">れる</td>
<td style="text-align: center;">れれ</td>
<td style="text-align: center;">れよ・れろ</td>
<td style="text-align: center;">れよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;">られる</td>
<td style="text-align: center;">られ</td>
<td style="text-align: center;">られ</td>
<td style="text-align: center;">られ</td>
<td style="text-align: center;">られる</td>
<td style="text-align: center;">られれ</td>
<td style="text-align: center;">られよ・られろ</td>
<td style="text-align: center;">られよ</td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">せる</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">せ</td>
<td style="text-align: center;">せる</td>
<td style="text-align: center;">せれ</td>
<td style="text-align: center;">せよ・せろ</td>
<td style="text-align: center;">せよ</td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;">させる</td>
<td style="text-align: center;">させ</td>
<td style="text-align: center;">させ</td>
<td style="text-align: center;">させ</td>
<td style="text-align: center;">させる</td>
<td style="text-align: center;">させれ</td>
<td style="text-align: center;">させよ・させろ</td>
<td style="text-align: center;">させよ</td>
</tr>
</tbody>
</table>
<p>动词活用规则中存在下述例外情况：</p>
<ul>
<li>五段动词「行く」的第二连用形为「行っ」而非「行い」。</li>
<li>五段动词「問う、乞う」的第二连用形为「問う、乞う」而非「問っ、乞っ」。</li>
<li>五大敬语动词「いらっしゃる、くださる、なさる、おっしゃる、ござる」除去「ござる」之外的四个动词的命令形词尾为「い」而非「れ」。即这些动词的命令形分别为「いらっしゃい、ください、なさい、おっしゃい、ござれ」。</li>
<li>一段动词「くれる」的命令形为「くれ」而非「くれよ・くれろ」。</li>
<li>口语中允许以「する」结尾的サ变动词按照类似五段动词的方式活用，如下表所示：</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;">愛し・愛せ・愛さ</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;">愛すれ</td>
<td style="text-align: center;">愛しろ・愛せよ</td>
<td style="text-align: center;">愛しよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">五段動詞</td>
<td style="text-align: center;">愛する</td>
<td style="text-align: center;"><strong>愛さ</strong></td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;">愛し</td>
<td style="text-align: center;"><strong>愛す</strong></td>
<td style="text-align: center;"><strong>愛せ</strong></td>
<td style="text-align: center;"><strong>愛せ</strong></td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>而以「ずる」结尾的サ变动词可以按照类似一段动词的方式活用，如下表所示：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">サ変動詞</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;">信じ・信ぜ・信ざ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;">信ずれ</td>
<td style="text-align: center;">信じろ・信ぜよ</td>
<td style="text-align: center;">信じよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">一段動詞</td>
<td style="text-align: center;">信ずる</td>
<td style="text-align: center;"><strong>信じ</strong></td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;">信じ</td>
<td style="text-align: center;"><strong>信じる</strong></td>
<td style="text-align: center;"><strong>信じれ</strong></td>
<td style="text-align: center;"><strong>信じろ・信じよ</strong></td>
<td style="text-align: center;">信じよ</td>
</tr>
</tbody>
</table>
<p>可以注意到如果将「信ずる」转写为「信じる」，则除了终止形之外所有变形均遵循一段动词的规则，所以现代日语中以「ずる」结尾的サ变动词正在逐步合流为以「じる」结尾的一段动词。</p>
<h2 id="形容词及类形容词助动词的活用规则">形容词及类形容词助动词的活用规则</h2>
<p>日语形容词的七种活用规则如下表，这里注意，形容词的连用形有两种形式并且缺失命令形和意志形：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞</td>
<td style="text-align: center;">高い</td>
<td style="text-align: center;">高かろ</td>
<td style="text-align: center;">高く</td>
<td style="text-align: center;">高かっ</td>
<td style="text-align: center;">高い</td>
<td style="text-align: center;">高けれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>形容词的词干指的是其原形删去词尾的「い」后剩余的部分，其可能应用在一部分的助动词接续、复合词生成上，但是其并不是一种用言活用形式。</p>
<p>形容词缺失的命令形可以通过第一连用形接续动词「する」后通过动词的命令形代替，例如「高くしろ・高くせよ」。而缺失的意志形可以通过终止形接续助动词「です」后通过助动词的意志形代替，例如「高いでしょ」。也可以通过终止形接续助动词「だ」后通过助动词的未然形代替，例如「高いだろ」。也可以直接将未然形作为意志形使用。</p>
<p>类形容词的助动词的活用则基本可以根据上述活用表推理出：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">類形容詞</td>
<td style="text-align: center;">ない</td>
<td style="text-align: center;">なかろ</td>
<td style="text-align: center;">なく</td>
<td style="text-align: center;">なかっ</td>
<td style="text-align: center;">ない</td>
<td style="text-align: center;">なけれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">たい</td>
<td style="text-align: center;">たかろ</td>
<td style="text-align: center;">たく</td>
<td style="text-align: center;">たかっ</td>
<td style="text-align: center;">たい</td>
<td style="text-align: center;">たけれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;">らしい</td>
<td style="text-align: center;">らしかろ</td>
<td style="text-align: center;">らしく</td>
<td style="text-align: center;">らしかっ</td>
<td style="text-align: center;">らしい</td>
<td style="text-align: center;">らしけれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>当前现代日语中仅有「いい」一个不规则形容词，其活用规则为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容詞</td>
<td style="text-align: center;">いい</td>
<td style="text-align: center;">よかろ</td>
<td style="text-align: center;">よく</td>
<td style="text-align: center;">よかっ</td>
<td style="text-align: center;">いい</td>
<td style="text-align: center;">よけれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<div class="note info no-icon"><p>事实上形容词还有第三连用形的存在，但是其几乎已经完全固化为若干的固定短语，故这里并不将其作为一个活用形式。</p>
<p>第三连用形为第一连用形与「ございます、存じます」等动词连用后发生音便产生的：</p>
<ul>
<li>暑く ＋ ございます → 暑<strong>う</strong>ございます</li>
</ul>
<p>并且第三连用形甚至可能导致形容词词干也发生变化。例如形容词「うれしい」接续「ございます」的音便为：</p>
<ul>
<li>うれ<strong>しく</strong> ＋ ございます → うれ<strong>しゅう</strong>ございます</li>
</ul>
<p>事实上很多常用问候语是形容词第三连用形的残留：</p>
<ul>
<li>ありが<strong>たく</strong> ＋ ございます → ありが<strong>とう</strong>ございます</li>
<li>おめで<strong>たく</strong> ＋ ございます → おめで<strong>とう</strong>ございます</li>
</ul>
</div>
<h2 id="形容动词及类形容动词助动词的活用规则">形容动词及类形容动词助动词的活用规则</h2>
<p>日语形容动词的七种活用规则如下表，这里注意，形容动词的连用形有三种形式并且缺失命令形和意志形：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連用形③</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">形容動詞</td>
<td style="text-align: center;">静かだ</td>
<td style="text-align: center;">静かだろ</td>
<td style="text-align: center;">静かで</td>
<td style="text-align: center;">静かだっ</td>
<td style="text-align: center;">静かに</td>
<td style="text-align: center;">静かな</td>
<td style="text-align: center;">静かなら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>形容动词的词干指的是其原形删去词尾的「だ」后剩余的部分，其可能应用在一部分的助动词接续、复合词生成上，但是其并不是一种用言活用形式。</p>
<p>形容动词缺失的命令形可以通过第三连用形接续动词「する」后通过动词的命令形代替，例如「静かにしろ・静かにせよ」。而缺失的意志形可以通过词干接续助动词「です」后通过助动词的意志形代替，例如「静かでしょ」。也可以直接将未然形作为意志形使用。</p>
<p>类形容动词的助动词的活用则基本可以根据上述活用表推理出：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形①</th>
<th style="text-align: center;">連用形②</th>
<th style="text-align: center;">連用形③</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">類形容動詞</td>
<td style="text-align: center;">だ</td>
<td style="text-align: center;">だろ</td>
<td style="text-align: center;">で</td>
<td style="text-align: center;">だっ</td>
<td style="text-align: center;">（に）</td>
<td style="text-align: center;">（な）</td>
<td style="text-align: center;">なら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">そうだ②</td>
<td style="text-align: center;">そうだろ</td>
<td style="text-align: center;">そうで</td>
<td style="text-align: center;">そうだっ</td>
<td style="text-align: center;">そうに</td>
<td style="text-align: center;">そうな</td>
<td style="text-align: center;">そうなら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;"></td>
<td style="text-align: center;">ようだ</td>
<td style="text-align: center;">ようだろ</td>
<td style="text-align: center;">ようで</td>
<td style="text-align: center;">ようだっ</td>
<td style="text-align: center;">ように</td>
<td style="text-align: center;">ような</td>
<td style="text-align: center;">ようなら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>形容动词活用规则中存在下述例外情况：</p>
<ul>
<li>古日语形容词退化得到的形容动词「同じだ」有两种连体形，除去规则变化的「同じな」，还具有另外一种继承自古日语形容词的「同じ」形式。规则变化的连体形用于接续「ので、のに」等助词，例如「同じなので」。而修饰一般体言的时候使用特殊变化的连体形，例如「同じ人」。</li>
<li>形容动词性代词「こんなだ、そんなだ、あんなだ、どんなだ」有两种连体形，除去规则变化的「◯んなな」，还具有另外一种常用的「◯んな」形式。规则变化的连体形用于接续「ので、のに」等助词，例如「こんななので」。而修饰一般体言的时候使用特殊变化的连体形，例如「そんなこと」。</li>
<li>部分古日语中的ナリ活用形容动词在现代日语中退化，仅保留了连体形，而丢失了所有其他活用形式。这些形容动词包括「大きな、小さな、おかしな」等。</li>
</ul>
<h2 id="类古语形容词助动词与不规则助动词的活用规则">类古语形容词助动词与不规则助动词的活用规则</h2>
<p>这一类助动词仅有「べし」一个，其活用规则类似古语形容词，活用规则如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">類古文形容詞</td>
<td style="text-align: center;">べし</td>
<td style="text-align: center;">べから</td>
<td style="text-align: center;">べかり</td>
<td style="text-align: center;">べき</td>
<td style="text-align: center;">べけれ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>不规则助动词的活用规则如下：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">仮定形</th>
<th style="text-align: center;">命令形</th>
<th style="text-align: center;">意志形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">そうだ①</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">そうで</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">そうなら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">です</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">でし</td>
<td style="text-align: center;">（です）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">でしょ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">ます</td>
<td style="text-align: center;">ませ</td>
<td style="text-align: center;">まし</td>
<td style="text-align: center;">ます</td>
<td style="text-align: center;">ますれ</td>
<td style="text-align: center;">まし・ませ</td>
<td style="text-align: center;">ましょ</td>
</tr>
<tr class="even">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">う</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（う）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">た</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">た</td>
<td style="text-align: center;">たら</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">たろ</td>
</tr>
<tr class="even">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">ず・ん・ぬ</td>
<td style="text-align: center;">ざら・ず</td>
<td style="text-align: center;">ざり・ず</td>
<td style="text-align: center;">ざる・ぬ</td>
<td style="text-align: center;">ざれ・ね</td>
<td style="text-align: center;">ざれ</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">まい</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（まい）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<h2 id="chapter-2-section-4-练习">Chapter 2 Section 4 练习</h2>
<p>【第一问】给定下述用言（助动词）的原形，写出这些用言（助动词）的未然形。</p>
<ul>
<li>しまう、入る、黄色い、好きだ、話す</li>
<li>ます、登る、増える、いい、なさる</li>
</ul>
<p>【第二问】已知助词「て・で」与用言（助动词）的接续规则为：</p>
<ul>
<li>接续在动词（类动词助动词）第二连用形后且若动词原形以「ぐ、む、ぬ、ぶ」结尾则浊化</li>
<li>接续在形容词（类形容词助动词）第一连用形后且不浊化</li>
<li>「ない」也可以使用终止形接续且浊化</li>
</ul>
<p>基于上述规则，给定下述用言（助动词）的原形，写出这些用言（助动词）接续助词「て・で」之后形成的词组。</p>
<ul>
<li>歩く、話す、出る、美しい、ある</li>
<li>ない、来る、赤い、学ぶ、死ぬ</li>
<li>負ける、勝つ、買う、いい、られる</li>
<li>たがる、泳ぐ、痛む、行く、悪い</li>
<li>掃除する、問う、らしい、作る、軽んずる</li>
</ul>
<p>【第三问】给定下述动词的第二连用形（平假名表示），写出这些第二连用形所有可能对应的原形（平假名表示）。如果需要确定某一个词是否存在，可以使用词典进行确认。</p>
<ul>
<li>さい、まし、よん、いっ、うえ</li>
<li>こう、し、うっ、えらん、き</li>
</ul>
<p>【第四问】给定下述动词的第一连用形（平假名表示），写出这些第一连用形所有可能对应的原形（平假名表示）。如果需要确定某一个词是否存在，可以使用词典进行确认。</p>
<ul>
<li>き、かき、いき、まき、おき</li>
</ul>
<h1 id="练习参考答案">练习参考答案</h1>
<h2 id="chapter-2-section-1-练习答案">Chapter 2 Section 1 练习答案</h2>
<p>【第一问】分类结果如下：</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">类别</th>
<th style="text-align: center;">动词</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">五段动词</td>
<td style="text-align: center;"><code>@ 許 ゆる</code>す、<code>@ 出 だ</code>す、<code>@ 導 みちび</code>く、<code>@ 塞 ふさ</code>ぐ、<code>@ 積 つ</code>もる、<code>@ 狂 くる</code>う、<code>@ 注 そそ</code>ぐ、<code>@ 回 まわ</code>る、<code>@ 結 むす</code>ぶ、<code>@ 彷徨 さまよ</code>う、<code>@ 喋 しゃべ</code>る、<code>@ 拭 ぬぐ</code>う、<code>@ 高 たか</code>まる、<code>@ 踏 ふ</code>む、なさる、<code>@ 放 はな</code>つ、<code>@ 放 ほう</code>る</td>
</tr>
<tr class="even">
<td style="text-align: center;">一段动词</td>
<td style="text-align: center;"><code>@ 駆 か</code>ける、<code>@ 出 で</code>る、<code>@ 染 そ</code>める、<code>@ 逃 のが</code>れる、<code>@ 高 たか</code>める</td>
</tr>
<tr class="odd">
<td style="text-align: center;">カ变动词</td>
<td style="text-align: center;"><code>@ 来 く</code>る</td>
</tr>
<tr class="even">
<td style="text-align: center;">サ变动词</td>
<td style="text-align: center;"><code>@ 決 けっ</code>する、<code>@ 信 しん</code>ずる</td>
</tr>
</tbody>
</table>
<h2 id="chapter-2-section-2-练习答案">Chapter 2 Section 2 练习答案</h2>
<p>【第一问】首先标出所有助词：</p>
<ul>
<li>上海<strong>から</strong>東京<strong>までの</strong>飛行機<strong>で</strong>日本<strong>へ</strong>来ました。</li>
<li>彼<strong>は</strong>優しい<strong>ので</strong>、付き合いたい。</li>
</ul>
<p>之后逐词组翻译：</p>
<ul>
<li>上海<strong>から</strong>（从上海）東京<strong>まで</strong>（到东京）<strong>の</strong>（的）飛行機<strong>で</strong>（用飞机）日本<strong>へ</strong>（到日本）来ました（来了）。</li>
<li>彼<strong>は</strong>（他）優しい<strong>ので</strong>（因为 ... 温柔）、付き合いたい（想交往）。</li>
</ul>
<p>从而通过调换语序就能得到最后的翻译：</p>
<ul>
<li>乘坐从上海到东京的飞机来到了日本。</li>
<li>因为他很温柔，所以我想和他交往。</li>
</ul>
<p>这里需要注意翻译后的句子需要补全部分汉语成分，尤其对于一些日语习惯省略主语但是汉语不习惯省略的句子，需要将主语补全。</p>
<h2 id="chapter-2-section-4-练习答案">Chapter 2 Section 4 练习答案</h2>
<p>【第一问】直接根据活用规则表即可得到这些用言（助动词）的未然形：</p>
<ul>
<li>しまわ、入ら、黄色かろ、好きだろ、話さ</li>
<li>ませ、登ら、増え、よかろ、なさら</li>
</ul>
<p>【第二问】根据接续规则，并根据词语类型根据活用规则表即可得到下述词组：</p>
<ul>
<li>歩いて、話して、出て、美しくて、あって</li>
<li>なくて・ないで、<code>@ 来 き</code>て、赤くて、学んで、死んで</li>
<li>負けて、勝って、買って、よくて、られて</li>
<li>たがって、泳いで、痛んで、行って、悪くて</li>
<li>掃除して、問うて、らしくて、作って、軽んじて</li>
</ul>
<p>【第三问】首先确定是否可能是カ变动词或者サ变动词，之后考虑到五段动词的第二连用形仅可能以「っ・ん・い・し・う」结尾，即可得到答案：</p>
<ul>
<li>さい → さく、まし → ます、よん → よぶ・よむ、いっ → いく・いう・いる、うえ → うえる</li>
<li>こう → こう、し → する、うっ → うる・うつ、えらん → えらぶ、き → くる・きる</li>
</ul>
<p>这些动词的可能汉字表记为：</p>
<ul>
<li>さい → <code>@ 咲 さ</code>く、まし → <code>@ 増 ま</code>す、よん → <code>@ 呼 よ</code>ぶ・<code>@ 読 よ</code>む、いっ → <code>@ 行 い</code>く・<code>@ 言 い</code>う・<code>@ 入 い</code>る、うえ → <code>@ 植 う</code>える</li>
<li>こう → <code>@ 乞 こ</code>う、し → する、うっ → <code>@ 売 う</code>る・<code>@ 打 う</code>つ、えらん → <code>@ 選 えら</code>ぶ、き → <code>@ 来 く</code>る・<code>@ 着 き</code>る</li>
</ul>
<p>【第四问】与第三问解题思路类似，参考答案如下：</p>
<ul>
<li>き → くる・きる、かき → かく、いき → いく・いきる、まき → まく、おき → おく・おきる</li>
</ul>
<p>这些动词的可能汉字表记为：</p>
<ul>
<li>き → <code>@ 来 く</code>る・<code>@ 着 き</code>る、かき → <code>@ 書 か</code>く、いき → <code>@ 行 い</code>く・<code>@ 生 い</code>きる、まき → <code>@ 巻 ま</code>く、おき → <code>@ 置 お</code>く・<code>@ 起 お</code>きる</li>
</ul>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 3 用言活用形与体言的基本应用</title>
    <url>/2022/08/22/ja-tutorial-ch3/</url>
    <content><![CDATA[<p>本章主要承接在上一章之后，讲解用言（助动词）各种活用形以及体言的基本应用场景。本章并不会展开讲解涉及到助动词、助词的用法，这些用法将会在后续的章节具体展开说明。对于不涉及到助动词、助词的用法，本文将详细讲解。</p>
<span id="more"></span>
<h1 id="用言名词化">用言名词化</h1>
<p>部分用言的活用形可以直接将该用言名词化：</p>
<ul>
<li>动词的第一连用形</li>
<li>形容词的第一连用形或者词干或者词干接续「さ、み」等接尾词</li>
<li>形容动词的词干或者词干接续「さ、み」等接尾词</li>
</ul>
<p>先前我们在第一章提到了送假名的规则，其中就涉及到了动词使用第一连用形名词化的例子。一般而言，动词在使用第一连用形名词化后，是否需要写出送假名的判定标准是较为模糊的。</p>
<ul>
<li><code>@ 光 ひか</code>る → <code>@ 光 ひかり</code></li>
<li><code>@ 畳 たた</code>む → <code>@ 畳 たたみ</code></li>
<li><code>@ 受 う</code>け<code>@ 付 つ</code>ける → <code>@ 受付 うけつけ</code></li>
<li><code>@ 踊 おど</code>る → <code>@ 踊 おどり</code>・<code>@ 踊 おど</code>り</li>
<li><code>@ 定 さだ</code>める → <code>@ 定 さだめ</code>・<code>@ 定 さだ</code>め</li>
<li><code>@ 迎 むか</code>える → <code>@ 迎 むか</code>え</li>
<li><code>@ 始 はじ</code>まる → <code>@ 始 はじまり</code>・<code>@ 始 はじ</code>まり</li>
<li><code>@ 終 お</code>わる → <code>@ 終 おわり</code>・<code>@ 終 お</code>わり</li>
</ul>
<p>一个大体的规律是，如果其名词形式应用更为广泛，甚至可以认为单独成词（如名词化后的含义和原先动词有所差别），如「<code>@ 光 ひかり</code>、<code>@ 畳 たたみ</code>、<code>@ 受付 うけつけ</code>」等，则送假名不需要写出，否则推荐写明和动词相对照的送假名方便读音。</p>
<p>另外，形容词、形容动词的名词化是需要根据词语的不同来确定的，不同的词语可能有不同的名词化方法，同一个词语也可以有多个名词化方法，且不同的名词化方法可能有不同的含义。这里举出一些实例，读者可以自行通过词典等方式查询这些词语比较其含义上的差别：</p>
<ul>
<li>赤い → 赤</li>
<li>強い → 強さ</li>
<li>遠い → 遠く</li>
<li>清潔だ → 清潔</li>
<li>静かだ → 静かさ</li>
<li>便利だ → 便利・便利さ</li>
</ul>
<p>这些差别将会在后续讲解接尾词的时候具体说明。</p>
<h2 id="chapter-3-section-1-练习">Chapter 3 Section 1 练习</h2>
<p>【第一问】尝试通过查阅词典等资料，名词化下述用言，并比较各种名词化用言方法的含义上的细节差别：</p>
<ul>
<li>扱う、読み込む、重い、厳格だ</li>
</ul>
<h1 id="复合词语的构成">复合词语的构成</h1>
<p>复合词语指的是两个词语通过某种规则连接成为的新的单词。拼接成为复合词语的两个词语中，位置在前的称为<strong>前项</strong>，位置在后的称为<strong>后项</strong>。一般而言，后项决定了复合词语的词性，例如说后项为动词则复合词语一般为动词。而复合词语中一般对前项有活用形的要求，基本要求如下：</p>
<ul>
<li>前项为动词时，前项动词用第一连用形</li>
<li>前项为形容词时，前项形容词用词干</li>
<li>前项为形容动词时，前项形容动词用词干</li>
<li>前项为体言时，前项体言用原形</li>
</ul>
<p>复合词语例子可以参见下述表格（涉及到形容动词的复合词较少，故部分例子缺失）：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">动词前项</th>
<th style="text-align: center;">形容词前项</th>
<th style="text-align: center;">形容动词前项</th>
<th style="text-align: center;">体言前项</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">动词后项</td>
<td style="text-align: center;">見送る <br /> （見る ＋ 送る）</td>
<td style="text-align: center;">近寄る <br /> （近い ＋ 寄る）</td>
<td style="text-align: center;">好き好む <br /> （好きだ ＋ 好む）</td>
<td style="text-align: center;">旅立つ <br /> （旅 ＋ 立つ）</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容词后项</td>
<td style="text-align: center;">粘り強い <br /> （粘る ＋ 強い）</td>
<td style="text-align: center;">細長い <br /> （細い ＋ 長い）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">心細い <br /> （心 ＋ 細い）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容动词后项</td>
<td style="text-align: center;">話し上手だ <br /> （話す ＋ 上手だ）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">好き勝手だ <br /> （好きだ ＋ 勝手だ）</td>
<td style="text-align: center;">口下手だ <br /> （口 ＋ 下手だ）</td>
</tr>
<tr class="even">
<td style="text-align: center;">体言后项</td>
<td style="text-align: center;">借り物 <br /> （借りる ＋ 物）</td>
<td style="text-align: center;">浅瀬 <br /> （浅い ＋ 瀬）</td>
<td style="text-align: center;">得意顔 <br /> （得意だ ＋ 顔）</td>
<td style="text-align: center;">春風 <br /> （春 ＋ 風）</td>
</tr>
</tbody>
</table>
<p>当然，部分助动词甚至也可以参与到构成复合词语中，例如「負け<strong>ず</strong>嫌いだ」，但是这类例子极少，故认为是一类例外而并非广泛使用的用法。</p>
<p>此外，部分词语复合后可能发生浊音便等音便，比如：</p>
<ul>
<li><code>@ 心 こころ</code> ＋ <code>@ 細 ほそ</code>い → <code>@ 心細 こころぼそ</code>い</li>
</ul>
<div class="note info no-icon"><p>复合词语的语义应当由前项与后项共同赋予。但是随着语言的发展，部分复合词语中的后项逐步退化。这意味着部分后项词语逐渐变为了类似补助词语的存在，复合词语的语义主要由其前项决定。</p>
<p>比如动词「合う」，其作为复合词语的后项的时候，用于表达“相互”的语义。如「分かる」的含义为“了解、理解”，那么「分かり合う」的含义为“相互理解”。</p>
<p>比如形容词「難い」，其作为复合词语的后项的时候，用于表达“难以”的语义。如「腐る」的含义为“腐坏”，那么「腐りにくい」的含义为“难以腐坏”。</p>
<p>根据我们在 Chapter 1 中的讲解，含义虚化的词语一般使用平假名表记。事实上，作为复合词语后项的「にくい」已经基本完全仅使用平假名表记。而作为复合词语后项的「合う」使用汉字表记以及平假名表记的频率目前依然持平。</p>
<p>更多近似补助词语的复合词语后项我们将会在后续部分讲解。</p>
</div>
<h2 id="chapter-3-section-2-练习">Chapter 3 Section 2 练习</h2>
<p>【第一问】尝试将下述给定前项与后项的词语对构成复合词语，并通过词典等方式查询这些复合词语的含义：</p>
<ul>
<li>やる ＋ 直す</li>
<li>理解する ＋ やすい</li>
<li>見る ＋ 失う</li>
<li>結ぶ ＋ つく</li>
<li>手 ＋ 放す</li>
<li>弱い ＋ すぎる</li>
</ul>
<h1 id="语句的中顿与终止">语句的中顿与终止</h1>
<p>一般而言，我们终结一句话的时候，应当使用用言（或者助动词）的终止形或者命令形。终止形结句是普遍的语法现象，而命令形结句仅会出现在表达命令语义的时候，常常带有强烈的情感倾向（部分以命令形结尾的敬语用法除外）。此外，使用用言（或者助动词）的终止形或者命令形辅助以终助词结句，以表达附加语义也是极为常见的。</p>
<p>此外可以注意到，在非正式的行文或者口语中，形容词或者形容动词的词干也可以用于结句。这种结句方式往往带有较为强烈的情感倾向。</p>
<p>使用体言结句是可行的，但是使用体言结句这种简洁的用法（这种语法现象称为「体言止め」）几乎仅出现在文学作品、和歌之中，正式文章很少使用。并且，用体言直接终结的句子一般结构比较单一，并不是普遍现象。所以这里暂不讨论使用体言结句的用法。</p>
<p>使用非终助词的助词结句也是可行的，但也不是一种正式或者普遍的结句方法。</p>
<p>总而言之，终结语句的常见方式包括：</p>
<ul>
<li>动词的终止形或者命令形（可以附加终助词）</li>
<li>形容词的终止形或者词干（可以附加终助词）</li>
<li>形容动词的终止形或者词干（可以附加终助词）</li>
<li>助动词的终止形或者命令形（可以附加助动词）</li>
<li>【不常使用】体言</li>
<li>【不常使用】非终助词的助词</li>
</ul>
<p>现在我们观察下述直接使用用言（或者助动词）的终止形结句的例句：</p>
<ul>
<li>春が来ると、桜が<strong>咲く</strong>。</li>
<li>わたしがあの子供に笑わ<strong>せる</strong>。</li>
<li>寝不足だから今はすごく<strong>眠い</strong>。</li>
<li></li>
<li>この問題はとても<strong>簡単だ</strong>。</li>
<li>天気予報によると、明日は雨が降り<strong>そうだ</strong>。</li>
<li>初めまして、わたくしは〇〇社の××と申し<strong>ます</strong>。</li>
</ul>
<h1 id="练习参考答案">练习参考答案</h1>
<p>本章节没有练习问题。</p>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>简明日语自学手册 Chapter 4 助动词接续规则</title>
    <url>/2022/08/22/ja-tutorial-ch4/</url>
    <content><![CDATA[<p>本文将主要讲解各个助动词的基本使用法则，并举出若干例句进行分析。本章例句尽量避免出现没有提到的助词，句子结构也尽力简化，以方便读者自行分析句子结构。</p>
<span id="more"></span>
<p>本章为了讲解各类词语如何接续给定助动词，选取的用言词例为「読む、起きる、来る、する、高い、好きだ」，选取的体言词例为「花」，选取的助动词词例为「たがる、られる、ない、ようだ、です、ます、た、そうだ①、まい、う、ず・ぬ・ん、べし」，助动词中后八个词例会单独列表，因为其活用不规则。下面以助动词「ない」为例，将这些例词与「ない」接续的要求整理为表格，而本章将会多次使用类似该格式的表格整理助动词对其之前的词语的活用形式要求：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形 <br /> <strong>読ま</strong>ない <br /> <strong>たがら</strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong>起き</strong>ない <br /> <strong>られ</strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong><code>@ 来 こ</code></strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong>し</strong>ない</td>
<td style="text-align: center;">第一连用形 <br /> <strong>高く</strong>ない <br /> <strong>なく</strong>ない</td>
<td style="text-align: center;">第一连用形 <br /> <strong>好きで</strong><em>は</em>ない <br /> <strong>ようで</strong><em>は</em>ない</td>
<td style="text-align: center;">（助动词） <br /> <strong>花</strong><em>では</em>ない</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（助动词） <br /> <strong>う</strong><em>では</em>ない</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>后续如果有特殊说明会在表后列出。</p>
<p>该表有一项并未覆盖到，即助词之后接续助动词。事实上，能够接续在助词之后的助动词较少，并且能够接续助动词的助词也较少。如果即将讲解的助动词可以接续在助词之后，会另附表举出若干例子。</p>
<p>此外，一定注意，本表仅显示接续要求，并不一定代表接续后形成的词组真实存在。</p>
<h1 id="否定助动词ない">否定助动词「ない」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形 <br /> <strong>読ま</strong>ない <br /> <strong>たがら</strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong>起き</strong>ない <br /> <strong>られ</strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong><code>@ 来 こ</code></strong>ない</td>
<td style="text-align: center;">未然形 <br /> <strong>し</strong>ない</td>
<td style="text-align: center;">第一连用形 <br /> <strong>高く</strong>ない <br /> <strong>なく</strong>ない</td>
<td style="text-align: center;">第一连用形 <br /> <strong>好きで</strong><em>は</em>ない <br /> <strong>ようで</strong><em>は</em>ない</td>
<td style="text-align: center;">（助动词） <br /> <strong>花</strong><em>では</em>ない</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（助动词） <br /> <strong>う</strong><em>では</em>ない</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>该接续的例外包括：</p>
<ul>
<li>五段动词「ある」接续「ない」形成「ない」而非「あらない」</li>
<li>助动词「そうだ②」与「ない」接续表达否定的形式较为复杂且不规则，我们将会在讲解助动词「そうだ②」的时候讨论</li>
</ul>
<p>词语接续助动词「ない」后的形式，一般称之为该词语的<strong>否定式</strong>。</p>
<p>下面我们给出一些否定式的例句。</p>
<ul>
<li>そんなことをまだ<strong>知ら<u>ない</u></strong>。</li>
<li>この服は値段がきっと<strong>安く<u>ない</u></strong>。</li>
<li><strong>好きで<em>は</em><u>ない</u></strong>と思うが、<strong>嫌いで<em>も</em><u>ない</u></strong>。</li>
<li>わたしは<strong>学生<em>では</em><u>ない</u></strong>。</li>
<li>もう遅いから、帰ろ<strong>う<em>では</em><u>ない</u></strong>か？</li>
</ul>
<p>此外，在口语中「ては・では」可以约音为「ちゃ・じゃ」，所以上述例句中后三句在口语中可以表达为：</p>
<ul>
<li><strong>好き<em>じゃ</em><u>ない</u></strong>と思うが、<strong>嫌いで<em>も</em><u>ない</u></strong>。</li>
<li>わたしは<strong>学生<em>じゃ</em><u>ない</u></strong>。</li>
<li>もう遅いから、帰ろ<strong>う<em>じゃ</em><u>ない</u></strong>か？</li>
</ul>
<p>现在我们分析这样的一个语法现象，动词接续「ない」的方式为使用未然形接续，而形容词和形容动词却使用第一连用形接续，且体言和助动词「う」均是首先接续助动词「だ」之后通过「だ」的第一连用形再接续「ない」。这种未然形和连用形的对立，根本原因是动词所接续的「ない」和其他情况下的「ない」有着并不一致的语源。</p>
<p>简而言之，动词所接续的「ない」是严格意义上的助动词，而形容词、形容动词所接续的「ない」实际上是实意形容词「無い」退化形成的形式形容词，而这两者在现代日语中逐渐合流，其区分也不再明显。在这样的语源基础上，形容词、形容动词就应当使用连用形接续一般用言。</p>
<p>目前还能体现这两者差别的语法现象在于，形容词、形容动词在接续「ない」之前，还可以先接续副助词「は、も」等。其中，形容词先接续副助词的情况不多，但形容动词几乎必须先接续副助词「は」，以至于可以直接认为形容动词「○○だ」的否定式就是「○○ではない」。</p>
<p>而相对应地，动词在接续「ない」之前，绝不可以接续任何助词，动词必须直接使用未然形直接接续「ない」。</p>
<ul>
<li>（×）食べ<strong>は</strong>ない</li>
<li>（○）高く<strong>は</strong>ない</li>
<li>（○）静かで<strong>は</strong>ない</li>
</ul>
<p>另外一种能够体现这两者差别的语法现象是，否定形容词、形容动词的时候，可以将「ない」替换为「ありません」。这是动词「ある」的一般尊敬体的否定，并非严格意义上的助动词，而更应当为一般用言的活用形式。使用「ありません」否定的时候，一般而言语气更为尊敬。</p>
<ul>
<li>あそこのビルは<strong>高く<u>ありません</u></strong>。</li>
<li>この町は<strong>にぎやかで<em>は</em><u>ありません</u></strong>。</li>
<li>まだ卒業していないので、<strong>会社員<em>では</em><u>ありません</u></strong>。</li>
<li>一緒に食べに行こ<strong>う<em>では</em><u>ありません</u></strong>か？</li>
</ul>
<p>相应地，动词绝不可以用「ありません」否定。</p>
<ul>
<li>（×）そんなことを<strong>やら<u>ありません</u></strong>。</li>
</ul>
<div class="note info no-icon"><p>助动词「う」的否定式「うではない」目前几乎仅可以应用于固定句式「～うではないか？」之中，用于表示说话者的邀请和提议。</p>
</div>
<p>该助动词的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）彼女は家にい<strong>ない</strong>。</li>
<li>（未然形）君はまさか田中さんでは<strong>なかろ</strong>うか？</li>
<li>（連用形①）あいつは優しく<strong>なく</strong>て、すぐ怒る人だな。</li>
<li>（連用形②）もし雨は降ら<strong>なかっ</strong>たら行く。</li>
<li>（連体形）やってはいけ<strong>ない</strong>ことを絶対にやらない。</li>
<li>（仮定形）やってみ<strong>なけれ</strong>ばなんでも知らない。</li>
</ul>
<div class="note info no-icon"><p>目前「ない」的未然形「なかろ」在口语中使用频率逐步降低，该用法逐渐仅出现在书面用语中，而在口语中其替换形式为「ない」首先接续助动词「だ」后用「だ」的未然形表达的「ないだろ」：</p>
<ul>
<li>（書き言葉）君はまさか田中さんでは<strong>なかろ</strong>うか？</li>
<li>（話し言葉）君はまさか田中さんでは<strong>ないだろ</strong>うか？</li>
</ul>
</div>
<h1 id="否定助动词ずぬん">否定助动词「ず・ぬ・ん」</h1>
<div class="note warning no-icon"><p>初学日语的读者可以暂且不用学习该助动词，因该助动词和古典日语有较大关联，其连用、活用等规则较为复杂，但是该助动词在现代日语中的高频应用已经几乎只剩下用于否定助动词「ます」以形成否定式「ません」。</p>
</div>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形 <br /> <strong>読ま</strong>ず <br /> <strong>読ま</strong>ぬ <br /> <strong>読ま</strong>ん <br /> <strong>たがら</strong>ず <br /> （以下略）</td>
<td style="text-align: center;">未然形 <br /> <strong>起き</strong>ず <br /> （以下略） <br /> <strong>られ</strong>ず <br /> （以下略）</td>
<td style="text-align: center;">未然形 <br /> <strong><code>@ 来 こ</code></strong>ず <br /> （以下略）</td>
<td style="text-align: center;">未然形 <br /> <strong>せ</strong>ず <br /> （以下略）</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形 <br /> <strong>ませ</strong>ん <br /> <strong>ませ</strong>ぬ <br /> <strong>ませ</strong>ず</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">未然形 <br /> <strong>べから</strong>ず</td>
</tr>
</tbody>
</table>
<p>该助动词也用于表达否定的含义，是一种较为古典的表达方式，在现代日语中也残留有部分固定表达。尤其是「ます」仅能使用该助动词否定，且几乎仅使用「ません」的形式。</p>
<div class="note info no-icon"><p>该助动词的古日语语源有一种解释为，其原本为表示否定的助动词「ず」，之后附着上ラ变动词「あり」后变为「ずあり」，后续音便为「ざり」，从而具有了类似ラ变动词的一套活用形式。</p>
<p>从而该助动词的活用表就有了两个系列（这里使用古日语活用形名称）：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">終止形</th>
<th style="text-align: center;">未然形</th>
<th style="text-align: center;">連用形</th>
<th style="text-align: center;">連体形</th>
<th style="text-align: center;">已然形</th>
<th style="text-align: center;">命令形</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">不規則</td>
<td style="text-align: center;">ず</td>
<td style="text-align: center;">ず</td>
<td style="text-align: center;">ず</td>
<td style="text-align: center;">ぬ</td>
<td style="text-align: center;">ね</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">ラ変</td>
<td style="text-align: center;">（ざり）</td>
<td style="text-align: center;">ざら</td>
<td style="text-align: center;">ざり</td>
<td style="text-align: center;">ざる</td>
<td style="text-align: center;">ざれ</td>
<td style="text-align: center;">ざれ</td>
</tr>
</tbody>
</table>
<p>在现代日语演变过程中，连体形、终止形逐渐合流，从而以「ぬ」结句的形式逐步扩展开。随后由于音便，「ぬ」约音为「ん」，从而形成了现在复杂的助动词「ず・ぬ・ん」。</p>
</div>
<p>该助动词的各类活用形式的例句如下（由于该助动词为古代日语残留，在现代日语中应用有限，故需要引入古代日语例句。这里标星号的例句为古代日语例句，相应的现代日语翻译标注在其后）：</p>
<ul>
<li>（終止形①）無用の者入るべから<strong>ず</strong>。</li>
<li>（終止形②）年には勝て<strong>ぬ</strong>。</li>
<li>（終止形③）まだうまく歌うことができませ<strong>ん</strong>。</li>
<li>（未然形）*夢と知りせば覚め<strong>ざら</strong>ましを。
<ul>
<li>（現代語訳）もし夢とわかっていたなら覚めなかったろうに。</li>
</ul></li>
<li>（連用形①）*神鳴る騒ぎにえ聞か<strong>ざり</strong>けり。
<ul>
<li>（現代語訳）雷の鳴るやかましさに聞くことができなかった。</li>
</ul></li>
<li>（連用形②）電気を消さ<strong>ず</strong>に寝てしまいました。</li>
<li>（連体形①）バスが故障したので、帰ら<strong>ざる</strong>をえなかった。</li>
<li>（連体形②）なければなら<strong>ぬ</strong>人。</li>
<li>（仮定形①）*人木石にあら<strong>ざれ</strong>ば、みな情あり。
<ul>
<li>（現代語訳）人は木や石のような非情のものでないから、皆人情がある。</li>
</ul></li>
<li>（仮定形②）学生として勉強せ<strong>ね</strong>ばならない。</li>
<li>（命令形）*我を打たしめ<strong>ざれ</strong>。
<ul>
<li>（現代語訳）私を打たせないようにしてくれ。</li>
</ul></li>
</ul>
<div class="note info no-icon"><p>根据上述例句，实际上可以看出该助动词在现代日语中的残留几乎仅有下述若干情况：</p>
<ul>
<li>「ん」终止形用于否定助动词「ます」形成「ません」</li>
<li>「ん」终止形在口语中作为「ない」的替代</li>
<li>「ず」连用形形成「ず・ずに」作为「なくて・ないで」中顿形式的替代</li>
<li>「ぬ」终止形、连体形以及相应的「ね」假定形作为「ない・なけれ」的替代</li>
<li>「ず」终止形用于否定古语助动词「べし」形成「べからず」</li>
<li>「ざる」连体形几乎仅用于形成固定句式「～ざるを得ない」，表示“不得不”</li>
</ul>
<p>上述六种使用方式由高频到低频排列。事实上就作者实际阅读现代日语文本、歌词等的经验而言，后两种情况并未实际见过，仅仅因为这两种情况是 JLPT 日语等级测验语法考点才将其列在上述列表中。并且第四点也仅仅在部分谚语、仿古歌词、严谨行文的文章中出现。</p>
</div>
<h1 id="过去时态助动词た">过去时态助动词「た」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">第二连用形 <br /> <strong>読ん</strong>だ <br /> <strong>たがっ</strong>た</td>
<td style="text-align: center;">第二连用形 <br /> <strong>起き</strong>た <br /> <strong>られ</strong>た</td>
<td style="text-align: center;">第二连用形 <br /> <strong><code>@ 来 き</code></strong>た</td>
<td style="text-align: center;">第二连用形 <br /> <strong>し</strong>た</td>
<td style="text-align: center;">第二连用形 <br /> <strong>高かっ</strong>た <br /> <strong>なかっ</strong>た</td>
<td style="text-align: center;">第二连用形 <br /> <strong>好きだっ</strong>た <br /> <strong>ようだっ</strong>た</td>
<td style="text-align: center;">（助动词） <br /> <strong>花</strong><em>だっ</em>た <br /> <strong>花</strong><em>でし</em>た</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">连用形 <br /> <strong>でし</strong>た</td>
<td style="text-align: center;">连用形 <br /> <strong>まし</strong>た</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（助动词） <br /> <strong>ん</strong><em>でし</em>た</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>词语接续助动词「た」后的形式，一般称之为该词语的<strong>过去式</strong>。</p>
<p>下面我们给出一些过去式的例句。</p>
<ul>
<li>ゆうべ酷い雨が<strong>降っ<u>た</u></strong>よ。</li>
<li>昨日の天気はすごく<strong>寒かっ<u>た</u></strong>な。</li>
<li>昔にこの町は<strong>にぎやかだっ<u>た</u></strong>。</li>
<li>三年前にここは公園<strong>でし<u>た</u></strong>。</li>
<li>あのことならもうわかり<strong>まし<u>た</u></strong>。</li>
<li>あのときわたしは会社員ではありませ<strong>ん<em>でし</em><u>た</u></strong>。</li>
</ul>
<p>这里需要注意的是动词终止形如果以「ぐ、む、ぬ、ぶ」结尾，在活用为第二连用形后接续助动词「た」的时候，应当发生浊音便形成「○だ」的形式。</p>
<p>此外，我们需要额外讲解过去否定式。日语中过去式和否定式连用的时候，应当先进行否定，之后表达过去时态。对动词而言，其首先使用助动词「ない」否定，之后使用助动词「ない」接续助动词「た」表达过去否定：</p>
<ul>
<li>読む → 読まない → 読まなかった</li>
</ul>
<p>需要注意，使用助动词「ず・ぬ・ん」否定的动词几乎不再进一步活用以表达过去时态：</p>
<ul>
<li>読む → 読まず → ×</li>
</ul>
<p>而形容词使用「ない」否定的时候，其过去否定和动词的逻辑类似：</p>
<ul>
<li>高い → 高くない → 高くなかった</li>
</ul>
<p>先前在讲解否定助动词的时候提到了用「ない」否定形容词、形容动词的时候可以使用「ありません」替代，而此时进一步表达过去时态需要使用「ありませんでした」。这里因为否定助动词「ん」无法直接接续助动词「た」，而是先接续助动词「です」之后再接续助动词「た」形成「でした」的形式：</p>
<ul>
<li>高い → 高くありません → 高くありませんでした</li>
</ul>
<div class="note info no-icon"><p>助动词「ん」的过去式，即「んでした」，在现代日语中几乎仅存在于助动词「ます」的过去否定式「ませんでした」之中，其余情况下均不应当使用该形式。</p>
</div>
<p>形容动词的过去否定则与形容词同理：</p>
<ul>
<li>好きだ → 好きではない → 好きではなかった</li>
<li>好きだ → 好きではありません → 好きではありませんでした</li>
</ul>
<p>该助动词的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）昨日のこと、本当にすまなかっ<strong>た</strong>。</li>
<li>（連体形）そう言っ<strong>た</strong>のはわたしではない。</li>
<li>（仮定形）もしわたしが鳥だっ<strong>たら</strong>、あなたのもとへ飛んでいくだろう。</li>
<li>（意志形）昨日の映画はおもしろかっ<strong>たろ</strong>う。</li>
</ul>
<div class="note info no-icon"><p>与「なかろ」类似，「た」的意志形「たろ」在现代日语口语中的使用频率也在降低，取而代之的是「た」接续助动词「だ」后用「だ」的未然形「だろ」表达的形式：</p>
<ul>
<li>（書き言葉）昨日の映画はおもしろかっ<strong>たろ</strong>う。</li>
<li>（話し言葉）昨日の映画はおもしろかっ<strong>ただろ</strong>う。</li>
</ul>
</div>
<div class="note info no-icon"><p>助动词「た」的假定形「たら」实际上已经基本不具有表达过去时态的含义，而更多地作为一种表达假定含义的助动词存在。</p>
<p>表达假定含义的助动词与助词之间更为详细的使用方式区别，之后再讲解。</p>
</div>
<h1 id="尊敬语气助动词ます">尊敬语气助动词「ます」</h1>
<p>该助动词的接续表为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">第一连用形 <br /> <strong>読み</strong>ます <br /> <strong>たがり</strong>ます</td>
<td style="text-align: center;">第一连用形 <br /> <strong>起き</strong>ます <br /> <strong>られ</strong>ます</td>
<td style="text-align: center;">第一连用形 <br /> <strong><code>@ 来 き</code></strong>ます</td>
<td style="text-align: center;">第一连用形 <br /> <strong>し</strong>ます</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>该接续的例外包括：</p>
<ul>
<li>五大敬语动词「いらっしゃる、くださる、なさる、おっしゃる、ござる」接续「ます」形成「いらっしゃ<strong>い</strong>ます、くださ<strong>い</strong>ます、なさ<strong>い</strong>ます、おっしゃ<strong>い</strong>ます、ござ<strong>い</strong>ます」而非「いらっしゃ<strong>り</strong>ます、くださ<strong>り</strong>ます、なさ<strong>り</strong>ます、おっしゃ<strong>り</strong>ます、ござ<strong>り</strong>ます」</li>
</ul>
<p>词语接续助动词「ます」后的形式，一般称之为该词语的<strong>ます形</strong>。</p>
<p>动词接续助动词「ます」是为了表达一般尊敬的陈述语气，该语气也是与陌生人对话、公共场合演讲、与上级者对话时经常使用的语气。</p>
<p>该助动词除去提示这类尊敬语气之外的应用极少，且动词附加该助动词后的语义几乎不发生变化。所以部分面向国人的教程也会将ます形作为动词的基础形式，而非严格语法中的原形。因为国人应用日语的场合大多为和陌生日本人交谈，更应当采用ます形作为基本语气。</p>
<p>该助动词的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）わたしは毎日朝七時に起き<strong>ます</strong>。</li>
<li>（未然形）わたしはまだ日本語の文章を読むことができ<strong>ませ</strong>ん。</li>
<li>（連用形）初め<strong>まし</strong>て、よろしくお願いします。</li>
<li>（連体形）愛される子になれ<strong>ます</strong>ように。</li>
<li>（仮定形）よく考えてみ<strong>ますれ</strong>ば、この責任はわれわれの大人にあると言えるのでしょうか。</li>
<li>（命令形①）いらっしゃい<strong>ませ</strong>。</li>
<li>（命令形②）お早くお召し上がりください<strong>まし</strong>。</li>
<li>（意志形）一緒に食事に行き<strong>ましょ</strong>う。</li>
</ul>
<p>部分条件下，可以将「ません」称为「ます」的否定式，将「ました」称为「ます」的过去式，将「ませんでした」称为「ます」的过去否定式，将「ましょう」称为「ます」的意志式。</p>
<div class="note info no-icon"><p>「ます」的假定形「ますれ」在日常的日语交流中极少使用，一般使用先接续助动词「た」之后使用「た」的假定形「たら」形成的「ましたら」作为其替代表达：</p>
<ul>
<li>真面目に勉強し<strong>ますれ</strong>ば、もっといい成績を取るかもしれません。</li>
<li>真面目に勉強し<strong>ましたら</strong>、もっといい成績を取るかもしれません。</li>
</ul>
</div>
<h1 id="尊敬语气判断助动词です">尊敬语气判断助动词「です」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">（终止形） <br /> <strong>読む</strong>です <br /> <strong>たがる</strong>です</td>
<td style="text-align: center;">（终止形） <br /> <strong>起きる</strong>です <br /> <strong>られる</strong>です</td>
<td style="text-align: center;">（终止形） <br /> <strong><code>@ 来 く</code>る</strong>です</td>
<td style="text-align: center;">（终止形） <br /> <strong>する</strong>です</td>
<td style="text-align: center;">（终止形） <br /> <strong>高い</strong>です <br /> <strong>ない</strong>です</td>
<td style="text-align: center;">词干 <br /> <strong>好き</strong>です <br /> <strong>よう</strong>です</td>
<td style="text-align: center;">原形 <br /> <strong>花</strong>です</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">（终止形） <br /> <strong>た</strong>です</td>
<td style="text-align: center;">词干 <br /> <strong>そう</strong>です</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">助词接续例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><strong>から</strong>です、<strong>の</strong>です</td>
</tr>
</tbody>
</table>
<p>相比较于动词之后常常接续「ます」，体言之后常常接续「です」。该助动词的作用为表达判断，与汉语的“是”作用类似。</p>
<p>在表达的语气方面，助动词「です」同时也提示了一般尊敬语气，其与「ます」的尊敬程度相当，常常应用在与陌生人对话、公共场合演讲、与上级者对话时。</p>
<p>这里需要提示的是，形容动词和体言接续「です」是自然且广泛使用的，但是形容词使用终止形接续「です」则是有一定争议的，而动词以及助动词「た」等使用终止形接续「です」则更多时候被视为不正确的日语。但是由于口语中动词接续「です」的使用方法依然存在，这里也将其列出。</p>
<p>形容词使用终止形接续「です」根据形容词的不同，其违和感程度也相应不同。例如「楽しいです」等近乎于固定用法的语句已经被大多数人接受且运用，而类似「興味深いです」等用法则逐渐被接受，另外一方面「多いです、少ないです」等表达在一部分人看来有着强烈的违和感，但是随着时间推移也正在被逐步接受。具体形容词和「です」是否连用应当根据大多数人的使用方式来确定。</p>
<p>若考虑口语的话，该助动词几乎已经滥用在各种词语之后。在这一层意义上，该助动词实际上丧失了判定的含义，单纯成为一般尊敬语气的标记，除去动词常用「ます」标记外，几乎所有词语都可以接续「です」表达一般尊敬。</p>
<ul>
<li>おもちゃは先ず安全である<strong>べきです</strong>。</li>
</ul>
<p>该助动词的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）今年わたしは二十四歳<strong>です</strong>。</li>
<li>（連用形）去年わたしは二十三歳<strong>でし</strong>た。</li>
<li>（連体形）まだ未成年<strong>です</strong>ので、お酒は飲めません。</li>
<li>（意志形）明日は雨<strong>でしょ</strong>う。</li>
</ul>
<p>部分条件下，可以将「でした」称为「です」的过去式，将「でしょう」称为「です」的意志式。</p>
<h1 id="判断助动词だ">判断助动词「だ」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">（终止形） <br /> <strong>読む</strong>だ <br /> <strong>たがる</strong>だ</td>
<td style="text-align: center;">（终止形） <br /> <strong>起きる</strong>だ <br /> <strong>られる</strong>だ</td>
<td style="text-align: center;">（终止形） <br /> <strong><code>@ 来 く</code>る</strong>だ</td>
<td style="text-align: center;">（终止形） <br /> <strong>する</strong>だ</td>
<td style="text-align: center;">（终止形） <br /> <strong>高い</strong>だ <br /> <strong>ない</strong>だ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">原形 <br /> <strong>花</strong>だ</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">だ</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">（终止形） <br /> <strong>ます</strong>だ</td>
<td style="text-align: center;">（终止形） <br /> <strong>た</strong>だ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">助词接续例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><strong>から</strong>だ、<strong>の</strong>だ</td>
</tr>
</tbody>
</table>
<p>该助动词的基础用法和「です」几乎一致，不同的地方在于语气不同。「です」提示了一般尊敬语气，但是「だ」则是日常使用的语气。</p>
<p>该助动词和「です」一样，接续在体言之后是自然的，而接续在形容词后是存在争议的，接续在动词与部分助动词后一般视为语法错误。但是，该助动词的部分活用形式，尤其是未然形「だろ」或者是假定形「なら」，接续在动词与部分助动词后却是一定程度的常见用法。下表展现了助动词「だ」各种活用形式接续在动词之后的接受程度与替代表达：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">接续</th>
<th style="text-align: center;">接受程度</th>
<th style="text-align: center;">替代表达</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">终止形</td>
<td style="text-align: center;">読む<strong>だ</strong></td>
<td style="text-align: center;">一般</td>
<td style="text-align: center;">読むのだ</td>
</tr>
<tr class="even">
<td style="text-align: center;">未然形</td>
<td style="text-align: center;">読む<strong>だろ</strong>（う）</td>
<td style="text-align: center;">较常见</td>
<td style="text-align: center;">（読もう）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">第一连用形</td>
<td style="text-align: center;">読む<strong>で</strong></td>
<td style="text-align: center;">极少见</td>
<td style="text-align: center;">読んで</td>
</tr>
<tr class="even">
<td style="text-align: center;"></td>
<td style="text-align: center;">読む<strong>で</strong><em>は</em>ない・読む<strong>じゃ</strong>ない</td>
<td style="text-align: center;">较常见</td>
<td style="text-align: center;">（読まない）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">第二连用形</td>
<td style="text-align: center;">読む<strong>だっ</strong>（た）</td>
<td style="text-align: center;">极少见</td>
<td style="text-align: center;">読んだ</td>
</tr>
<tr class="even">
<td style="text-align: center;">第三连用形</td>
<td style="text-align: center;">読む<strong>に</strong></td>
<td style="text-align: center;">极少见</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="odd">
<td style="text-align: center;">连体形</td>
<td style="text-align: center;">読む<strong>な</strong></td>
<td style="text-align: center;">极少见</td>
<td style="text-align: center;">読む</td>
</tr>
<tr class="even">
<td style="text-align: center;">假定形</td>
<td style="text-align: center;">読む<strong>なら</strong></td>
<td style="text-align: center;">常见</td>
<td style="text-align: center;">（読めば）</td>
</tr>
</tbody>
</table>
<p>事实上「読むだろう」以及「読むなら」以及「読むではない」等这类用法存在的目的是补全动词活用也未能表达出的部分语义。这里「読むだろう」与「読もう」的差别，「読むなら」与「読めば」乃至于与「読んだら」和「読むと」的差别则在后续进一步阐释。</p>
<div class="note info no-icon"><p>这里简单阐述一下动词的一般否定形式和使用「だ」的否定形式的区别。</p>
<p>事实上，这也就是日语反问句的构成。我们比较下述两句话：</p>
<ul>
<li>いま起きて<strong>いない</strong>か？</li>
<li>いま起きて<strong>いるではない</strong>か？</li>
</ul>
<p>这里第一句话明显偏向否定语义，是对动词否定含义的推测，可以翻译为“现在你没醒着吗”，或者意译为“现在你睡着吗”。而第二句话则是偏向肯定语义，实际上构成反问句句式，事实上表达的含义为“现在你不是醒着吗”。</p>
<p>另外这里需要说明的是，在口语中反问句的「ではない」常常约音为「じゃん」。例如：</p>
<ul>
<li>しっかりして<strong>と</strong>言っ<strong>てお</strong>いた<strong>ではない</strong>か？</li>
<li>しっかりして<strong>って</strong>言っ<strong>と</strong>いた<strong>じゃん</strong>？</li>
</ul>
<p>这里上方是未约音的句子，下方为约音后的句子，这里一共发生三次口语约音。</p>
</div>
<p>另外一方面，形容词接续「だ」的活用形式形成的「高いだろう」，以及接续「です」的活用形式形成的「高いでしょう」等这类表达，则和动词有着类似的出发点，即补全缺失的意志形和替代并不常用的未然形。</p>
<p>相比之下，形容动词的未然形虽然依然常用，但其使用词干接续「です」的活用形式形成的「好きでしょう」等表达也同时是常用词组。</p>
<div class="note info no-icon"><p>事实上上述各种词组之间的对照，归根结底是日语两种常用语体之间的对立，即<strong>ですます体</strong>与<strong>简体</strong>（或称<strong>だ体</strong>）之间的对立。</p>
<p>ですます体已经提到过，是一种面向陌生人、上级等有一定距离的对象的语体，而简体则是面向自己、亲友等关系紧密的对象，或者自己所不尊敬、蔑视的对象的语体。</p>
<p>事实上日语中还存在<strong>である体</strong>，其基本上仅用于严谨的书面文章中。「である」的语源为判断助动词「だ」的第一连用形接续动词「ある」，其完全继承了动词「ある」的活用方式。另外，「である」在表达尊敬含义的时候也可以使用「であります」。</p>
<p>「である」的另外一种用途是用于补全「です、だ」缺失的部分活用。例如「です、だ」需要接续助词「ば」表示假定的时候，「だ」可以使用「ならば」的形式，但是「です」没有假定形，此时只能使用「である」代替表达为「であれば」。</p>
<p>另外，由于ですます体实际上仅仅是一般尊敬，在公文、商务邮件、与地位相对高的对象交谈等场合中所使用的，更为完整的敬语体系则在后续部分介绍。</p>
<p>下表列举出了ですます体与简体中相对应的若干词组：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">ですます体</th>
<th style="text-align: center;">简体</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">动词陈述</td>
<td style="text-align: center;">読みます</td>
<td style="text-align: center;">読む</td>
</tr>
<tr class="even">
<td style="text-align: center;">动词否定</td>
<td style="text-align: center;">読みません</td>
<td style="text-align: center;">読まない</td>
</tr>
<tr class="odd">
<td style="text-align: center;">动词过去</td>
<td style="text-align: center;">読みました</td>
<td style="text-align: center;">読んだ</td>
</tr>
<tr class="even">
<td style="text-align: center;">动词过去否定</td>
<td style="text-align: center;">読みませんでした</td>
<td style="text-align: center;">読まなかった</td>
</tr>
<tr class="odd">
<td style="text-align: center;">动词意志</td>
<td style="text-align: center;">読みましょう</td>
<td style="text-align: center;">読もう</td>
</tr>
<tr class="even">
<td style="text-align: center;">动词推测</td>
<td style="text-align: center;">読むでしょう</td>
<td style="text-align: center;">読むだろう</td>
</tr>
<tr class="odd">
<td style="text-align: center;">动词命令</td>
<td style="text-align: center;">（読みましょう）</td>
<td style="text-align: center;">読め</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容词陈述</td>
<td style="text-align: center;">高いです</td>
<td style="text-align: center;">高い <br /> （高いだ）</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容词否定</td>
<td style="text-align: center;">高くありません <br /> （高くないです）</td>
<td style="text-align: center;">高くない</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容词过去</td>
<td style="text-align: center;">高かったです</td>
<td style="text-align: center;">高かった</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容词过去否定</td>
<td style="text-align: center;">高くありませんでした <br /> （高くなかったです）</td>
<td style="text-align: center;">高くなかった</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容词推测、征询</td>
<td style="text-align: center;">高いでしょう</td>
<td style="text-align: center;">高いだろう</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容词命令</td>
<td style="text-align: center;">（高くしましょう）</td>
<td style="text-align: center;">高くしろ・高くせよ</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容动词陈述</td>
<td style="text-align: center;">静かです</td>
<td style="text-align: center;">静かだ</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容动词否定</td>
<td style="text-align: center;">静かではありません <br /> （静かではないです）</td>
<td style="text-align: center;">静かではない</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容动词过去</td>
<td style="text-align: center;">静かだったです</td>
<td style="text-align: center;">静かだった</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容动词过去否定</td>
<td style="text-align: center;">静かではありませんでした <br /> （静かではなかったです）</td>
<td style="text-align: center;">静かではなかった</td>
</tr>
<tr class="even">
<td style="text-align: center;">形容动词推测、征询</td>
<td style="text-align: center;">静かでしょう</td>
<td style="text-align: center;">静かだろう</td>
</tr>
<tr class="odd">
<td style="text-align: center;">形容动词命令</td>
<td style="text-align: center;">（静かにしましょう）</td>
<td style="text-align: center;">静かにしろ・静かにせよ</td>
</tr>
</tbody>
</table>
<p>下表为描述体言的时候，三种语体相对应的若干词组：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">ですます体</th>
<th style="text-align: center;">简体</th>
<th style="text-align: center;">である体</th>
<th style="text-align: center;">（であります体）</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">陈述</td>
<td style="text-align: center;">花です</td>
<td style="text-align: center;">花だ</td>
<td style="text-align: center;">花である</td>
<td style="text-align: center;">花であります</td>
</tr>
<tr class="even">
<td style="text-align: center;">否定</td>
<td style="text-align: center;">花ではありません</td>
<td style="text-align: center;">花ではない</td>
<td style="text-align: center;">花ではない</td>
<td style="text-align: center;">花ではありません</td>
</tr>
<tr class="odd">
<td style="text-align: center;">过去</td>
<td style="text-align: center;">花でした</td>
<td style="text-align: center;">花だった</td>
<td style="text-align: center;">花であった</td>
<td style="text-align: center;">―</td>
</tr>
<tr class="even">
<td style="text-align: center;">过去否定</td>
<td style="text-align: center;">花ではありませんでした</td>
<td style="text-align: center;">花ではなかった</td>
<td style="text-align: center;">花ではなかった</td>
<td style="text-align: center;">花ではありませんでした</td>
</tr>
<tr class="odd">
<td style="text-align: center;">推测</td>
<td style="text-align: center;">花でしょう</td>
<td style="text-align: center;">花だろう</td>
<td style="text-align: center;">花であろう</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>语体需要注意的是，同一句话之中语体需要统一，不能混用语体，同一篇文章原则上也应当仅使用一种语体。</p>
</div>
<p>该助动词的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）いまは朝七時<strong>だ</strong>。</li>
<li>（未然形）日本語は難しくない<strong>だろ</strong>う？</li>
<li>（連用形①）これはわたしの本<strong>で</strong>はない。</li>
<li>（連用形②）あれは去年のこと<strong>だっ</strong>た。</li>
<li>（連体形）未成年<strong>な</strong>ので、ここは入らない。</li>
<li>（仮定形）あの人<strong>なら</strong>できると思います。</li>
</ul>
<p>这里第三连用形由于使用频率极低所以不举出例句。</p>
<div class="note info no-icon"><p>事实上两个判断助动词「だ、です」的连体形都是残缺的，其连体形并不能直接修饰一般体言，而如果需要修饰体言，则只能使用「である」表达：</p>
<ul>
<li>友人<strong>である</strong>高橋さんと一緒に参加します。</li>
</ul>
<p>而这种用法常常会表现两个体言之间的同位关系（即两个体言所指向的事物是同一个），可以使用表同位关系的格助词「の」代替：</p>
<ul>
<li>友人<strong>の</strong>高橋さんと一緒に参加します。</li>
</ul>
<p>而助动词「ます」以及后续讲解的助动词「う」也类似，其连体形并不能直接修饰一般体言。但是一般而言，也没有使用这两个助动词修饰体言的应用场景。</p>
</div>
<h1 id="推量意志助动词う">推量、意志助动词「う」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">意志形 <br /> <strong>読も</strong>う <br /> <strong>たがろ</strong>う</td>
<td style="text-align: center;">意志形 <br /> <strong>起きよ</strong>う <br /> <strong>られよ</strong>う</td>
<td style="text-align: center;">意志形 <br /> <strong><code>@ 来 こ</code>よ</strong>う</td>
<td style="text-align: center;">意志形 <br /> <strong>しよ</strong>う</td>
<td style="text-align: center;">未然形 <br /> <strong>高かろ</strong>う <br /> <strong>なかろ</strong>う</td>
<td style="text-align: center;">未然形 <br /> <strong>好きだろ</strong>う <br /> <strong>ようだろ</strong>う</td>
<td style="text-align: center;">（助动词） <br /> <strong>花</strong><em>だろ</em>う</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">意志形 <br /> <strong>でしょ</strong>う</td>
<td style="text-align: center;">意志形 <br /> <strong>ましょ</strong>う</td>
<td style="text-align: center;">未然形 <br /> <strong>たろ</strong>う</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>词语接续助动词「ます」后的形式，一般称之为该词语的<strong>意志式</strong>。</p>
<p>该助动词主要有两种含义，即推量和意志。推量的含义为表达说话人在没有确切的根据的条件下对某种状态、行为的推测，另外也包含了征询听话人自己的推测是否合适、合理的含义。而意志的含义为说话人本身的期望和计划中进行的行为，另外也包含了对听话人的劝诱含义。</p>
<p>这里需要注意的是，不同的词语接续「う」之后，这两种含义之间是有倾向性的：</p>
<ul>
<li>意志动词接续「う」倾向于表达意志</li>
<li>非意志动词接续「う」倾向于表达推量</li>
<li>形容词（类形容词助动词）接续「う」倾向于表达推量</li>
<li>形容动词（类形容动词助动词）接续「う」倾向于表达推量</li>
<li>「でしょう」两种含义均表达</li>
<li>「ましょう」倾向于表达意志</li>
<li>「たろう」倾向于表达推量</li>
</ul>
<p>这里补充意志性动词和非意志性动词的定义：</p>
<ul>
<li>意志性动词。即表述下列含义的动词：
<ul>
<li>表述有生命者能够自控的动作，如「笑う、行く」</li>
<li>表述有生命者能够自控的心理活动，如「思う、考える」</li>
</ul></li>
<li>非意志性动词。即表述下列含义的动词：
<ul>
<li>表述自发的心理活动，如「慌てる、飽きる」</li>
<li>表述自然的生理现象，如「老いる、疲れる」</li>
<li>表述能力，如「できる、分かる」</li>
<li>表述偶发、偶然事件，如「出会う、忘れる」</li>
<li>表述动植物的行为，如「咲く、育つ、枯れる」</li>
<li>表述自然现象与物理运动，如「霞む、光る、流れる、増える」</li>
<li>表述抽象行为，如「ある、終わる」</li>
</ul></li>
</ul>
<div class="note info no-icon"><p>意志性动词和非意志性动词的划分实际上是模糊的，有很多位于中间地带的动词，需要根据语句判断。</p>
<p>使用非意志性动词的限制在于其命令形、可能式等用于表达意志的活用形式不具有含义，并且也不能用于表达愿望（通过助动词「たい、たがる」表达，后续说明），也很少接续补助动词（通过助词「て」接续，后续说明）。</p>
</div>
<p>这也就是动词通过先接续助动词「だ」后利用其未然形形成「○だろう」的作用了。因为动词（类动词助动词）通过意志形接续「う」倾向于表达意志，所以为了更好地表达推量，只能通过另外接续助动词表达。</p>
<p>下面我们给出一些意志式的例句。</p>
<ul>
<li>僕は<strong>死の<u>う</u></strong>と思ったのは。</li>
<li>休日なので、公園には人が<strong>多かろ<u>う</u></strong>と思います。</li>
<li>この試験はとても<strong>困難だろ<u>う</u></strong>？</li>
<li>これは最後の<strong>問題点<em>だろ</em><u>う</u></strong>？</li>
<li>一緒に参加してもいい<strong>でしょ<u>う</u></strong>？</li>
<li>放課後カラオケに行き<strong>ましょ<u>う</u></strong>？</li>
<li>昨日は楽しかっ<strong>たろ<u>う</u></strong>？</li>
</ul>
<p>由于该助动词活用形式有限，故不给出该助动词的各类活用形式的例句。</p>
<h1 id="被动可能自发尊敬助动词れるられる">被动、可能、自发、尊敬助动词「れる・られる」</h1>
<p>该助动词的接续表为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形 <br /> <strong>読ま</strong>れる <br /> <strong>たがら</strong>れる</td>
<td style="text-align: center;">未然形 <br /> <strong>起き</strong>られる <br /> <strong>られ</strong>られる</td>
<td style="text-align: center;">未然形 <br /> <strong><code>@ 来 こ</code></strong>られる</td>
<td style="text-align: center;">未然形 <br /> <strong>さ</strong>れる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>词语接续助动词「れる・られる」后的形式，一般称之为该词语的<strong>被动式</strong>或者<strong>可能式</strong>等。</p>
<div class="note info no-icon"><p>本助动词四种含义的区别往往涉及到句中助词的使用，所以这里需要讨论到部分助词的使用方法。</p>
</div>
<p>首先讨论该助动词表达被动语义的用法，我们可以观察主动语义句如何转换为被动语义句。</p>
<ul>
<li>先生<strong>は</strong>わたし<strong>を</strong>褒めた。</li>
<li>わたし<strong>は</strong>先生<strong>に</strong>褒め<u>られた</u>。</li>
</ul>
<p>可以看到在主动语义句中动作的发出者由「は」标记，而动作的接收者由「を」标记，这也是先前介绍过的基本助词使用方式。而转为被动语义句之后，动作的接收者则换用「は」标记，动作的发出者则换用「に」标记。</p>
<p>更为复杂的句式可以观察下述例句。</p>
<ul>
<li>犬<strong>は</strong>妹<strong>の</strong>足<strong>を</strong>噛んだ。</li>
<li>妹<strong>は</strong>犬<strong>に</strong>足<strong>を</strong>噛ま<u>れた</u>。</li>
<li>妹<strong>の</strong>足<strong>は</strong>犬<strong>に</strong>噛ま<u>れた</u>。</li>
</ul>
<p>如果按照第一对例句的转换方式，上述例句转换为被动语义句的时候应当转换为第三句的形式，然而第二句的形式却是实际上更为常见的用法。这里相比于第三句调换了句子的主题（即副助词「は」的位置发生变换），而动作的最终实际承受者依然使用「を」标记，但是发出者仍然应当使用「に」标记。</p>
<p>另外，有时我们并不关注动作实际的发出者，在这样的条件下，被动句可以写为：</p>
<ul>
<li>今週月曜日は駅にイベント<strong>が</strong>行わ<u>れます</u>。</li>
</ul>
<p>这类语句中动作的最终实际承受者使用「が」标记。</p>
<div class="note info no-icon"><p>事实上日语的被动句中动作的发出者除了常见的使用「に」标记，有时还可以使用「から」或者「によって」标记。</p>
<p>其中「によって」常见于正式文本，并且经常与指定创作、发明、发现的具体主体搭配使用：</p>
<ul>
<li>アメリカ大陸はコロンブス<strong>によって</strong>発見されました。</li>
<li>この建物は日本の有名なデザイナー<strong>によって</strong>設計されました。</li>
<li>田中氏は法律<strong>によって</strong>罰されました。</li>
</ul>
<p>「から」的主要用法基于日语格助词的一个使用准则，即格助词不重复原则。该原则限定了一个日语句子内原则上不能出现相同的格助词。当然这一原则也存在例外，即如果重复的格助词不至于引起歧义则可以允许：</p>
<ul>
<li>わたしは先生<strong>に</strong>寿司屋さん<strong>に</strong>誘われた。</li>
</ul>
<p>这里的两个格助词「に」虽然重复但是可以通过分析语境得知并无歧义，故可以接受。但事实上我们并不推荐这样的语句，因为其实际上提高了交流成本。</p>
<p>回到「から」的用法，首先考虑下述主动句：</p>
<ul>
<li>校長が学生に卒業証書を授与しました。</li>
</ul>
<p>若按照一般原则将上述语句改为被动句，就会发现格助词「に」重复：</p>
<ul>
<li>卒業証書は校長<strong>に</strong>学生<strong>に</strong>授与されました。</li>
</ul>
<p>从而这里应当将表示动作的发出者的「に」修改为「から」。上述场景常见于描述授受关系的动词句中：</p>
<ul>
<li>卒業証書は校長<strong>から</strong>学生<strong>に</strong>授与されました。</li>
</ul>
<p>而如果句子中的动词是情感相关的动词或者有方向性描述的动词，即使并未发生格助词重复，也可以使用「から」替代「に」：</p>
<ul>
<li>わたしは先生<strong>に</strong>褒められた。</li>
<li>わたしは先生<strong>から</strong>褒められた。</li>
<li>課長はみんなさん<strong>に</strong>尊敬されています。</li>
<li>課長はみんなさん<strong>から</strong>尊敬されています。</li>
<li>突然、友達<strong>に</strong>呼び止まれた。</li>
<li>突然、友達<strong>から</strong>呼び止まれた。</li>
</ul>
</div>
<p>此外，被动语义还有一种运用方式，即表达某人受到了某种不良结果的影响，可以认为是广义条件下某人作为动作的接收方受到了该动作造成的影响。这类语句往往没有对应的主动语义句。</p>
<ul>
<li>あの子<strong>は</strong>両親<strong>に</strong>死な<u>れた</u>。</li>
</ul>
<p>这里「死ぬ」并非是及物动词（日语称为“他动词”），所以没有对应的主动语义句。但是这句话表明的是，这个孩子受到了父母双亡造成的不良影响。广义而言动作的发出者为「両親」，而广义而言动作的接收者为「あの子」。</p>
<p>之后讨论该助动词表达可能语义的用法。该用法即代表动词的主语有能力，能够做到该动词所指代的动作。这里需要注意的是助词的变化：</p>
<ul>
<li>あの子は自分で来<u>られます</u>。</li>
<li>わたしは日本語の新聞<strong>が</strong>読ま<u>れます</u>。</li>
</ul>
<p>可以注意到，第二句中即使「新聞」应当是动词「読む」的宾语，但是依然使用了格助词「が」。而这也是表达能力的时候格助词的使用规定，即表达能力的动词的宾语使用「が」注明。</p>
<p>同样，直接表达能力的动词「できる」的宾语也应当使用「が」注明：</p>
<ul>
<li>わたしはピアノを弾くこと<strong>が</strong>できます。</li>
</ul>
<p>此外，五段动词接续「れる」并表可能语义的时候，常常发生音便，此时词尾未然形的あ段假名和「れる」中的「れ」合音为该行え段假名：</p>
<ul>
<li>読<strong>まれ</strong>る → 読<strong>め</strong>る</li>
<li>買<strong>われ</strong>る → 買<strong>え</strong>る</li>
<li>書<strong>かれ</strong>る → 書<strong>け</strong>る</li>
</ul>
<p>音便后形成的动词继承「れる」的活用规则，即一段动词活用规则，称为<strong>可能动词</strong>。由于可能动词的存在，所以当五段动词需要表达可能语义的时候，一般均使用可能动词，而非可能引起混淆的助动词「れる」。</p>
<div class="note info no-icon"><p>有一种语法观点为，「する」的可能动词为「できる」，这样就能够解释サ变动词的下述用法：</p>
<ul>
<li>勉強する → 勉強できる</li>
<li>掃除する → 掃除できる</li>
</ul>
<p>而该用法的另外一种解释方法为，「勉強できる」等中的「勉強」等词实际上为名词，而「できる」可以直接接续名词以表达能力。</p>
<p>本手册并不倾向于两者中的任何一方，读者可以自行采用自己更能接受的解释以构建自己的语法体系。</p>
</div>
<div class="note info no-icon"><p>口语中，为了防止可能语义和其他语义（尤其是被动语义）混淆，存在着「ら抜き言葉」的用法。其具体含义为一段动词接续「られる」并表可能语义的时候，可以删去「られる」之中的「ら」来表示区分。</p>
<p>比如下述句子就存在一定的歧义：</p>
<ul>
<li>虎は食べられます。</li>
</ul>
<p>该句可以表达“老虎可以吃”和“被老虎吃”两种含义，而口语中为了区分，可以表达为：</p>
<ul>
<li>（可能）虎は食べれます。</li>
<li>（受け身）虎は食べ<strong>ら</strong>れます。</li>
</ul>
<p>但是需要注意，书面语必须遵守日语语法，即使表达可能语义也不能省略「ら」。</p>
</div>
<p>然后讨论该助动词表达自发语义的用法。自发语义指的是某一个动作是说话人自然而然形成的或者发出的，一般用于描述在某一种环境或者境遇下自然的行为或表现。例如下述句子：</p>
<ul>
<li>子供の時の写真を見て、あのころが思い出さ<u>れます</u>。</li>
</ul>
<p>这里就阐述了说话人在看见了自己童年时期的照片的时候，自然而然地会想起那段时间的记忆。</p>
<p>自发语义在汉语中并不常见，因为这类语义常常使用实意副词“自然而然”“情不自禁”等表达，而不会通过一个固定的语法形式进行。</p>
<p>最后讨论该助动词表达尊敬语义的用法。描述地位高的对象的行为的时候，可以使用该形式表达尊敬的语气：</p>
<ul>
<li>課長も来<u>られます</u>。</li>
<li>例の件ですが、もう決め<u>られました</u>か？</li>
<li>先生は新聞<strong>を</strong>読ま<u>れます</u>か？</li>
</ul>
<p>这里注意第三句中的格助词使用，尊敬语义下，格助词应当遵守正常的使用规则。如果将这句话中的「を」替换为「が」，则表明助动词「れる」此时表达可能语义，这句话的含义也就变为询问老师是否能读得懂报纸，相对于想要表达的尊敬语义则是完全相反。</p>
<p>基于该助动词承担了过多容易混淆的语义，在表达尊敬语义的时候，有时可以使用更为正式的敬语以防止和被动语义混淆。</p>
<h1 id="使役助动词せるさせる">使役助动词「せる・させる」</h1>
<p>该助动词的接续表为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">未然形 <br /> <strong>読ま</strong>せる <br /> <strong>たがら</strong>せる</td>
<td style="text-align: center;">未然形 <br /> <strong>起き</strong>させる <br /> <strong>られ</strong>させる</td>
<td style="text-align: center;">未然形 <br /> <strong><code>@ 来 こ</code></strong>させる</td>
<td style="text-align: center;">未然形 <br /> <strong>さ</strong>せる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>词语接续助动词「せる・させる」后的形式，一般称之为该词语的<strong>使役式</strong>。</p>
<p>在叙述将主动句修改为从动句（即含使役态动词的语句）的方法之前，我们简单叙述日语动词在另外一个标准下的分类。日语动词可以根据是否接续宾语分为：</p>
<ul>
<li>双及物动词（二重他動詞）。即可以接续两个宾语的及物动词，类似「渡す」等描述授受的动词均属于这一类。</li>
<li>一般及物动词（一般的他動詞）。即可以接续单个宾语的及物动词，大部分及物动词类似「歌う、話す」等属于这一类。</li>
<li>不及物动词（自動詞）。即不接续宾语的动词，类似「笑う、疲れる」等动词属于这一类。</li>
</ul>
<p>这里分别研讨双及物动词、一般及物动词、意志性不及物动词、非意志性不及物动词的主动句变为从动句时涉及的注意点。下述是若干主动句例句：</p>
<ul>
<li>彼<strong>が</strong>あの手紙<strong>を</strong>彼女<strong>に</strong>渡す。</li>
<li>この二人<strong>が</strong>国歌<strong>を</strong>歌う。</li>
<li>あの子供<strong>が</strong>笑う。</li>
<li>そのゼリー<strong>が</strong>固まる。</li>
</ul>
<p>下面我们将上述句子变为从动句，这里所有使役均由“我”发出。主动句变为从动句时，使役发出者使用「が」标记，使役对象首先考虑使用「を」标记。那么上述四句话即可变为：</p>
<ul>
<li>*わたし<strong>が</strong>彼<strong>を</strong>あの手紙<strong>を</strong>彼女<strong>に</strong>渡させる。</li>
<li>*わたし<strong>が</strong>この二人<strong>を</strong>国歌<strong>を</strong>歌わせる。</li>
<li>わたし<strong>が</strong>あの子供<strong>を</strong>笑わせる。</li>
<li>わたし<strong>が</strong>そのゼリー<strong>を</strong>固まらせる。</li>
</ul>
<p>注意到标星的句子出现了格助词重复，所以需要考虑将使役对象用「に」标记：</p>
<ul>
<li>*わたし<strong>が</strong>彼<strong>に</strong>あの手紙<strong>を</strong>彼女<strong>に</strong>渡させる。</li>
<li>わたし<strong>が</strong>この二人<strong>に</strong>国歌<strong>を</strong>歌わせる。</li>
</ul>
<p>然而即使如此标星的句子依然出现了格助词重复，此时只能将原先表现授受方向的「に」进一步替换为「へ」：</p>
<ul>
<li>わたし<strong>が</strong>彼<strong>に</strong>あの手紙<strong>を</strong>彼女<strong>へ</strong>渡させる。</li>
</ul>
<p>而上述句子中第三句和第四句的共同点在于不及物动词改为从动句不会出现格助词冲突，但是其差别在于动词是否表达意志。如果动词能够表达意志，那么标记使役对象的格助词使用「を」和「に」均可。其中「を」表示该动作的意志最终由使役发出者决定，即表达强制、强迫的含义。而「に」表示该动作的意志最终由使役对象决定，即表达放任、默许的含义：</p>
<ul>
<li>わたし<strong>が</strong>あの子供<strong>を</strong>笑わせる。</li>
<li>わたし<strong>が</strong>あの子供<strong>に</strong>笑わせる。</li>
</ul>
<p>这里第一句话表示我跟随自己的意愿使得孩子们笑了出来，可以翻译为“我把孩子们逗笑了”。而第二句话表示我放任了孩子们笑出来的意愿，可以翻译为“我就让孩子那样笑着”。虽然最终都使用了使役式，但意志的最终决定方并不一样。</p>
<p>与此相反，非意志动词的使役对象不能使用「に」标记，因为使役对象不存在意志：</p>
<ul>
<li>（○）わたし<strong>が</strong>そのゼリー<strong>を</strong>固まらせる。</li>
<li>（×）わたし<strong>が</strong>そのゼリー<strong>に</strong>固まらせる。</li>
</ul>
<p>当然，如果通过省略宾语以消除格助词重复的影响，意志性及物动词的使役对象使用「を」和「に」标记均可。与意志性非及物动词规律一致，「を」表示强制、强迫而「に」表示放任、默许：</p>
<ul>
<li>わたし<strong>が</strong>あの二人<strong>を</strong>歌わせる。</li>
<li>わたし<strong>が</strong>あの二人<strong>に</strong>歌わせる。</li>
</ul>
<p>这里两句话的具体阐释略去。</p>
<div class="note info no-icon"><p>使役式的一个重要作用为通过助词「て」接续表示授受的补助动词以进一步表达使役方向，这一用法我们后续阐释。</p>
</div>
<p>之后我们需要讲解使役被动式。使役被动式是使役式和被动式的连用，两者的顺序为先构成使役式，后构成被动式。所以动词的使役被动式即为其未然形接续「せられる・させられる」：</p>
<ul>
<li>読ま<strong>せられる</strong>、食べ<strong>させられる</strong>、来<strong>させられる</strong>、さ<strong>せられる</strong></li>
</ul>
<p>此外，针对五段动词，其使役被动式中的「せら」可以音便为「さ」，但是さ行五段动词由于会形成「ささ」连读故一般不音便：</p>
<ul>
<li>（○）読ま<strong>せられる</strong> → 読ま<strong>される</strong></li>
<li>（○）立た<strong>せられる</strong> → 立た<strong>される</strong></li>
<li>（×）話さ<strong>せられる</strong> → 話さ<strong>される</strong></li>
</ul>
<div class="note info no-icon"><p>该音便的一种解释为人们重新接纳了古语使役助动词「す」，毕竟类似「費やす、濡らす、満たす、踊らす」等古语使役式的残留依然存在于现代语中。</p>
<p>部分学者将这一音便归纳为使役助动词的五段化的一个侧面。</p>
</div>
<p>使役被动式的基本用法即表达说话方被强迫进行某一行为：</p>
<ul>
<li>あの子<strong>が</strong>先生<strong>に</strong>廊下<strong>で</strong>立たせられた。</li>
<li>あいつ<strong>は</strong>社長<strong>に</strong>会社<strong>を</strong>やめさせられた。</li>
</ul>
<p>可以注意到使役被动句之中的主语和主动句中的主语一致，唯一的差别为需要标记一个使役发出者。使役发出者优先使用「に」标记，出现格助词冲突时则视情况调整其他格助词。</p>
<p>另外由于助动词「れる・られる」还能表示自发语义，所以使役被动式还可以用于表达某一个事物、行为使得说话方自然地进行了某一行为：</p>
<ul>
<li>目の前の素晴らしい景色<strong>に</strong>感動させられた。</li>
<li>先生の決断<strong>には</strong>、わたしは実に感心させられました。</li>
</ul>
<p>这里应当使用「に」标记使得说话人作出自发行为的事物、行为。</p>
<p>此外由于助动词「れる・られる」还能表示可能语义，所以使役被动式还可以用于表达可能能够使得某人作出某种行为：</p>
<ul>
<li>雲もない日にも雨<strong>を</strong>降らせられますか？</li>
<li>金満家でも彼女の欲望<strong>を</strong>満足させられない。</li>
</ul>
<p>可见这里格助词的使用准则基本符合使役式的格助词使用规则。</p>
<p>最后由于助动词「れる・られる」还能表示尊敬语义，所以使役被动式还可以用于表达最高程度的敬意，常常用于皇室相关活动。此时使役被动式不能使用音便形式：</p>
<ul>
<li>殿下はご視察のご日程<strong>を</strong>予定の通り<strong>に</strong>終えさせられました。</li>
</ul>
<p>此时即使使用了使役被动式，实际上句子依然为一般主动句的结构，格助词相关的要求与一般主动句一致。</p>
<div class="note info no-icon"><p>除去使役被动，日语中还有其他的复合语义，但是其表达则各有惯例。</p>
<p>例如被动使役，虽然理论上可以通过「○れさせる・○られさせる」表达，但更为常用的形式为通过助动词「ようだ」形成「○れるようにする・○られるようにする」的形式：</p>
<ul>
<li>わたしはあの子をしかられるようにした。</li>
</ul>
<p>当然，为了进一步强调使役的含义，还可以用「仕向ける」替换「する」：</p>
<ul>
<li>わたしはあの子をしかられるように仕向けた。</li>
</ul>
<p>此外例如被动可能，实际上由于被动式实际上并不是意志性的，故严格意义而言不存在被动可能式。如果确需表达可能，则可以通过连用形复合动词「得る」表达：</p>
<ul>
<li>褒められえる。</li>
</ul>
</div>
<h1 id="愿望助动词たいたがる">愿望助动词「たい、たがる」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">第一连用形 <br /> <strong>読み</strong>たい <br /> <strong>読み</strong>たがる <br /> <strong>たがり</strong>たい <br /> <strong>たがり</strong>たがる</td>
<td style="text-align: center;">第一连用形 <br /> <strong>起き</strong>たい <br /> <strong>起き</strong>たがる <br /> <strong>られ</strong>たい <br /> <strong>られ</strong>たがる</td>
<td style="text-align: center;">第一连用形 <br /> <strong><code>@ 来 き</code></strong>たい <br /> <strong><code>@ 来 き</code></strong>たがる</td>
<td style="text-align: center;">第一连用形 <br /> <strong>し</strong>たい <br /> <strong>し</strong>たがる</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<p>词语接续助动词「たい、たがる」后的形式，一般称之为该词语的<strong>愿望式</strong>。</p>
<p>这两个助动词均用于形容某人的某种愿望，所不同的是人称。助动词「たい」一般仅能表现第一人称的愿望，而助动词「たがる」可以用于表现其他人称的愿望。</p>
<ul>
<li>喉が渇いているから、水が<strong>飲みたい</strong>。</li>
<li>息子がいつもケーキを<strong>食べたがっ</strong>ている。</li>
</ul>
<p>日语中描述愿望时产生的「たい」和「たがる」的对立的根本原因是，断言他人的愿望实际上是一种不合礼仪的行为。基于此，「たがる」实际上也并不适合用于描述上级、长辈的愿望。并且「たがる」常常蕴含有些许的负面含义，比如上述第二句，描述自己的孩子总是想吃蛋糕，其中实际上蕴含有认为常常吃蛋糕并不好的语义。</p>
<p>但是，「たい」也可以在一定的条件下表现其他人的愿望。例如，在引文这一类站在他人视角下的阐述方式：</p>
<ul>
<li>田中さんはこれを<strong>読みたい</strong>と言った。</li>
</ul>
<p>这里阐述的“想读”这一愿望是作为“说过”这一行为的引文出现的，实际上是站在别人的视角上阐述愿望，所以可以用「たい」。</p>
<p>另外还有类似于下述的「たい」例句：</p>
<ul>
<li>そんなに<strong>読みたい</strong>なら貸すよ。</li>
<li><strong>やめたい</strong>人はやめればいい。</li>
</ul>
<p>这两句话实际上都表现出一种对他人愿望的推测，而非一种确定的断言。第一句话是说话者对对方“想要读这本书”这一愿望的自我推测，所以可以用「たい」。而第二句话里「たい」作为了定语对「人」给出限定，这里并没有实际上指出具体某人“想要放弃”，而只是在推测谁“想要放弃”，所以可以用「たい」。</p>
<p>此外，使用「たがる」描述第一人称的愿望也是可行的，但是几乎仅可以在固定短语「たがっても」中使用：</p>
<ul>
<li>わたしはどんなに退院し<strong>たがっても</strong>、医者が許してくれない。</li>
</ul>
<div class="note info no-icon"><p>注意上述例句中下述两句：</p>
<ul>
<li>喉が渇いているから、水<strong>が</strong>飲みたい。</li>
<li>田中さんはこれ<strong>を</strong>読みたいと言った。</li>
</ul>
<p>可以注意到虽然都是标记宾语，但实际上第一句使用的格助词是「が」。这两个格助词的差别在于：</p>
<ul>
<li>使用「が」时，表明语气上强调宾语</li>
<li>使用「を」时，表明语气上强调动词</li>
</ul>
<p>具体而言，第一句使用了「が」，表明在“想喝水”这个行为中，强调的是“水”这个物品，包含着“我想喝的是水而非其他饮品”的含义。与此相反，第二句使用了「を」，表明在“想看这个”这个行为中，强调的是“看”这个动作，包含着“我想看这个而非听你讲这个”的含义。</p>
<p>事实上，通过添加修饰词也可以体现出这里格助词的语感差异：</p>
<ul>
<li>冷たい水<strong>が</strong>飲みたい。</li>
<li>水<strong>を</strong>ゆっくり飲みたい。</li>
</ul>
<p>这里第一句强调了“我想喝的是冷水而非热水”，所以应当使用「が」。第二句强调了“我要慢慢喝水而非快速喝水”，所以应当使用「を」。</p>
</div>
<h1 id="推量样态助动词らしい">推量、样态助动词「らしい」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">终止形 <br /> <strong>読む</strong>らしい <br /> <strong>たがる</strong>らしい</td>
<td style="text-align: center;">终止形 <br /> <strong>起きる</strong>らしい <br /> <strong>られる</strong>らしい</td>
<td style="text-align: center;">终止形 <br /> <strong><code>@ 来 く</code>る</strong>らしい</td>
<td style="text-align: center;">终止形 <br /> <strong>する</strong>らしい</td>
<td style="text-align: center;">终止形 <br /> <strong>高い</strong>らしい <br /> <strong>ない</strong>らしい</td>
<td style="text-align: center;">词干 <br /> <strong>好き</strong>らしい <br /> <strong>よう</strong>らしい</td>
<td style="text-align: center;">原形 <br /> <strong>花</strong>らしい</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">终止形 <br /> <strong>た</strong>らしい</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">终止形 <br /> <strong>ぬ</strong>らしい <br /> <strong>ん</strong>らしい</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">助词接续例</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><strong>から</strong>らしい、<strong>の</strong>らしい</td>
</tr>
</tbody>
</table>
<p>该助动词的主要用法为描述说话人根据所听闻到的信息作出的推测：</p>
<ul>
<li>天気予報によると、明日は雨が<strong>降るらしい</strong>。</li>
<li>今年の冬は<strong>寒いらしい</strong>。</li>
<li>田中さんは村上さんが<strong>嫌いらしい</strong>。</li>
<li>あそこに立っているのは<strong>木村さんらしい</strong>。</li>
<li>彼はもうサッカーをやめ<strong>たらしい</strong>。</li>
<li>あいつらはまったくあのことを知ら<strong>んらしい</strong>。</li>
</ul>
<p>而这种推测实际上引申出了委婉的断定的含义：</p>
<ul>
<li>彼は落第し<strong>たらしい</strong>。</li>
</ul>
<p>在描述此类负面的信息的时候，即使已经完全确定事件的真实性，也可以使用该助动词的推测含义来表达委婉的断定，从而软化语气。</p>
<p>而该助动词还具有另外一种用途，即接续在体言之后表示具有该体言特色和性质的含义（很少接续在动词、形容词、形容动词、助动词之后）。比如下述例句：</p>
<ul>
<li><strong>男らしい</strong>男になりたい。</li>
</ul>
<p>这两种用法在语法上的差别在于，表示推测的用法没有否定式「らしくない」、假定形「らしけれ」以及未然形「らしかろ」，而表示样态的用法具有全部形容词的活用。如果需要在表示推测的用法里表示否定，则需要使用「ないらしい」的形式：</p>
<ul>
<li>日本語は難しく<strong>ないらしい</strong>。</li>
</ul>
<p>但是表示样态的用法可以按照形容词的活用方式表示否定：</p>
<ul>
<li>そんなやり方は<strong>あなたらしくない</strong>ね。</li>
</ul>
<p>该助动词表示推测的用法的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）隣のあの子は勉強する<strong>らしい</strong>。</li>
<li>（連用形①）彼は疲れている<strong>らしく</strong>、無言に立ち去った。</li>
<li>（連用形②）謎を解き明かしたい<strong>らしかっ</strong>た。</li>
<li>（連体形）結婚した<strong>らしき</strong>話を聞いた。</li>
</ul>
<p>该助动词表示样态的用法的各类活用形式的例句如下：</p>
<ul>
<li>（終止形）彼はとても男<strong>らしい</strong>。</li>
<li>（未然形）子供<strong>らしかろ</strong>う。</li>
<li>（連用形①）学生は学生<strong>らしく</strong>しなさい。</li>
<li>（連用形②）涙なんか流しちゃって、あほ<strong>らしかっ</strong>た。</li>
<li>（連体形）練習<strong>らしい</strong>練習もできないまま本番を迎えた。</li>
<li>（仮定形）たとえ平凡でも自分<strong>らしけれ</strong>ばいい。</li>
</ul>
<div class="note info no-icon"><p>「らしい」的词性实际上是较为复杂的，这里介绍本文所采纳的一种观点。</p>
<ul>
<li>表示推测的「らしい」是助动词，且活用受限（如不存在否定式等）</li>
<li>表示样态的「らしい」是助动词，且具有形容词全部活用</li>
<li>部分表示样态的「らしい」已经固化成为单词的一部分（如「見窄らしい、愛らしい」），这里的「らしい」不看作助动词</li>
<li>「らしい」本身可以作为独立的形容词使用，但是仅限口语</li>
</ul>
<p>部分观点将部分表示样态的「らしい」看作接尾词，从而固化为单词的一部分的「らしい」就是构成复合词的接尾词。</p>
<p>此外，「らしい」作为独立形容词使用的例句包括：</p>
<ul>
<li><strong>らしさ</strong>なんて最初からないから。</li>
<li>どうした、いつもと違って<strong>らしくない</strong>ぞ。</li>
</ul>
</div>
<div class="note info no-icon"><p>表示推测的「らしい」的过去式存在两种可能，即对「らしい」用过去时和对「らしい」之前的词语用过去时，但是其语感上有一定的差别。</p>
<ul>
<li>彼は来<strong>た</strong>らしい。</li>
<li>彼は来るらしかっ<strong>た</strong>。</li>
</ul>
<p>前者是自然的，其表明了说话者站在现在的角度，根据各种信息推断他之前来过这个动作。</p>
<p>而后者过去时的逻辑是对「来るらしい」这个整体表达过去。「来るらしい」表示根据各种信息推断他就要过来，而这个的整体的过去时就表示根据各种信息推断他过去就该来过了，实际上就蕴含了他并没有来这样的事实。</p>
<p>一定程度上，后者与英语的 should have come 所表达的语意类似。</p>
</div>
<div class="note info no-icon"><p>表示样态的「らしい」的假定形「らしけれ」并不常用，现在常常用助动词「ようだ」的假定形「ようなら」替代：</p>
<ul>
<li>たとえ平凡でも自分<strong>らしけれ</strong>ばいい。</li>
<li>たとえ平凡でも自分の<strong>ようなら</strong>いい。</li>
</ul>
</div>
<div class="note info no-icon"><p>表示推测的和表示样态的「らしい」的连体形一般而言为了做出区分，表示推测的「らしい」的连体形会使用古语连体形「らしき」。</p>
</div>
<h1 id="推量样态助动词ようだ">推量、样态助动词「ようだ」</h1>
<p>该助动词的接续表为：</p>
<table style="width:100%;">
<colgroup>
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
<col style="width: 14%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: center;">五段动词</th>
<th style="text-align: center;">一段动词</th>
<th style="text-align: center;">カ变动词</th>
<th style="text-align: center;">サ变动词</th>
<th style="text-align: center;">形容词</th>
<th style="text-align: center;">形容动词</th>
<th style="text-align: center;">体言</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">连体形 <br /> <strong>読む</strong>ようだ <br /> <strong>たがる</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong>起きる</strong>ようだ <br /> <strong>られる</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong><code>@ 来 く</code>る</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong>する</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong>高い</strong>ようだ <br /> <strong>ない</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong>好きな</strong>ようだ <br /> <strong>ような</strong>ようだ</td>
<td style="text-align: center;">（助词） <br /> <strong>花</strong><em>の</em>ようだ</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">です</th>
<th style="text-align: center;">ます</th>
<th style="text-align: center;">た</th>
<th style="text-align: center;">そうだ①</th>
<th style="text-align: center;">まい</th>
<th style="text-align: center;">う</th>
<th style="text-align: center;">ず・ぬ・ん</th>
<th style="text-align: center;">べし</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">―</td>
<td style="text-align: center;">连体形 <br /> <strong>ます</strong>ようだ</td>
<td style="text-align: center;">连体形 <br /> <strong>た</strong>ようだ</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
<td style="text-align: center;">―</td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>【学习笔记】日语</category>
      </categories>
  </entry>
  <entry>
    <title>《铃芽户缔》的不恰当译名与日译中问题</title>
    <url>/2022/11/04/jc-translation/</url>
    <content><![CDATA[<p>今天偶然刷到新海诚的动画电影新作《すずめの戸締り》的中文译名从《铃芽户缔》换为了《铃芽小姐来锁门》的新闻，于是产生了一些奇妙的感叹，慨叹翻译真的是一门艺术。这里也就随便写写，反正也就是 Holder 自己的一些想法罢了，没有严谨性，不具有参考价值。</p>
<span id="more"></span>
<h1 id="为什么直接搬汉字是不对的">为什么直接搬汉字是不对的</h1>
<p>中日双语互译有一个特点，就是这两门语言至今都在使用汉字，而汉字是具有超脱于语言的表意性的，这也就是甚嚣尘上的“日语不要学，汉字随便拼一拼就读懂了”这个观点的一个基本点。</p>
<p>事实上这类观点不能直接断定地说不对，因为如果一个日语句子里音读词居多，日本本土的虚词居少的话，实际上只要在认读汉字的基础上了解日语是 SOV 主宾谓语序就可以很方便地读出来句子：</p>
<ul>
<li>私は東京大学の大学生です。</li>
<li>私は毎日七時に朝ご飯を食べます。</li>
</ul>
<p>虽然具体用词上和中文有些许差异，比如第一人称这里用的汉字是“私”，“早饭”在日语中的汉字是“朝饭”，但是大部分认识汉字的人都能基本准确地了解第一句表达“我是东京大学的大学生”，第二句表达“我每天七点吃早饭”。</p>
<p>要是再知道点现代日语的高频虚词，比如否定往往以「ない、ません、ず」出现，存在往往以「ある、いる、あります、います」出现，过去往往以「た」出现，断定往往以「です、だ」出现，假定往往以「ば、なら、たら」出现，基本上就已经能够在甚至不会读五十音的条件下阅读很多的日语句子了。</p>
<p>但是，这套方法的缺陷是相当明显的。</p>
<p>首先，现代日语的汉字使用频率实际上是在下降的。除了由于同音异义词过多导致不得不使用汉字的音读词，事实上大部分不太常用的训读慢慢都在消退。比如说，现在很少有人将「かける」写成「駆ける、掛ける」之类的了，在诸如「夜にかける」这样结构的句子里，显然就直接导致动词无法认读，进而完全无法理解整体含义。甚至，类似「私、君、彼」等词语现今写为假名的频率可能已经高于或者逐步高于写为汉字。</p>
<p>再者，日语汉字的含义与中文汉字的含义，可以有着很大的差别。相信大家早已在很多地方见过类似日语的“手纸”实际上是“信件”，日语的“爱人”实际上是“小三”之类的科普文章。事实上，还有很多类似「直す、戸惑う、見舞う、手配」等各种在中文中找不到对应表达的包含有汉字的日语词，即使可以尝试通过上下文断定，但是这类词语的认读依然是相当困难的。</p>
<p>而这个原因也恰恰是我认为直接搬汉字的翻译方式是完全不正确的理由，日语中的汉字经过多年的发展，早已和当代中文中的汉字有了很大的偏差。纵使有相当部分的词语中的汉字和中文近似，我们也不能忽视掉另外一部分和中文并不贴切的汉字。这里「戸締り」就是一个重要的例子，「戸」是日语中表达“门”的汉字，「締まり」是动词「締まる」的名词形式，其动词形式表达“关闭”。而「戸締り」完完全全就是按照日语 VO 顺序构造出来的一个复合词，和中文使用汉字的思路完全不一致。直接的搬运明显造成了表意不明，因为“户缔”在中文中并不存在，对于完全不了解日语的人，这是一个不亚于“鲁棒性”一样的迷惑翻译。</p>
<h1 id="与你的名字等的比较">与《你的名字》等的比较</h1>
<p>或许有人反驳，《你的名字》的原名是《君の名は》，其称为《君名》是完全可以接受的。但我依然认为，《你的名字》这个翻译的使用频率高于《君名》这个翻译。而且《君名》能被接受的核心原因，我认为是这个名称的的构词语序对于中文日文都是统一的。这是一个偏正短语，在中文和日文中都是定语置于名词之前，再加上「の」这个假名作为格助词表示“的”的含义早就广为人知，这才让《君名》这个实际上很偷懒的译名活了下来。</p>
<p>再说说新海诚别的作品，比如《言の葉の庭》《秒速 5 センチメートル》《天気の子》，这些作品的译名分别为《言叶之庭》《秒速五厘米》《天气之子》。这些标题的结构都较为简单，而且几乎没有使用到和中文意义不一致的汉字，所以翻译相当简单。或许这一次的《铃芽户缔》也就出于这种翻译惯性才成为了最初的官方译名。</p>
<h1 id="日式风格">日式风格？</h1>
<p>上面提到了《言叶之庭》，其中有一个词语“言叶”，这个词语显然并不是中文的词汇。然而这个词语由于已引入中国很长时间，在这一类日系作品的受众人群中，其表达“话语”这一含义已经广为人知。这实际上和「の」表示“的”也广为人知有类似之处。而「の」作为“的”广为人知的程度更是相当恐怖，甚至在输入法内输入 de，也有几率跳出「の」这个选项。另外，部分仿日式商品的销售词中会故意将“的”替换为「の」，完全忽视了「の」仅能够接在名词之后，导致部分动词词组修饰名词的时候也用「の」，让了解日语的人一眼看出来这是假日本货。</p>
<p>然而这类严格意义上错误的用法依然得到了广泛承认，这又是为何。这类和中文并不一致但是又不至于和中文用法相差过远的日文事实上营造了一种日式的风格。包括日本人的姓名也有着类似的作用。</p>
<p>与之前流行过的欧美翻译腔类似，事实上日文文本的翻译也为中文带来了日式表达。这类表达并不是源于中文本土环境，但是又能够让中文使用者理解，在这种微妙的违和感中携带的，就是所谓的语言风格。</p>
<p>观察下述两句话（引用自知乎专栏 <a href="https://zhuanlan.zhihu.com/p/134031271" class="uri">https://zhuanlan.zhihu.com/p/134031271</a>）：</p>
<ul>
<li>我敢打赌，他做的菜就像地狱一样糟糕。</li>
<li>突然被告白什么的，怎么做才好。</li>
</ul>
<p>前者明显携带一种欧美的语言风格，而后者则携带有一种日式的语言风格。</p>
<p>营造这样的一种语言风格是有利于传播和营销的，现在大部分的人还是比较买日式这笔账的。然而，我也说过，营造这种氛围至少要让中文使用者理解，翻译的底线至少要做到让完全不懂对方语言的人能够看懂含义。回到《铃芽户缔》的问题上，如果你是完全不懂日语的中文使用者，你可能能够通过“铃芽”这个日式名字来感受这是一个日式的电影，然而如果我只给你看“户缔”，你又会如何理解呢？这种舍本逐末的行为显然是不可行的。</p>
<p>再说现在新的译名《铃芽小姐来锁门》，这次做到了中文正确，但是是否过于僵硬了呢？这个译名过分强调了动作，“来”和“锁”的动作性过于强烈，让整个译名的重心偏向了动作。再加上莫名其妙加上了个现在比较微妙的“小姐”这个称谓，是否和铃芽作为少女的身份或多或少有点不匹配呢？“小姐”容易让人对主人公铃芽产生不正确的第一印象。</p>
<p>我斗胆试译为《铃芽关上了门》，弱化一部分动作的属性，避免使用“小姐”这类可能引起误解的称谓，留下一些空白，可能稍微好一些。</p>
<h1 id="口语与书面">口语与书面</h1>
<p>其实在打算把这篇文章结束的时候，我突然想起《命に嫌われている》这首歌的歌名也经常简称为《命嫌》。</p>
<p>不过这并不能构成对《铃芽户缔》这个译名的辩护，因为《命嫌》永远不是正式译名，仅仅是一个口语上的简称，其正式的译名依然是《被生命所嫌弃》。</p>
<p>口语的随意性永远不能影响书面语的正式性，虽然我理解部分文艺作品的翻译为了贴合口语以方便受众，但是这类完全不能表达原意的翻译成为正式翻译是我不能接受的。</p>
<h1 id="一些其他的话">一些其他的话</h1>
<p>事实上随着信息交换的速度加快，认真翻译一个外来概念已经越来越困难，这在网络热词上更为明显。比如说日文中的接尾词「がち」，用于表达“往往”的含义。这个词在日本 Vtuber 圈内火了一圈之后传入中国，在中文互联网上则直接写为 gachi，直接音译，甚至连汉字都没用。当然这也有身份认可的作用在里面，理解 gachi 含义的人，显然比知道这个词应该翻译为“往往”的人更容易被这个团体接受。</p>
<p>毕竟网络热词这种东西转瞬即逝，你认真为某个热词设计了很贴切的翻译，随后这个词早就没有人用了。</p>
<p>或许这也是不愿意好好翻译电影名称的原因吧，虽然现在能引入国内院线的外国电影也是越来越少就是了。</p>
]]></content>
      <categories>
        <category>【杂谈】日语</category>
      </categories>
  </entry>
  <entry>
    <title>又一年五月</title>
    <url>/2022/05/08/lab-quit/</url>
    <content><![CDATA[<p>是不是每年的五月都会有些不太顺遂的事情发生。</p>
<span id="more"></span>
<p>昨晚通宵写了一些密码学的作业，然后就睡昏过去，一路睡到了下午四点，醒来之后导师发了微信消息说想聊聊。</p>
<p>虽然有一点不太妙的预感，但在做完核酸之后还是接了导师的电话，导师自然还是弯弯绕绕地回忆了一下我在实验室的几个月，然后也就直白地说出了“我觉得你还是不太适合我们实验室”。</p>
<p>其实还是有所预料的，毕竟自己因为期中课内一堆事情咕咕咕了科协咕咕咕了实验室工作，而这个项目五月底是要投的，所以交给我的任务也是无限期拖延，即使只是一个 Toy example。然后半路有一位茶园的同年级同学也加入了这个项目，虽然没和他直接交流，但是可以看出他一个星期内将项目推进了很多。</p>
<p>所以导师不把名额给我其实也是很正常的一件事情。</p>
<p>但毕竟现在是大三下学期，都快进入正常的推免流程了，这个时候作出这样的定论，毕竟还是杀了我一个措手不及。</p>
<p>一看时间，又是五月初。去年五月初的狼狈已经不堪回首，前年五月的混沌早已淡出了记忆，今年的五月又是这样的变故。再这样下去，怕不是每年五月，即使我相当喜欢初夏，我也得下意识地恐惧这段时光。</p>
<hr />
<p>其实我一直是选择困难症的，选专业、选导师啥的。选图形学也是因为安老板推荐，加上 GAMES101 看着还不错，也就直接这么选了。但面临这样的境遇，也只能再去审视自己到底想去学什么。</p>
<p>最后经过和若干位学长和同学交流了一番，我给季铮锋老师发出了邮件，想着去做量子计算之类的方向。</p>
<hr />
<p>其实打心底而言，我一直没有动现在实验室的项目也是有一定原因的。我想的是来实验室做一些渲染工作，然而我打开项目工程代码，我看到的是 Pytorch。虽然这也并不奇怪，毕竟有名言“Neural network rapes everything”。</p>
<p>但我在想，导师把我安排来这个项目也是有原因的，毕竟我的简历上写着刘知远实验室的经历。但他可能并不了解的是，我从那里退出并不是因为我抢不到他的名额，而是我不想做人工智能。</p>
<p>所以在面对项目代码的时候，我还是有点不大愿意动手。</p>
<hr />
<p>选量子，我也不是那么清楚为什么，可能是因为没人去做量子，所以名额比较充裕，也有可能是一种病急乱投医。</p>
<p>时而会感叹自己，从人工智能到图形学再到量子，完全是从热门到冷门，从就业面宽到没有就业面。</p>
<hr />
<p>我到底想做什么，其实要我说，我也说不明白，我能明确说明的，只有我绝对不想做什么。我厌恶人工智能，厌恶计算机网络，高性能和计算机系统也不太想触碰（不是反感，而是自己太菜了）。</p>
<p>如果需要给出一点模糊的答案，那可能是做开发，软件开发。我严重怀疑我自己的代码强迫症，看到什么都想重构，喜欢写那些别人看来是炫技的代码。</p>
<p>但是软件开发又何必读博士呢。</p>
<p>我也不太清楚我为何想继续读书，可能只是不想那么早就去接触职场。但毕竟这是逃避。</p>
<hr />
<p>谁知道呢，更何况我们的 Prof. Ji 也可以拒绝我，那我只能拿着 GPA 到时候随机挑导师了。</p>
<p>出国没考 GRE，就业没实习，推免还被导师因为摸鱼拒绝了。</p>
<hr />
<p>但其实我现在也说不上难过，说不上有什么负面情绪，我大概看了几篇量子方向的论文，重新拿起 Artin，似乎又对可能的研究方向起了兴趣。</p>
<p>然而我自己也是清楚的，我之前对图形学也有着这样的幻想，直到我打开了项目代码。</p>
<p>Holder 真没有什么持久的爱好，慨叹。于是又要担心这种三分钟的热度何时会被消磨殆尽。</p>
<hr />
<p>哎，为了学位读书好烦啊，我好想就顺着自己的爱好随便乱学东西，今天学日语明天看几何大后天说不定在敲 Haskell。</p>
<p>然而不为了学位读书没饭吃，没饭吃就没我这个人了。</p>
<hr />
<p>其实也算不上什么挫折，但是 Holder 莫名其妙想了好多。有那种积沙成塔但是倾覆于一旦的感觉，就是这种一点点的失落感。</p>
<p>Whatever，明天照样起床，去做核酸，写密码学作业，等 Prof. Ji 的回信。</p>
<p>其实现在内心还有一点点，说不定又可以名正言顺学 Artin 的兴奋。</p>
<p>晚安哦。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年 11 月 17 日凌晨的一些</title>
    <url>/2022/11/17/look-back/</url>
    <content><![CDATA[<p>先前因为一次偶然的通宵导致作息又紊乱了起来，周三不得不去射击课导致当晚没睡满五小时，只能下午补了五小时觉，结果就是今天的凌晨五六点，Holder 还坐在 308 不知道干啥。</p>
<span id="more"></span>
<p>本来来 308 是打算边调之前炸炉子的丹，边写软工改进方案的，毕竟李山山老师都杀到跟前，这周日还不得不和他见一面，不能真的啥都写就去见他吧。</p>
<p>然而也是偶然，闲的无聊在 QQ 空间转发了一个“你最早注意到我是什么时候”这样的说说，底下一小部分都是 22 届学弟学妹回的一些类似“高中榜样”之类的。然而这也正常，高中，三年一轮，19 年目送我毕业的老师们，紧接着就会带 22 届的高一新生。如今 22 届的小朋友们也已经高中毕业，开始在网络上活跃起来。</p>
<p>但是想到我为何有这么多 22 届学弟学妹的好友，其实还得说 19 年年底，大一刚过一学期的寒假回高中做的一次所谓宣讲。其实大家那个时候都明白，老师只不过是将行政楼五楼空出来，让我们这些才上大学的学长学姐随便讲点东西，给那些才上高中的学弟学妹们开开眼界、放放松而已。真要说“宣讲”了什么政策还是什么有价值的论点，大概是一点没有的。以那次宣讲为契机，和很多 22 届学弟学妹成了 QQ 好友，不过真要说有什么交流，我觉得是没有多少的。</p>
<p>然而这种玩笑一般的宣讲，自从 20 年新冠袭来后，也就变的索然无味，加上各个大学也给大一新生附加上了一些宣讲的要求，这种宣讲多半是变了些味道。</p>
<p>所以我在愣神，我想不出来为什么我对高中有着这么奇妙的情感。我回想着我大学以来的屡次长假，寒暑假、五一、十一，除了过年、找 Sakana，多半可能还是和高中纠缠，甚至还回去带过一次胡闹的暑期学校。按照道理讲，高中那种非人类的作息安排，非人类的约束，似乎完全不可能构成所谓的美好回忆。</p>
<p>之前我似乎也和别人提过，要让我重来一遍高中，我万分乐意，重来一遍本科，我大抵抗拒。</p>
<p>我不可否认的是，我为我在我高中所取得的成绩万分自负，我依然可以大方地夸耀我在高中时期的成绩，在那些高中生的眼中，这大抵是近乎顶峰的存在。我不可否认，我回到高中，多半是带着夸耀自己，衣锦还乡的意味。</p>
<p>然而为我披上锦衣的你清，那万众所向的所谓学府，为何我又不想再来一回。</p>
<p>我记忆中我的大学，只有两年万分黑暗的时光和一年并不那么黑暗但也并不光明的时光。大一大二闷头卷绩点，我现在也难以想象我大一的下学期和大二的上学期是怎么做到在那么多课程中还能苟延残喘，甚至在大一下学期疫情在家的时候，还能给政治课记下详细的笔记，还能分出精力学那么多课外的东西。</p>
<p>或许是疫情，我的大学似乎并没有给我留下任何一个闪光的回忆，我永远想不到一个能让我在深夜的时候把玩的一个瞬间。我的大学能让我感慨的，只不过是为了继续留在你清拼尽全力，平凡地完成一个个任务而已。我翻阅了我大学期间的 QQ 空间，除了时不时抱怨累了，发一些装逼说说，或者是一些打牌、唱歌、打游戏的东西外，似乎也没有什么很有意义的。我也翻阅了我的相册，除了 2021 年那个惊心动魄的夏季外，也只是绵延不断的打牌、唱歌、打游戏和涩图。</p>
<p>然而似乎高中给我留下的还是很多的。我对高中最早的记忆，是 2016 年参加实验班选拔，离我家最近的北门因为修路走不了，我顶着大太阳绕远路赶到班上，破旧的空调降不下教室的气温，室内一直都是干热炙烤出来的气味。那天天非常蓝，即使那时候的新闻天天在批判环保问题。</p>
<p>还有什么，高一的每一个周末和一群人讨论数学竞赛然后再去北门口喝奶茶，寒假去苏州时用恶作剧戏弄同学，快要小高考时的大雪，2018 年的传奇夏季，临近高考的时候经常一个人蜷缩的楼梯角落。</p>
<p>其实，我时常想着，高中最主要的还是纯粹，舞台不过那么一亩三分地，每天的内容不过枯燥无味的反复，这其中的闪光似乎显得弥足珍贵。</p>
<p>但说实话，最近还是经常感到一种剥离感的。我时常疑惑着这样的生活真的值得我用三年高中换来吗。我总是感觉现在的每一步行动，每一步决策似乎都有着目标，都伴随着责任，我举步维艰。我担心着是否应当做出这样的决定。</p>
<p>最近几位朋友筹划着给我们的一位朋友庆生，然而就在筹办的时候，我又一次感受到了极度的不真实，我真心地为这位同学的生日感到快乐吗？还是包含着我怎么没有这样一群朋友为我这样庆祝生日的嫉妒？</p>
<p>我又一次回忆起那天晚上在 C 楼和众多计算机的零字班一字班朋友们闲聊，某人不经意飘了一句“这不是 Holder 在前面探路么”。具体的语气、语境、上下文早就忘却了，但这个“探路者”的评价我倒是记住了。当时我一下子卡住，我总感觉这句话让我很不是滋味，倒不是说这位同学说错了什么，只是我又一次卡在了回忆里面。</p>
<p>早在 2017 年，我的高中出了一位高分省状元录取姚班，2018 年，出了一位省第二录取经管。18 年那位学姐，与我的交集，或许仅仅是招生的时候聊过两句，以及在我军训的时候将一本 C++ 入门书在紫荆门口交给了我便离去。我与 17 年的那位学长呢？我甚至在本科就没和他见过面，虽然甚至我们就住在一栋楼。</p>
<p>我在你清的探索，在你清计算机系的探索，现在这么想来，或许还真的是孤身一人。大一大二的时候一直在模仿着一位能力突出的同届同学的路径，大三之后决心不再模仿别人，结果是处处碰壁，今年的暑假还因此折磨不已。</p>
<p>真的有谁给我引过路吗，我想很少，没有任何一位学长，告诫我应该干啥，除了安老板曾经叮嘱过一些。翻翻我的朋友圈，八字班的学长少之又少，零字班和一字班的学弟却是很多，我向这些学弟没少倒过我本科的苦水。</p>
<p>然后我又看到了正在编写的软工课程改革草案，一瞬间感觉，这又是何苦呢，我大没有义务做这些。</p>
<p>我不知道。</p>
<p>我是否应该花更多的时间关注自己的能力提升，而不是在这里给别人做公益。</p>
<p>我也不知道。</p>
<p>但或许这也就是我对高中如此眷恋的缘故，高中的那些所谓的波澜，与大学相比，显得那么渺小，就连那个时候所谓的伤感、颓丧，反倒显得那么可爱。高中不过是高考的缓冲区，是一条不允许有任何路径偏移的单行道，在这种狭小的天地里，我完全不需要为未知迷茫，因为我的未来就是在高考中考出尽可能高的成绩。</p>
<p>今天看到一篇分析克苏鲁神话恐惧感来源的文章，大体就是又强调了一遍恐惧来源于未知。</p>
<p>高中的纯粹保护了这脆弱的平衡，在我们求知欲最旺盛的时段，构造了最精致的闭合结构，让我们误以为我们无所不知无所不晓，从而战无不胜。</p>
<p>果然，我至今也不过是那些大人口中，未经风霜的温室花朵而已。今天凌晨的这些，也不过只是无用的叹息，为赋新词强说愁罢了。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>歌词记录集</title>
    <url>/2021/11/29/lyrics/</url>
    <content><![CDATA[<p>之前大一的时候打算记录各种引起共鸣的歌词，于是就时不时在 QQ 空间里面发一些。但是现在来看，一直都是零零散散的，并不方便，所以就做个总集，顺手就当回忆一些东西了。</p>
<p>这里歌词全是日语的，然后翻译都是自己翻译的，可能会有错误。</p>
<span id="more"></span>
<h1 id="年">2019 年</h1>
<p>2019 年刚刚走进大学，暂且还没有过多的忧虑，整天最大的抱怨只是微积分学不完。饱暖之后就擅长为赋新词强说愁，所以即使经常分享一些莫名其妙的歌词，实际上也只是近乎无病呻吟一般。</p>
<div class="note info no-icon"><p><strong>いつの間にか雪は雨になりました。</strong></p>
<p>不知何时，飘雪已然幻化成雨。</p>
<p>——「ハレハレヤ」 2019.10.10</p>
</div>
<p>《朗朗晴天》这首歌是火出圈的 V 曲，当时刚高考完纠结于志愿的时候，一个玩得比较好的同学推荐给我的。当时确实很纠结，很迷茫，这首歌还是带来了一些安慰的。</p>
<p>其特征就是描写确实很漂亮，然后遣词造句也比较朴素干净，属于是很中意的类型。</p>
<div class="note info no-icon"><p><strong>誰もみんな消えてく夢を見た，</strong></p>
<p>梦中大家悄然消逝，</p>
<p><strong>真夜中の部屋の広さと静寂が胸につっかえて，</strong></p>
<p>深夜空旷寂静的房间，胸口一阵微痛，</p>
<p><strong>上手に息ができなくなる。</strong></p>
<p>连呼吸也变得困难。</p>
<p>——「炉心融解」 2019.10.16</p>
</div>
<p>《炉心融解》是相当老的一首 V 曲了，也是我喜欢上镜音双子的开端。铃的高音确实很惊艳，这首歌里面也体现得很彻底。</p>
<p>所以，不要在 KTV 里尝试唱《炉心融解》，年轻人对自己嗓子好一点。</p>
<div class="note info no-icon"><p><strong>春はうすもも，夏は群青，</strong></p>
<p>春日是浅桃花，夏日是茂密的树林，</p>
<p><strong>紅色に染まる秋，真っ白の冬，美しい山。</strong></p>
<p>鲜红渲染出的是秋日，纯白的是冬日美丽的群山。</p>
<p>...</p>
<p><strong>山をこえて，どこどこへ。</strong></p>
<p>越过高山，又往何处去？</p>
<p>——「遠く君へ」 2019.12.19</p>
</div>
<p>《致远方的你》是略带悲情的一首歌，看这种词大致是能理解其内涵的相思之苦的。这首歌大约是高中随机到的，歌词几乎没有长句子，几乎都是各种意象的堆叠，偶尔会无端责怪两句对方为何远去。</p>
<p>原唱是那种细细的女声，很能听出来愁苦的滋味。</p>
<div class="note info no-icon"><p><strong>気づき始めた，生まれた理由を，きっと独りは寂しい。</strong></p>
<p>似乎察觉到了，你创造我的理由，一定是形单影只太寂寞了吧。</p>
<p><strong>宿るココロが溢れた。</strong></p>
<p>你赋予我的那颗“心”，已然满溢而出了啊。</p>
<p>...</p>
<p><strong>一緒に過ごせた日々をアリガトウ。</strong></p>
<p>我们一起度过的时光，无比感谢。</p>
<p>——「ココロ」 2019.12.25</p>
</div>
<p>《心》大约是讲述的科学家与其所创造的一个机器人相恋的故事，但是毕竟人有寿限。这类有点类似探讨人生边界的奇妙歌曲，确实很能打动当时的我。</p>
<p>不过现在也能打动我，因为镜音双子确实好听。</p>
<h1 id="年-1">2020 年</h1>
<p>大学第一学期浪过了，同时也通过各种渠道了解到大学依然还是看成绩的地方，所以渐渐开始沉闷下去了。另外就是，大一下学期面临着大量的琐事，班长也不想当了。年底的甲级团支部评比也让我心态近乎崩溃。</p>
<p>随之变化的就是听歌的风格，这个时候的我，第一次接触到了 MARETU 和熊，也开始听一些真正的意味不明的歌了。</p>
<div class="note info no-icon"><p><strong>足りないものばっかりずっと増えてくの，</strong></p>
<p>不足之物，还在不断增加</p>
<p><strong>物々しく出しゃばる物思い。</strong></p>
<p>煞有介事，多管闲事的思虑。</p>
<p>——「うみたがり」 2020.01.05</p>
</div>
<p>《渴望诞生》是严格来说我听的第一首 MARETU 的歌，歌词令人困惑不解，使用的词汇在日常交际中也少见。但是整体的偏低沉的曲风确实很吸引当时的我。</p>
<div class="note info no-icon"><p><strong>三日月，水玉模様，</strong></p>
<p>初三的月亮，是水晶的模样，</p>
<p><strong>破れた障子，甘い飴の味。</strong></p>
<p>破碎的窗户纸，还有糖的甜味。</p>
<p>——「抑圧錯乱ガール」 2020.02.01</p>
</div>
<p>这首歌是《地狱型人间动物园》专辑里的一首，整首专辑的立意就是总是有很多人和当代社会无法贴合，最终无法融合的他们只能堕落。《抑压错乱女孩》大致就是讲述的在过大的精神压力下崩溃的女孩的故事，所以莫名其妙和她共鸣了。</p>
<div class="note info no-icon"><p><strong>僕たちもかつてはいつか素晴らしい人に，</strong></p>
<p>我们也曾经和你一样，</p>
<p><strong>憧れていた，君の同じさ。</strong></p>
<p>憧憬着成为伟大的人。</p>
<p><strong>いつだって時間はそう，諦めを教えてくれる。</strong></p>
<p>但是时间一直是那样，教会我们放弃。</p>
<p>Nice people make the world boring.</p>
<p>——「LOVE SONG」 2020.02.04</p>
</div>
<p>《情歌》是比较冷门的一首歌，在各大平台上都没有很多播放，我也已经忘了什么时候听到的了。整首歌的 MV 也是偏意味不明和压抑的风格，但总之还是表现了正向积极的主题，确实也包含了一些我当时在尝试探求的答案吧。</p>
<div class="note info no-icon"><p><strong>澄み渡る晴天を昇りゆく白い満月を濡らす。</strong></p>
<p>水汽浸润了那在澄澈的晴空中升起的一轮满月，</p>
<p><strong>空を映る池の水面に光る蛍みたいと過れば。</strong></p>
<p>映照在池面上的月光，如同萤火一般闪烁而过。</p>
<p>...</p>
<p><strong>ふと迸る胸は霧雨でこぼこが作った水溜り。</strong></p>
<p>忽然迸发而出的雾雨，在凹凸不平的地面上积攒起水洼。</p>
<p><strong>まるで夜の虹を見るようなふわりさんざめく夜光虫。</strong></p>
<p>仿佛就像黑夜中的彩虹一般灿烂着的萤火虫们啊。</p>
<p>——「蛍」 2020.02.24</p>
</div>
<p>《萤火虫》也不是热门的 V 曲，这首歌是纯纯的写萤火虫的写景抒情曲子，也是当时我学习日语文学的重要歌曲。</p>
<p>这类歌曲我并不擅长翻译，因为我一直感觉保留着原汁原味的歌词才显得有韵味，一旦我翻译了这些歌词，就难免融入我自己对景物、情感的想象。</p>
<div class="note info no-icon"><p><strong>その言葉に挟まるカミシオリ。</strong></p>
<p>夹在那些话语中的纸笺。</p>
<p>——「カゲロウ」 2020.03.12</p>
</div>
<p>《蜉蝣》是东方曲的填词，这句词是整首歌的第一句的开头。这首歌是我大一下学期可以说最喜欢的一首歌，曲调很惊艳，演唱者也很有表现力。那种平静的氛围中，很适合让我暂且幻想一下远方和未来。</p>
<p>不过现在确实不太听了，莫名感觉听多了之后有点厌倦了这种声线。或许只是当时听太多了吧。</p>
<div class="note info no-icon"><p><strong>私って失敗作だってさって要らない子なんだって，</strong></p>
<p>我就是所谓的失败作吧，是不被人需要的孩子吧，</p>
<p><strong>何やったって頑張ったって駄目らしいや。</strong></p>
<p>无论做什么，无论多么努力，也不过虚幻一场吧。</p>
<p>——「失敗作少女」 2020.04.07</p>
</div>
<p>《失败作少女》是我听的第一首熊，这首歌其实我更喜欢 MARETU 的 remix。为什么说喜欢这首歌呢，因为这首歌节奏把握得很好，有情绪爆发的副歌，也有沉寂的过渡段，尤其是那一段雨声，能让人想见在雨中漫无目的走着的，失魂落魄的少女。而在雨声过后，也有向神明祈求的最后一段情感爆发，歌曲最后的结局是开放的，也确实留下了很大的想象空间。</p>
<p>这段词精妙之处就是大量的促音，有一种难以表达的跳跃感，总之就是唱起来特别带感。</p>
<p>现在的熊，有点歌词莫名其妙，曲风固化，节奏也单调，确实没有一开始那么让人喜欢了。</p>
<div class="note info no-icon"><p><strong>調子はどうですか？空は自由に飛べましたか？すごい魔法が出せましたか？</strong></p>
<p>近况如何？能自由地在天空中飞行了么？能使出厉害的魔法了么？</p>
<p><strong>全部夢の中限定品さ。</strong></p>
<p>这些不过是梦境中的限定品啊。</p>
<p>...</p>
<p><strong>それはあなたの望む世界じゃないから，</strong></p>
<p>这并非是你希望的世界啊，</p>
<p><strong>こんな続きを愛してほしい。</strong></p>
<p>但也不妨爱上这并不完美的梦的后续吧。</p>
<p>——「ドリームレスドリームス」 2020.04.19</p>
</div>
<p>《无梦之梦》，绝对称得上现在我最喜欢的 V 曲。一样的，歌曲对抒情节奏有着绝对的把握，梦碎的那一瞬间的副歌段相当震撼，随后是 miku 声线无缝切入，安慰着主角的情绪，劝导主角接受梦想和现实的落差。</p>
<p>可以看得出这段时间我的歌单几乎全都是梦想和现实的矛盾这样的主题，显得很颓丧和没有生机，也确实贴合那段时间的心情。</p>
<div class="note info no-icon"><p><strong>神様もしも生まれ変わることができたら，</strong></p>
<p>神啊，如果我还能重生的话，</p>
<p><strong>愛される子になれますように。</strong></p>
<p>我也想成为被人怜爱的孩子啊。</p>
<p>——「失敗作少女」 2020.04.25</p>
</div>
<p>这就是之前说的，《失败作少女》最后的一段抒情段，那种对现有生活的悲观和失望，那种渴求他人善意的感觉。</p>
<p>四月份，当时正准备结束一年的社工生涯，由于团支书当时几乎不做任何事情，整个班级的事务就全在我的肩上。再加上自己还在摸索如何过好大学生活，而且还没有正视自己的一些过往，确实是没有任何人可以倾诉，只能自己默默消化这种逆境。</p>
<div class="note info no-icon"><p><strong>死に方教えてよ。</strong></p>
<p>教会我如何去死吧。</p>
<p>——「ヒトサマアレルギー」 2020.05.09</p>
</div>
<p>《旁人过敏症》也是熊曲，不是那么喜欢。这句词只是因为当时确实相当压抑。</p>
<div class="note info no-icon"><p><strong>正しさだけで殴り合うならば，勝ち目はないんだよ。</strong></p>
<p>如果仅仅是因为追求正当就相互殴打，那几乎就没有胜利的可能。</p>
<p>——「ネガティヴ進化論」 2020.06.03</p>
</div>
<p>《消极进化论》似乎是基于一个现有的故事还是小说，所以是具有背景的，然而我至今都没有去了解，所以歌词的含义也是似懂非懂。我听这首歌，只是因为旋律确实好听。</p>
<div class="note info no-icon"><p><strong>希望の花，繋いだ絆を。</strong></p>
<p>希望的花，连接起的羁绊。</p>
<p>——「フレジア」 2020.07.26</p>
</div>
<p>单纯的梗曲，不过抛开梗来看，这首歌也还不错。</p>
<div class="note info no-icon"><p><strong>花で一つ，鳥で二つ，</strong></p>
<p>第一是花，第二是鸟，</p>
<p><strong>手打ち鳴らす，</strong></p>
<p>拍着手轻声唱，</p>
<p><strong>風で三つ，嗚呼，月出て四つ，</strong></p>
<p>第三是风，啊，第四是升起的月亮，</p>
<p><strong>鳴らす鳴らす。</strong></p>
<p>轻声唱着。</p>
<p>——「回レ！雪月花！」 2020.08.28</p>
</div>
<p>《雪月花》也是经典歌曲了，歌词的特色就是大量的四字成语。这一段是中间的过渡段，没有什么很深刻的含义，只是当时觉得很有意思就放上来了。</p>
<div class="note info no-icon"><p><strong>誰もいなくなったら意味はないんですか？</strong></p>
<p>难道万物消逝之后一切都没有意义了吗？</p>
<p>——「ドリームレスドリームス」 2020.11.03</p>
</div>
<p>《无梦之梦》最喜欢的一句词，虽然目前都没有领悟之中的含义，不过这句歌词确实是引入副歌的歌词，也是将全曲拉上最高潮的一句词。这种声嘶力竭的反问，确实能让人感到相当震撼。</p>
<div class="note info no-icon"><p><strong>まっさらなら，声上げて。</strong></p>
<p>一尘不染的话，引吭高歌吧。</p>
<p>——「百鬼祭」 2020.11.03</p>
</div>
<p>Kanaria 的初投稿，整首歌歌词不是很喜欢，因为完全不明白他想表达的含义。不过 Kanaria 的旋律做得很好，到现在我也一直在听。</p>
<div class="note info no-icon"><p><strong>「まあまあ」なんて要らない，欲しがります死ぬまでは。</strong></p>
<p>得过且过绝对不需要，我要贪得无厌，至死方休。</p>
<p>...</p>
<p><strong>わかるか，私の美学。</strong></p>
<p>你明白吗？我的美学。</p>
<p><strong>この馬鹿正直な拳一つが切り札。</strong></p>
<p>这愚蠢正直的一发拳头，就是我最后的王牌。</p>
<p>——「劣等上等」 2020.12.23</p>
</div>
<p>《劣等上等》是 Giga 的代表作，歌很吵，但是词比较有意思。当时的我，在大二上学期取得了很多可以说很好的成就，也在大学中找到了自己的节奏，所以听歌的风格也开始激昂起来了。</p>
<p>有趣的是，我在大一下学期比较沉闷的时候就已经听过《劣等上等》，但当时觉得很不好听，半年后就觉得这首歌绝对好听。看来听歌口味和境遇确实有很大的关联。</p>
<h1 id="年-2">2021 年</h1>
<div class="note info no-icon"><p><strong>お願い死なないで，そんなこと言わないで，</strong></p>
<p>不要去寻死，这样的话语也不要再说，</p>
<p><strong>少し胸の奥が締め付けられる。</strong></p>
<p>心口稍稍有点疼痛。</p>
<p>...</p>
<p><strong>今日からの君も昨日までの君も，</strong></p>
<p>无论是今天以后的你，还是昨天以前的你，</p>
<p><strong>大切に愛しくて嬉しくて好きで。</strong></p>
<p>我都珍重地喜欢着可爱又令我愉悦的你啊。</p>
<p>...</p>
<p><strong>光の群れが羽ばたく景色が，</strong></p>
<p>那绽放着光芒的景色，</p>
<p><strong>どこまでも広がればいいと思えるの。</strong></p>
<p>或许可以充满整个世界。</p>
<p>——「蝶々世界」 2021.04.05</p>
</div>
<p>这也是一个较为冷门的 V 曲，分享出来的契机是你清又有人轻生。刚刚步入大二下学期，当时暂且还是处于延续上一学期意气风发的状态。</p>
<div class="note info no-icon"><p><strong>暗闇の自由より鎖に繋がれた光でいいんだ。</strong></p>
<p>与其接受自由的黑暗，我宁愿带着锁链沐浴在光芒之下。</p>
<p>——「琥珀の身体」 2021.04.17</p>
</div>
<p>《琥珀的身体》是个好歌，旋律很震撼，然后这一句词绝对是我很喜欢的，也是我第一遍听就确定一定要分享出来的歌词。</p>
<div class="note info no-icon"><p><strong>太陽になれなかった腐った炎，</strong></p>
<p>没能成为太阳的腐烂的火焰，</p>
<p><strong>意味もなく酸素を費やす。</strong></p>
<p>只是毫无意义地耗费着氧气。</p>
<p>——「映えない」 2021.04.18</p>
</div>
<p>《不太上镜》是那段时间我几乎算是最喜欢的歌，这首歌就在探讨那些并没有实质的人，为何需要在人前假装出一副胸有成竹的样子。当时我渐渐发觉自己对学业力不从心，确乎有了一些自卑的心理，于是这首歌也确实让我感受到了一点点的震撼。</p>
<div class="note info no-icon"><p><strong>美学とかプライドとか語る前に，</strong></p>
<p>在谈论美学和自尊之前，</p>
<p><strong>やれることをやっていけ。</strong></p>
<p>先去做好能做的事。</p>
<p>——「限りなく灰色へ」 2021.05.04</p>
</div>
<p>当时刚刚从上海见 Sakana 回来，心态确实有所好转。在回来的火车上，默默下了一定要好好活下去的决心，于是把《向着无尽之灰》的这句歌词分享出来了。</p>
<div class="note info no-icon"><p><strong>「自分らしく生きて」なんて言わないで，</strong></p>
<p>不要说那些“活出自我”，</p>
<p><strong>らしさなんて最初からないから。</strong></p>
<p>因为根本就没有什么自我。</p>
<p>——「映えない」 2021.05.06</p>
</div>
<p>已经忘记了为什么突然要分享这句词了，不过可以知道的是，这段时间往后的一个月，甚至两三个月，我都沉浸在自我否定之中。那段时间我尝试着揭开了很多往事，结果就是相当长时间内都没有缓过来，一直在尝试着建立起自己努力下去的理由。</p>
<div class="note info no-icon"><p><strong>ここ調子が悪いんだ，いや本気はまだまだ，</strong></p>
<p>现在状况有些不太好，不对，只是没拿出真本事而已。</p>
<p><strong>そう言ったのはこれは何度目の台詞だろう？</strong></p>
<p>这个借口已经用了多少次了？</p>
<p>——「いや〜いや〜」 2021.05.09</p>
</div>
<p>这首歌高中就听了，但是真正感到理解了一些还是在大二。那段时间开始注意到自己对感情问题的拖延和视而不见已经结出了恶果，也注意到过度的自我封闭让自己完全无法接受现况，于是只能用这段歌词聊以自慰。</p>
<div class="note info no-icon"><p><strong>芝居し合い化かし合い，みんな灰色なんだ，</strong></p>
<p>一起表演，一起幻化，大家不过是一团灰色，</p>
<p><strong>地球は茶番さ，人類みな劇団さ，</strong></p>
<p>地球不过是笑谈，人类也不过是剧团，</p>
<p><strong>存在しない神や愛，芝居で表してきた。</strong></p>
<p>那些本来就不存在的神和爱情，都通过表演展现出来了啊。</p>
<p>——「Hyper Reality Show」 2021.05.25</p>
</div>
<p>当时莫名其妙想分享的一句歌词，其实目的只是想让 Sakana 和自己聊聊而已，没有什么特别的含义。</p>
<div class="note info no-icon"><p><strong>取り出し給え，刃！刃！</strong></p>
<p>取出来吧！你的利刃！</p>
<p>——「ナミダ」 2021.06.03</p>
</div>
<p>这句词是在第二次去上海的路上分享的，当时自己尝试着通过这种情感特别激烈的歌来调动自己的情绪，以尝试掩盖心中的不安。</p>
<div class="note info no-icon"><p><strong>さよならを言わないのは，あなたに見抜かれてしまわないように。</strong></p>
<p>不和你道别，只是还不想被你看透啊。</p>
<p>——「第三の心臓」 2021.06.15</p>
</div>
<p>春卷饭现在的风格是越来越走向温柔向了。《第三心脏》讲述的是朋友之间偶然的矛盾和不快，确实也贴合当时和 Sakana 之间的矛盾。歌曲的最后，两人最终和好，并肩前行，也算是寄托了一些自己的想法吧。</p>
<div class="note info no-icon"><p><strong>ケーキも大好き，君も大好き。</strong></p>
<p>喜欢蛋糕，也喜欢你。</p>
<p>——「とある一家の御茶会議」 2021.06.19</p>
</div>
<p>这首歌相当老，是滚苹果 P 的隐退曲，这种欢快的曲调下掩藏的是无可奈何的悲伤。说不出来当时被触动到的心情了，但总之大约是感受到了自己逐渐走向正轨的一些安心，和这些安心之下依然被埋藏着的不安。</p>
<div class="note info no-icon"><p><strong>くたびれた私が駄目だったんだね，</strong></p>
<p>颓废的我已然不堪大用。</p>
<p><strong>まだ役に立つつもりだったけれど。</strong></p>
<p>本还想着发挥最后的余热的。</p>
<p>——「ハルノ寂寞」 2021.06.24</p>
</div>
<p>《春日寂寞》是稻叶昙作品中我最喜欢的，无论是技术上调教相当完美，还是歌词旋律相当优秀。那种空灵的旋律，传达出一种无法和你继续下去的痛苦和无奈。</p>
<div class="note info no-icon"><p><strong>ゴミ溜めで埋もれたまま，星空を眺めてるよ。</strong></p>
<p>即使掩埋于垃圾堆之下，也要向上仰望星空。</p>
<p>——「ぼくらみんな意味不明」 2021.07.02</p>
</div>
<p>匹老板的代表作之一，旋律不算好听，但是这段歌词确实不错。虽然现在看也并没有讲什么大道理，但确实让我感受到了一点动力。</p>
<div class="note info no-icon"><p><strong>凍てつく雪の中で，確かな熱を帯びた，</strong></p>
<p>冻结着的积雪之下，确实还留存着些许温热，</p>
<p><strong>呼吸をして，声を焼いて，燃えた燃えた禊の火。</strong></p>
<p>喘着气，声音灼热着，映照着燃烧着的业火。</p>
<p>——「ハレハレヤ」 2021.07.20</p>
</div>
<p>《朗朗晴天》的副歌段，音调极其之高，但也因此表达出了相当强烈的情感。当时分享的动机就是单纯的好听。</p>
<div class="note info no-icon"><p><strong>全知全能の言葉をほら聞かせてよ。</strong></p>
<p>来，让我听听那些全知全能的话语吧。</p>
<p>——「東京テディベア」 2021.08.25</p>
</div>
<p>《东京泰迪熊》也是相当经典的歌曲，依然是镜音的绝妙演出。这一段没有什么特殊含义，只是因为好听。这句词每一个重音都会突然拉高音调，有那种直击人心的表现力。</p>
<div class="note info no-icon"><p><strong>僕は大人にやってなったよママ。</strong></p>
<p>我终于长成大人了啊妈妈。</p>
<p>——「ビターチョコデコレーション」 2021.09.22</p>
</div>
<p>《苦巧克力装饰》是我听的第一个 syudou 的歌，这种带一点压抑，带一点深度的歌词很让我着迷。这首歌主要探讨的是放弃童真成长为大人的故事，苦巧克力的含义大致和苦咖啡类似，是成长为社会人的标志，也是小孩子们常常用来假装自己已经长大的一个逞能的用具。</p>
<p>总体而言，当时我坐在西大操场旁边的长椅上等待 Sakana 的电话，偶然循环到了这一句。</p>
<div class="note info no-icon"><p><strong>失うことに慣れてく中で，</strong></p>
<p>已经习惯失去的我，</p>
<p><strong>失くさずにいた大事な思いを抱き締めたら，不意に涙が落ちたのは，</strong></p>
<p>偶然将还未丢失的回忆拥入怀中之时，泪水在不意间悄然落下，</p>
<p><strong>この街でまだ生きていたいと思うから。</strong></p>
<p>是因为我还想在这城市中生存下去啊。</p>
<p>——「幽霊東京」 2021.10.09</p>
</div>
<p>《幽灵东京》大约是在探讨着在大城市中生存的艰难，那种为了生活打拼之后，在一天的疲惫之后突然回想起曾经的美好的悲伤感。现在自己这个乡下出身的人，来到北京上大学，确实是需要一段时间接受的。那段时间和同一个高中的学弟交流也很多，所以也时不时会想起自己在高中的那些无忧无虑的时光。</p>
<p>虽然不像歌词写的那么夸张，但还是有点共鸣。</p>
<div class="note info no-icon"><p><strong>どうかどうか与えて，生活を与えて。</strong></p>
<p>无论如何给予她吧，把梦想中的生活给予她吧。</p>
<p>...</p>
<p><strong>あなたがいたあの部屋，未来を繋ぐギャラリアだったはず，</strong></p>
<p>你所在的那个房间，本应该是连接未来的画廊啊，</p>
<p><strong>だったはず。</strong></p>
<p>本应该啊。</p>
<p>——「ギャラリア」 2021.10.11</p>
</div>
<p>比较喜欢的一个作品，讲述的是家暴类似话题。不过我倒不是因为歌词喜欢上这首歌的，纯属因为调教比较好，旋律也不错。</p>
<div class="note info no-icon"><p><strong>僕にしかできないことはなんだか？</strong></p>
<p>只有我能做到的事是什么啊？</p>
<p>——「群青」 2021.10.25</p>
</div>
<p>《群青》是相当优秀的一个曲子，当时分享这句歌词，也是出于一些不安，觉得自己是可替代的一个人，并不是所谓的独一无二的人。不过其实到现在，我都没有说服自己自己是独一无二的。</p>
<div class="note info no-icon"><p><strong>なるべく永く一緒にいたいんだよ。</strong></p>
<p>那就多让我在你身边吧。</p>
<p>...</p>
<p><strong>少しだけ名残惜しそうにさようなら。</strong></p>
<p>那就依依不舍地道别吧。</p>
<p>——「ハルノ寂寞」 2021.10.30</p>
</div>
<p>《春日寂寞》中相互呼应的两句歌词，结合之前说的那种不得不离去的无奈感，确实很感人吧。</p>
<div class="note info no-icon"><p><strong>他人の不幸は蜜の味。</strong></p>
<p>他人的不幸就像是蜜糖的味道。</p>
<p>...</p>
<p><strong>助けを乞う姿を見せておくれ。</strong></p>
<p>让我看看你乞求我救助的可怜模样。</p>
<p>——「シャーデンフロイデ」 2021.11.11</p>
</div>
<p>这是《雨路女孩》的续作，大致讲述了一个趁人之危的人作恶的故事，似乎也是影射了一些社会事件，但我这个听歌的，就没有管多少了。这首歌论旋律论节奏都算是不错，不至于很惊艳，但也是相当不错的水平。</p>
<div class="note info no-icon"><p><strong>僕の一等賞を奪いにきて。</strong></p>
<p>来夺取我的一等奖吧。</p>
<p>——「ホワイトハッピー」 2021.11.12</p>
</div>
<p>《白色幸福》也是 MARETU 的作品，这句词常常用于影射性相关话题。那具体影射的是什么呢，其实都说是“一等奖”和“夺取”了，应该不难猜出来。</p>
<div class="note info no-icon"><p><strong>簡単な感情ばっか数えいたら，</strong></p>
<p>如果只是清点着简单的感情，</p>
<p><strong>あなたがくれた体温まで忘れてしまった。</strong></p>
<p>就连你传递给我的体温都会忘却。</p>
<p>——「DONUT HOLE」 2021.11.29</p>
</div>
<p>《甜甜圈洞》是八爷相当著名的作品，用欢快的语调歌唱感情的绝望。即使 V 家发展了这么多年，八爷这首歌论硬实力依然是相当上乘的，不愧是顶尖音乐人。</p>
<h1 id="年-3">2022 年</h1>
<div class="note info no-icon"><p><strong>なあ今年もさ，桜が散ってしまうんだ。</strong></p>
<p>今年，樱花也如同往常一样凋谢。</p>
<p><strong>夢みたいに踊る桃色に騙されてしまいそうだ。</strong></p>
<p>那如梦境一般漫天飞舞的粉红，几乎将我欺骗。</p>
<p>——「地獄に落ちる」 2022.03.16</p>
</div>
<p>《坠入地狱》大约是我目前可以称得上最喜欢的曲子之一，赶上北京短暂的春天，这首歌就显得尤为切合时宜。</p>
<p>这首歌歌词充满力量，而且 KAFU 调得确实相当扎实。副歌段的抒情很强烈，这段简单的写景又是柔和，只能说黑柿子确实把一个失魂落魄而又在漫天飞舞的樱花中重拾理想的人描写出来了。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>早安、可能是午安、或者是晚安</title>
    <url>/2021/09/17/navigation/</url>
    <content><![CDATA[<p>这里是 Ashitemaru，清华大学计算机科学与技术系本科、预计本系直博。做过 NLP，干过 CG，现在做流媒体传输。对数学，尤其是代数比较有兴趣。</p>
<p>开发过 THUInfo，负责其 iOS 版本维护。大三任系学生科协网络部副主席，负责技能引导文档维护。两个项目的链接均在网页上方栏目。</p>
<p>打日麻，打音游，主修 osu! mania 和 Project Sekai 等下落式音游，街机音游均不擅长。正在尝试舞萌 DX 即 maimai。雀魂账号和 osu! mania 账号名均为 Ashitemaru。</p>
<p>V+ 人，推 Giga、utsu-P 等曲风激烈的 P 主，没有歌姬倾向，抒情曲也会听。</p>
<p>Sakana 单推 ❤。</p>
<hr />
<p>这里主要是一些杂谈，正经内容主要是课程笔记、论文笔记和日语笔记。</p>
<p>查看最近的文章可以直接向下滑动找到对应的文章，需要查看较远的文章可以通过网页上方栏目的分类页或者归档页寻找。</p>
<p>考虑到分类页只展示分类却不展示分类内的文章列表，这里有一个简单的文章分类列表：</p>
<ul>
<li>学习笔记
<ul>
<li>大二春季学期《人工智能导论》</li>
<li>大二夏季学期《汇编语言程序设计》</li>
<li>大三秋季学期《信号处理原理》</li>
<li>大三秋季学期《计算机网络原理》</li>
<li>大四秋季学期《现代控制技术》</li>
<li>《GAMES101》笔记</li>
<li>【实验室】强化学习笔记</li>
</ul></li>
<li>论文笔记
<ul>
<li>2022 年 2 月论文合集</li>
<li>2022 年 8 月论文合集</li>
<li>2022 年 9 月论文合集</li>
</ul></li>
<li>日语笔记
<ul>
<li>语法手册</li>
<li>汉文相关笔记</li>
</ul></li>
<li>一些生活记录和总结
<ul>
<li>大二春季学期、大三秋季学期、大三春季学期总结</li>
<li>大三寒假总结</li>
<li>大二暑假、大三暑假、大四寒假生活记录</li>
<li>大三秋季学期、大四秋季学期前期感想</li>
</ul></li>
<li>杂七杂八
<ul>
<li>2022 年新高考 I 卷（江苏）数学答案</li>
<li>一些原创数学题</li>
<li>安卓开发感想</li>
<li>还有一些混乱感想、游戏笔记、歌词记录本</li>
</ul></li>
</ul>
<p>总之，不如自己来翻翻这里有些什么，在评论区留下足迹，个人网站不就是这个用处么。</p>
]]></content>
      <categories>
        <category>【导航】</category>
      </categories>
  </entry>
  <entry>
    <title>小学期深夜的废话</title>
    <url>/2021/08/17/nonsense-at-night/</url>
    <content><![CDATA[<p>突然有点想随便写点东西说点感受而已，写完就该睡大觉了。</p>
<span id="more"></span>
<p>现在是 2021 年 8 月 17 日的深夜 03:44，这个叫 Holder 的大二学生还没有睡。</p>
<p>小学期选了整整 8 学分的课，从第二周开始每周周一到周五都是全天满课。汇编每周有作业，还有一个大作业和考试。Java 每堂课有一个小作业，还有一个看起来不是很小的大作业。量子计算作为一门新课，上来就是全英文 PPT，讲着虚张声势的线性代数，倒也真的把 Holder 愉悦送走了。</p>
<p>但值得庆幸的是，只要不去听老师上课，自己在空调房里和 Sakana 连着麦看 PPT / CSAPP / 各路文档自学，累了就开瓶快乐水刷两眼手机或者打一小会 Project Sekai，然后慢慢写自己学习的时候的笔记和一时的感悟，这种体验简直不要太好。就是那种感觉，那种感受到了学习愉悦之处的感觉。</p>
<p>我也不知道什么时候我变成了厌恶上课的一个人，烦躁于古板沉闷的 PPT reader 式的课堂。我宁愿自己一个人琢磨，不懂的时候就去各种翻资料或者问问同学，然后在个人网站上写下万字之多的笔记。特别是一时间想通一个很困难的问题的时候，我习惯把当时所有的思路都复盘下来写下来。</p>
<p>这个小学期，我突然觉得自己找到了一种玄妙的乐趣，那种像想要抓住什么的一样的冲动。虽然每天都累得不成样子，到处抱怨，但是内心是充实的。</p>
<p>虽然不知道学的东西会不会派上用场，但是就是享受到了学习这一过程之中的乐趣。</p>
<hr />
<p>也不知道这种斗志昂扬的状态会持续到什么时候，也不知道 Holder 未来会不会又一次陷入像今年 5 月那样沉闷的时光，但无论如何，现在的 Holder 是快乐的。</p>
<p>Holder 或许得睡大觉了，虽然现在才睡，翘汇编是不可避免的了。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>《汇编语言程序设计》学习笔记</title>
    <url>/2021/08/09/note-of-asm/</url>
    <content><![CDATA[<p>这门课是 2021 年暑期学期开设的计算机系专业课，应该也算是为下学期的《计算机组成原理》课程做预备，所以还打算好好学一下。</p>
<span id="more"></span>
<h1 id="课程基本介绍">课程基本介绍</h1>
<h2 id="汇编语言介绍">汇编语言介绍</h2>
<p>汇编语言可以认为是机器指令的一种表记方式，其表述了计算机硬件系统对外开放的主要接口和规格，是计算机系统之中的软硬件的分界。所以说要了解汇编语言，就首先需要了解机器指令。</p>
<p>机器指令系统一般分为两类：</p>
<ul>
<li><p>CLSC，即<strong>复杂指令系统</strong>。一般而言具有多种指令，寻址方式复杂，单条指令的功能较为复杂。较为经典的代表是 X86。</p></li>
<li><p>RISC，即<strong>精简指令系统</strong>。考虑到实际使用的指令大多都是简要指令，故该系统只具有常用的精简指令。在这样的条件下，该指令系统依赖于编译器产生高效的代码（依赖编译器优化）。较为经典的代表为 MIPS。</p></li>
</ul>
<p>目前，CLSC 和 RISC 之间的差别渐渐缩小。但是还是具有明显的区分方式的，即：</p>
<div class="note info no-icon"><p>It loads / stores [with / without] other operations.</p>
</div>
<p>借助于连接软硬件的机器指令集，计算机系统实现了软硬件解耦合。这样软硬件可以独立编写，从而促进了计算机的发展。</p>
<p><strong>注解：</strong>软硬件的分离的一个重要基石是<strong>图灵完备性</strong>。也就是说软件使用的高级语言是图灵完备的，硬件的指令序列也是图灵完备的，这两者完全等价。这样才保证了分离的可行性。</p>
<h2 id="x86-指令集介绍">X86 指令集介绍</h2>
<p>X86 指令集具有以下的基本特征：</p>
<ul>
<li><p>向下兼容、变长指令、多种寻址方式</p></li>
<li><p>通用寄存器个数有限（X86-32 具有 8 个通用寄存器，X86-64 具有 16 个通用寄存器）</p></li>
<li><p>至多允许一个操作数在内存中，另外一个操作数需要在寄存器中或者是立即数</p></li>
</ul>
<div class="note info no-icon"><p>这里提到了寄存器。X86 之中的寄存器命名为：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">寄存器名称【 X86-64 名称】</th>
<th style="text-align: center;">X86-32 名称</th>
<th style="text-align: center;">寄存器名称【 X86-64 名称】</th>
<th style="text-align: center;">X86-32 名称</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>%rax</code></td>
<td style="text-align: center;"><code>%eax</code></td>
<td style="text-align: center;"><code>%r8</code></td>
<td style="text-align: center;"><code>%r8d</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rdx</code></td>
<td style="text-align: center;"><code>%edx</code></td>
<td style="text-align: center;"><code>%r9</code></td>
<td style="text-align: center;"><code>%r9d</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rcx</code></td>
<td style="text-align: center;"><code>%ecx</code></td>
<td style="text-align: center;"><code>%r10</code></td>
<td style="text-align: center;"><code>%r10d</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rbx</code></td>
<td style="text-align: center;"><code>%ebx</code></td>
<td style="text-align: center;"><code>%r11</code></td>
<td style="text-align: center;"><code>%r11d</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rsi</code></td>
<td style="text-align: center;"><code>%esi</code></td>
<td style="text-align: center;"><code>%r12</code></td>
<td style="text-align: center;"><code>%r12d</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rdi</code></td>
<td style="text-align: center;"><code>%edi</code></td>
<td style="text-align: center;"><code>%r13</code></td>
<td style="text-align: center;"><code>%r13d</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rsp</code></td>
<td style="text-align: center;"><code>%esp</code></td>
<td style="text-align: center;"><code>%r14</code></td>
<td style="text-align: center;"><code>%r14d</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rbp</code></td>
<td style="text-align: center;"><code>%ebp</code></td>
<td style="text-align: center;"><code>%r15</code></td>
<td style="text-align: center;"><code>%r15d</code></td>
</tr>
</tbody>
</table>
</div>
<p>由于 X86 重视向下兼容，所以其指令集越来越趋向于庞杂，所以其一个缺点就是资源利用率低。</p>
<h2 id="mips-指令集介绍">MIPS 指令集介绍</h2>
<p>MIPS 的设计思想是充分利用处理器的流水线结构，目标是让流水线各段负载均匀，这样可以让处理器频率得到提高。其特征包括：</p>
<ul>
<li><p>以寄存器为中心，只有 Load 以及 Store 命令可以访问内存</p></li>
<li><p>所有计算操作均是从寄存器堆之中读取数据并将结果保存到寄存器堆，一共具有 32 个通用寄存器</p></li>
<li><p>指令格式规整、定长，且操作码位置固定，指令类型少（MIPS32 的指令只有 register / immediate / jump 三类）</p></li>
<li><p>寻址方式简单，每一条指令的操作过程简单</p></li>
</ul>
<p>当然，MIPS 也具有一些被扩展过的扩展指令集，如 MIPS16e 等等。</p>
<p>此外，RISC-V 也是一种常用指令集。但其几乎和 MIPS 同源，故这里不作详细介绍。</p>
<h1 id="整数的表示与计算">整数的表示与计算</h1>
<p>首先我们介绍一些简要表记，即 K / M / G / T / P / E。符号 K 表示 <span class="math inline">\(2^{10}\)</span>，之后有 <span class="math inline">\({\rm M} = 2^{10} \cdot {\rm K}\)</span> 以及 <span class="math inline">\({\rm G} = 2^{10} \cdot {\rm M}\)</span>，依此类推。</p>
<p>同时我们将一个二进制位称为<strong>比特（bit）</strong>，将八个比特称为<strong>字节（byte）</strong>。在 X86 架构下，两个字节称为一个<strong>字（word）</strong>，而在 MIPS 架构下则是四个字节。</p>
<p>对于数的进制、二进制数的逻辑运算，这里不进行介绍。</p>
<h2 id="机器字和字节序">机器字和字节序</h2>
<p>首先引入<strong>机器字</strong>的概念，机器字指的是计算机进行一次整数运算所能处理的二进制数据组，也可以是一个数据地址。相应的，<strong>机器字长</strong>指的就是一个机器字的位数。对于 32 位字长的计算机，其地址能够表示的空间大小为 4GB 左右。机器字长越大的计算机，其地址的表示空间就越大。</p>
<p>机器字的定位为这个机器字第一个字节的地址，所以说相邻机器字的地址之差在 32 位系统之中为 4，而在 64 位系统之中为 8。</p>
<p><strong>字节序</strong>指的就是一个机器字所包含的字节在机器字之中的排列的顺序，分为<strong>大端序（Big endian）</strong>以及<strong>小端序（Little endian）</strong>。大端序指的是低位字节占据高地址，小端序则相反。</p>
<p>比如说十六进制数据 <code>0x01234567</code>，如果这个机器字地址为 <code>0x100</code>。那么在大端序之下，<code>0x100, 0x101, 0x102, 0x103</code> 的字节内容分别为 <code>01, 23, 45, 67</code>。而在小端序下则是 <code>67, 45, 23, 01</code>。</p>
<h2 id="整数的二进制编码">整数的二进制编码</h2>
<p>我们首先复习一下 C 语言之中各个数据类型的大小，这里以字节作为单位：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">数据类型</th>
<th style="text-align: center;">经典 32 位系统</th>
<th style="text-align: center;">X86-32</th>
<th style="text-align: center;">X86-64</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>char</code></td>
<td style="text-align: center;">1</td>
<td style="text-align: center;">1</td>
<td style="text-align: center;">1</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>short</code></td>
<td style="text-align: center;">2</td>
<td style="text-align: center;">2</td>
<td style="text-align: center;">2</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>int</code></td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>long</code></td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">8</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>long long</code></td>
<td style="text-align: center;">8</td>
<td style="text-align: center;">8</td>
<td style="text-align: center;">8</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>float</code></td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>double</code></td>
<td style="text-align: center;">8</td>
<td style="text-align: center;">8</td>
<td style="text-align: center;">8</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>long double</code></td>
<td style="text-align: center;">8</td>
<td style="text-align: center;">10 / 12</td>
<td style="text-align: center;">10 / 16</td>
</tr>
<tr class="odd">
<td style="text-align: center;">指针</td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">4</td>
<td style="text-align: center;">8</td>
</tr>
</tbody>
</table>
<p>这里我们为了简便，使用 16 位系统来演示整数的编码方式，也就是说机器字长为 16 位，一个整数使用 2 个字节表示。</p>
<h3 id="有符号数的编码">有符号数的编码</h3>
<p>对于非负的整数，显然可以直接使用其二进制表示作为其编码。比如说十进制数 <code>12345</code>，其二进制表示为 <code>00110000 00111001</code>，那么其编码就是 <code>00110000 00111001</code>。</p>
<p>对于负数，一种解决方式是使用最高位表记符号，最高位为 <code>1</code> 的数为负数，为 <code>0</code> 的数为非负数。然而这样会导致加法器在运算的时候需要首先验证符号位，计算出结果后还需要计算符号为，比较繁杂。所以说这里引入了<strong>补码（two's complement）</strong>，用补码表示的整数可以简化有符号整数的计算。</p>
<p>非负数的补码就是其二进制表示，负数的补码是其绝对值的二进制表示按位取反之后加一。</p>
<p>比如说十进制数 <code>-12345</code>，由于 <code>12345</code> 的二进制表示为 <code>00110000 00111001</code>，首先按位取反得到 <code>11001111 11000110</code>，最后加一得到其补码为 <code>11001111 11000111</code>。</p>
<p>这个时候符号位依然存在，也就是说补码表示下负数最高位为 <code>1</code>，非负数最高位为 <code>0</code>。</p>
<div class="note info no-icon"><p>补码的优越性在于简化了有符号整数的加法计算。如果我们使用 <span class="math inline">\({\rm TC}_w(x)\)</span> 表示字长为 <span class="math inline">\(w\)</span> 的系统下整数 <span class="math inline">\(x\)</span> 的补码（比如 <code>-12345</code> 的补码为 <code>11001111 11000111</code>，后者直接转换为十进制表示的是 <code>53191</code>，那么定义 <span class="math inline">\({\rm TC}_w(-12345) = 53191\)</span>）。实际上可以发现对于非负数 <span class="math inline">\({\rm TC}_w(x)=x\)</span>，而对于负数：</p>
<p><span class="math display">\[
{\rm TC}_w(x) = 1 + \mathop{\sim}(-x)
\]</span></p>
<p>而对于字长为 <span class="math inline">\(w\)</span> 的系统，<span class="math inline">\(x + (\mathop{\sim}x) = 2^w - 1\)</span>，所以说对于负数 <span class="math inline">\(x\)</span> 有：</p>
<p><span class="math display">\[
{\rm TC}_w(x) = 1 + 2^w - 1 - (-x) = 2^w + x
\]</span></p>
<p>所以无论如何我们都可以断定：</p>
<p><span class="math display">\[
{\rm TC}_w(x) \equiv x\ ({\rm mod}\ 2^w)
\]</span></p>
<p>在这样的条件下做加法是简单的，因为一个整数和其补码在模 <span class="math inline">\(2^w\)</span> 意义下等价。后面讨论补码条件下的加法的时候，即使出现截断，由于所截断的 <code>1</code> 必然位于不低于 <span class="math inline">\(2^w\)</span> 的位上，所以截断还是不会影响模的结果。</p>
</div>
<p>对于字长为 <span class="math inline">\(w\)</span> 的系统，按照补码表示的有符号数系统之中，最大的数为 <span class="math inline">\(2^{w - 1} - 1\)</span>，而最小的数为 <span class="math inline">\(-2^{w - 1}\)</span>。</p>
<h3 id="无符号数的编码">无符号数的编码</h3>
<p>无符号数的编码是简单的，因为其只需要考虑非负数，所以直接使用二进制表示作为编码就可以了。</p>
<p>这种系统之下，最大的数为 <span class="math inline">\(2^w - 1\)</span>，而最小的数为 <span class="math inline">\(0\)</span>。</p>
<h3 id="有符号数和无符号数的关系和转换">有符号数和无符号数的关系和转换</h3>
<p>现在我们已经给出了有符号和无符号整数的表示方式了。现在考虑将一个有符号整数强制类型转换为无符号整数，比如说在机器字长为 4 的时候，<code>-4</code> 的补码为 <code>1010</code>，而强转为无符号整数的时候，<code>1010</code> 则表示 <code>12</code>。其实不难证明对于字长为 <span class="math inline">\(w\)</span> 的系统，有这样的关系：</p>
<p><span class="math display">\[
(\text{unsigned})x = \begin{cases}
x &amp; x \geq 0 \\
x + 2^w &amp; x &lt; 0
\end{cases}
\]</span></p>
<p>这里提一下，在 C 语言的比较运算之中如果同时出现有符号数和无符号数，则会将有符号数强制转换为无符号数。当然，如果两边都是有符号数，则按照有符号数的比较规则进行。</p>
<p>事实上，由于这样的隐式转换，如果我们给声明为无符号整数的变量赋予一个负数值，就有可能被强制转换为一个大整数，从而导致违反直觉的结果，甚至导致错误。所以说我们应当谨慎使用无符号整数，一般而言，只有涉及到<strong>模运算</strong>或者单纯使用<strong>位运算</strong>的时候无符号整数比较适合。</p>
<h2 id="整数的计算">整数的计算</h2>
<h3 id="无符号整数的加法">无符号整数的加法</h3>
<p>对于字长为 <span class="math inline">\(w\)</span> 的系统，两个整数的加法可能会需要 <span class="math inline">\(w + 1\)</span> 位才能表示，这个时候就会发生<strong>溢出</strong>。计算机的一般处理方式是舍去最高位，强制仅用 <span class="math inline">\(w\)</span> 位表达计算结果，其实相当于对 <span class="math inline">\(2^w\)</span> 取了模。也就是说，字长为 <span class="math inline">\(w\)</span> 的、带有截断的无符号整数加法为（这里，符号 <span class="math inline">\(+^{\text u}_w\)</span> 表示的是字长为 <span class="math inline">\(w\)</span> 的系统下无符号整数的加法）：</p>
<p><span class="math display">\[
x +^{\text{u}}_w y =\begin{cases}
x + y &amp; x + y &lt; 2^w \\
x + y - 2^w &amp; x + y \geq 2^w
\end{cases}
\]</span></p>
<h3 id="有符号整数的加法">有符号整数的加法</h3>
<p>在字长为 <span class="math inline">\(w\)</span> 的、使用补码的系统下，对于有符号整数 <span class="math inline">\(x, y\)</span>，其加法是有可能溢出的。</p>
<p>一种是两个大正数相加，超越了补码能表示的最大整数。此时补码的符号位承接了较低位溢出的 <code>1</code>，也就是说补码之和实际上代表一个负数。由于负数 <span class="math inline">\(u\)</span> 的补码 <span class="math inline">\({\rm TC}_w(u) = u + 2^w\)</span>，这个负数实际上就是 <span class="math inline">\(x + y - 2^w\)</span>。这种情况被称为<strong>正溢出</strong>。</p>
<p>另外一种是两个绝对值很大的负数相加，超越了补码能表示的最小整数。此时补码符号位两个 <code>1</code> 相加得到 <code>10</code>，溢出为 <span class="math inline">\(w + 1\)</span> 位数，但是最高位的 <code>1</code> 被截断。另外，较低的 <span class="math inline">\(w - 1\)</span> 位不会向上进位（绝对值很大的负数的补码较低位所表示的数实际上会很小）。此时结果的补码符号位为 <code>0</code>，代表一个正数。由于负数 <span class="math inline">\(u\)</span> 的补码 <span class="math inline">\({\rm TC}_w(u) = u + 2^w\)</span>，考虑到截断了一个 <code>1</code>，所以该正数为：</p>
<p><span class="math display">\[
(x + 2^w) + (y + 2^w) - 2^w = x + y + 2^w
\]</span></p>
<p>这种情况被称为<strong>负溢出</strong>。</p>
<p>对于求和结果在表示范围内的，补码的和（截断为 <span class="math inline">\(w\)</span> 位后）就是和的补码。这是因为 <span class="math inline">\(x, y\)</span> 的补码相加后截断，所代表的数与 <span class="math inline">\(x + y\)</span> 模 <span class="math inline">\(2^w\)</span> 同余，而 <span class="math inline">\(x + y\)</span> 位于补码能表示的范围内，所以 <span class="math inline">\(x, y\)</span> 的补码相加后截断得到的就是 <span class="math inline">\(x + y\)</span> 的补码。</p>
<p>总而言之，字长为 <span class="math inline">\(w\)</span> 的、带有截断的有符号整数加法为（这里，符号 <span class="math inline">\(+^{\text t}_w\)</span> 表示的是字长为 <span class="math inline">\(w\)</span> 的系统下无符号整数的加法）：</p>
<p><span class="math display">\[
x +^{\text{t}}_w y = \begin{cases}
x + y - 2^w &amp; x + y \geq 2^{w - 1} \\
x + y &amp; -2^{w - 1} \leq x + y &lt; 2^{w - 1} \\
x + y + 2^w &amp; x + y &lt; -2^{w - 1}
\end{cases}
\]</span></p>
<h3 id="无符号整数除以-2-的幂">无符号整数除以 2 的幂</h3>
<p>一般而言在计算机中，除法计算消耗的时间是相当长的。但是对于除数是 2 的幂的情况，我们可以使用移位的方式简化计算。</p>
<p>左移是很好理解的，溢出的部分会被截断，低位会用 <code>0</code> 补齐。但是右移的时候，低位截断是自然的，但是高位如何补齐则有两种方式。如果高位用 <code>0</code> 补齐，这种移位称为<strong>逻辑右移</strong>。如果用原数的最高位补齐（这里的最高位可以是 <code>0</code>，比如 16 位系统之中的 <code>00000000 00000001</code> 的最高位为 <code>0</code>），这种移位称为<strong>算术右移</strong>。</p>
<p>在字长为 <span class="math inline">\(w\)</span> 的系统下，我们将无符号的逻辑右移标记为 <span class="math inline">\(&gt;^{\text{ul}}_w\)</span>，无符号的算术右移则标记为 <span class="math inline">\(&gt;^{\text{um}}_w\)</span>。</p>
<p><strong>注解：</strong>有符号的右移则将上标的 <span class="math inline">\(\text{u}\)</span> 替换为 <span class="math inline">\(\text{t}\)</span>。</p>
<p>其实对于无符号整数 <span class="math inline">\(x\)</span> 不难得到：</p>
<p><span class="math display">\[
x &gt;^{\text{ul}}_w k = \left\lfloor \frac{x}{2^k} \right\rfloor
\]</span></p>
<h3 id="有符号整数除以-2-的幂">有符号整数除以 2 的幂</h3>
<p>首先说明，我们希望除法的结果<strong>向 0 舍入</strong>，也就是说 <code>23.6</code> 舍为 <code>23</code>，<code>-24.6</code> 舍为 <code>-24</code>。</p>
<p>这里我们依然使用右移来简化除法计算。但是我们注意到负数除以 2 的幂之后必然还是负数，所以不能使用逻辑右移，只能使用算数右移。这个时候，对于有符号整数 <span class="math inline">\(x\)</span> 我们可以简单地使用 <span class="math inline">\(x &gt;^{\text{tm}}_w k\)</span> 来计算 <span class="math inline">\(x / 2^k\)</span>。</p>
<p>对于正数，这样的计算显然是正确的。但是对于负数，比如说 <code>-15213</code>，其补码为 <code>11000100 10010011</code>。我们计算其除以 <code>256</code> 的商，按照上面的计算方式即将其补码算术右移 <code>8</code> 位，得到 <code>11111111 11000100</code>，结果为 <code>-60</code>。然而我们知道实际的结果应当为 <code>-59.43</code>，按照舍入应当保留为 <code>-59</code>。</p>
<div class="note info no-icon"><p>事实上我们可以说明：</p>
<p><span class="math display">\[
x &gt;^{\text{tm}}_w k = \left\lfloor \frac{x}{2^k} \right\rfloor
\]</span></p>
<p>也就是说<strong>使用算术右移计算有符号整数的时候永远得到向下舍入的结果</strong>。我们只要说明负数的情况即可，对于负数 <span class="math inline">\(x\)</span> 的补码 <span class="math inline">\(x_{w - 1}x_{w - 2} \cdots x_0\)</span>，我们设二进制数 <span class="math inline">\(x_{w - 1}x_{w - 2} \cdots x_k\)</span> 表示数 <span class="math inline">\(x&#39;\)</span>，二进制数 <span class="math inline">\(x_{k - 1}x_{k - 2} \cdots x_0\)</span> 表示数 <span class="math inline">\(x&#39;&#39; &lt; 2^k\)</span>。显然：</p>
<p><span class="math display">\[
2^k x&#39; + x&#39;&#39; = {\rm TC}_w(x) = 2^w + x
\]</span></p>
<p>而 <span class="math inline">\(x &gt;^{\text{tm}}_w k\)</span> 得到的是 <span class="math inline">\(x_{w - 1}x_{w - 1} \cdots x_{w - 1}x_{w - 2} \cdots x_k\)</span>，其表示数：</p>
<p><span class="math display">\[
x&#39; + \sum_{i = w - k}^{w - 1} 2^i = x&#39; + 2^{w - k}(2^k - 1)
\]</span></p>
<p>按照补码去解读这个二进制串的话，其结果为 <span class="math inline">\(x&#39; + 2^{w - k}(2^k - 1) - 2^w = x&#39; - 2^{w - k}\)</span>。也就能够计算得到：</p>
<p><span class="math display">\[
\left\lfloor \frac{x}{2^k} \right\rfloor = \left\lfloor \frac{2^k x&#39; + x&#39;&#39; - 2^w}{2^k} \right\rfloor = \left\lfloor x&#39; - 2^{w - k} + \frac{x&#39;&#39;}{2^k} \right\rfloor = x&#39; - 2^{w - k} = x &gt;^{\text{tm}}_w k
\]</span></p>
</div>
<p>为了修正这个舍入问题，我们可以尝试使用这样的一个性质：</p>
<p><span class="math display">\[
\left\lceil \frac{x}{y} \right\rceil = \left\lfloor \frac{x + y - 1}{y} \right\rfloor\ (y &gt; 0)
\]</span></p>
<p>也就是说我们只要在计算负数 <span class="math inline">\(x\)</span> 的时候改变为：</p>
<p><span class="math display">\[
\left\lfloor \frac{x + 2^k - 1}{2^k} \right\rfloor = [x +^{\text{t}}_w (2^k - 1)] &gt;^{\text{tm}}_w k
\]</span></p>
<p>即可。</p>
<h1 id="小数的表示">小数的表示</h1>
<h2 id="ieee-浮点数标准">IEEE 浮点数标准</h2>
<p>对于一个有小数部分的数 <span class="math inline">\(B\)</span>，我们总是能找到唯一的 <span class="math inline">\(s \in \{0, 1\}\)</span> 以及实数 <span class="math inline">\(M \in [1, 2)\)</span> 和整数 <span class="math inline">\(E\)</span> 满足：</p>
<p><span class="math display">\[
B = (-1)^s M \cdot 2^E
\]</span></p>
<p>这里 <span class="math inline">\(s, E, M\)</span> 分别称为<strong>符号</strong>、<strong>阶码</strong>和<strong>尾数</strong>。</p>
<p>基于这样的性质，我们可以给出小数的表示方式。将一片数据区域的最高位用于放置符号位 <span class="math inline">\(s\)</span>，然后后面分割为两部分，即 <strong>exp 域</strong>和 <strong>frac 域</strong>，分别放置 <span class="math inline">\(E\)</span> 以及 <span class="math inline">\(M\)</span>。exp 域和 frac 域的具体大小有两种常见的制式（即<strong>单精度浮点</strong>和<strong>双精度浮点</strong>）。当然还有一些不太常用的分区方式，具体见表：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">标准</th>
<th style="text-align: center;">exp 域长度</th>
<th style="text-align: center;">frac 域长度</th>
<th style="text-align: center;">浮点总长</th>
<th style="text-align: center;">备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">单精度浮点</td>
<td style="text-align: center;">8 bits</td>
<td style="text-align: center;">23 bits</td>
<td style="text-align: center;">4 字节</td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;">双精度浮点</td>
<td style="text-align: center;">11 bits</td>
<td style="text-align: center;">52 bits</td>
<td style="text-align: center;">8 字节</td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;">扩展精度浮点</td>
<td style="text-align: center;">15 bits</td>
<td style="text-align: center;">63 bits</td>
<td style="text-align: center;">10 字节</td>
<td style="text-align: center;">空置 1 bit</td>
</tr>
<tr class="even">
<td style="text-align: center;">半精度浮点</td>
<td style="text-align: center;">5 bits</td>
<td style="text-align: center;">10 bits</td>
<td style="text-align: center;">2 字节</td>
<td style="text-align: center;"></td>
</tr>
</tbody>
</table>
<p>在具体存储的时候，尾数由于整数部分必然为 <code>1</code>，所以只需要将小数部分按顺序存储即可，而阶码使用无符号整数方法存储。</p>
<p>这里注意，阶码理应是有可能为负数的，但一般存储的时候会将阶码加上一个固定的偏置变成正数之后存储。如果阶码长度为 <span class="math inline">\(e\)</span>，那么这个偏置就是 <span class="math inline">\(b = 2^{e - 1} - 1\)</span>。</p>
<p>比如说按照单精度浮点的方式存储数 <code>15213.0</code>，其二进制表示为 <span class="math inline">\(1.1101101101101 \times 2^{13}\)</span>。所以符号位为 <code>0</code>，尾数取小数部分前 23 位，即 <code>1101101 10110100 00000000</code>。阶码为 <code>13</code>，加上偏置 <span class="math inline">\(2^{7} - 1 = 127\)</span> 得到 <code>140</code>，即 <code>10001100</code>。所以最后的存储方式为：</p>
<figure class="highlight plaintext"><figcaption><span>Bits</span></figcaption><table><tr><td class="code"><pre><span class="line">01000110 01101101 10110100 00000000</span><br></pre></td></tr></table></figure>
<h2 id="浮点数的非规格化">浮点数的非规格化</h2>
<p>事实上，浮点数标准保留一部分阶码用于表示特殊的数字。一般而言，阶码全 <code>1</code> 和全 <code>0</code> 是被保留的。具体而言，阶码全 <code>1</code> 和全 <code>0</code> 的、表述特殊数字的浮点数被称为<strong>非规格化浮点数（denormalized float point）</strong>，其余的被称为<strong>规格化浮点数（normalized float point）</strong>。</p>
<p>全 <code>0</code> 的阶码如果按照上述的标准解读的话，表示的是相当接近于零的小数。但是由于默认了尾数的整数部分为 <code>1</code>，所以说还按照原有解读方式的话，浮点数无法表示 <code>0</code>。这个时候作出规定，就是<strong>阶码全 <code>0</code> 的时候，尾数的整数部分变为 <code>0</code></strong>。相应的，为了配合尾数解读方式的调整，<strong>阶码的偏置减去一</strong>。</p>
<p>假设某浮点数标准之中阶码长为 <span class="math inline">\(e\)</span>，尾数长为 <span class="math inline">\(m\)</span>。那么规格化的条件下最小的正浮点数应当是阶码为 <code>00...01</code>，尾数全 <code>0</code>。此时表示的数为 <span class="math inline">\(2^{1 - (2^{e - 1} - 1)} = 2^{2 - 2^{e - 1}}\)</span>。在非规格化条件下，如果将尾数按照无符号整数解析得到的非负整数标记为 <span class="math inline">\(n\)</span>，那么该浮点数应该为 <span class="math inline">\(2^{2 - 2^{e - 1}} \cdot 2^{-m}n\)</span>。这里非负整数 <span class="math inline">\(n\)</span> 取值范围为 <span class="math inline">\(0\)</span> 到 <span class="math inline">\(2^m - 1\)</span>。</p>
<p>所以说非规格化的浮点数所能表述的非负数序列为：</p>
<p><span class="math display">\[
0, \ 2^{2 - 2^{e - 1}} \cdot 2^{-m} \cdot 1, \ \cdots, \ 2^{2 - 2^{e - 1}} \cdot 2^{-m}(2^m - 1)
\]</span></p>
<p>这是一个公差为 <span class="math inline">\(2^{2 - 2^{e - 1}} \cdot 2^{-m}\)</span> 的等差数列，而且最后正好可以和规格化浮点数所表述的最小正数 <span class="math inline">\(2^{2 - 2^{e - 1}}\)</span> “无缝衔接”。所以说非规格化浮点数是一个合理的拓展。</p>
<p>但是，注意非规格化浮点数之中有 <code>+0</code> 和 <code>-0</code> 的区别。</p>
<p>全 <code>1</code> 的阶码用于表示很大的浮点数。一般而言尾数全 <code>0</code> 的时候该浮点数被保留用于表示无穷。而尾数有非 <code>0</code> 位的时候，该浮点数被保留用于表示 <code>NaN</code>。</p>
<hr />
<p>现在补全了非规格化浮点数之后，可以发现浮点数的大小比较实际上几乎可以按照无符号整数从高位直接比较到低位的逻辑进行。因为阶码大的数一定大，阶码一样的时候尾数大的数一定大，包括无穷大也可以纳入进来。但是要考虑这样的例外：</p>
<ul>
<li><p>考虑符号位</p></li>
<li><p>考虑 <code>+0</code> 和 <code>-0</code> 的特例</p></li>
<li><p>考虑 <code>NaN</code> 的问题</p></li>
</ul>
<h2 id="浮点数的舍入问题">浮点数的舍入问题</h2>
<p>由于部分数不能表述为有限的二进制小数，所以在转化为浮点数表示的时候需要舍入。一般而言向上舍入、向下舍入、向零舍入都会带来统计误差，而计算机之中常常使用<strong>向偶数舍入</strong>。其舍入的规则是向最接近的数舍入。如果向两边舍入的距离一致，那么优先舍入到偶数。比如说下列数之中，向百分位的舍入为：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; 12.324999 \Rightarrow 12.32 \\
&amp; 12.325001 \Rightarrow 12.33 \\
&amp; 12.325000 \Rightarrow 12.32 \\
&amp; 12.335000 \Rightarrow 12.34 \\
\end{aligned}
\]</span></p>
<p>回到二进制上的话，由于十进制的 <code>0.5</code> 相当于二进制的 <code>0.1</code>。也就是说如果二进制小数之中后面需要舍去的部分大于 <code>100...</code> 则向上舍入，小于 <code>100...</code> 则向下舍入，恰好是 <code>100...</code> 则向偶数舍入（舍入完毕后尾数为 <code>0</code>）。</p>
<p>这里要注意一点，舍入是有可能导致溢出。</p>
<hr />
<p>至此，小数的计算机编码方式基本就介绍完毕了。其具体过程为：</p>
<ul>
<li><p>根据使用的浮点数标准，判定使用规格化的浮点数还是非规格化的浮点数</p></li>
<li><p>据此判定符号位、阶码和尾数</p></li>
<li><p>对尾数进行舍入后转化为二进制表示</p></li>
</ul>
<h2 id="c-语言的浮点数">C 语言的浮点数</h2>
<p>C 语言之中，<code>int</code> 类型以及 <code>float</code> 类型是 4 字节的，<code>double</code> 则是 8 字节。它们之间的互相转换满足这样的规则：</p>
<ul>
<li><p><code>int</code> 可以精确转换为 <code>double</code> 类型</p></li>
<li><p><code>int</code> 转换为 <code>float</code> 类型不会溢出，但有可能被舍入</p></li>
<li><p><code>float</code> 以及 <code>double</code> 转换为 <code>int</code> 时尾数截断，如果发生溢出则产生 UB</p></li>
</ul>
<h1 id="汇编语言基本知识">汇编语言基本知识</h1>
<p>在这一部分，我们使用<strong>指令集架构（Instruction Set Architecture, ISA）</strong>来定义机器级程序的行为。在这个架构之中，CPU 内有一个记录下一条指令在主存储器之中位置的<strong>指令寄存器（Program Counter, PC）</strong>，这个寄存器在 X86 体系中被命名为 <code>%rip</code>。CPU 之中同时还具有若干个<strong>寄存器</strong>，以及一个用于存储最近执行指令的结果状态信息的<strong>条件码寄存器</strong>。除去 CPU 外，这个架构之中还有<strong>主存储器</strong>，其可以认为是以字节为单元的一片连续的地址空间。</p>
<h2 id="汇编语言的数据类型">汇编语言的数据类型</h2>
<p>和 C 语言不同，汇编语言不区分具体的数据类别，其不关心某一组二进制数据具体代表什么类型的数据。其不区分有符号和无符号的整数，甚至不区分指针和整数。其一般只区分数据的长度为字节、字、双字、四字。在处理这四种长度的数据的时候，指令的后缀分别为 <code>b, w, l, q</code>。比如说传送数据的命令为 <code>mov</code>，在传送字节的时候该命令写为 <code>movb</code>，在传送单字的时候该命令写为 <code>movw</code> 等等。</p>
<h2 id="汇编语言的数据操作">汇编语言的数据操作</h2>
<p>汇编语言的基本操作只包括对寄存器或主存数据进行运算、在寄存器和主存内部或者之间传递数据、转移程序执行位置这三种。</p>
<div class="note info no-icon"><p>在 X86-64 系统之下，寄存器是四字长的、通过名称访问的一片空间。但实际上有的时候指令可以不用访问整个四字长的寄存器空间，其可以通过 32 位操作访问四个字之中较低位的两个字，通过 16 位操作访问四个字中最低位的字，也可以通过字节操作访问最低位的字节。相应的，指代这一片寄存器空间的名称有所改变：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">64 位操作</th>
<th style="text-align: center;">32 位操作</th>
<th style="text-align: center;">16 位操作</th>
<th style="text-align: center;">字节操作</th>
<th style="text-align: center;">64 位操作</th>
<th style="text-align: center;">32 位操作</th>
<th style="text-align: center;">16 位操作</th>
<th style="text-align: center;">字节操作</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>%rax</code></td>
<td style="text-align: center;"><code>%eax</code></td>
<td style="text-align: center;"><code>%ax</code></td>
<td style="text-align: center;"><code>%al</code></td>
<td style="text-align: center;"><code>%r8</code></td>
<td style="text-align: center;"><code>%r8d</code></td>
<td style="text-align: center;"><code>%r8w</code></td>
<td style="text-align: center;"><code>%r8b</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rdx</code></td>
<td style="text-align: center;"><code>%edx</code></td>
<td style="text-align: center;"><code>%dx</code></td>
<td style="text-align: center;"><code>%dl</code></td>
<td style="text-align: center;"><code>%r9</code></td>
<td style="text-align: center;"><code>%r9d</code></td>
<td style="text-align: center;"><code>%r9w</code></td>
<td style="text-align: center;"><code>%r9b</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rcx</code></td>
<td style="text-align: center;"><code>%ecx</code></td>
<td style="text-align: center;"><code>%cx</code></td>
<td style="text-align: center;"><code>%cl</code></td>
<td style="text-align: center;"><code>%r10</code></td>
<td style="text-align: center;"><code>%r10d</code></td>
<td style="text-align: center;"><code>%r10w</code></td>
<td style="text-align: center;"><code>%r10b</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rbx</code></td>
<td style="text-align: center;"><code>%ebx</code></td>
<td style="text-align: center;"><code>%bx</code></td>
<td style="text-align: center;"><code>%bl</code></td>
<td style="text-align: center;"><code>%r11</code></td>
<td style="text-align: center;"><code>%r11d</code></td>
<td style="text-align: center;"><code>%r11w</code></td>
<td style="text-align: center;"><code>%r11b</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rsi</code></td>
<td style="text-align: center;"><code>%esi</code></td>
<td style="text-align: center;"><code>%si</code></td>
<td style="text-align: center;"><code>%sil</code></td>
<td style="text-align: center;"><code>%r12</code></td>
<td style="text-align: center;"><code>%r12d</code></td>
<td style="text-align: center;"><code>%r12w</code></td>
<td style="text-align: center;"><code>%r12b</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rdi</code></td>
<td style="text-align: center;"><code>%edi</code></td>
<td style="text-align: center;"><code>%di</code></td>
<td style="text-align: center;"><code>%dil</code></td>
<td style="text-align: center;"><code>%r13</code></td>
<td style="text-align: center;"><code>%r13d</code></td>
<td style="text-align: center;"><code>%r13w</code></td>
<td style="text-align: center;"><code>%r13b</code></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>%rsp</code></td>
<td style="text-align: center;"><code>%esp</code></td>
<td style="text-align: center;"><code>%sp</code></td>
<td style="text-align: center;"><code>%spl</code></td>
<td style="text-align: center;"><code>%r14</code></td>
<td style="text-align: center;"><code>%r14d</code></td>
<td style="text-align: center;"><code>%r14w</code></td>
<td style="text-align: center;"><code>%r14b</code></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>%rbp</code></td>
<td style="text-align: center;"><code>%ebp</code></td>
<td style="text-align: center;"><code>%bp</code></td>
<td style="text-align: center;"><code>%bpl</code></td>
<td style="text-align: center;"><code>%r15</code></td>
<td style="text-align: center;"><code>%r15d</code></td>
<td style="text-align: center;"><code>%r15w</code></td>
<td style="text-align: center;"><code>%r15b</code></td>
</tr>
</tbody>
</table>
<p>实际上，有的时候我们还可以用字节操作访问 <code>%rax, %rbx, %rcx, %rdx</code> 这四个寄存器的倒数第二低位的字节，指代这一部分空间的名称则为 <code>%ah, %bh, %ch, %dh</code>。</p>
</div>
<p>在具体进行操作的时候，一个机器指令往往需要跟随若干的操作数具体规定操作方法（如传送数据的时候，需要通过操作数指定传送的起始位置和终止位置）。操作数有三种表述方式：</p>
<ul>
<li><p><strong>立即数</strong>。其是一个整型的常数，写法为 <code>$</code> 后接上一个 C 风格的数字表示这个立即数的值。比如说 <code>$-521</code> 以及 <code>$0x4FD</code>。</p></li>
<li><p><strong>寄存器数值</strong>。直接使用寄存器的名称访问，如 <code>%rbp</code> 就代表这个寄存器之中的数据。但是注意，寄存器 <code>%rsp</code> 一般而言是被保留的。</p></li>
<li><p><strong>主存数值</strong>。使用地址访问，其地址由某一个寄存器之中的数据指定，写法为寄存器名称加括号。比如说要访问某一个主存数值，其地址存储在寄存器 <code>%rax</code> 之中，那么其写法为 <code>(%rax)</code>。</p></li>
</ul>
<h2 id="汇编语言的寻址方式">汇编语言的寻址方式</h2>
<h3 id="x86-系统的变址寻址方式">X86 系统的变址寻址方式</h3>
<p>但实际上，在 X86 系统中访问主存数值的方式（这也被称为<strong>寻址方式</strong>）并不是单一的。除去直接使用寄存器之中的数据作为地址去访问，X86 系统提供了包含变址、立即数偏移的寻址模式，其表记一般为 <code>IMM(a, b, s)</code>。这里 <code>IMM</code> 为一个立即数，称为<strong>立即数偏移</strong>，<code>a, b</code> 为两个寄存器名，分别称为<strong>定址寄存器</strong>和<strong>变址寄存器</strong>，<code>s</code> 为 <code>1, 2, 4, 8</code> 之中的一个数，称为<strong>比例因子</strong>。这个记号所代表的地址为：</p>
<p><span class="math display">\[
{\rm IMM} + {\rm R}(a) + {\rm R}(b) \cdot s 
\]</span></p>
<p>这里符号 <span class="math inline">\({\rm R}(a)\)</span> 表示寄存器 <code>a</code> 之中的数据。</p>
<p>这个表记存在一系列简写：</p>
<ul>
<li><p>当不存在定址和变址寄存器的时候，简写为 <code>IMM</code>。这个时候相当于不经过寄存器直接指定主存中的某一个地址，称为<strong>绝对寻址</strong>。</p></li>
<li><p>当 <code>IMM</code> 为 <code>0</code>，不存在变址寄存器的时候，简写为 <code>(a)</code>。这也就是最简单的寻址方式，即直接将寄存器数值作为地址解读，称为<strong>间接寻址</strong>。</p></li>
<li><p>当存在变址寄存器但 <code>s</code> 为 <code>1</code> 的时候，简写为 <code>IMM(a, b)</code>。</p></li>
</ul>
<hr />
<p>现在我们就可以尝试解读一些汇编代码了，比如：</p>
<figure class="highlight plaintext"><figcaption><span>X86-64 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">movq $-147, (%rax)</span><br></pre></td></tr></table></figure>
<p>这个指令的意思是按照四字数据转移的方式，将立即数 <code>-147</code> 写入主存，写入地址为寄存器 <code>%rax</code> 的数值。</p>
<h3 id="利用寻址进行整数计算">利用寻址进行整数计算</h3>
<p>地址实际上也可以被解读为整数，而机器进行寻址的时候实际上就在完成整数计算。根据上面给出的变址寻址方式，我们可以利用寻址命令来计算类似 <span class="math inline">\(x + ky\)</span> 的整数算式。</p>
<p>首先需要知道指令：</p>
<figure class="highlight plaintext"><figcaption><span>X86-64 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">leaq [SRC], [DEST]</span><br></pre></td></tr></table></figure>
<p>这里 <code>[SRC]</code> 是一个寻址表达式，其计算出来的结果将赋给 <code>[DEST]</code>。比如 <code>leaq (%rdi, %rdi, 2), %rax</code> 会将前面寻址计算出来的地址赋予寄存器 <code>%rax</code>。</p>
<p>实际上在编译器优化之中，部分整数运算都会被优化为地址计算。比如说 <code>x * 12</code> 这个代码有可能会被转化为如下的汇编代码：</p>
<figure class="highlight plaintext"><figcaption><span>X86-64 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">leaq (%rdi, %rdi, 2), %rax</span><br><span class="line">salq $2, %rax</span><br></pre></td></tr></table></figure>
<p>第一步使用地址计算实际上计算了 <code>x + x * 2</code>，即三倍的 <code>x</code>。第二步命令为左移，左移两位即再次乘以 <code>4</code> 得到最后结果。</p>
<h2 id="汇编语言常用的整数计算命令">汇编语言常用的整数计算命令</h2>
<p>汇编语言计算整数运算的时候，会有如下表所列出的常用命令。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">命令格式</th>
<th style="text-align: center;">等价的 C 代码</th>
<th style="text-align: center;">备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>addq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST + SRC</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>subq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST - SRC</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>imulq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST * SRC</code></td>
<td style="text-align: center;">结果取较低的 64 位截断</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>salq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST &lt;&lt; SRC</code></td>
<td style="text-align: center;">与逻辑左移 <code>shll</code> 等价</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>sarq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST &gt;&gt; SRC</code></td>
<td style="text-align: center;">算术右移</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>shrq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST &gt;&gt; SRC</code></td>
<td style="text-align: center;">逻辑右移</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>xorq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST ^ SRC</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>andq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST &amp; SRC</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>orq [SRC], [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST | SRC</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>incq [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST + 1</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>decq [DEST]</code></td>
<td style="text-align: center;"><code>DEST = DEST - 1</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>negq [DEST]</code></td>
<td style="text-align: center;"><code>DEST = -DEST</code></td>
<td style="text-align: center;"></td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>notq [DEST]</code></td>
<td style="text-align: center;"><code>DEST = ~DEST</code></td>
<td style="text-align: center;"></td>
</tr>
</tbody>
</table>
<h1 id="条件码与其应用">条件码与其应用</h1>
<p>当程序运行的时候，部分和当前程序运行状态相关的数据将会被 CPU 保存。我们已经介绍过指向下一条指令的程序计数器 <code>%rip</code>，存储临时数据的寄存器堆。另外我们要提到的是被保留的寄存器 <code>%rsp</code> 其用于存储<strong>栈顶地址</strong>。另外提一下条件码，条件码一般分为四个：</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">条件码标记</th>
<th style="text-align: center;">名称</th>
<th style="text-align: center;">备注</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;"><code>CF</code></td>
<td style="text-align: center;">Carry Flag</td>
<td style="text-align: center;">进位标记</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>ZF</code></td>
<td style="text-align: center;">Zero Flag</td>
<td style="text-align: center;">运算数为零标记</td>
</tr>
<tr class="odd">
<td style="text-align: center;"><code>SF</code></td>
<td style="text-align: center;">Sign Flag</td>
<td style="text-align: center;">运算数符号标记</td>
</tr>
<tr class="even">
<td style="text-align: center;"><code>OF</code></td>
<td style="text-align: center;">Overflow Flag</td>
<td style="text-align: center;">补码运算溢出标记</td>
</tr>
</tbody>
</table>
<p>条件码一般是由算术指令运算过程中隐含地设定的，具体如何设定条件码需要查看具体的命令运行方式。这里额外指出，<strong><code>leaq</code> 指令计算的时候不设置条件码</strong>。</p>
<h2 id="推知操作数关系">推知操作数关系</h2>
<p>若干以 <code>set</code> 为前缀的命令可以读取条件码的内容并存入某寄存器的最低位字节（使用字节操作）。比如说 <code>setle</code> 命令实际上会读取 <code>SF, OF, ZF</code> 三个条件码，将 <code>(SF ^ OF) | ZF</code> 的计算结果存入指定字节。</p>
<p>这个计算结果其实就代表了两个操作数之间的一个关系。比如说 <code>cmpq [SRC], [DEST]</code> 指令在 <code>SRC == DEST</code> 的时候会将 <code>ZF</code> 置真，在 <code>DEST - SRC &lt; 0</code> 的时候将 <code>SF</code> 置真，在运算溢出的时候将 <code>OF</code> 置真。那么 <code>setle</code> 所计算的结果为真实际上就代表 <code>DEST &lt;= SRC</code>。</p>
<p>这里给出具体示例，比如以下 C 语言代码：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gt</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> x &gt; y; &#125;</span><br></pre></td></tr></table></figure>
<p>会被汇编为：</p>
<figure class="highlight plaintext"><figcaption><span>X86-64 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">cmpq   %rsi, %rdi</span><br><span class="line">setg   %al</span><br><span class="line">movzbl %al, %eax</span><br><span class="line">ret</span><br></pre></td></tr></table></figure>
<p>其含义为首先使用 <code>cmpq</code> 命令更新条件码，然后使用 <code>setg</code> 命令读取条件码，最后使用 <code>movzbl</code> 将计算结果移动到表示函数返回值的寄存器。</p>
<h2 id="实现程序跳转">实现程序跳转</h2>
<p>对于 C 语言之中的 <code>if, goto</code> 等涉及到程序跳转的语句，汇编之中也应当有相应的可以跳转执行的命令，而条件码及其相关运算结果会控制程序是否跳转。与 <code>set</code> 系列命令一致，汇编之中还有 <code>j</code> 系列命令，如 <code>je</code>。其会读取条件码并计算，结果为真则会触发程序跳转。</p>
<p>比如这样的 C 代码：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">absdiff</span><span class="params">(<span class="keyword">long</span> x, <span class="keyword">long</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> result;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; y) result = x - y;</span><br><span class="line">    <span class="keyword">else</span> result = y - x;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<p>会被汇编为：</p>
<figure class="highlight plaintext"><figcaption><span>X86-64 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">absdiff:</span><br><span class="line">    cmpq %rsi, %rdi</span><br><span class="line">    jle  .L4</span><br><span class="line">    movq %rdi, %rax</span><br><span class="line">    subq %rsi, %rax</span><br><span class="line">    ret</span><br><span class="line">.L4:</span><br><span class="line">    movq %rsi, %rax</span><br><span class="line">    subq %rdi, %rax</span><br><span class="line">    ret</span><br></pre></td></tr></table></figure>
<p>这里第三行就会读取 <code>cmpq</code> 命令设置的条件码，如果满足了跳转条件，就会跳转到 <code>.L4</code> 标记处继续执行，否则向下继续执行。</p>
<p>实际上，汇编代码的跳转基本和 C 语言之中的 <code>goto</code> 类似，所以我们可以将 <code>if</code> 转为等价的 <code>goto</code> 表达式，这样的话就可以得到和汇编代码形式类似的 C 代码。对于以下的 C 代码：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (CASE) &#123; <span class="comment">/* IF BLOCK */</span> &#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="comment">/* ELSE BLOCK */</span> &#125;</span><br></pre></td></tr></table></figure>
<p>实际上等价于以下 C 代码：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (!CASE) <span class="keyword">goto</span> Else;</span><br><span class="line">    <span class="comment">/* IF BLOCK */</span></span><br><span class="line">    <span class="keyword">goto</span> Done;</span><br><span class="line">Else:</span><br><span class="line">    <span class="comment">/* ELSE BLOCK*/</span></span><br><span class="line">Done:</span><br></pre></td></tr></table></figure>
<div class="note info no-icon"><p>使用条件码实现程序跳转的方式称为<strong>条件跳转</strong>。但实际上，条件跳转一般会拖慢整个系统的速度。这是因为现代的流水线式处理器一般要求系统能够基本精确得知接下来应当运行的指令是什么，这样才能保证并发执行，获得高效率。</p>
<p>为了解决这个问题，一种方法是提高处理器对下面具体运行哪一个分支的预测准确率，一种方法是使用<strong>条件转移</strong>。</p>
<p>条件转移指的是将两个分支的结果都计算出来，最后再根据条件码决定取用哪一个。比如说上面的 <code>absdiff</code> 函数，现代编译器一般会把 <code>x - y</code> 和 <code>y - x</code> 都计算出来，最后根据条件码取其中一个放到返回值寄存器上。</p>
<p>但是条件转移的使用是有局限性的，比如说下面两种情况就并不适合：</p>
<ul>
<li><p>某一个分支有副作用，比如说修改了某些其他数据</p></li>
<li><p>某一个分支的计算量过于庞大</p></li>
</ul>
</div>
<p>除去 <code>if</code>，C 语言中还可以使用 <code>switch</code> 语句实现程序跳转。<code>switch</code> 语句可以翻译为若干的 <code>if-else</code> 组，但是更常见的解读方式是<strong>构建跳转表</strong>。</p>
<p><code>TODO</code></p>
<h2 id="实现程序循环">实现程序循环</h2>
<p>C 语言之中使用关键字 <code>do, while, for</code> 可以实现程序循环，同样我们可以使用条件码和 <code>j</code> 系列命令完成等价汇编代码编写，实际上我们只需要改写为等价的 <code>goto</code> 表达的 C 代码就可以。</p>
<p>对于 <code>do ... while</code> 循环，等价改写为：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* do ... while */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123; <span class="comment">/* CONTENT */</span> &#125; <span class="keyword">while</span> (CASE)</span><br><span class="line"></span><br><span class="line"><span class="comment">/* goto */</span></span><br><span class="line"></span><br><span class="line">Loop:</span><br><span class="line">    <span class="comment">/* CONTENT */</span></span><br><span class="line"><span class="keyword">if</span> (CASE) <span class="keyword">goto</span> Loop;</span><br></pre></td></tr></table></figure>
<p>对于 <code>while</code> 循环，等价改写为：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* while */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (CASE) &#123; <span class="comment">/* CONTENT */</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* goto v1 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">goto</span> Test;</span><br><span class="line">Loop:</span><br><span class="line">    <span class="comment">/* CONTENT */</span></span><br><span class="line">Test:</span><br><span class="line">    <span class="keyword">if</span> (CASE) <span class="keyword">goto</span> Loop;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* goto v2 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!CASE) <span class="keyword">goto</span> Done;</span><br><span class="line">Loop:</span><br><span class="line">    <span class="comment">/* CONTENT */</span></span><br><span class="line"><span class="keyword">if</span> (CASE) <span class="keyword">goto</span> Loop;</span><br><span class="line">Done:</span><br></pre></td></tr></table></figure>
<p>而 <code>for</code> 循环一般是改写为等价的 <code>while</code> 循环后再改写为 <code>goto</code> 版本：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">/* for */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="comment">/* INIT */</span>; CASE; <span class="comment">/* UPDATE */</span>) &#123; <span class="comment">/* CONTENT */</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* while */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* INIT */</span></span><br><span class="line"><span class="keyword">while</span> (CASE) &#123;</span><br><span class="line">    <span class="comment">/* CONTENT */</span></span><br><span class="line">    <span class="comment">/* UPDATE */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="函数调用与程序栈">函数调用与程序栈</h1>
<h2 id="程序栈和相关指令">程序栈和相关指令</h2>
<p>X86 系统中，将一片内存区域按照栈的方式管理，其中<strong>高地址为栈底</strong>，这片内存区域就被称为<strong>程序栈</strong>，其栈顶地址由寄存器 <code>%rsp</code> 管理。</p>
<p>对程序栈有两种最为基本的操作，即压栈和出栈。压栈操作命令为 <code>pushq [SRC]</code>，含义是将 <code>[SRC]</code> 写入程序栈，寄存器 <code>%rsp</code> 减小一个字节（即减去 <code>8</code>）。而出栈命令为 <code>popq [DEST]</code>，含义是将程序栈栈顶字节写入 <code>[DEST]</code>，寄存器 <code>%rsp</code> 增加一个字节（即加上 <code>8</code>）。</p>
<h2 id="函数调用">函数调用</h2>
<p>有关函数调用的两个命令为 <code>call</code> 和 <code>ret</code>，两者分别代指调用某一个函数和某一个函数返回。</p>
<p><strong>注解：</strong>似乎在汇编之中，更习惯把函数调用说成过程调用，我们之后也使用这样的名称。</p>
<p><code>call</code> 的命令格式为 <code>callq 40050 &lt;mul&gt;</code>。两个参数分别为需要调用的过程的机器码在主存里的位置，系统根据这个参数令程序指针 <code>%rip</code> 跳转。第二个参数则是调用的过程的名称。</p>
<p><code>call</code> 命令一共会完成两个任务。第一个任务是将<strong>返回地址</strong>（返回地址指的是 <code>call</code> 指令<strong>下一条</strong>指令的地址）压入程序栈，这一步是为了在调用的过程终结返回的时候能够返回到正确的位置继续执行。第二个任务是将 <code>%rip</code> 设置为要跳转的过程在主存之中的地址，实现真正的跳转。</p>
<p>而 <code>ret</code> 命令所完成的就是将程序栈的栈顶写入 <code>%rip</code>，让系统回到原先位置继续执行。其不需要接受参数，一般只需要命令本身即可。</p>
<hr />
<p>有的时候调用过程需要传递参数。在 X86 架构之下，如果传递参数不多于 6 个，则使用 <code>%rdi, %rsi, %rdx, %rcx, %r8, %r9</code> 一共 6 个寄存器进行传递。如果参数多余 6 个，则使用程序栈传递，序号越大的参数越在栈底。而函数返回值默认存放在 <code>%rax</code> 之中。</p>
<h2 id="栈帧">栈帧</h2>
<p>类似 C 之类的语言，会支持函数的递归调用，这就说明了这些语言的代码支持<strong>重入（Reentrant）</strong>，即允许多个实例同时运行同一块代码。基于这样的要求，我们不仅需要在程序栈之中记录返回地址，我们还需要记录是哪一个实例调用了过程。而每一次过程调用就会在程序栈之中生成一片用于记录这次调用的数据（包括这一次调用的临时变量、返回地址、寄存器副本等），这就是一个<strong>栈帧（Stack frame）</strong>。</p>
<p>栈帧的管理也是简单的，在过程被调用的时候分配空间、创建栈帧，在过程返回之后，该栈帧被释放。由于栈帧一般多于一个字节，所以除去栈顶指针 <code>%rsp</code> 外，还设定了栈帧指针 <code>%rbp</code> 标记栈帧的起始地址，所以 <code>%rbp</code> 和 <code>%rsp</code> 之间的程序栈指代栈顶的栈帧。</p>
<hr />
<p>另外我们也需要指出，有的时候系统会做出一些“明明没有分配栈帧（<code>%rsp</code> 没有动）但相当于创建了临时栈帧”的行为。一种可能是使用栈空间进行数据传递，这个时候栈就类似于寄存器。比如说系统可以在不动 <code>%rsp</code> 的条件下将数据通过比 <code>%rsp</code> 低一个字节的位置传递一定的数据。但栈空间的也是有限制的，比 <code>%rsp</code> 低多于 128 字节的栈空间一般是被保留的，不能直接使用。</p>
<h2 id="寄存器使用惯例">寄存器使用惯例</h2>
<p>在一个过程调用另外一个过程的时候，往往会出现寄存器冲突，比如说两者都需要使用 <code>%rdi</code> 存放参数。这个时候一般需要将寄存器数据复制到栈帧之中暂且保存，将寄存器空出给另外一方使用。</p>
<p>而到底由调用者还是被调用者的栈帧暂存寄存器，则一般遵循一些惯例。在 X86 架构下寄存器 <code>%rbx, %rbp, %r12, %r13, %r14, %r15</code> 称为<strong>被调用者保存（Callee saved）</strong>寄存器，即被调用者的栈帧保存这些寄存器的数据，在<strong>过程返回之前将栈帧数据复原</strong>。寄存器 <code>%r10, %r11</code> 和所有的传递参数的寄存器称为<strong>调用者保存（Caller saved）</strong>寄存器，即调用者的栈帧保存寄存器的数据，在<strong>调用结束后将栈帧数据复原</strong>。</p>
<h1 id="数组及结构的存储表示">数组及结构的存储表示</h1>
<h2 id="数组的存储">数组的存储</h2>
<p>数组 <code>T a[N]</code> 在主存之中存储的基本原则为连续存储，也就是将连续 <code>N * sizeof(T)</code> 字节的空间用于存储这个数组。</p>
<p>而对于二维数组，我们还是会使用连续的存储空间进行存储，而且一般遵循<strong>行优先</strong>原则。对于 <code>int a[3][5]</code>，其在主存之中的存储顺序为 <code>a[0][0], a[0][1], ..., a[0][4], a[1][0], ..., a[2][4]</code>。这种存储方式称为<strong>嵌套数组（Nested array）</strong>。</p>
<p>除了嵌套数组，还有一种存储方式是<strong>多级指针数组（Multi-level pointer array）</strong>。其基本想法为在根数组上存若干指针，这些指针指向下一级数组的起始地址。这样的存储方式方便进行多级扩展，但相应的由于内存空间不连续，而且读取指针并定位需要多次寻址，一定程度上降低了效率。</p>
<h2 id="结构的存储">结构的存储</h2>
<p>一个结构体的数据是将其成员按照声明顺序，在一片连续的空间内存储的。比如说：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span>[<span class="number">4</span>] val;</span><br><span class="line">    <span class="keyword">size_t</span> i;</span><br><span class="line">    node* next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>其将会在连续的 32 个字节中存储这个结构体，其中低地址的 16 字节存放 <code>val</code>，中间的 8 字节存放 <code>i</code>，高地址的 8 字节存放 <code>next</code>。</p>
<p>而在实际存储的时候是需要考虑<strong>对齐</strong>问题的：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">align</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> val;</span><br><span class="line">    align* next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>如果按照正常思维推测，一个字符和一个指针应该只需要 9 字节，但在 X86-64 架构下，实际上会占用 16 字节，其中低地址的 8 字节仅有最低一个字节存储了 <code>val</code>，而剩余的为占位符。</p>
<p>原因是简单的，现代的 CPU 在从主存之中读取数据的时候是同时读取多个，比如说一次性读取 8 个字节。实际上这种读取方式就将每 8 个字节的存储空间划分为了一个机器字（机器字的定义见 <a href="#机器字和字节序">绪论</a>），如果数据在同一个机器字之中，那么一次读取就可以将所有数据读出来。但如果数据跨越了两个机器字，那么就需要两次读取。</p>
<p>所以说编译器会故意在存储结构的空间内部塞入若干的空白空间让每一个成员的数据不跨越机器字以保证读取效率。</p>
<p>另外我们也注意到，变量的声明顺序实际上会影响具体的空间分配。比如说：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">S1</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a;</span><br><span class="line">    S1* next;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">S2</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> a;</span><br><span class="line">    <span class="keyword">char</span> b;</span><br><span class="line">    S2* next;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>这里，结构 <code>S1</code> 占用 24 字节，而结构 <code>S2</code> 占用 16 字节。这是因为 <code>S1</code> 在存放 <code>a</code> 后不得不空出 7 字节，否则 <code>next</code> 就会跨机器字。而 <code>S2</code> 中可以先把 <code>a, b</code> 都放置好之后，只需要空出 6 字节就可以让 <code>next</code> 不跨机器字。</p>
<h2 id="联合数据的存储">联合数据的存储</h2>
<p>联合数据类型可以定义多个成员，但是一个联合数据类型的变量在任何时候只能指代某一个成员。这些成员享有同一片存储空间，而联合所占据的空间即其中最大成员占据的空间。比如说：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">U1</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span>[<span class="number">2</span>] i;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">double</span> v;</span><br><span class="line">&#125; *p;</span><br></pre></td></tr></table></figure>
<p>这里联合的三个成员分别应该占用 1 字节、 8 字节、 8 字节，所以最后联合占据 8 字节。</p>
<h1 id="程序的链接">程序的链接</h1>
<h2 id="链接的基本概念">链接的基本概念</h2>
<p>多个源代码文件编译成为可执行文件的时候需要经过一个重要过程，即<strong>链接（Linking）</strong>，含义就是将各个独立的文件链接为单一的最终文件。这样做的好处是，某一个文件发生修改，只需要对这个文件编译并重新链接即可，不需要再次编译其他文件。同时，一些常用函数可以事先编译为一个库，需要使用的时候再将其链接进入最后的可执行文件即可。</p>
<p>链接之前，编译器首先会将每一个源代码文件之中每一个符号存储起来，存储的内容包括符号名称、其占据的内存大小和其在主存之中的地址，这就构成了<strong>符号表（Symbol table）</strong>。随后链接器将所有源代码文件综合为单个文件后，会将符号表之中的地址更新为绝对地址。</p>
<h2 id="elf-格式和符号分析">ELF 格式和符号分析</h2>
<p>可以被链接的文件一般有<strong>可重定向对象文件</strong>和<strong>共享对象文件</strong>，前者扩展名通常为 <code>.o</code>，后者则多为 <code>.dll / .so</code>。后者是特殊类型的重定向对象文件，可以被装载入内存后进行动态链接，其链接可以在装载时或者运行时完成。上述两种文件以及可执行文件，这三种二进制文件都必须要符合 <strong>ELF（Executable &amp; Linkable Format）</strong>格式。</p>
<p>ELF 格式的文件依次具有以下的部分：</p>
<ul>
<li><p>ELF header 部分。这一部分会存储与这个文件相关的基本信息。</p></li>
<li><p>Segment header table。这一部分只有可执行文件具有，会存储一些和可执行相关的内容。</p></li>
<li><p><code>.text</code> 部分。这一部分存储代码。</p></li>
<li><p><code>.rodata</code> 部分。这一部分存储只读数据，比如说跳转表。</p></li>
<li><p><code>.data</code> 部分。这一部分存储初始化过的全局变量。</p></li>
<li><p><code>.bss</code> 部分。这一部分存储未初始化的全局变量。</p></li>
<li><p><code>.symtab</code> 部分。这一部分存储符号表。</p></li>
<li><p><code>.rel.text</code> 部分。这一部分是 <code>.text</code> 部分的重定向信息。</p></li>
<li><p><code>.rel.data</code> 部分。这一部分是 <code>.data</code> 部分的重定向信息。</p></li>
</ul>
<p>后续还有一些部分，这里暂且不用讨论。</p>
<p>这里可以提一下 <code>.bss</code> 区设立的原因。<code>.bss</code> 区域的数据不会存储数据类型，并且会默认将这一部分数据的每一个字节全部置 <code>0x00</code>，作为系统默认的初始化。这样做显然要比既要存储数据类型，又要存储数据初始值的 <code>.data</code> 区高效。而能够这样粗暴解决问题的原因是系统约定了非静态全局变量的默认初始化方式为全 <code>0</code>，以及汇编并不区分各种不同的数据类型。</p>
<hr />
<p>在叙述链接过程之前，我们首先要叙述符号的概念。一个程序之中的符号分为三类，即<strong>全局符号</strong>、<strong>局部符号</strong>和<strong>外部符号</strong>。注意，这里全局符号和局部符号的区别不是全局变量和局部变量的区别。局部符号指的是在该模块定义且只可以让该模块引用的符号，包括静态和非静态的局部变量、静态函数和静态全局变量。而全局符号则是可以供给其他模块使用的符号，包括非静态的全局变量和函数。</p>
<p>首先说外部符号，其含义很简单，就是引用的其他模块的符号。包括其他模块开放的非静态全局变量和函数。可以用 <code>extern</code> 关键字声明外部符号，即声明该符号将会在链接的时候再具体给出定义，本文件只是做一个引用。</p>
<p>程序中定义的非静态局部变量，链接器并不会分析。非静态局部变量将会在运行的时候被存储在程序栈之中，使用完立刻释放。</p>
<p>而静态局部变量会被存放在可重定向文件之中的 <code>.data</code> 或者 <code>.bss</code> 部分。对于命名冲突的静态局部变量，编译的时候会给他们赋予后缀以示区分。</p>
<p>对于静态的全局变量和函数，其实际上是局部符号（<code>static</code> 关键字限制了这些变量和函数只能在本模块之中使用），所以其存放在可重定向文件之中的 <code>.data, .bss, .text</code> 部分。其中函数存放在 <code>.data</code> 部分。而如果多个文件中声明了同名的静态全局变量和函数，并不会冲突。</p>
<p>非静态的全局变量和函数一般也是存放在 <code>.data, .bss, .text</code> 部分。这个时候也有可能出现命名冲突，但此时必须作出区分。此时需要引入<strong>强符号（Strong symbol）</strong>和<strong>弱符号（Weak symbol）</strong>的定义。这个定义只对非静态的全局变量和函数成立，其中未被初始化的非静态全局变量被称为弱符号，否则是强符号。</p>
<p>链接器的原则是：</p>
<ul>
<li><p>不允许出现强符号命名冲突，否则链接失败。</p></li>
<li><p>有强符号和弱符号的命名冲突则将弱符号的指代指向强符号（强制覆盖弱符号）。</p></li>
<li><p>弱符号之间的命名冲突，则任取其中之一作为代表，其余弱符号指向被选中的弱符号。</p></li>
</ul>
<p>由于存在强制覆盖，我们应当减少全局变量的使用，或者使用静态的全局变量。如果需要使用，尽量将其初始化变为强符号。并且在使用其他模块的全局变量的时候，尽量先使用 <code>extern</code> 关键字声明这个变量。</p>
<h2 id="代码和数据重定向">代码和数据重定向</h2>
<p>在处理完毕符号后，就可以开始链接了。现在有若干的可重定向对象文件，其中 <code>.text</code> 部分存储着代码，<code>.data</code> 部分存储着变量数据。这些文件的代码之中可能包含着函数调用，而我们知道函数调用需要知道函数在内存之中的位置。编译器在编译生成可重定向对象文件的时候有两个重要信息是不了解的：</p>
<ul>
<li><p>这个模块之中的函数最终会被存放在内存的什么地方。</p></li>
<li><p>这个模块所引用的其他模块的函数的地址是什么。</p></li>
</ul>
<p>针对第一个问题，编译器会存放<strong>相对地址</strong>，也就是这个模块之中的所有函数的地址都是相对于这个模块而言的，而不能表示最后的绝对地址。针对第二个问题，编译器可能会选择将地址留空，比如使用 <code>0x00</code> 留空，之后会在 <code>.rel.data</code> 或者 <code>.rel.text</code> 部分留下信息告诉链接器要补全这里的地址。</p>
<p>到这里，编译器的任务就完成了，接下来链接器会修正相对地址并填充留空地址。</p>
<p>首先链接器会将所有可重定向对象文件的 <code>.data</code> 部分拼接为可执行文件的 <code>.data</code> 部分，<code>.text</code> 部分也如此。拼接完成后，所有函数和全局变量的绝对地址就确定了，链接器会将所有需要调整的相对地址调整为目前的绝对地址，并填充留空地址。</p>
<h2 id="库链接">库链接</h2>
<p>我们提到过，一些常用函数会被事先编译为可重定向对象文件，在使用的时候再链接进入程序。但是一般而言这样的函数库是很大的，如果完全链接进入，则相当消耗时间空间。所以有另外一个解决方案，就是将每一个函数都打包为可重定向对象文件，然后把这些可重定向对象文件打包为<strong>静态库文件</strong>，也称<strong>归档文件（Archive file）</strong>。归档文件的扩展名常常为 <code>.a</code>。</p>
<p>归档文件之中每一个可重定向对象文件是具有索引的，基于此，我们让链接器能够在用户编写的代码之中解析外部符号，并且能够在静态库之中寻找出相应的可重定向对象文件进行链接。</p>
<p>现代的静态库一般允许增量更新。</p>
<p>静态库的缺点在于可执行文件以及运行时内存之中会重复包含库文件函数和数据，同时如果库文件发生变动，则所有的相关文件都需要重新链接。目前已有的解决方式是使用<strong>共享库文件</strong>，其特征在 <a href="#elf-格式和符号分析">ELF 格式和符号分析</a> 部分已经说明。</p>
<h1 id="内存布局与缓冲区">内存布局与缓冲区</h1>
<p>在 X86-64 架构下，主存的最高地址部分是程序栈，其栈顶由 <code>%rsp</code> 管理，且栈空间向低地址增长。程序栈一般具有 8MB 的空间限制。程序栈用于存放局部变量等数据。</p>
<p>之后就是分配给每一个任务的存储空间，每一个任务都会在主存之中占用一片空间，这片空间从高地址到低地址的分配为：</p>
<ul>
<li><p>堆。堆空间可以根据程序需要动态分配，如 C 语言的 <code>malloc</code> 函数。堆空间向高地址增长。</p></li>
<li><p>静态数据。这一部分数据会在将可执行文件加载到主存的时候写入内容，写入的内容就是可执行文件的 <code>.data</code> 部分，称为<strong>数据段</strong>。</p></li>
<li><p>机器代码。这一部分就是可执行文件的 <code>.text</code> 部分，称为<strong>代码段</strong>。</p></li>
</ul>
<p>而程序栈的构成，先前已经叙述过。即分为若干的栈帧，其中栈帧高地址的 8 字节存放这个栈帧的返回地址，剩余的部分存放临时变量等数据。</p>
<hr />
<p>这个时候就可以引入缓冲区溢出攻击了。这个攻击利用的是类似 <code>gets()</code> 等不限制读入长度的函数，可能会越过预留空间对程序栈进行非法写入的漏洞。</p>
<p>比如说函数 <code>foo()</code> 之中调用了 <code>gets()</code>：</p>
<figure class="highlight cpp"><figcaption><span>C++</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">foo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">4</span>];</span><br><span class="line">    <span class="built_in">gets</span>(buf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>而函数 <code>foo()</code> 执行的时候是会分配一个栈帧给这个函数存放 <code>buf</code> 这个临时变量的。但是由于 <code>gets()</code> 不限制读入长度，所以我们可以输入相当长的字符串，这样的话就会一直向栈帧的高地址写入，从而会覆写掉返回地址，甚至是上一个函数的栈帧。这样，在 <code>foo()</code> 结束进行返回的时候，就可以控制其跳转到指定的位置执行我们注入的程序。</p>
<p>防御这种攻击的方法也很多。一种是使用可以限制读入长度的函数，如 <code>fgets()</code>。一种是给栈内部加入随机长度的无意义数据，让攻击方无法准确预测 PC 应当跳转到何处。还有比如说可以限制执行权限，让这一片区域的内存不能作为机器指令执行。此外还可以让函数在返回之前检查栈帧是否被修改等等。</p>
<h1 id="x86-汇编编程基础">X86 汇编编程基础</h1>
<p><code>TODO</code></p>
<h1 id="异常">异常</h1>
<h2 id="基本原理">基本原理</h2>
<p><strong>异常（Exception）</strong>指的是会阻止程序正常执行，并且会引起状态切换（比如从用户态切换到内核态）的事件。异常分为同步异常和异步异常。</p>
<p>同步异常一般有三种，即 <strong>Trap</strong>、<strong>Fault</strong> 以及 <strong>Abort</strong>。其中，Trap 一般是由程序主动触发的，比如说产生了系统调用 syscall，或者是触发了断点或者是使用了 Trap 命令，其恢复之后会跳转到原命令的下一条继续执行。Fault 往往是由程序出现的一些问题触发的，一般这种问题都是可以恢复的，恢复之后会重新执行原命令。Abort 则是由不可恢复的问题触发的异常，会引起程序退出。</p>
<p>异步异常则一般由外部事件触发，比如说 IO 设备中断，发生系统重置等等。一般而言，在 MIPS 架构下，如果发生的时候命令已经执行完毕 MEM 阶段，系统会保证这条命令的流水线执行完毕。否则这条流水线会被废弃。这里有关 MIPS 流水线的叙述可以查看下面的 MIPS32 基础。</p>
<h1 id="虚拟内存">虚拟内存</h1>
<h2 id="基本原理-1">基本原理</h2>
<p>我们先前提到过，每一个进程都会分配到一片内存空间，用于存放数据段、代码段并且分配堆空间。但是我们也会注意到，有的进程用不到如此大的内存空间，很容易出现分配了空间但几乎不可能使用的现象。这个问题的一个解决方案是<strong>虚拟内存（Virtual memory）</strong>，其相当类似于懒分配，即真正使用到某一块内存的时候再进行分配。</p>
<p>虚拟内存的工作原理大致为，对于每一个新进程，会分配连续的虚拟内存空间。进程使用到某一个存储地址的时候，处理器会去虚存地址和物理内存地址对照表（这个表一般称为<strong>页表（Page table）</strong>，并且每个进程都会有自己的页表）之中寻找这个虚拟内存地址所对应的真实地址，如果发现还没有给这个虚存地址分配物理内存空间，则会分配并建立两者之间的映射。</p>
<p>虚拟内存地址通常简称为<strong>虚址（Virtual address）</strong>。上述过程中负责将虚址转换为物理地址的单元称为<strong>内存管理单元（MMU）</strong>。</p>
<h2 id="页和页缺失">页和页缺失</h2>
<p>一般而言，我们会将一片固定大小的连续虚存集合起来成为一个<strong>页（Page）</strong>，而每一个虚存的页映射到物理地址空间也是一片连续的空间，这被称为<strong>页帧（Page frame）</strong>。相对应的页和页帧具有相同的大小。MMU 进行地址映射的时候都是以页为单位的。</p>
<p>基于页的结构，处理器实际上传输给 MMU 进行转换的虚地址可以分为两个部分。前半部分为<strong>虚页码（Virtual page number / VPN）</strong>，后半部分是<strong>页内偏置（Page offset）</strong>。虚页码指明了虚存之中我需要映射的字节位于具体哪一页，而页内偏置则表明了我需要映射的字节在页内是第几个字节。</p>
<p>MMU 所进行的页码映射就是将虚页码根据页表映射为<strong>物理页码（Physical page number / PPN）</strong>，之后根据页内偏置获取最后实际的数据。</p>
<p>如果某次映射之中，某个页没有找到对应的页帧，就会触发<strong>页缺失（Page fault）</strong>。页缺失产生后，系统会转入内核态，调用异常处理代码将所需要的数据从外部存储读入内存以解决异常。</p>
<h2 id="页表项的附加标记">页表项的附加标记</h2>
<p>采用虚存机制还有一种好处，就是可以通过页表实现权限管理。页表之中的每一项除去记录页和页帧的映射之外，还可以记录这个进程对物理内存的访问权限，权限控制的具体实现则由硬件完成。</p>
<p>另外，页表项还可以记录目前这个映射是否成立，这一位也常常被称为 valid 位。其为 <code>1</code> 则说明对应的页帧已经被加载到物理内存之中，否则代表对应的页帧还需要从外部存储之中获取。页缺失就会在 valid 位为 <code>0</code> 的时候发生。</p>
<h2 id="快表机制">快表机制</h2>
<p>记住这一句话就可以了：</p>
<div class="note info no-icon"><p>快表（TLB）和页表的关系，就是缓存（Cache）和内存的关系。</p>
</div>
<p>TLB 相当于页表的一个高速缓存，其出现的原因是处理器所请求的内存地址往往是聚集的，也就是说某一小部分地址占据了处理器的大部分请求。所以这个时候我们可以将常用地址缓存到 TLB 之中，请求内存的时候首先查询 TLB 有无相关映射，命中则直接使用。否则再去页表之中查找，命中则直接使用，同时将这个映射缓存到 TLB 之中。TLB 满了之后会触发淘汰机制，删去使用较少的映射项。</p>
<p>之所以提到缓存，因为内存之中的常使用部分会被加载到 cache 之中。而系统从 MMU 获取物理地址之后也会先去 cache 之中查找，找不到才会去内存之中查找。这个过程和 TLB 机制几乎一致。</p>
<h2 id="内存映射">内存映射</h2>
<p><code>TODO: We may learn it later from OS class.</code></p>
<h1 id="mips32-基础">MIPS32 基础</h1>
<p>MIPS 架构的特征可以查看本文最开头的部分，有较为详细的介绍。</p>
<p>这里补充一些其他的 MIPS 基础知识。这些知识并不是重点，但是会影响对 MIPS 架构细节的理解，故不单独开一个二级标题但还是需要分点一条条列出：</p>
<ul>
<li><p>MIPS 架构之中，一个字等于四个字节</p></li>
<li><p>MIPS 架构下返回地址不保存在栈上，而是保存在 31 号寄存器之中</p></li>
<li><p>MIPS 架构下 0 号寄存器永远存储常数 <code>0</code></p></li>
<li><p>MIPS 架构不具有条件码，条件的表示全部使用寄存器</p></li>
<li><p>MIPS32 架构除去 32 个通用寄存器，还有高位寄存器 <code>%hi</code> 以及低位寄存器 <code>%lo</code>。这两者都是 32 位寄存器，其出现的原因是需要处理整数的乘除法。另外需要注意，MIPS32 架构的立即数通常只允许 16 位，而寄存器是 32 位的，所以通常会使用这两个寄存器将 32 位数拆开表示。记号上，<code>%hi($1)</code> 这种写法代表 1 号寄存器的 16 位高位</p></li>
<li><p>MIPS 架构下有四个传参寄存器，即 4 到 7 号寄存器。多余的参数使用栈传递</p></li>
<li><p>MIPS 架构的命令后缀 <code>i</code> 表示立即数，<code>u</code> 表示不启用溢出检测。比如说 <code>addiu</code> 命令表示将某一个寄存器加上一个立即数，溢出的话取模放入结果寄存器</p></li>
</ul>
<h2 id="流水线结构与延迟槽">流水线结构与延迟槽</h2>
<p>在 MIPS 架构之中，任何指令的执行都会分为五个步骤，这五个步骤由不同的硬件完成。这些步骤分别是：</p>
<ul>
<li><p>读取指令（IF）</p></li>
<li><p>读取寄存器（RD）</p></li>
<li><p>代数或逻辑运算（ALU）</p></li>
<li><p>访问内存（MEM）</p></li>
<li><p>回写（WB）</p></li>
</ul>
<p>一个指令的五个执行步骤构成一条<strong>流水线</strong>，而不同指令的流水线是可以并发执行的，只要保证它们不会同时调用某一个硬件资源（比如说两条指令不可以同时在 IF 过程中）。</p>
<p>而这种并行的流水线架构的优越之处就是可以最大程度利用硬件资源。比如说考虑这样的 MIPS 汇编代码：</p>
<figure class="highlight plaintext"><figcaption><span>MIPS32 Assembly</span></figcaption><table><tr><td class="code"><pre><span class="line">jal  printf</span><br><span class="line">move $4, $6</span><br><span class="line">op</span><br></pre></td></tr></table></figure>
<p>这里 <code>jal</code> 类似于 X86 的 <code>call</code> 命令，用于调用过程。但是，与这条指令间隔一条的 <code>op</code> 指令才是 <code>printf</code> 返回后调用的指令（返回地址）。</p>
<p>原因是 <code>jal</code> 指令流水线执行到 ALU 阶段的时候才会发生实质跳转，从 <code>jal</code> 的 IF 阶段结束到实质跳转这段时间 IF 硬件是空闲的，这段时间就被称为<strong>延迟槽（Delay slot）</strong>。但是我们可以让 IF 硬件立刻执行 <code>move $4, $6</code> 的 IF 阶段，这样在实质跳转发生前的这段延迟槽就被利用了。</p>
<p>能这样做的原因是 <code>move</code> 指令在 RD 阶段结束后就执行完毕了，后续的阶段可以忽略或者说当成不存在。如果说 <code>jal</code> 命令之后跟随了一些需要实质 ALU 的命令，则可能会因为和 <code>jal</code> 或者所调用的过程发生硬件冲突而导致异常。所以有的时候我们可以填入 <code>nop</code> 回避掉可能的问题。</p>
<h2 id="多线程操作">多线程操作</h2>
<p>在多线程编程之中，我们往往会涉及到多个线程对共享资源的读写操作。在 MIPS 架构中，针对这个场景，有 <code>ll</code> 和 <code>sc</code> 两个命令。</p>
<p><code>ll</code> 全称为<strong>链接加载（Load linked）</strong>，在使用这个命令从内存之中加载数据之后，处理器会记住这一次操作，这一次操作访问的地址也会被暂时保存。</p>
<p><code>sc</code> 全称为<strong>条件存储（Store conditional）</strong>，使用这个命令将寄存器 <code>v</code> 之中的数据存储到内存的时候，处理器会首先检查上一次 <code>ll</code> 命令操作的内存区域有没有被改动。如果没有被改动过，则存储成功，<code>v</code> 之中的值也会被写为 <code>1</code> 表示操作成功。反之，写入失败，内存不会被修改，<code>v</code> 之中的值也会被写为 <code>0</code> 表示操作失败。</p>
<h2 id="协处理器与异常处理">协处理器与异常处理</h2>
<p>协处理器是用于协助处理器处理类似内存管理、内存映射、异常等工作的硬件，其在可以被认为是一系列拓展寄存器。这里我们主要关注 MIPS 架构下协处理器之中的 Cause 和 Status 寄存器。</p>
<p>MIPS 系统的一个优点就是支持精确异常处理，也就是说保证发生异常的命令之前的所有命令都可以被执行完毕，之后的命令不进行处理。而为了实现这一点，就需要精确记录异常位置，并且处理好延迟槽机制带来的问题。</p>
<p>借助协处理器，MIPS 系统处理异常的步骤大致为：</p>
<ul>
<li><p>保存异常现场信息。协处理器利用<strong>异常程序计数器（Exception program counter / EPC）</strong>记录异常命令的位置，Cause 寄存器会记录异常原因，且其 BD 位会记录延迟槽信息，Status 寄存器的<strong>异常标志位（EXL）</strong>被置 <code>1</code>。另外，一些相关寄存器的值也会被保存，另外 26 和 27 号寄存器会被留给异常处理。</p></li>
<li><p>根据具体类型判定处理异常的方式。这里会使用 Cause 寄存器获取异常类型。</p></li>
<li><p>开辟异常处理内存空间。系统会开辟出空间并且保留一部分通用寄存器用于异常处理。</p></li>
<li><p>处理完毕后返回。此时协处理器清空相关寄存器，跳转到原有命令继续执行。</p></li>
</ul>
<p>这里要注意一点，一般异常处理会在内核态下运行，而正常的程序会在用户态下运行。为了防止异常处理机制被不正当利用于在内核态下执行攻击代码，系统要求状态转换和程序跳转回原有命令必须同时。</p>
<h2 id="mips-内存管理">MIPS 内存管理</h2>
<p>MIPS 使用虚存机制，其虚址一般按照下述方式分配：</p>
<ul>
<li><p>高于 <code>0xC0000000</code> 的虚址为 kseg2 空间，其仅可以由核心态使用，使用的时候需要经过 MMU 转换，也就是说这一部分是 Mapped memory。</p></li>
<li><p>介于 <code>0xA0000000</code> 和 <code>0xC0000000</code> 之间的虚址是 kseg1 空间，其不可以在用户态下使用，使用的时候不需要经过 MMU 转换（其虚址最高三位清零就是物理地址）。另外，这一部分不会被缓存，也就是说这一部分是 Unmapped uncached memory。</p></li>
<li><p>介于 <code>0x80000000</code> 和 <code>0xA0000000</code> 之间的虚址是 kseg0 空间，其不可以在用户态下使用，使用的时候不需要经过 MMU 转换（其虚址最高一位清零就是物理地址）。另外，这一部分可以被缓存，也就是说这一部分是 Unmapped cached memory。</p></li>
<li><p>低于 <code>0x80000000</code> 的虚址为 kuseg 空间，是用户态空间，使用的时候需要经过 MMU 转换，也就是说这一部分是 Mapped memory。</p></li>
</ul>
<p>这样划分的意图就是区分内核态和用户态对内存的访问。另外，上述划分之中有 unmapped 的内存空间，这一部分设置的缘由是系统刚启动的时候 TLB 并未初始化，不可以进行正常的地址转换，故使用 unmapped 的空间进行操作。</p>
<p>另外，为了区分某虚拟地址属于哪一个进程，MIPS 会给虚拟地址附上 ASID 进程标识符。</p>
<hr />
<p>MIPS 架构支持一种特殊的快表，即 JTLB。其内部记录的是<strong>虚页码除以 2</strong> 之后的结果和<strong>两个</strong>物理页码之间的关系，两个映射项都标注了是否 valid 以及是否允许写入（一般称为是否 dirty，如果一个页面不是 dirty 的，则会禁止写入）。</p>
<p>这个时候的转换需要将虚页码先去掉末位进行查表，最后如果命中，则需要根据虚页码末位选取最终的映射项。</p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《现代控制技术》学习笔记</title>
    <url>/2022/09/25/note-of-ctrl/</url>
    <content><![CDATA[<p>一门数学课。因为之前退了存储技术基础，所以只能暂且选一门限选课来填充一下空荡荡的大四课程表，不过本来自己也就对控制论有一点点兴趣在的。</p>
<p><span class="math display">\[
\newcommand{\d}{\mathrm{d}}
\newcommand{\lv}{\left[\begin{matrix}}
\newcommand{\rv}{\end{matrix}\right]}
\]</span></p>
<span id="more"></span>
<h1 id="描述系统的基本概念">描述系统的基本概念</h1>
<h2 id="状态空间">状态空间</h2>
<p>考虑电阻 <span class="math inline">\(R\)</span>，电容 <span class="math inline">\(C\)</span>，电感 <span class="math inline">\(L\)</span> 串联形成的系统，上述串联系统通过恒压源控制两端电压为 <span class="math inline">\(u\)</span>。假设电容的电压为 <span class="math inline">\(u_C\)</span>，串联系统中电流为 <span class="math inline">\(i\)</span>，显然有下述关系成立：</p>
<p><span class="math display">\[
\begin{aligned}
i &amp;= C\frac{\d u_C}{\d t} \\
u_C &amp;= u - Ri - L\frac{\d i}{\d t} \\
\end{aligned}
\]</span></p>
<p>据此，我们可以看出，仅依靠 <span class="math inline">\(i\)</span> 并不能确定系统状态，仅依靠 <span class="math inline">\(u_C\)</span> 也不能。但是如果同时确定了 <span class="math inline">\(i, u_C\)</span> 实际上就确定了整个系统的状态。</p>
<p>我们将一组能够完全表征系统状态的最少独立变量称为系统的<strong>状态变量</strong>，以这些状态变量为分量的向量称为<strong>状态向量</strong>，将状态向量所在的 <span class="math inline">\(n\)</span> 维向量空间 <span class="math inline">\(\mathbb{R}^n\)</span> 称为<strong>状态空间</strong>，这里 <span class="math inline">\(n\)</span> 为状态向量的维数。</p>
<p>而如果我们将系统的输入记作 <span class="math inline">\(u(t)\)</span>，输出记作 <span class="math inline">\(y(t)\)</span>。描述系统的方程可以分为两个，其一是<strong>状态方程</strong>，一般是描述系统状态的微分与系统状态、系统输入、时间之间的关系的微分方程：</p>
<p><span class="math display">\[
\dot x(t) = f(x(t), u(t), t)
\]</span></p>
<p>其二是<strong>输出方程</strong>，一般是描述系统输出与系统状态、系统输入、时间之间的关系的方程：</p>
<p><span class="math display">\[
y(t) = g(x(t), u(t), t)
\]</span></p>
<p>而上述两个方程合称<strong>状态空间表达式</strong>。</p>
<p>在最开始的例子中，我们将 <span class="math inline">\(u\)</span> 视为输入，那么上述例子中两个方程实际上可以整理为计算 <span class="math inline">\(i, u_C\)</span> 的一阶微分的表达式，从而构成了系统的状态方程。而由于我们没有具体指出何种物理量为输出，所以无法给定输出方程。</p>
<p>此外，如果状态空间表达式可以使用矩阵的形式改写为：</p>
<p><span class="math display">\[
\begin{aligned}
\dot x(t) &amp;= Ax(t) + Bu(t) \\
y(t) &amp;= Cx(t) + Du(t) \\
\end{aligned}
\]</span></p>
<p>那么这个系统就是<strong>线性系统</strong>。这里矩阵 <span class="math inline">\(A, B, C, D\)</span> 分别称为系统矩阵、控制矩阵、输出矩阵、直接传递矩阵。</p>
<h2 id="建立状态空间表达">建立状态空间表达</h2>
<h3 id="简单系统的状态空间">简单系统的状态空间</h3>
<p>对于简单系统，我们完全可以简单列出系统中的约束，确定状态变量后改写出状态空间表达式。例如，我们将电阻 <span class="math inline">\(R\)</span>，电感 <span class="math inline">\(L\)</span>，电机 <span class="math inline">\(M\)</span> 串联于恒压源 <span class="math inline">\(u\)</span> 上，恒压源电压作为该系统的输入。电机驱动转动惯量为 <span class="math inline">\(J\)</span> 的物体。电机阻尼系数为 <span class="math inline">\(f\)</span>，反电势系数为 <span class="math inline">\(C_e\)</span>，电磁转矩系数为 <span class="math inline">\(C_m\)</span>。</p>
<p>记串联系统中电流为 <span class="math inline">\(i\)</span>，电机转动角度为 <span class="math inline">\(\theta\)</span>。那么根据串联分压首先得到约束：</p>
<p><span class="math display">\[
u = iR + L\frac{\d i}{\d t} + C_e\frac{\d \theta}{\d t}
\]</span></p>
<p>考虑电机的约束，能够得到：</p>
<p><span class="math display">\[
C_mi = J\frac{\d^2 \theta}{\d t^2} + f\frac{\d \theta}{\d t}
\]</span></p>
<p>考虑将状态变量设定为 <span class="math inline">\(x_1 := \theta, x_2 := \dot\theta, x_3 := i\)</span>，定义系统的输出为 <span class="math inline">\(y := \theta\)</span>。整理上述式子得到状态方程：</p>
<p><span class="math display">\[
\begin{aligned}
\dot x_1 &amp;= x_2 \\
\dot x_2 &amp;= \frac{1}{J}(-fx_2 + C_mx_3) \\
\dot x_3 &amp;= \frac{1}{L}(-C_ex_2 - Rx_3 + u) \\
\end{aligned}
\]</span></p>
<p>输出方程则为：</p>
<p><span class="math display">\[
y = x_1
\]</span></p>
<p>上述方程可以改写为矩阵形式：</p>
<p><span class="math display">\[
\lv \dot x_1 \\ \dot x_2 \\ \dot x_3 \rv =
\lv
0 &amp; 1 &amp; 0 \\
0 &amp; -f / J &amp; C_m / J \\
0 &amp; -C_e / L &amp; -R / L \\
\rv
\lv x_1 \\ x_2 \\ x_3 \rv +
\lv 0 \\ 0 \\ 1 / L \rv u
\]</span></p>
<p>以及：</p>
<p><span class="math display">\[
y = \lv 1 &amp; 0 &amp; 0 \rv \lv x_1 \\ x_2 \\ x_3 \rv
\]</span></p>
<h3 id="高阶微分方程描述的系统的状态空间">高阶微分方程描述的系统的状态空间</h3>
<p>对于较为复杂的线性系统，我们可以考虑这样的一个通用表达。即如果，系统的输入输出满足下述的高阶微分方程：</p>
<p><span class="math display">\[
\sum_{k = 0}^n a_ky^{(n - k)} = \sum_{k = 0}^n b_ku^{(n - k)}
\]</span></p>
<p>这里 <span class="math inline">\(a_0 = 1\)</span>。</p>
<p>我们现在考虑一个退化情况，即所有的 <span class="math inline">\(k &lt; n\)</span> 都有 <span class="math inline">\(b_k = 0\)</span>。此时上述微分方程退化为：</p>
<p><span class="math display">\[
\sum_{k = 0}^n a_ky^{(n - k)} = bu
\]</span></p>
<p>此时不妨令状态变量为 <span class="math inline">\(x_1 := y, x_2 := \dot y, x_3 := \ddot y, \cdots, x_n := y^{(n - 1)}\)</span>，显然输出为 <span class="math inline">\(y = x_1\)</span>。那么显然我们可以注意到状态方程为：</p>
<p><span class="math display">\[
\lv \dot x_1 \\ \dot x_2 \\ \dot x_3 \\ \vdots \\ \dot x_n \rv =
\lv
0 &amp; 1 &amp; 0 &amp; \cdots &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; \cdots &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; \cdots &amp; 1 \\
-a_n &amp; -a_{n - 1} &amp; -a_{n - 2} &amp; \cdots &amp; -a_1 \\
\rv
\lv x_1 \\ x_2 \\ x_3 \\ \vdots \\ x_n \rv +
\lv 0 \\ 0 \\ \vdots \\ 0 \\ b \rv u
\]</span></p>
<p>输出方程是平凡的，这里不再具体写出其矩阵形式。</p>
<p>上述例子中定义的状态变量所引出的状态空间表达式，一般称为<strong>能控标准型</strong>。</p>
<p>此外，我们还能按照下述方式定义状态变量：</p>
<p><span class="math display">\[
\begin{cases}
x_1 := y^{(n - 1)} + a_1y^{(n - 2)} + \cdots + a_{n - 3}\ddot y + a_{n - 2}\dot y + a_{n - 1}y \\
x_2 := y^{(n - 2)} + a_1y^{(n - 3)} + \cdots + a_{n - 3}\dot y + a_{n - 2}y \\
x_3 := y^{(n - 3)} + a_1y^{(n - 4)} + \cdots + a_{n - 3}y \\
\vdots \\
x_{n - 1} := \dot y + a_1y \\
x_n := y \\
\end{cases}
\]</span></p>
<p>显然得到：</p>
<p><span class="math display">\[
\begin{cases}
\dot x_1 = -a_nx_n + bu \\
\dot x_2 = x_1 - a_{n - 1}x_n \\
\dot x_3 = x_2 - a_{n - 2}x_n \\
\vdots \\
\dot x_{n - 1} = x_{n - 2} - a_2x_n \\
\dot x_n = x_{n - 1} - a_1x_n \\
\end{cases}
\]</span></p>
<p>从而就能得到在这样的状态变量定义之下的状态方程：</p>
<p><span class="math display">\[
\lv \dot x_1 \\ \dot x_2 \\ \dot x_3 \\ \vdots \\ \dot x_n \rv =
\lv
0 &amp; 0 &amp; \cdots &amp; 0 &amp; -a_n \\
1 &amp; 0 &amp; \cdots &amp; 0 &amp; -a_{n - 1} \\
0 &amp; 1 &amp; \cdots &amp; 0 &amp; -a_{n - 2} \\
\vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\
0 &amp; 0 &amp; \cdots &amp; 1 &amp; -a_1 \\
\rv
\lv x_1 \\ x_2 \\ x_3 \\ \vdots \\ x_n \rv +
\lv b \\ 0 \\ 0 \\ \vdots \\ 0 \rv u
\]</span></p>
<p>输出方程是平凡的，这里不再具体写出其矩阵形式。</p>
<p>上述例子中定义的状态变量所引出的状态空间表达式，一般称为<strong>能观标准型</strong>。</p>
<hr />
<p>现在回到一般情况。为了更好地设定状态变量，我们首先定义下述中间变量：</p>
<p><span class="math display">\[
\begin{cases}
\beta_0 := b_0 \\
\beta_1 := b_1 - a_1\beta_0 \\
\beta_2 := b_2 - a_1\beta_1 - a_2\beta_0 \\
\vdots \\
\beta_n := b_n - a_1\beta_{n - 1} - \cdots - a_{n - 1}\beta_1 - \beta_0 \\
\end{cases}
\]</span></p>
<p>从而定义出下述状态变量：</p>
<p><span class="math display">\[
\begin{cases}
x_1 := y - \beta_0 u \\
x_2 := \dot y - \beta_0 \dot u - \beta_1 u \\
x_3 := \ddot y - \beta_0 \ddot u - \beta_1 \dot u - \beta_2 u \\
\vdots \\
x_n := y^{(n - 1)} - \beta_0 u^{(n - 1)} - \beta_1 u^{(n - 2)} - \beta_2 u^{(n - 3)} - \cdots - \beta_{n - 1} u \\
\end{cases}
\]</span></p>
<p>从而就能得到在这样的状态变量定义之下的状态方程：</p>
<p><span class="math display">\[
\lv \dot x_1 \\ \dot x_2 \\ \dot x_3 \\ \vdots \\ \dot x_n \rv =
\lv
0 &amp; 1 &amp; 0 &amp; \cdots &amp; 0 \\
0 &amp; 0 &amp; 1 &amp; \cdots &amp; 0 \\
\vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \\
0 &amp; 0 &amp; 0 &amp; \cdots &amp; 1 \\
-a_n &amp; -a_{n - 1} &amp; -a_{n - 2} &amp; \cdots &amp; -a_1 \\
\rv
\lv x_1 \\ x_2 \\ x_3 \\ \vdots \\ x_n \rv +
\lv \beta_1 \\ \beta_2 \\ \beta_3 \\ \vdots \\ \beta_n \rv u
\]</span></p>
<p>输出方程显然为 <span class="math inline">\(y = x_1 + \beta_0 u\)</span>，这里不再具体写出其矩阵形式。</p>
<h3 id="传递函数">传递函数</h3>
<p>在讲述传递函数之前，我们简单介绍系统的零状态响应和零输入响应。零状态响应指的是一个系统在系统所有状态变量为零时，对给定输入所给出的响应。相应的，零输入响应则是一个系统在所有输入为零的时候所给出的响应。而所谓的全响应，则是在状态变量不一定为零，输入也不一定为零的条件下系统的响应。事实上，全响应是零状态响应和零输入相应的组合。</p>
<p>而考虑用线性常微分方程描述的系统，线性常微分方程的解均是通解和特解的组合。这里零状态响应实际上对应了特解，因为零状态事实上仅改变了系统状态的起始值，将其强制设定为零，所得到的响应是零初始值下微分方程的一个特殊解。</p>
<p>实际上，零状态响应在很多条件下给出了系统的完全信息。大部分系统在零输入的条件下，零输入响应最终会衰减至可忽略，而最后表现系统结构的是零状态响应。基于这样的理解，很多时候我们仅需要了解零状态响应即可基本分析系统的结构。</p>
<hr />
<p>分析零状态响应的一个重要方法为分析零状态响应下的系统传递函数。在零状态条件下，我们能够建立输入 <span class="math inline">\(u\)</span> 到输出 <span class="math inline">\(y\)</span> 的映射，而如果将该系统的单位冲激响应记为 <span class="math inline">\(g\)</span>，我们显然得知 <span class="math inline">\(y\)</span> 为 <span class="math inline">\(u\)</span> 与 <span class="math inline">\(g\)</span> 的卷积：</p>
<p><span class="math display">\[
y = u * g
\]</span></p>
<p>对上述两边做 Laplace 变换：</p>
<p><span class="math display">\[
Y = GU
\]</span></p>
<p>而这里我们就将 <span class="math inline">\(G(s)\)</span> 称为系统的（零状态）<strong>传递函数</strong>，其定义即零状态下输出的 Laplace 变换与输入的 Laplace 变换的商。我们可以证明，系统的零状态传递函数为零状态单位冲激响应的 Laplace 变换。</p>
<hr />
<p>现在我们考虑状态空间方程式和传递函数之间的互相转换。</p>
<p>【从传递函数推导状态空间方程式见 PPT #1，未整理】</p>
<p>我们已知一个线性系统的状态空间方程式如下：</p>
<p><span class="math display">\[
\begin{cases}
\dot x = Ax + Bu \\
y = Cx + Du \\
\end{cases}
\]</span></p>
<p>对状态方程两边作 Laplace 变换得到：</p>
<p><span class="math display">\[
sX(s) = AX(s) + BU(s)
\]</span></p>
<p>这里 <span class="math inline">\(X := \mathcal{L}[x], U := \mathcal{L}[u]\)</span>，其余函数的 Laplace 变换符号以此类推。</p>
<p>那么我们就能够得到：</p>
<p><span class="math display">\[
X(s) = (sI - A)^{-1}BU(s)
\]</span></p>
<p>从而得到：</p>
<p><span class="math display">\[
Y(s) = CX(s) + DU(s) = [C(sI - A)^{-1}B + D]U(s)
\]</span></p>
<p>这显然给出了传递函数的表达：</p>
<p><span class="math display">\[
G(s) = \frac{Y(s)}{U(s)} = C(sI - A)^{-1}B + D
\]</span></p>
<p>基于这一结论我们可以分析串联和并联系统的传递函数。</p>
<p>现在假设有两个系统，下述为其状态空间方程式：</p>
<p><span class="math display">\[
\Sigma_1: \begin{cases}
\dot x_1 = A_1x_1 + B_1u_1 \\
y_1 = C_1x_1 + D_1u_1 \\
\end{cases}, \Sigma_2: \begin{cases}
\dot x_2 = A_2x_2 + B_2u_2 \\
y_2 = C_2x_2 + D_2u_2 \\
\end{cases}
\]</span></p>
<p>如果两个系统串联，那么新系统的输入 <span class="math inline">\(u := u_1\)</span>，新系统的输出 <span class="math inline">\(y := y_2\)</span>，并且我们有 <span class="math inline">\(u_2 = y_1\)</span>。而这个系统的状态变量就视作原先两个系统的状态变量的拼接。从而我们得到：</p>
<p><span class="math display">\[
\dot x_2 = A_2x_2 + B_2u_2 = A_2x_2 + B_2(C_1x_1 + D_1u_1) = A_2x_2 + B_2C_1x_2 + B_2D_1u_1
\]</span></p>
<p>从而得到串联系统的状态方程：</p>
<p><span class="math display">\[
\lv \dot x_1 \\ \dot x_2 \rv =
\lv
A_1 &amp; 0 \\
B_2C_1 &amp; A_2
\rv
\lv x_1 \\ x_2 \rv +
\lv B_1 \\ B_2D_1 \rv u
\]</span></p>
<p>输出则有：</p>
<p><span class="math display">\[
y = y_2 = C_2x_2 + D_2u_2 = C_2x_2 + D_2(C_1x_1 + D_1u_1) = C_2x_2 + D_2C_1x_1 + D_2D_1u_1
\]</span></p>
<p>从而输出输出方程为：</p>
<p><span class="math display">\[
y = \lv D_2C_1 &amp; C_2 \rv \lv x_1 \\ x_2 \rv + D_2D_1u
\]</span></p>
<p>根据先前推出的传递函数和状态空间方程式之间的关系，我们可以写出串联系统的传递函数为：</p>
<p><span class="math display">\[
\begin{aligned}
G(s) &amp;= \lv D_2C_1 &amp; C_2 \rv
\lv
sI_1 - A_1 &amp; 0 \\
-B_2C_1 &amp; sI_2 - A_2 \\
\rv^{-1}
\lv B_1 \\ B_2D_1 \rv + D_2D_1 \\
&amp;= \lv D_2C_1 &amp; C_2 \rv
\lv
(sI_1 - A_1)^{-1} &amp; 0 \\
(sI_2 - A_2)^{-1}B_2C_1(sI_1 - A_1)^{-1} &amp; (sI_2 - A_2)^{-1} \\
\rv
\lv B_1 \\ B_2D_1 \rv + D_2D_1 \\
&amp;= \lv D_2C_1 &amp; C_2 \rv
\lv
(sI_1 - A_1)^{-1}B_1 \\
(sI_2 - A_2)^{-1}B_2C_1(sI_1 - A_1)^{-1}B_1 + (sI_2 - A_2)^{-1}B_2D_1 \\
\rv + D_2D_1 \\
&amp;= D_2C_1(sI_1 - A_1)^{-1}B_1 + C_2(sI_2 - A_2)^{-1}B_2C_1(sI_1 - A_1)^{-1}B_1 + C_2(sI_2 - A_2)^{-1}B_2D_1 + D_2D_1 \\
&amp;= [C_1(sI_1 - A_1)^{-1}B_1 + D_1][C_2(sI_2 - A_2)^{-1}B_2 + D_2] \\
&amp;= G_1(s)G_2(s)
\end{aligned}
\]</span></p>
<p>也就是说串联系统的传递函数为各个子系统的传递函数之积。</p>
<p>对于并联系统，显然有 <span class="math inline">\(u_1 = u_2 = u\)</span>，而输出有 <span class="math inline">\(y = y_1 + y_2\)</span>。使用上述方法很容易推出 <span class="math inline">\(G(s) = G_1(s) + G_2(s)\)</span>。</p>
<p>也就是说并联系统的传递函数为各个子系统的传递函数之和。</p>
<h2 id="状态空间的线性变换">状态空间的线性变换</h2>
<p>对于下述的线性系统的状态空间表达式：</p>
<p><span class="math display">\[
\begin{cases}
\dot x = Ax + Bu \\
y = Cx + Du \\
\end{cases}
\]</span></p>
<p>取一个可逆矩阵 <span class="math inline">\(P\)</span>，定义变换 <span class="math inline">\(x = P\overline x\)</span>，得到下述的状态空间表达式：</p>
<p><span class="math display">\[
\begin{cases}
P\dot{\overline x} = AP\overline x + Bu \\
y = CP\overline x + Du \\
\end{cases}
\iff
\begin{cases}
\dot{\overline x} = P^{-1}AP\overline x + P^{-1}Bu \\
y = CP\overline x + Du \\
\end{cases}
\]</span></p>
<p>不妨定义：</p>
<p><span class="math display">\[
\overline A = P^{-1}AP, \overline B = P^{-1}B, \overline C = CP, \overline D = D
\]</span></p>
<p>这样我们就得到了线性状态空间上的线性变换。而这样的线性变换事实上能够保证变换前后的传递函数不变：</p>
<p><span class="math display">\[
\begin{aligned}
\overline G(s) &amp;= \overline C(sI - \overline A)^{-1}\overline B + \overline D \\
&amp;= CP(sI - P^{-1}AP)^{-1}P^{-1}B + D \\
&amp;= C[(P^{-1})^{-1}(sI - P^{-1}AP)^{-1}P^{-1}]B + D \\
&amp;= C[P(sI - P^{-1}AP)P^{-1}]^{-1}B + D \\
&amp;= C(sI - A)^{-1}B + D \\
&amp;= G(s)
\end{aligned}
\]</span></p>
<p>该性质保证了线性系统经过可逆线性变换后系统本质性质不变。而我们可以使用合适的可逆线性变换令 <span class="math inline">\(A\)</span> 对角化或者变为 Jordan 标准型。如果 <span class="math inline">\(A\)</span> 能够对角化为 <span class="math inline">\(\overline A\)</span>，事实上就实现了状态变量的变量分离，因为根据 <span class="math inline">\(\dot{\overline x} = \overline A\overline x + \overline Bu\)</span> 可以看出此时某个状态变量的导数仅和其本身有关而和其余状态变量无关。</p>
<p>对于能够对角化的 <span class="math inline">\(A \in M_{n \times n}(\mathbb{R})\)</span>，显然其具有 <span class="math inline">\(n\)</span> 个线性无关的特征向量 <span class="math inline">\(p_1, p_2, \cdots, p_n\)</span>。这里不妨假设其对应的特征值分别为 <span class="math inline">\(\lambda_1, \lambda_2, \cdots, \lambda_n\)</span>。那么我们只需要令 <span class="math inline">\(P := (p_1, p_2, \cdots, p_n)\)</span> 即可，此时：</p>
<p><span class="math display">\[
\overline A = \lv
\lambda_1 \\
&amp; \lambda_2 \\
&amp;&amp; \ddots \\
&amp;&amp;&amp; \lambda_n \\
\rv
\]</span></p>
<p>如果 <span class="math inline">\(A\)</span> 不能对角化，其总能找到与其相似的 Jordan 标准型 <span class="math inline">\(\overline A \sim A\)</span>。这里给出求解 Jordan 标准型的步骤。</p>
<ul>
<li>首先求解 <span class="math inline">\(A\)</span> 的特征值 <span class="math inline">\(\lambda_1, \lambda_2, \cdots, \lambda_n\)</span></li>
<li>对于其中几何重数小于代数重数的特征值（即特征向量线性相关的特征值）<span class="math inline">\(\lambda_i\)</span>，求取其对应的 Jordan 链</li>
<li>如果 <span class="math inline">\(v_i\)</span> 是特征值 <span class="math inline">\(\lambda_i\)</span> 的特征向量，则不断求取 <span class="math inline">\((\lambda_i A - I)v_j = -v_{j - 1}, j \geq i + 1\)</span> 得到 Jordan 链</li>
<li>令 <span class="math inline">\(P := (v_1, v_2, \cdots, v_n)\)</span>，从而求取完毕</li>
</ul>
<p>这里举出一例，计算其 Jordan 标准型：</p>
<p><span class="math display">\[
A = \lv
1 &amp; -1 &amp; -1 \\
0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 2 \\
\rv
\]</span></p>
<p>不难求出其特征值为 <span class="math inline">\(\lambda_1 = \lambda_2 = 1, \lambda_3 = 2\)</span>。然而属于特征值 <span class="math inline">\(1\)</span> 的特征向量张成的空间维数为 <span class="math inline">\(1\)</span>，该空间为 <span class="math inline">\({\rm Span}\left(\lv 1 \\ 0 \\ 0 \rv\right)\)</span>。</p>
<p>那么令 <span class="math inline">\(v_1 = \lv 1 \\ 0 \\ 0 \rv\)</span>，求解 <span class="math inline">\((A - I)v_2 = -v_1\)</span> 得到 <span class="math inline">\(v_2 = \lv 0 \\ -1 \\ 0 \rv\)</span>。</p>
<p>特征值 <span class="math inline">\(\lambda_3 = 2\)</span>，对应的特征向量为 <span class="math inline">\(v_3 = \lv -1 \\ 0 \\ 1 \rv\)</span>。从而：</p>
<p><span class="math display">\[
P = \lv
1 &amp; 0 &amp; -1 \\
0 &amp; -1 &amp; 0 \\
0 &amp; 0 &amp; 1 \\
\rv,
\overline A = \lv
1 &amp; 1 &amp; 0 \\
0 &amp; 1 &amp; 0 \\
0 &amp; 0 &amp; 2 \\
\rv
\]</span></p>
<h2 id="离散时间系统">离散时间系统</h2>
<p>在离散时间系统中，状态向量的导数可以使用差分表示，即 <span class="math inline">\(\dot x(k) := x(k + 1) - x(k)\)</span>，那么状态空间表达式可以为：</p>
<p><span class="math display">\[
\begin{cases}
\dot x(k) = x(k + 1) - x(k) = Ax(k) + Bu(k) \\
y(k) = Cx(k) + Du(k) \\
\end{cases}
\]</span></p>
<p>令 <span class="math inline">\(G := A + I, H := B\)</span>，离散时间系统的状态空间表达式即为：</p>
<p><span class="math display">\[
\begin{cases}
x(k + 1) = Gx(k) + Hu(k) \\
y(k) = Cx(k) + Du(k) \\
\end{cases}
\]</span></p>
<p>对于一般的离散时间系统，其系统性质是由下述差分方程描述的：</p>
<p><span class="math display">\[
\sum_{i = 0}^n a_iy(k + n - i) = \sum_{j = 1}^n b_ju(k + n - j), a_0 = 1
\]</span></p>
<p>其对应下述传递函数：</p>
<p><span class="math display">\[
\frac{Y(z)}{U(z)} = \frac{b_1z^{n - 1} + \cdots + b_{n - 1}z + b_n}{z^n + a_1z^{n - 1} + \cdots + a_{n - 1}z + a_n}
\]</span></p>
<p>不妨令：</p>
<p><span class="math display">\[
W(z) := \frac{U(z)}{z^n + a_1z^{n - 1} + \cdots + a_{n - 1}z + a_n}
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
\begin{aligned}
U(z) &amp;= (z^n + a_1z^{n - 1} + \cdots + a_{n - 1}z + a_n)W(z) \\
Y(z) &amp;= (b_1z^{n - 1} + \cdots + b_{n - 1}z + b_n)W(z) \\
\end{aligned}
\]</span></p>
<p>对两边作逆 Laplace 变换得到：</p>
<p><span class="math display">\[
\begin{aligned}
u(k) &amp;= w(k + n) + a_1w(k + n - 1) + \cdots + a_{n - 1}w(k + 1) + a_nw(k) \\
y(k) &amp;= b_1w(k + n - 1) + \cdots + b_nw(k) \\
\end{aligned}
\]</span></p>
<p>从而可以定义状态向量：</p>
<p><span class="math display">\[
x(k) := \lv
w(k) \\ w(k + 1) \\ \vdots \\ w(k + n - 1)
\rv
\]</span></p>
<p>那么显然有该定义下的状态空间表达式：</p>
<p><span class="math display">\[
\begin{aligned}
x(k + 1) &amp;= \lv
&amp; 1 \\
&amp;&amp; 1 \\
&amp;&amp;&amp; \ddots \\
&amp;&amp;&amp;&amp; 1 \\
-a_n &amp; -a_{n - 1} &amp; -a_{n - 2} &amp; \cdots &amp; -a_1
\rv x(k) + \lv
0 \\ 0 \\ \vdots \\ 0 \\ 1
\rv u(k) \\
y(k) &amp;= \lv b_n &amp; b_{n - 1} &amp; \cdots &amp; b_1 \rv x(t) \\
\end{aligned}
\]</span></p>
<h1 id="系统的运动与其离散化">系统的运动与其离散化</h1>
<h2 id="线性系统的零输入响应">线性系统的零输入响应</h2>
<p>我们现在考虑线性系统 <span class="math inline">\(\dot x(t) = Ax(t) + Bu(t)\)</span>。我们先前提到过系统的全响应是零状态响应和零输入响应的组合，现在我们来分析线性系统的零输入响应。</p>
<p>在零输入条件下，线性系统事实上退化为 <span class="math inline">\(\dot x(t) = Ax(t)\)</span>。假定系统初始状态为 <span class="math inline">\(x(0) =: x_0\)</span>，对状态空间表达式两边取 Laplace 变换得到：</p>
<p><span class="math display">\[
sX(s) - x_0 = AX(s) \iff X(s) = (sI - A)^{-1}x_0 \iff x(t) = \mathcal{L}^{-1}[(sI - A)^{-1}]x_0
\]</span></p>
<p>这里尝试使用级数展开的方式处理上述逆 Laplace 变换：</p>
<p><span class="math display">\[
\begin{aligned}
\mathcal{L}^{-1}[(sI - A)^{-1}] &amp;= \mathcal{L}^{-1}\left[\sum_{i = 0}^{+\infty} \frac{A^i}{s^{i + 1}}\right] = \sum_{i = 0}^{+\infty} \mathcal{L}^{-1}\left[\frac{A^i}{s^{i + 1}}\right] = \sum_{i = 0}^{+\infty} \frac{A^it^i}{i!} = e^{At}
\end{aligned}
\]</span></p>
<p>从而我们得到了这个系统的解：</p>
<p><span class="math display">\[
x(t) = e^{At}x_0
\]</span></p>
<p>需要注意的是，我们这里默认了 <span class="math inline">\(x(t)\)</span> 仅在 <span class="math inline">\(t \geq 0\)</span> 时才具有意义，此时才可以直接运用下述定理：</p>
<p><span class="math display">\[
\mathcal{L}[t^nu(t)] = \frac{n!}{s^{n + 1}}
\]</span></p>
<p>这里 <span class="math inline">\(u(t)\)</span> 为单位阶跃函数。</p>
<p>如果我们得知的并非是系统初始态的状态向量，而是时刻 <span class="math inline">\(t_0\)</span> 时的状态向量 <span class="math inline">\(x(t_0)\)</span>，通过时域平移可以得到系统的解为：</p>
<p><span class="math display">\[
x(t) = e^{A(t - t_0)}x(t_0), t \geq t_0
\]</span></p>
<p>总而言之，这个结果说明了零输入条件下，<span class="math inline">\(e^{At}\)</span> 完全决定了系统状态在后续时间中的推演。</p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《信号处理原理》学习笔记</title>
    <url>/2021/09/14/note-of-dsp/</url>
    <content><![CDATA[<p>一门纯数学课，没有什么特别有意思的地方。但也正因为它是数学课，所以我感觉我学起来会稍微轻松一些，希望是我四大原理之中最舒服的一门课。</p>
<p><span class="math display">\[
\newcommand{\d}{\mathrm{d}}
\newcommand{\j}{\mathop{\mathrm{j}}}
\newcommand{\b}{\boldsymbol}
\newcommand{\lv}{\left[\begin{matrix}}
\newcommand{\rv}{\end{matrix}\right]}
\]</span></p>
<span id="more"></span>
<h1 id="信号处理基本知识">信号处理基本知识</h1>
<p>信号是一种载有信息的物理量，所以可以说信号是信息的表现形式，信息是信号蕴含的内容。我们探测信号的工具称为<strong>传感器（Sensor）</strong>，传感器是将一种物理变化转化为另一种物理变化的装置。比如说为了探测声波，我们可以使用传感器将声波转化为电信号。</p>
<p>通过传感器我们可以将某些难以处理的信号转化为我们易于处理的信号。对信号的处理大致可以分为三类，即<strong>降噪</strong>、<strong>特征抽取</strong>以及<strong>编码解码</strong>。</p>
<p>信号常常使用函数或者序列进行描述，而函数具有图像，所以有的时候信号也会使用具体的图像进行描述。</p>
<hr />
<p>信号可以按照对于给定的自变量能不能得到确定的因变量分类为<strong>确定信号</strong>和<strong>随机信号</strong>。另外，信号 <span class="math inline">\(f(t)\)</span> 也可以按照是否存在 <span class="math inline">\(T &gt; 0\)</span> 满足 <span class="math inline">\(\forall t \in \mathbb R, f(t) = f(t + T)\)</span> 分为<strong>周期信号</strong>和<strong>非周期信号</strong>。</p>
<h2 id="常见信号形式">常见信号形式</h2>
<p><strong>正余弦信号</strong>是最常见的信号形式之一，其数学表达式为：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; f(t) = K \sin(\omega t + \theta) \\
&amp; f(t) = K \cos(\omega t + \theta) \\
\end{aligned}
\]</span></p>
<p>这里 <span class="math inline">\(K\)</span> 表示<strong>振幅</strong>，<span class="math inline">\(\omega\)</span> 表示<strong>角频率</strong>，<span class="math inline">\(\theta\)</span> 表示<strong>初相位</strong>。</p>
<hr />
<p>除去正弦余弦信号，<strong>Sa 信号</strong>也是常见的一种信号形式，其数学表达式为：</p>
<p><span class="math display">\[
{\rm Sa}(t) = \frac{\sin t}{t}
\]</span></p>
<p>这个信号是一个偶函数，其零点构成的集合为 <span class="math inline">\(\{ k\pi \mid k \in \mathbb Z, k \neq 0 \}\)</span>。这个信号的积分性质为：</p>
<p><span class="math display">\[
\int_{-\infty}^{+\infty} {\rm Sa}(t) \d t = \pi
\]</span></p>
<p>这个积分一般被称为 <strong>Dirichlet 积分</strong>，其一种计算方式可以看下列推导。</p>
<p>考虑函数：</p>
<p><span class="math display">\[
F(t) = \int_{0}^{+\infty} \frac{\sin x}{x} e^{-tx} \d x
\]</span></p>
<p>这个函数的导数可以描述为：</p>
<p><span class="math display">\[
\frac{\d F}{\d t} = \frac\d{\d t} \int_{0}^{+\infty} \frac{\sin x}{x} e^{-tx} \d x = \int_{0}^{+\infty} \frac{\partial e^{-tx}}{\partial t} \frac{\sin x}{x} \d x = -\int_{0}^{+\infty} e^{-tx}\sin x \d x
\]</span></p>
<p>进一步：</p>
<p><span class="math display">\[
\begin{aligned}
\frac{\d F}{\d t} &amp;= \int_{0}^{+\infty} e^{-tx} \d \cos x = \left. e^{-tx}\cos x \right|_{0}^{+\infty} + t \int_{0}^{+\infty} e^{-tx}\cos x \d x \\
&amp;= -1 + t \int_{0}^{+\infty} e^{-tx} \d \sin x = -1 + t \left( \left. e^{-tx}\sin x \right|_{0}^{+\infty} + t \int_{0}^{+\infty} e^{-tx}\sin x \d x \right) \\
&amp;= -1 + t^2 \int_{0}^{+\infty} e^{-tx}\sin x \d x = -1 - t^2 \frac{\d F}{\d t}
\end{aligned}
\]</span></p>
<p>也就是说：</p>
<p><span class="math display">\[
\frac{\d F}{\d t} = -\frac{1}{1 + t^2} \Rightarrow F(t) = -\arctan t + C
\]</span></p>
<p>不难得知 <span class="math inline">\(F(+\infty) = 0\)</span>，这就说明 <span class="math inline">\(C = \pi / 2\)</span>，从而 Dirichlet 积分的结果为：</p>
<p><span class="math display">\[
\int_{-\infty}^{+\infty} {\rm Sa}(t) \d t = 2F(0) = \pi
\]</span></p>
<hr />
<p>此外，<strong>指数信号</strong>也较为常见，其数学表达式为：</p>
<p><span class="math display">\[
f(t) = K e^{\alpha t}
\]</span></p>
<p>指数信号的特征就是，其积分或微分后依然是指数信号。</p>
<h2 id="复信号分析">复信号分析</h2>
<p>在分析一般的信号的时候，我们可以常常将其看作某一个复信号的实部或者虚部。比如说考虑复指数信号 <span class="math inline">\(f(t) = K e^{st}\)</span>，这里 <span class="math inline">\(s \in \mathbb C\)</span>。显然有：</p>
<p><span class="math display">\[
f(t) = K e^{[\Re(s) + \j\Im(s)]t} = K e^{(\Re s)t} (\cos(t\Im(s)) + \j\sin(t\Im(s)))
\]</span></p>
<p>这里可以发现，<strong>复指数信号的实部和虚部都是正余弦信号</strong>。</p>
<h2 id="函数空间与函数分解">函数空间与函数分解</h2>
<p>我们继续沿用线性空间的基向量、正交向量组、正交基和标准正交基的概念。现在我们考虑这样的一个线性空间，即定义在 <span class="math inline">\([t_1, t_2]\)</span> 上的可积复函数空间，定义其内积为：</p>
<p><span class="math display">\[
\langle\varphi_1, \varphi_2\rangle = \int_{t_1}^{t_2} \varphi_1(t)\varphi^*_2(t) \d t
\]</span></p>
<p>两函数如果内积为零，则称两函数<strong>正交</strong>。</p>
<p>如果函数 <span class="math inline">\(\varphi_1, \varphi_2, \cdots, \varphi_n\)</span> 满足：</p>
<p><span class="math display">\[
\langle\varphi_i, \varphi_j\rangle = \int_{t_1}^{t_2} \varphi_i(t)\varphi^*_j(t) \d t = \begin{cases}
0 &amp; i \neq j \\
k_i &amp; i = j
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(k_i\)</span> 为非零常数。那么这些函数构成<strong>正交函数集</strong>。</p>
<p>称一个正交函数集是完备的，如果不存在一个这个函数集之外的函数 <span class="math inline">\(\psi\)</span> 满足 <span class="math inline">\(0 &lt; \psi \cdot \psi &lt; +\infty\)</span> 且 <span class="math inline">\(\psi\)</span> 和该函数集之中所有函数正交。实际上完备的正交函数集就说明了这个函数集不能容纳更多的成员。</p>
<h1 id="信号的运算">信号的运算</h1>
<h2 id="常规运算">常规运算</h2>
<p>对于信号 <span class="math inline">\(f_1, f_2\)</span>，我们可以仿照函数四则运算的规定来规定其四则运算方式：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; (f_1 + f_2)(t) = f_1(t) + f_2(t) \\
&amp; (f_1 - f_2)(t) = f_1(t) - f_2(t) \\
&amp; (f_1 \cdot f_2)(t) = f_1(t) \cdot f_2(t) \\
&amp; \left(\frac{f_1}{f_2}\right)(t) = \frac{f_1(t)}{f_2(t)}
\end{aligned}
\]</span></p>
<p>另外，我们还可以对信号进行波形变换。常见的变换包括<strong>平移变换</strong>、<strong>反褶变换</strong>、<strong>压扩变换</strong>。</p>
<p>考虑平移变换：</p>
<p><span class="math display">\[
\begin{aligned}
f &amp;\mapsto f&#39; \\
f(t) &amp;\to f(t - b)\\
\end{aligned}
\]</span></p>
<p>这个变换可以将信号的波形沿着横轴（时间轴）正向平移 <span class="math inline">\(b\)</span> 个单位。</p>
<p>反褶变换指的是下述的变换：</p>
<p><span class="math display">\[
\begin{aligned}
f &amp;\mapsto f&#39; \\
f(t) &amp;\to f(-t)\\
\end{aligned}
\]</span></p>
<p>这个变换会将信号沿着纵轴翻折。</p>
<p>而压扩变换指的是：</p>
<p><span class="math display">\[
\begin{aligned}
f &amp;\mapsto f&#39; \\
f(t) &amp;\to f(at)\\
\end{aligned}
\]</span></p>
<p>参数 <span class="math inline">\(a\)</span> 控制了压扩的形式。如果 <span class="math inline">\(a &gt; 0\)</span>，则压扩的时候不需要反褶。如果 <span class="math inline">\(a &lt; 0\)</span>，则压扩的时候需要反褶。如果 <span class="math inline">\(|a| &gt; 1\)</span>，则变换是压缩。如果 <span class="math inline">\(|a| &lt; 1\)</span>，则变换是扩张。</p>
<h2 id="积分微分运算与能量">积分微分运算与能量</h2>
<p>对于符合一定条件的信号，我们可以进行微分积分运算，记号为：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \left(\frac{\d}{\d t} f\right)(t_0) = \left.\frac{\d f}{\d t}\right|_{t = t_0} \\
&amp; \left(\int_{-\infty} f \d t\right)(t_0) = \int_{-\infty}^{t_0} f(t) \d t
\end{aligned}
\]</span></p>
<p>基于积分微分运算，我们可以给定信号能量和信号功率的定义。对于连续空间（即定义在全实数上）的信号 <span class="math inline">\(f(t)\)</span>，能量定义为：</p>
<p><span class="math display">\[
E(f) = \int_{-\infty}^{+\infty} \|f(t)\|^2 \d t
\]</span></p>
<p>功率则是能量除以时间，但是考虑到时间范围是无穷大的，所以需要从极限进行定义：</p>
<p><span class="math display">\[
P(f) = \lim_{T\to+\infty}\frac{1}{T}\int_{-T / 2}^{T / 2} \|f(t)\|^2 \d t
\]</span></p>
<p>对于离散空间定义的信号 <span class="math inline">\(f\)</span>，表达类似：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; E(f) = \sum_{n = -\infty}^{+\infty} \|f(n)\|^2 \\
&amp; P(f) = \lim_{N\to\infty}\frac{1}{2N + 1} \sum_{n = -N}^{N} \|f(n)\|^2
\end{aligned}
\]</span></p>
<p>能量有限的信号称为能量有限信号，或在不引起混淆的时候简称<strong>能量信号</strong>。功率有限的信号称为功率有限信号，或在不引起混淆的时候简称<strong>功率信号</strong>。</p>
<h2 id="卷积运算">卷积运算</h2>
<p>对于两个连续时间信号 <span class="math inline">\(f, g\)</span>，定义两者的卷积为：</p>
<p><span class="math display">\[
(f * g)(t) = \int_{-\infty}^{+\infty} f(t - \tau)g(\tau) \d\tau
\]</span></p>
<p>卷积的存在性取决于上述积分是否存在，并且要求积分结果是有限的。</p>
<p>而对于离散的时间信号 <span class="math inline">\(f, g\)</span>，卷积定义为：</p>
<p><span class="math display">\[
(f * g)(n) = \sum_{m = -\infty}^{+\infty} f(n - m)g(m)
\]</span></p>
<p>从几何意义上讲，卷积指的是一个信号的反褶信号在时间轴上滑动的过程中，它与另外一个信号重合部分相乘得到的新信号的面积。</p>
<p>卷积显然符合下述运算律：</p>
<p><span class="math display">\[
\begin{cases}
f_1 * f_2 = f_2 * f_1 \\
f_1 * (f_2 + f_3) = f_1 * f_2 + f_1 * f_3 \\
(f_1 * f_2) * f_3 = f_1 * (f_2 * f_3)
\end{cases}
\]</span></p>
<p>卷积和微分积分运算的关系则为：</p>
<p><span class="math display">\[
\frac{\d}{\d t}(f_1 * f_2) = f_1 * \left(\frac{\d}{\d t} f_2\right) = \left(\frac{\d}{\d t} f_1\right) * f_2
\]</span></p>
<p>以及：</p>
<p><span class="math display">\[
\int_{-\infty} (f_1 * f_2) \d t = f_1 * \left(\int_{-\infty} f_2 \d t\right) = \left(\int_{-\infty} f_1 \d t\right) * f_2
\]</span></p>
<p>对于高阶微分积分，存在下述关系：</p>
<p><span class="math display">\[
(f_1 * f_2)^{(n)} = f_1^{(m)} * f_2^{(n - m)}
\]</span></p>
<p>上标括号中若为正整数，则表示高阶微分。若为负整数，则表示高阶积分。可以发现上述卷积的积分微分运算规律均为该公式的特殊情况。</p>
<h2 id="相关运算">相关运算</h2>
<p>定义两个信号的相关为：</p>
<p><span class="math display">\[
R(f_1, f_2)(t) = \int_{-\infty}^{+\infty} f_1(\tau)f_2^*(\tau - t)\d\tau = \int_{-\infty}^{+\infty} f_1(\tau + t)f_2^*(\tau)\d\tau
\]</span></p>
<p>显然可以注意到：</p>
<p><span class="math display">\[
\begin{cases}
R(f_1, f_2) = \mathcal{R}[R^*(f_2, f_1)] \\
R(f_1, f_2) = f_1 * \mathcal{R}^*[f_2]
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(\mathcal{R}\)</span> 表示反褶变换，即 <span class="math inline">\(\mathcal{R}[f](t) = f(-t)\)</span>。</p>
<p>第一条定律说明了相关运算并不是交换的。</p>
<h1 id="常用奇异信号">常用奇异信号</h1>
<p>我们已经介绍过正弦余弦信号、指数信号等常用信号，另外还有一些形式较为特殊的信号称为奇异信号。这些信号的价值一般在于具有一些较为优越的运算特性。</p>
<p>首先介绍<strong>单位斜变信号</strong>，数学形式为：</p>
<p><span class="math display">\[
R(t) := \begin{cases}
0 &amp; t &lt; 0 \\
t &amp; t \geq 0
\end{cases}
\]</span></p>
<p>另外常用的还有<strong>截顶单位斜变信号</strong>：</p>
<p><span class="math display">\[
R_\tau(t) := \begin{cases}
0 &amp; t &lt; 0 \\
t &amp; 0 \leq t &lt; \tau \\
\tau &amp; t \geq \tau
\end{cases}
\]</span></p>
<p>从单位斜变信号衍生得到<strong>单位阶跃信号</strong>：</p>
<p><span class="math display">\[
u(t_0) = \frac{\d R}{\d t}(t_0) := \begin{cases}
0 &amp; t_0 &lt; 0 \\
1 &amp; t_0 \geq 0
\end{cases}
\]</span></p>
<p>进而可以衍生出<strong>单位矩形脉冲信号</strong>：</p>
<p><span class="math display">\[
G_\tau(t) := \begin{cases}
1 &amp; |t| \leq \tau / 2 \\
0 &amp; |t| &gt; \tau / 2
\end{cases}
\]</span></p>
<p>矩形脉冲信号和阶跃信号具有下述的关系：</p>
<p><span class="math display">\[
G_\tau(t) = u\left(t + \frac{\tau}{2}\right) - u\left(t - \frac{\tau}{2}\right)
\]</span></p>
<p>单位矩形脉冲信号的一个重要作用是作<strong>窗函数</strong>以截取某信号的某一段信息。对于信号 <span class="math inline">\(f\)</span>，将其与单位矩形脉冲信号作乘法得到 <span class="math inline">\(G_\tau f\)</span>。该信号仅有 <span class="math inline">\([-\tau / 2, \tau / 2]\)</span> 上的信息被保留，其余均为零。也就是说单位矩形脉冲信号进行了信息截取。</p>
<hr />
<p>单位阶跃信号另外一种衍生是<strong>符号函数信号</strong>：</p>
<p><span class="math display">\[
{\rm sgn}(t) := \begin{cases}
1 &amp; t \geq 0 \\
-1 &amp; t &lt; 0
\end{cases}
\]</span></p>
<p>该信号和单位阶跃信号的关系是：</p>
<p><span class="math display">\[
{\rm sgn}(t) = 2u(t) - 1
\]</span></p>
<hr />
<p>对单位阶跃信号求导即可得到<strong>单位冲激信号</strong> <span class="math inline">\(\delta\)</span>，其定义为：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \int_{-\infty}^{+\infty} \delta(t) \d t = 1 \\
&amp; \delta(t) = 0 (t \neq 0)
\end{aligned}
\]</span></p>
<p>更一般的冲激信号可以用单位冲激信号定义，对于在 <span class="math inline">\(t_0\)</span> 处冲激，强度为 <span class="math inline">\(E\)</span> 的冲激信号，其表达式为：</p>
<p><span class="math display">\[
\delta_{E, t_0}(t) = E\delta(t - t_0)
\]</span></p>
<p>另外一种定义方式是利用单位矩形脉冲信号取极限，也就是保证全实数集上积分为 <span class="math inline">\(1\)</span> 的条件下令取非零值的区间尽可能小：</p>
<p><span class="math display">\[
\delta = \lim_{\tau\to 0}\frac{G_\tau}{\tau}
\]</span></p>
<p>冲激信号具有下述压扩性质：</p>
<p><span class="math display">\[
\delta(at) = \frac{1}{|a|}\delta(t) (a \neq 0)
\]</span></p>
<p>冲激信号的一个特征就是<strong>搬移特性</strong>：</p>
<p><span class="math display">\[
f * \delta_{1, t_0} = \mathcal{S}_{t_0}[f]
\]</span></p>
<p>这里 <span class="math inline">\(\mathcal{S}_{t_0}\)</span> 表示平移变换，即 <span class="math inline">\(\mathcal{S}_{t_0}[f](t) = f(t - t_0)\)</span>。</p>
<p>上述的平移会将 <span class="math inline">\(f\)</span> 原先的原点平移到冲激信号的冲激点处。</p>
<p>证明则可以直接根据卷积的定义：</p>
<p><span class="math display">\[
(f * \delta_{1, t_0})(t) = \int_{-\infty}^{+\infty}f(t - \tau)\delta_{1, t_0}(\tau)\d\tau = f(t - t_0) = \mathcal{S}_{t_0}[f](t)
\]</span></p>
<p>与搬移特性原理类似的是<strong>筛选特性</strong>，也就是冲激信号和信号乘积的积分会得到该信号在冲激点处的值：</p>
<p><span class="math display">\[
\int_{-\infty}^{+\infty}f(t)\delta(t - t_0)\d t = f(t_0)
\]</span></p>
<h1 id="一般模拟信号分解">一般模拟信号分解</h1>
<h2 id="基本分解">基本分解</h2>
<p>对于信号 <span class="math inline">\(f\)</span>，我们可以将其分解为直流分量和交流分量，我们规定交流分量的积分为零，即：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; f_{\rm DC}(t) = \lim_{T\to+\infty}\frac{1}{T}\int_{-T / 2}^{T / 2}f(t)\d t \\
&amp; f_{\rm AC}(t) = f(t) - f_{\rm DC}(t) \\
\end{aligned}
\]</span></p>
<p>此外，还有奇偶分解：</p>
<p><span class="math display">\[
\begin{aligned}
f_e(t) = \frac{f(t) + f(-t)}{2} \\
f_o(t) = \frac{f(t) - f(-t)}{2} \\
\end{aligned}
\]</span></p>
<p>以及实虚分解：</p>
<p><span class="math display">\[
\begin{aligned}
f_r(t) = \frac{f(t) + f^*(t)}{2} \\
f_i(t) = \frac{f(t) - f^*(t)}{2\j} \\
\end{aligned}
\]</span></p>
<p>上述分解都是严格的，但下述的脉冲分解则是一种近似分解。脉冲分解的思想是把信号分解为若干个矩形脉冲的和，在 <span class="math inline">\([t_0, t_0 + \Delta t]\)</span> 区间上，信号 <span class="math inline">\(f\)</span> 可以近似表示为：</p>
<p><span class="math display">\[
f(t) \approx f(t_0)[u(t - t_0) - u(t - t_0 - \Delta t)]
\]</span></p>
<p>将这些脉冲求和，则得到了信号 <span class="math inline">\(f\)</span> 的一个近似表达。</p>
<h2 id="正交分解概述">正交分解概述</h2>
<p>下述讨论均基于函数平方可积的性质。如果函数 <span class="math inline">\(f\)</span> 满足：</p>
<p><span class="math display">\[
\int_{-\infty}^{+\infty} f^2(t) \d t &lt; +\infty
\]</span></p>
<p>那么函数 <span class="math inline">\(f\)</span> 平方可积。所有的平方可积函数构成函数空间 <span class="math inline">\(\mathcal{L}^2(\mathbb{R})\)</span>。</p>
<p>此外，依然沿用先前的函数内积、正交、完备正交函数集等定义。</p>
<hr />
<p>我们考虑 <span class="math inline">\([t_1, t_2]\)</span> 上的完备正交函数集 <span class="math inline">\(\{\varphi_i\}\)</span> 以及函数 <span class="math inline">\(f\)</span>，其正交分解为：</p>
<p><span class="math display">\[
f = \sum_{k = 1}^{+\infty} c_k\varphi_k
\]</span></p>
<p>显然我们可以得到（这一步求解系数的变换称为 Karhunen-Loeve 变换）：</p>
<p><span class="math display">\[
c_k = \frac{\langle f, \varphi_k \rangle}{\langle \varphi_k, \varphi_k \rangle}
\]</span></p>
<p>据此，可以证明 Parseval 恒等式：</p>
<p><span class="math display">\[
E(f) = \int_{t_1}^{t_2} \|f(t)\|^2 \d t = \sum_{k = 1}^{+\infty} \langle \varphi_k, \varphi_k \rangle\|c_k\|^2 = \sum_{k = 1}^{+\infty} E(c_k\varphi_k)
\]</span></p>
<p>这个定理表明，在正交分解下，信号的能量等于各个分量能量的和。其证明只需要进行展开就可得到：</p>
<p><span class="math display">\[
\begin{aligned}
\int_{t_1}^{t_2} \|f\|^2 \d t &amp;= \int_{t_1}^{t_2} \left\|\sum_{k = 1}^{+\infty} c_k\varphi_k(t)\right\|^2 \d t = \int_{t_1}^{t_2} \left(\sum_{k = 1}^{+\infty} c_k\varphi_k(t)\right)\left(\sum_{k = 1}^{+\infty} c_k\varphi_k(t)\right)^* \d t \\
&amp;= \int_{t_1}^{t_2} \left(\sum_{k = 1}^{+\infty} c_k\varphi_k(t)\right)\left(\sum_{k = 1}^{+\infty} c_k^*\varphi_k^*(t)\right) \d t \\
&amp;= \int_{t_1}^{t_2} \left(\sum_{k = 1}^{+\infty} c_kc_k^*\varphi_k(t)\varphi_k^*(t) + \sum_{i\neq j} c_ic_j^*\varphi_i(t)\varphi_j^*(t)\right) \d t \\
&amp;= \sum_{k = 1}^{+\infty} \|c_k\|^2 \int_{t_1}^{t_2} \varphi_k(t)\varphi_k^*(t) \d t = \sum_{k = 1}^{+\infty} \langle \varphi_k, \varphi_k \rangle\|c_k\|^2
\end{aligned}
\]</span></p>
<div class="note info"><p>你说我展开没考虑连续、可导、收敛啥的？我们工科生不懂这些。</p>
</div>
<p>将信号展开为完全正交函数集的线性组合的过程即函数正交分解，求解线性组合系数的过程为<strong>信号变换</strong>。</p>
<h2 id="周期信号的正交分解">周期信号的正交分解</h2>
<p>现在考虑满足 Dirichlet 条件的周期信号 <span class="math inline">\(f\)</span>。Dirichlet 条件指的是：</p>
<ul>
<li><p>在一个周期内间断点有限</p></li>
<li><p>在一个周期内极值点有限</p></li>
<li><p>在一个周期内绝对值积分有限</p></li>
</ul>
<p>我们考虑下述两个常见的完备正交函数集，这里 <span class="math inline">\(\omega = 2\pi / T\)</span>，<span class="math inline">\(T\)</span> 是 <span class="math inline">\(f\)</span> 的周期，下述函数集在任意的长度为 <span class="math inline">\(T\)</span> 的闭区间上正交完备：</p>
<ul>
<li><p>三角函数集 <span class="math inline">\(\{1, \cos(n\omega t), \sin(n\omega t): n \in \mathbb{N}^+\}\)</span></p></li>
<li><p>指数函数集 <span class="math inline">\(\{e^{\j n\omega t}: n \in \mathbb{Z}\}\)</span></p></li>
</ul>
<p>在这两个基底下展开得到的线性组合式可以理解为一个无穷级数，这个无穷级数就是<strong>傅里叶级数（Fourier series）</strong>。两个函数集得到的傅里叶级数分别称为三角形式的傅里叶级数和指数形式的傅里叶级数。</p>
<p>三角形式的傅里叶级数表示为：</p>
<p><span class="math display">\[
f(t) = a_0 + \sum_{k = 1}^{+\infty} (a_n\cos(n\omega t) + b_n\sin(n\omega t))
\]</span></p>
<p>不难根据先前的论证得到系数的计算公式，这里 <span class="math inline">\(t_0\)</span> 为任意实数：</p>
<p><span class="math display">\[
\begin{aligned}
a_0 &amp;= \frac{\omega}{2\pi} \int_{t_0}^{t_0 + 2\pi / \omega} f(t) \d t \\
a_n &amp;= \frac{\omega}{\pi} \int_{t_0}^{t_0 + 2\pi / \omega} f(t)\cos(n\omega t) \d t \\
b_n &amp;= \frac{\omega}{\pi} \int_{t_0}^{t_0 + 2\pi / \omega} f(t)\sin(n\omega t) \d t \\
\end{aligned}
\]</span></p>
<p>指数形式的傅里叶级数表示为：</p>
<p><span class="math display">\[
f(t) = \sum_{k = -\infty}^{+\infty} F_ke^{\j k\omega t}
\]</span></p>
<p>其中有：</p>
<p><span class="math display">\[
F_k = \frac{\omega}{2\pi} \int_{t_0}^{t_0 + 2\pi / \omega} f(t)e^{-\j k\omega t} \d t
\]</span></p>
<div class="note info"><p>两个形式的傅里叶级数的适用范围均是全实数，但实际上这只是因为 <span class="math inline">\(f\)</span> 是周期的。</p>
<p>严格意义上说，由于我们给定的正交函数集只是在某个长度为 <span class="math inline">\(T\)</span> 的闭区间上正交，所以展开的傅里叶级数也只应当在这个闭区间上可用。但是由于周期性，我们可以简单地说明闭区间外这个级数表达依然成立。</p>
<p>这个区分是有必要的，因为严格意义上，在计算 <span class="math inline">\(f\)</span> 的能量、功率等数值的时候，积分区间均应该是长度为 <span class="math inline">\(T\)</span> 的闭区间。</p>
</div>
<p>三角形式和指数形式的傅里叶级数之间的关系可以考虑下述变形：</p>
<p><span class="math display">\[
\begin{aligned}
f(t) &amp;= a_0 + \sum_{k = 1}^{+\infty} (a_n\cos(n\omega t) + b_n\sin(n\omega t)) \\
&amp;= a_0 + \sum_{k = 1}^{+\infty} \left(a_n\frac{e^{\j n\omega t} - e^{-\j n\omega t}}{2\j} + b_n\frac{e^{\j n\omega t} + e^{-\j n\omega t}}{2}\right) \\
&amp;= a_0 + \sum_{k = 1}^{+\infty} \left(-\j a_n\frac{e^{\j n\omega t} - e^{-\j n\omega t}}{2} + b_n\frac{e^{\j n\omega t} + e^{-\j n\omega t}}{2}\right) \\
&amp;= a_0 + \sum_{k = 1}^{+\infty} \left(\frac{b_n - \j a_n}{2} e^{\j n\omega t} + \frac{b_n + \j a_n}{2} e^{-\j n\omega t}\right) \\
\end{aligned}
\]</span></p>
<p>也就是说这两者之间是等价的，并且可以据此发现上述系数计算公式之间的关系。</p>
<p>据此，我们也可以得到，如果周期信号 <span class="math inline">\(f\)</span> 是偶函数，那么其指数形式 FS 系数为实数序列。如果为奇函数，则为纯虚数序列。</p>
<hr />
<p>考虑 Parseval 定律在 FS 上的应用，显然有（注意积分区间是长度为 <span class="math inline">\(T\)</span> 的闭区间）：</p>
<p><span class="math display">\[
P(f) = \sum_{k = -\infty}^{+\infty} \|F_k\|^2 = \|a_0\|^2 + \frac12 \sum_{k = 1}^{+\infty}(\|a_k\|^2 + \|b_k\|^2)
\]</span></p>
<h2 id="频谱">频谱</h2>
<h3 id="频谱的定义">频谱的定义</h3>
<p>现在默认 FS 使用指数形式的。考虑系数序列 <span class="math inline">\(\{F_n \in \mathbb C\}_{-\infty &lt; n &lt; +\infty}\)</span>。以频率为横轴，将频率所对应的 FS 系数的模为该处的频谱值，即可做出信号的幅度频谱。如果以 FS 系数的辐角作为该处的频谱值，则得到相位频谱。两个频谱合并就可以表现出该信号所有的 FS 系数的信息。</p>
<p>我们思考 FS 系数的意义，事实上 FS 系数作为线性组合的系数，代表了被分解信号中某一个频率的成分的多少。从而这就意味着，频谱表现的是信号在频率意义上的构成。</p>
<p>不过注意，由于指数形式的 FS 之中包含 <span class="math inline">\(e^{-\j n\omega t}(n\in \mathbb{N}^+)\)</span> 项，其频率为负数 <span class="math inline">\(-n\omega\)</span>，所以信号的频谱图上会出现负频率。</p>
<p>我们可以断定频谱的一些性质：</p>
<ul>
<li><p>频谱是离散的，且只会在 <span class="math inline">\(n\omega(n\in \mathbb Z)\)</span> 点处存在值，这些具有值的频率称为<strong>谐波频率（Harmonic frequency）</strong>。</p></li>
<li><p>幅度频谱图是关于纵轴对称的，而相位频谱是关于原点对称的，这是由于 <span class="math inline">\(F_k\)</span> 与 <span class="math inline">\(F_{-k}\)</span> 共轭。</p></li>
</ul>
<p>现在我们考虑一个重要周期信号的频谱，即周期矩形脉冲。</p>
<p>假设某一周期矩形脉冲信号 <span class="math inline">\(f\)</span> 周期为 <span class="math inline">\(T_0 = 2\pi / \omega_0\)</span>，在区间 <span class="math inline">\([-T_0 / 2, T_0 / 2]\)</span> 上定义为：</p>
<p><span class="math display">\[
f(t) = \begin{cases}
E &amp; |t| \leq \tau_0 / 2 \\
0 &amp; |t| &gt; \tau_0 / 2
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(E &gt; 0\)</span> 且 <span class="math inline">\(\tau_0 &lt; T_0\)</span>。</p>
<p>其 FS 系数是显然的：</p>
<p><span class="math display">\[
F_k = \frac{\omega_0}{2\pi} \int_{-\pi / \omega_0}^{\pi / \omega_0} f(t)e^{-\j k\omega_0 t} \d t = \frac{E\omega_0}{2\pi} \int_{-\tau_0 / 2}^{\tau_0 / 2} e^{-\j k\omega_0 t} \d t = \frac{E\omega_0\tau_0}{2\pi}\frac{\sin(\omega_0 k\tau_0 / 2)}{\omega_0 k\tau_0 / 2}
\]</span></p>
<p>也就是：</p>
<p><span class="math display">\[
F_k = \frac{E\omega_0\tau_0}{2\pi}{\rm Sa}\left(\frac{\omega_0 k\tau_0}{2}\right)
\]</span></p>
<p>这个结果说明了，周期矩形脉冲信号的频谱具有包络线：</p>
<p><span class="math display">\[
F(\omega) = \frac{E\omega_0\tau_0}{2\pi}{\rm Sa}\left(\frac{\omega\tau_0}{2}\right)
\]</span></p>
<h3 id="带宽">带宽</h3>
<p>事实上我们注意到，大多的信号幅度频谱在高频区域取值很小，这也就说明大多信号在高频区域几乎不具有能量。</p>
<p>实际应用中，在失真可忽略的条件下，信号传递可以只传递低频分量（一般而言取频谱包络线最小绝对值的零点以内的分量），这一段区间的长度称为<strong>频带宽度</strong>，简称<strong>带宽</strong>。</p>
<h2 id="非周期信号的正交分解和频谱">非周期信号的正交分解和频谱</h2>
<h3 id="ft-表达式的推理">FT 表达式的推理</h3>
<p>任何非周期信号 <span class="math inline">\(f\)</span> 实际上都可以看成周期无穷大的周期信号。我们考虑周期为 <span class="math inline">\(T\)</span> 的周期信号 <span class="math inline">\(f_T\)</span>，其在周期 <span class="math inline">\([-T / 2, T / 2)\)</span> 上定义为 <span class="math inline">\(f_T(t) = f(t), t \in [-T / 2, T / 2)\)</span>。实际上可以得到：</p>
<p><span class="math display">\[
\lim_{T \to +\infty} f_T = f
\]</span></p>
<div class="note info"><p>我们没有定义过一个函数列如何收敛为一个函数，故这样的表述并非严谨。</p>
<p>后续很多证明也仅仅是形式化的，其作用仅仅是形成对定律的直观理解，请不要将这些推导用于严谨的证明之中。</p>
</div>
<p>考虑 <span class="math inline">\(f_T\)</span> 的傅里叶级数，如果令 <span class="math inline">\(\omega = 2\pi / T\)</span>，显然有：</p>
<p><span class="math display">\[
\begin{aligned}
f_T(t) &amp;= \sum_{k = -\infty}^{+\infty} F_k e^{\j k\omega t} = \sum_{k = -\infty}^{+\infty} \left(\frac{1}{T}\int_{-T / 2}^{T / 2} f_T(\tau)e^{-\j k\omega\tau} \d\tau\right)e^{\j k\omega t}
\end{aligned}
\]</span></p>
<p>考虑离散频谱中相邻谱线之间的间隔，即 <span class="math inline">\(\Delta\omega = \omega = \dfrac{2\pi}{T}\)</span>，在 <span class="math inline">\(T \to +\infty\)</span> 的时候谱线间隔 <span class="math inline">\(\Delta\omega \to 0\)</span>，那么我们有：</p>
<p><span class="math display">\[
\begin{aligned}
f(t) &amp;= \lim_{T \to +\infty} f_T(t) = \lim_{T \to +\infty} \sum_{k = -\infty}^{+\infty} \left(\frac{1}{T}\int_{-T / 2}^{T / 2} f_T(\tau)e^{-\j k\omega\tau} \d\tau\right)e^{\j k\omega t} \\
&amp;= \frac{1}{2\pi} \lim_{\Delta\omega \to 0} \sum_{k = -\infty}^{+\infty} \left(\int_{-T / 2}^{T / 2} f_T(\tau)e^{-\j k\omega\tau} \d\tau\right)e^{\j k\omega t} \Delta\omega
\end{aligned}
\]</span></p>
<p>现在我们定义：</p>
<p><span class="math display">\[
\begin{aligned}
F_T(x) &amp;= \int_{-T / 2}^{T / 2} f_T(\tau)e^{-\j x\tau} \d\tau \\
F(x) &amp;= \int_{-\infty}^{+\infty} f(\tau)e^{-\j x\tau} \d\tau
\end{aligned}
\]</span></p>
<p>显然有：</p>
<p><span class="math display">\[
\lim_{\Delta\omega \to 0} F_T = F
\]</span></p>
<p>该定义下，可以有：</p>
<p><span class="math display">\[
f(t) = \frac{1}{2\pi} \lim_{\Delta\omega \to 0} \sum_{k = -\infty}^{+\infty} F_T(k\omega) e^{\j k\omega t} \Delta\omega
\]</span></p>
<p>下一步则是将该极限转写为积分。但我们注意这样的一点，即 <span class="math inline">\(\Delta\omega\)</span> 在变动的时候，被积函数 <span class="math inline">\(F_T\)</span> 本身也在变动。按照严格的数学理论，这里我们应当严格说明收敛性。但我们只需要直观理解，具体的证明则省略：</p>
<p><span class="math display">\[
f(t) = \frac{1}{2\pi} \lim_{\Delta\omega \to 0} \sum_{k = -\infty}^{+\infty} F_T(k\omega) e^{\j k\omega t} \Delta\omega = \frac{1}{2\pi} \int_{-\infty}^{+\infty} F(\omega) e^{\j\omega t} \d\omega
\]</span></p>
<hr />
<p>上述推导中，我们实际上已经给出了一个函数 <span class="math inline">\(F(\omega)\)</span> 和信号 <span class="math inline">\(f(t)\)</span> 之间的关系：</p>
<p><span class="math display">\[
\begin{aligned}
f(t) &amp;= \frac{1}{2\pi} \int_{-\infty}^{+\infty} F(\omega) e^{\j\omega t} \d\omega \\
F(\omega) &amp;= \int_{-\infty}^{+\infty} f(t)e^{-\j\omega t} \d t
\end{aligned}
\]</span></p>
<p>这里我们可以给出函数 <span class="math inline">\(F(\omega)\)</span> 的一个理解，我们将其和 FS 比较：</p>
<p><span class="math display">\[
\begin{aligned}
f(t) &amp;= \sum_{k = -\infty}^{+\infty} F_ke^{\j k\omega t} \\
f(t) &amp;= \frac{1}{2\pi} \int_{-\infty}^{+\infty} F(\omega) e^{\j\omega t} \d\omega \\
\end{aligned}
\]</span></p>
<p>可以发现上述用 <span class="math inline">\(F(\omega)\)</span> 推出 <span class="math inline">\(f(t)\)</span> 的公式实际上类似于将 <span class="math inline">\(f\)</span> 表达为正交函数的线性组合，只不过这里的正交函数集是无穷集。这里 <span class="math inline">\(F(\omega)\)</span> 实际上相当于信号 <span class="math inline">\(f(t)\)</span> 的频谱，即其频域表现。</p>
<p>由 <span class="math inline">\(f\)</span> 推出 <span class="math inline">\(F\)</span> 的过程就称为<strong>傅立叶变换（Fourier transformation）</strong>，简称 FT。反过来由 <span class="math inline">\(F\)</span> 推出 <span class="math inline">\(f\)</span> 则称为<strong>傅立叶逆变换</strong>，简称 IFT。标记为：</p>
<p><span class="math display">\[
F = \mathcal{F}[f], f = \mathcal{F}^{-1}[F]
\]</span></p>
<h3 id="ft-的运算性质">FT 的运算性质</h3>
<p>FT 显然是线性变换：</p>
<p><span class="math display">\[
\mathcal{F}\left[\sum_{k = 1}^n \lambda_kf_k\right] = \sum_{k = 1}^n \lambda_k\mathcal{F}[f_k]
\]</span></p>
<p>下述论述中，记 <span class="math inline">\(F := \mathcal{F}[f]\)</span>。</p>
<p>其与反褶变换 <span class="math inline">\(\mathcal{R}\)</span> 具有以下性质：</p>
<p><span class="math display">\[
\begin{cases}
\mathcal{F}\mathcal{R}[f] = \mathcal{R}[F] \\
\mathcal{F}[f^*] = \mathcal{R}^*[F] \\
\mathcal{F}\mathcal{R}^*[f] = F^* \\
\end{cases}
\]</span></p>
<p>即时域上反褶等价于频域反褶，时域上共轭等价于频域反褶共轭，时域上反褶共轭等价于频域共轭。</p>
<p>而对于压扩变换 <span class="math inline">\(\mathcal{E}_a\)</span>，这里 <span class="math inline">\(\mathcal{E}_a[f](t) = f(at)\)</span>，我们有：</p>
<p><span class="math display">\[
\mathcal{F}\mathcal{E}_a[f] = \frac{1}{|a|}\mathcal{E}_{\frac{1}{a}}[F]
\]</span></p>
<p>对于平移变换 <span class="math inline">\(\mathcal{S}_{t_0}\)</span>，我们有（这里符号 <span class="math inline">\(\mathcal{F}\)</span> 的两个下标分别代表时域和频域使用的自变量符号）：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}[f(t - t_0)] = F(\omega)e^{-\j\omega t_0}
\]</span></p>
<p>综合压扩变换和平移变换：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}[f(at - t_0)] = \frac{1}{|a|}F\left(\frac{\omega}{a}\right)e^{-\j\omega t_0 / a}
\]</span></p>
<p>综合上述可以看出，时域的压扩会导致频域相反的压扩，并且会伴随幅度的变化。而时域的平移不影响幅度频谱，但是相位频谱会发生改变。</p>
<div class="note info"><p>这里使用 <span class="math inline">\(\mathcal{F}_{t, \omega}\)</span> 实在是折中之举。我自己一向是想要明确函数和函数值的区别的，比如说对函数的变换应该使用花写字体，使用中括号。按照这样的思路，<span class="math inline">\(\mathcal{F}[f(at - t_0)]\)</span> 是错误表达，因为方括号内实际上是函数值而非一个函数。</p>
<p>但是由于通用数学符号很多时候并没有区分两者，所以为了避免使用更多自定义符号导致难以阅读，还是暂且使用 <span class="math inline">\(\mathcal{F}_{t, \omega}\)</span> 这样的折中符号。</p>
</div>
<p>实际上我们注意到 FT 和 IFT 具有相同的数学结构，那么如果在时域上乘以复指数，频域则会发生平移：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}[f(t)e^{\j\omega_0 t}] = F(\omega - \omega_0)
\]</span></p>
<p>结合压扩变换得到：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}\left[\frac{1}{|a|}f\left(\frac{t}{a}\right)e^{\j\omega_0 t / a}\right] = F(a\omega - \omega_0)
\]</span></p>
<hr />
<p>FT 和微分积分运算关系大致如下。</p>
<p>考虑时域上的微分：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}\left[f^{(1)}(t)\right] = \j\omega F(\omega)
\]</span></p>
<p>考虑频域上的微分：</p>
<p><span class="math display">\[
\mathcal{F}^{-1}_{t, \omega}\left[F^{(1)}(\omega)\right] = -\j tf(t)
\]</span></p>
<p>考虑时域上的积分：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}\left[f^{(-1)}(t)\right] = \frac{1}{\j\omega}F(\omega) + \pi F(0)\delta(\omega)
\]</span></p>
<p>考虑频域上的积分：</p>
<p><span class="math display">\[
\mathcal{F}^{-1}_{t, \omega}\left[F^{(-1)}(\omega)\right] = -\frac{1}{\j t}f(t) + \pi f(0)\delta(t)
\]</span></p>
<hr />
<p>而 FT 和卷积的关系就很明朗，时域与频域相对，其中一个域上的乘积直接对应另一个域上的卷积。不过需要注意可能出现的常系数：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \mathcal{F}[f_1 * f_2] = \mathcal{F}[f_1] \cdot \mathcal{F}[f_2] \\
&amp; \mathcal{F}[f_1 \cdot f_2] = \frac{1}{2\pi} \mathcal{F}[f_1] * \mathcal{F}[f_2] \\
\end{aligned}
\]</span></p>
<p>FT 和相关运算的关系为：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \mathcal{F}[R(f_1, f_2)] = F_1F_2^* \\
&amp; \mathcal{F}[R(f, f)] = \|F\|^2
\end{aligned}
\]</span></p>
<div class="note info"><p>使用这个数学关系就可以得到矩形窗截取可能导致频域畸形的理论解释。我们提到过矩形脉冲乘以某一个信号可以用于截取信号指定区间的信息。但是截取后的信号在频域上的表现则会畸形，考虑下述关系：</p>
<p><span class="math display">\[
\mathcal{F}[G_\tau f] = \frac{1}{2\pi} \mathcal{F}[G_\tau] * \mathcal{F}[f]
\]</span></p>
<p>而 <span class="math inline">\(\mathcal{F}[G_\tau]\)</span> 是 <span class="math inline">\({\rm Sa}\)</span> 函数的衍生函数，其和原信号频谱的卷积可能导致频域畸变。</p>
</div>
<h3 id="fs-和-ft-的关系">FS 和 FT 的关系</h3>
<p>我们可以这样研究 FS 和 FT 的关系，考虑非周期信号 <span class="math inline">\(f\)</span>，其在区间 <span class="math inline">\([-T / 2, T / 2]\)</span> 外取值均为零。定义周期为 <span class="math inline">\(T\)</span> 的周期信号 <span class="math inline">\(\tilde{f}\)</span>，其在周期 <span class="math inline">\([-T / 2, T / 2]\)</span> 上有 <span class="math inline">\(\tilde{f} = f\)</span>。</p>
<p>考虑 <span class="math inline">\(\tilde{f}\)</span> 的 FS 系数（这里 <span class="math inline">\(\omega := 2\pi / T\)</span>）：</p>
<p><span class="math display">\[
F_k = \frac{1}{T} \int_{-T / 2}^{T / 2} \tilde{f}(t)e^{-\j k\omega t} \d t = \frac{1}{T} \int_{-\infty}^{+\infty} f(t)e^{-\j k\omega t} \d t = \frac{1}{T} F(k\omega)
\]</span></p>
<p>也就是说如果将一个脉冲式的信号（即除了某一个有限区间外取值均为零）扩展为一个周期信号，那么周期信号的离散频谱的包络线和脉冲信号的连续频谱仅仅相差一个常数倍数。</p>
<p>比如说上述求解过的周期矩形脉冲信号，如果我们仅仅关注一个周期内的矩形脉冲，其连续频谱的表达式为（和之前的论证使用相同的变量符号）：</p>
<p><span class="math display">\[
F(\omega) = E\tau_0{\rm Sa}\left(\frac{\omega\tau_0}{2}\right)
\]</span></p>
<h3 id="准周期信号">准周期信号</h3>
<p>有一些非周期信号可能会具有类似周期信号的时域重复结构，即可以将时域均匀划分为准周期，每一个准周期内信号的结构相互类似，这类信号就是准周期信号，如果其准周期的长度为 <span class="math inline">\(T\)</span>，一般会将 <span class="math inline">\(f_0 = 1 / T\)</span> 称为准周期信号的<strong>基频（Pitch）</strong>。</p>
<p>准周期信号的频谱特征也介于周期信号频谱和非周期信号频谱之间，即其频谱依然连续，但是在谐波频率处具有明显的尖峰。谐波频率处的尖峰就是准周期信号的一大特征。</p>
<h3 id="周期信号的-ft">周期信号的 FT</h3>
<p>鉴于 FS 和 FT 具有相同的本质，而周期信号的频谱表现是离散的，我们可以预料到对周期信号求解 FT 会得到若干离散的冲激函数之和。</p>
<p>比如说根据：</p>
<p><span class="math display">\[
\frac{1}{2\pi} \int_{-\infty}^{+\infty} (2\pi\delta(\omega - \omega_0)) e^{\j\omega t} \d\omega = e^{\j\omega_0 t}
\]</span></p>
<p>就可以得到复指数信号的 FT 为：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}[e^{\j\omega_0 t}] = 2\pi\delta(\omega - \omega_0)
\]</span></p>
<p>进一步可以推出：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \mathcal{F}_{t, \omega}[\cos\omega_0 t] = \pi(\delta(\omega + \omega_0) + \delta(\omega - \omega_0)) \\
&amp; \mathcal{F}_{t, \omega}[\sin\omega_0 t] = \j\pi(\delta(\omega + \omega_0) - \delta(\omega - \omega_0)) \\
\end{aligned}
\]</span></p>
<h3 id="其他常用函数的-ft">其他常用函数的 FT</h3>
<p>考虑冲激函数的 FT：</p>
<p><span class="math display">\[
\mathcal{F}[\delta_{E, 0}](\omega) = \int_{-\infty}^{+\infty} E\delta(t)e^{-\j\omega t} \d t = E
\]</span></p>
<p>也就是说冲激函数的傅立叶变换为常函数。这意味着冲激信号的频谱是处处均匀的，这种频谱一般称为<strong>白色谱</strong>或者<strong>均匀谱</strong>。</p>
<p>对冲激函数做 IFT 得到：</p>
<p><span class="math display">\[
\mathcal{F}^{-1}[\delta_{E, 0}](t) = \frac{1}{2\pi} \int_{-\infty}^{+\infty} E\delta(\omega) e^{\j\omega t} \d\omega = \frac{E}{2\pi}
\]</span></p>
<p>也就是说常函数的傅立叶变换是在原点的冲激函数，这是好理解的，因为常函数就是频率为零的三角函数。</p>
<p>上述推理说明了：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \mathcal{F}[\delta] = 1 \\
&amp; \mathcal{F}[1] = 2\pi\delta \\
\end{aligned}
\]</span></p>
<h1 id="信号采样">信号采样</h1>
<h2 id="采样的概念">采样的概念</h2>
<p>我们使用计算机存储时域上连续的信号的时候，只能存储部分点处的信号幅度，这就要求我们决定存储哪些点的信号值。这类每隔一定的时间间隔，从连续信号上取出该点信号幅度的行为就是<strong>采样</strong>。每次采样之间的时间间隔称为<strong>采样周期</strong>，一般标记为 <span class="math inline">\(T_s\)</span>。其倒数 <span class="math inline">\(f_s = 1 / T_s\)</span> 即称为<strong>采样频率</strong>，<span class="math inline">\(\omega_s = 2\pi / T_s\)</span> 则是<strong>采样（角）频率</strong>。</p>
<p>理想情况下，我们一般使用冲激串采样，即使用函数：</p>
<p><span class="math display">\[
p(t) = \sum_{k = -\infty}^{+\infty} \delta(t - kT_s)
\]</span></p>
<p>使用 <span class="math inline">\(p(t)\)</span> 乘以需要采样的信号 <span class="math inline">\(f(t)\)</span> 即可得到采样的结果。</p>
<h2 id="采样定理">采样定理</h2>
<p>现在考虑理想冲激串采样，我们考虑采样后信号的频谱表现。记：</p>
<p><span class="math display">\[
f_p(t) := f(t)p(t) = \sum_{k = -\infty}^{+\infty} f(t)\delta(t - kT_s)
\]</span></p>
<p>那么根据 FT 和卷积的关系（这里规定 <span class="math inline">\(F := \mathcal{F}[f]\)</span>）：</p>
<p><span class="math display">\[
\begin{aligned}
\mathcal{F}[f_p] &amp;= \frac{1}{2\pi}F * \mathcal{F}[p]
\end{aligned}
\]</span></p>
<p>这里我们需要求解 <span class="math inline">\(\mathcal{F}[p]\)</span>，即冲激串的傅立叶变换。由于冲激串函数实际上是周期函数，所以可以得知其频谱表现也是冲激串。我们可以求解其 FS 系数（这里 <span class="math inline">\(\omega_s := 2\pi / T_s\)</span>）：</p>
<p><span class="math display">\[
F_k = \frac{1}{T_s} \int_{-T_s / 2}^{T_s / 2} p(t)e^{-\j k\omega_s t} \d t = \frac{1}{T_s}
\]</span></p>
<p>将 <span class="math inline">\(p(t)\)</span> 写成 FS 得到：</p>
<p><span class="math display">\[
p(t) = \sum_{k = -\infty}^{+\infty} \frac{1}{T_s}e^{\j k\omega_s t}
\]</span></p>
<p>所以说可以有：</p>
<p><span class="math display">\[
\mathcal{F}[p](\omega) = \mathcal{F}_{t, \omega}\left[\sum_{k = -\infty}^{+\infty} \frac{1}{T_s}e^{\j k\omega_s t}\right] = \frac{1}{T_s} \sum_{k = -\infty}^{+\infty} \mathcal{F}_{t, \omega}[e^{\j k\omega_s t}] = \frac{2\pi}{T_s} \sum_{k = -\infty}^{+\infty} \delta(\omega - k\omega_s)
\]</span></p>
<p>也就是说时域的冲激串在频域上也是冲激串。</p>
<div class="note info"><p>如果你尝试这样求解 <span class="math inline">\(\mathcal{F}[p]\)</span>：</p>
<p><span class="math display">\[
\mathcal{F}[p] = \mathcal{F}\left[\sum_{k = -\infty}^{+\infty} \delta_{1, kT_s}\right] = \sum_{k = -\infty}^{+\infty} \mathcal{F}[\delta_{1, kT_s}]
\]</span></p>
<p>显然这会得到错误的结果。错误的原因是这里的级数和傅立叶变换这里不能交换（而上面先写成 FS 再 FT 的时候，级数和傅立叶变换又是可以交换的），而更深层次的原因则是冲激串严格上不具有 FT（不满足 Dirichlet 条件）。</p>
<p>实际上如果从更深层的意义上说，我们根本没有严格定义冲激函数，毕竟我们能看出来冲激函数根本不可能使用 Riemann 积分计算，所以还有更深层的数学原理被忽视了。</p>
<p>但一定程度上，这就是工科。想要钻研这些理论内部严格数学原理的读者可以阅读拓扑、泛函、实分析相关内容。</p>
</div>
<p>那么就可以计算取样后信号的频谱了：</p>
<p><span class="math display">\[
\mathcal{F}[f_p] = \frac{1}{2\pi}F * \mathcal{F}[p] = \frac{1}{T_s}F * \left(\sum_{k = -\infty}^{+\infty} \delta_{1, k\omega_s}\right) = \frac{1}{T_s}\sum_{k = -\infty}^{+\infty} \mathcal{S}_{k\omega_s}[F]
\]</span></p>
<p>也就是说抽样后的信号的频谱是将原先的频谱以 <span class="math inline">\(\omega_s\)</span> 为周期平移后叠加后得到的。</p>
<hr />
<p>现在我们考虑现实中常见的信号。常见信号往往具有一个<strong>高频截止频率</strong> <span class="math inline">\(\omega_M\)</span>，其含义为信号的频谱 <span class="math inline">\(F\)</span> 在区间 <span class="math inline">\([-\omega_M, \omega_M]\)</span> 外均取零。此外，之前也有提到过带宽相关知识，即大多数信号的能量聚集在低频区段，所以往往会截断高频的部分，而这个截断频率，也可以称为高频截止频率。这类信号频谱中位于区间 <span class="math inline">\([-\omega_M, \omega_M]\)</span> 内的频谱峰称为<strong>主峰</strong>。</p>
<p>对一个高频截止频率为 <span class="math inline">\(\omega_M\)</span> 的信号按照频率 <span class="math inline">\(\omega_s\)</span> 采样，采样后的频谱记为 <span class="math inline">\(F_p\)</span>，其是周期为 <span class="math inline">\(\omega_s\)</span> 的周期函数，每一个周期都是由原先信号的频谱主峰平移而来。我们现在固定高频截止频率，降低采样频率，考察 <span class="math inline">\(F_p\)</span> 的变化。在 <span class="math inline">\(\omega_s\)</span> 降低的时候，<span class="math inline">\(F_p\)</span> 周期减小，峰与峰之间的距离减小，从而存在一个临界取样频率，让相邻的两个频谱峰恰好相交。如果取样频率低于这个临界频率，就意味着 <span class="math inline">\(F_p\)</span> 的各个相邻的频谱峰会相互重叠，即发生<strong>频谱混叠</strong>。</p>
<p>如果没有发生频谱混叠，我们可以在采样之后使用低通滤波器将 <span class="math inline">\(F_p\)</span> 的主峰过滤出来，从而完美还原原先的信号。但是如果发生混叠，这种完美复原则是不可能的。而这个临界频率是显而易见的，即 <span class="math inline">\(\omega_s = 2\omega_M\)</span>。</p>
<p>这就是 Nyquist 取样定理，即使用不低于两倍高频截止频率 <span class="math inline">\(\omega_M\)</span> 的采样频率 <span class="math inline">\(\omega_s\)</span> 采样得到的数据点可以完美还原原信号。</p>
<p>综合上述，只有信号满足<strong>频带受限</strong>（即严格具有高频截止频率）并且<strong>取样频率足够高</strong>的时候，取样才能无损表示原有信号。</p>
<h2 id="信号复原内插">信号复原（内插）</h2>
<p>思考从采样序列恢复原先连续信号的方法，这其实就是<strong>插值法</strong>的应用，只不过在信号处理原理中我们将之称为内插法。</p>
<p>现在我们有信号 <span class="math inline">\(x(t)\)</span> 以抽样周期 <span class="math inline">\(T\)</span> 抽样得到的抽样序列 <span class="math inline">\(\{x(nT)\}_{n \in \mathbb Z}\)</span>。进行内插之前，我们需要确定内插函数 <span class="math inline">\(h(t)\)</span>，而内插函数一般就是我们使用的滤波器的单位冲激响应函数。随后用下述方法计算出内插后的连续信号 <span class="math inline">\(\tilde x(t)\)</span>：</p>
<p><span class="math display">\[
\tilde x(t) := \sum_{n = -\infty}^{+\infty} x(nT)h(t - nT) \approx x(t)
\]</span></p>
<p>使用不同的滤波器对应的内插函数 <span class="math inline">\(h(t)\)</span>，我们能获取到不同效果的复原信号 <span class="math inline">\(x(t)\)</span>。</p>
<div class="note info"><p>这里需要尝试解释一下滤波器、单位冲激响应、内插这些概念。</p>
<p>首先简单理解一下<strong>系统（System）</strong>的概念。系统可以简单理解为对给定输入（称之为<strong>激励</strong>）给出给定输出（称之为<strong>响应</strong>）的，具有特定功能的整体。</p>
<p>滤波器本质上就是一个对信号函数的变换，也是一种系统。只不过这个变换很多时候是用于过滤信号频谱之中的低频（或高频）成分的，所以才会有低通滤波器（或高通滤波器）之类的名称。其激励就是要过滤的信号，响应就是过滤后的信号。根据我们对滤波器性质的要求，我们至少需要滤波器是线性系统，满足激励叠加等于响应叠加以及激励倍增等于响应倍增。</p>
<p>而单位冲激响应就是一种特殊的响应。如果某一个滤波器的激励为单位冲激信号，其在这个条件下的响应就是单位冲激响应。</p>
<p>现在考虑一个滤波器，其对应的函数变换为 <span class="math inline">\(\mathcal{P}\)</span>，其单位冲激响应为 <span class="math inline">\(h\)</span>，即 <span class="math inline">\(\mathcal{P}[\delta] = h\)</span>。滤波器的线性保证了下述的性质：</p>
<p><span class="math display">\[
\begin{cases}
\mathcal{P}[f + g] = \mathcal{P}[f] + \mathcal{P}[g] \\
\mathcal{P}[\lambda f] = \lambda\mathcal{P}[f]
\end{cases}
\]</span></p>
<p>接下来我们证明<strong>任何激励和单位冲激响应的卷积就是该激励下滤波器的响应</strong>。这个结论说明了单位冲激响应携带了一个线性系统所有的信息，即只需要知晓一个线性系统的单位冲激响应就可以计算任何激励下的系统响应。本证明完全不理会系统函数变换和极限、级数是否可交换，工科生不管这些：</p>
<p><span class="math display">\[
\begin{aligned}
\mathcal{P}[x] &amp;= \mathcal{P}[x * \delta] = \mathcal{P}\left[\int_{-\infty}^{+\infty} x(\tau)\delta(\cdot - \tau) \d\tau\right] = \mathcal{P}\left[\lim_{\Delta \to 0} \sum_{k = -\infty}^{+\infty} x(k\Delta)\delta(\cdot - k\Delta) \Delta\right] \\
&amp;= \lim_{\Delta \to 0} \sum_{k = -\infty}^{+\infty} x(k\Delta) \mathcal{P}[\delta_{1, k\Delta}]\Delta = \lim_{\Delta \to 0} \sum_{k = -\infty}^{+\infty} x(k\Delta) h(\cdot - k\Delta)\Delta \\
&amp;= \int_{-\infty}^{+\infty} x(\tau)h(\cdot - \tau) \d\tau = x * h
\end{aligned}
\]</span></p>
<p>这里第一行到第二行直接默认系统函数变换和极限可交换且无穷求和下系统线性依然可以保证。</p>
<p>现在我们讨论上述说明的这些和信号复原（内插）是什么关系。我们已经说明了在符合取样定理的条件下，时域取样等价于频域周期延拓，所以我们要复原信号，只需要在频域上过滤出主峰即可。这个时候就需要使用到低通滤波器，我们假设使用的低通滤波器具有单位冲激响应 <span class="math inline">\(h(t)\)</span>。而这个滤波器的输入信号就是取样周期为 <span class="math inline">\(T\)</span> 的理想冲激串对原信号 <span class="math inline">\(x(t)\)</span> 取样得到的取样信号：</p>
<p><span class="math display">\[
x_p(t) = \sum_{k = -\infty}^{+\infty} x(kT)\delta(t - kT)
\]</span></p>
<p>我们考虑 <span class="math inline">\(x_p(t)\)</span> 通过滤波器处理后的输出，根据上述结论，该输出就是 <span class="math inline">\(x_p\)</span> 与 <span class="math inline">\(h\)</span> 的卷积，这里证明依然默认级数和无穷积分可交换：</p>
<p><span class="math display">\[
\begin{aligned}
(x_p * h)(t) &amp;= \int_{-\infty}^{+\infty} x_p(\tau)h(t - \tau) \d\tau = \int_{-\infty}^{+\infty} \left(\sum_{k = -\infty}^{+\infty} x(kT)\delta(\tau - kT)\right) h(t - \tau) \d\tau \\
&amp;= \sum_{k = -\infty}^{+\infty} x(kT) \int_{-\infty}^{+\infty} h(t - \tau)\delta(\tau - kT) \d\tau = \sum_{k = -\infty}^{+\infty} x(kT)h(t - kT)
\end{aligned}
\]</span></p>
<p>这个结果和我们介绍的使用内插函数 <span class="math inline">\(h\)</span> 对 <span class="math inline">\(x\)</span> 的取样序列进行内插法得到 <span class="math inline">\(\tilde x\)</span> 的公式一致。</p>
<p>其实内插法和使用滤波器滤波本质上在叙说同样的概念，只不过内插法是从时域的角度观察，即这样操作之后时域上缺失的数值点就会被插入回来，从而复原信号。而滤波是从频域的角度观察，即这样的操作本质上是在频域上过滤出低频峰。内插和滤波其实就是信号复原这个操作两个角度下观察的结果。</p>
</div>
<p>在此基础上我们继续介绍。为了复原初始连续信号，最理想的情况是使用理想低通滤波器，其频域表现为矩形窗，时域表现为 Sa 函数。其只需要在时域上将取样后的信号卷积上一个 Sa 函数即可获取原先的连续信号。</p>
<p>但是这里我们介绍两个不完全恢复的内插函数，即<strong>零阶保持内插</strong>和<strong>一阶保持内插（线性内插）</strong>。零阶保持内插的内插函数为：</p>
<p><span class="math display">\[
h(t) = \begin{cases}
1 &amp; 0 \leq t \leq T \\
0 &amp; {\rm otherwise}
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(T\)</span> 是取样周期。可以发现，内插函数是时域上的矩形窗，将其代入 <span class="math inline">\(\tilde x\)</span> 的公式会发现其复原出的信号大致为：</p>
<p><img src="/uploads/note-of-dsp/1.png" /></p>
<p>这里灰色线是原先的信号 <span class="math inline">\(x\)</span>，红色线则是内插后得到的 <span class="math inline">\(\tilde x\)</span>。这样的内插在每一个抽样周期内保持了抽样值本身，最终复原得到了类似阶跃的信号。</p>
<p>而一阶保持内插则是使用线性的方式插值，其内插函数为三角窗：</p>
<p><span class="math display">\[
h(t) = \begin{cases}
\dfrac{t}{T} + 1 &amp; -T \leq t &lt; 0 \\
-\dfrac{t}{T} + 1 &amp; 0 \leq t \leq T \\
0 &amp; {\rm otherwise}
\end{cases}
\]</span></p>
<p>其内插复原的信号则为：</p>
<p><img src="/uploads/note-of-dsp/2.png" /></p>
<p>可见其效果为直接使用线段连接各取样值以近似原信号。</p>
<hr />
<p>上述讨论完全基于采样满足采样定理，现在讨论采样频率过低导致频谱混叠的<strong>欠采样</strong>情况。此时即使采用理想低通滤波也无法获取原信号，但是我们可以说明，无论如何内插，采样点处的值保持。即无论采用何种内插函数 <span class="math inline">\(h\)</span>，得到的 <span class="math inline">\(\tilde x\)</span> 都保证 <span class="math inline">\(\tilde x(kT) = x(kT)(k \in \mathbb Z)\)</span>。</p>
<div class="note warning"><p>事实上这个性质要求内插函数 <span class="math inline">\(h\)</span> 满足这样的条件：</p>
<p><span class="math display">\[
\begin{cases}
h(0) = 1 \\
h(kT) = 0, k \in \mathbb Z \backslash \{0\}
\end{cases}
\]</span></p>
<p>事实上我们上面的叙述也只能为大家建立内插和滤波之间的一个直观感受，但是严格而言内插和滤波并非是一对完全严格对应的概念。内插法，或者说插值，天然要求插值后采样点处的函数值不改变，但是滤波并不严格保证这一点，比如说令滤波器的单位脉冲响应为 <span class="math inline">\(h(t) \equiv 1\)</span>，就不能保证采样点处函数值不变了。</p>
</div>
<h1 id="离散信号处理">离散信号处理</h1>
<p>上述的讨论均是理论的，理论的模拟信号时域连续、时域无限长、数值取值范围无限、精度无限。但是实际使用计算机处理的时候，这三点均无法满足，即计算机能处理的信号时域离散、时域有限长、数值取值范围有限、精度有限。</p>
<p>所以我们需要将上述的理论进行一定的修正才能应用到真实的信号处理场景中。</p>
<h2 id="从抽样序列还原原信号时域">从抽样序列还原原信号时域</h2>
<p>这一问题已经在采样部分叙述过，频带有限信号的采样频率足够高的时候，就可以根据抽样序列无损还原原信号。</p>
<h2 id="从抽样序列还原原信号频谱">从抽样序列还原原信号频谱</h2>
<p>连续时域信号通过抽样可以得到离散时域信号。考虑具有高频截止频率 <span class="math inline">\(\omega_M\)</span> 的频带有限信号 <span class="math inline">\(f\)</span>，其抽样信号 <span class="math inline">\(f_p\)</span> 定义为下式，这里 <span class="math inline">\(T_s\)</span> 是抽样周期：</p>
<p><span class="math display">\[
f_p(t) = \sum_{n = -\infty}^{+\infty} f(nT_s)\delta(t - nT_s)
\]</span></p>
<p>我们先前计算过抽样信号的 FT，这里 <span class="math inline">\(\omega_s\)</span> 是抽样频率，<span class="math inline">\(F\)</span> 是 <span class="math inline">\(f\)</span> 的频谱：</p>
<p><span class="math display">\[
F_p(\omega) = \frac{1}{T_s} \sum_{m = -\infty}^{+\infty} F(\omega - m\omega_s)
\]</span></p>
<p>在不发生频谱混叠的时候，抽样信号的频谱的主峰严格和原信号的频谱仅相差常数系数。也就是说在满足抽样定理的时候：</p>
<p><span class="math display">\[
F_p(\omega) = \frac{1}{T_s} F(\omega), \omega \in \left[-\frac{\omega_s}{2}, \frac{\omega_s}{2}\right] 
\]</span></p>
<p>我们形式上根据 FT 的计算公式可以推理得到下述关系，这里形式上将级数和无穷积分认为是可以交换的，所以严格而言是不严谨的推理：</p>
<p><span class="math display">\[
\begin{aligned}
F_p(\omega) &amp;= \int_{-\infty}^{+\infty} f_p(t)e^{-\j\omega t} \d t = \int_{-\infty}^{+\infty} \left(\sum_{n = -\infty}^{+\infty} f(nT_s)\delta(t - nT_s)\right)e^{-\j\omega t} \d t \\
&amp;= \sum_{n = -\infty}^{+\infty} f(nT_s) \left(\int_{-\infty}^{+\infty} \delta(t - nT_s)e^{-\j\omega t} \d t\right) = \sum_{n = -\infty}^{+\infty} f(nT_s) e^{-\j\omega nT_s} \d t
\end{aligned}
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
F(\omega) = T_sF_p(\omega) = T_s\sum_{n = -\infty}^{+\infty} f(nT_s) e^{-\j\omega nT_s}, \omega \in \left[-\frac{\omega_s}{2}, \frac{\omega_s}{2}\right] 
\]</span></p>
<p>从而我们就有从抽样信号序列复原原信号频谱的方式，这种变换相当于从离散信号作傅立叶变换，称为<strong>离散时间傅立叶变换（Discrete Time Fourier Transformation / DTFT）</strong>。</p>
<p>考虑其逆变换，即从原信号的频谱获取抽样信号。事实上 DTFT 的式子可以认为是一个 FS，<span class="math inline">\(\{f(nT_s)\}_{n \in \mathbb Z}\)</span> 可以认为是频域上的 FS 系数数列，原信号周期为 <span class="math inline">\(\omega_s\)</span>，不过注意这里指数上是 <span class="math inline">\(-\j\omega nT_s\)</span>，是有负号的。那么根据 FS 系数的公式：</p>
<p><span class="math display">\[
f(nT_s) = \frac{1}{\omega_s} \int_{-\omega_s / 2}^{\omega_s / 2} F_p(\omega)e^{\j n\omega T_s} \d\omega
\]</span></p>
<p>现在我们尝试进行归一化。由于 <span class="math inline">\(T_s\)</span> 实质上只是作为系数出现，所以可以将其归一化为 <span class="math inline">\(1\)</span>。而原先的采样序列记作数列 <span class="math inline">\(\{x(n)\}_{n \in \mathbb Z}\)</span>，这种归一化后的采样序列一般称为<strong>数字信号（Digital signal）</strong>。在这样的表示之下考虑 DTFT 和 IDTFT，我们将 DTFT 的结果记作 <span class="math inline">\(X(\omega)\)</span>，这也称为数字信号的频谱：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; X(\omega) = {\rm DTFT}[x](\omega) = \sum_{n = -\infty}^{+\infty} x(n) e^{-\j\omega n} \\
&amp; x(n) = \frac{1}{2\pi} \int_{-\pi}^{\pi} X(\omega)e^{\j n\omega} \d\omega
\end{aligned}
\]</span></p>
<p>根据上述推理，很容易知晓数字信号的频谱一定是周期的（根据 FT 和 IFT 的对偶，实际上根据周期信号的频谱离散就不难理解），并且由于进行了归一化处理，所以这个周期一定是 <span class="math inline">\(2\pi\)</span>：</p>
<p><span class="math display">\[
X(\omega + 2\pi) = X(\omega)
\]</span></p>
<p>DTFT 的运算法则和 FT 有很大类似之处。首先有 DTFT 是线性的：</p>
<p><span class="math display">\[
{\rm DTFT}\left[\sum_{k = 1}^n \lambda_kx_k\right] = \sum_{k = 1}^n \lambda_k{\rm DTFT}[x_k]
\]</span></p>
<p>时域和频域的平移均会导致另外一个域的相位平移：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; {\rm DTFT}_{n, \omega}[x(n - n_0)] = X(\omega)e^{-\j\omega n_0} \\
&amp; {\rm DTFT}_{n, \omega}[x(t)e^{\j\omega_0 n}] = X(\omega - \omega_0)
\end{aligned}
\]</span></p>
<p>其和反褶、共轭的关系也和 FT 类似：</p>
<p><span class="math display">\[
\begin{cases}
{\rm DTFT}[\mathcal{R}x] = \mathcal{R}[X] \\
{\rm DTFT}[x^*] = \mathcal{R}^*[X] \\
{\rm DTFT}[\mathcal{R}^*x] = X^* \\
\end{cases}
\]</span></p>
<p>压扩变换不能直接应用到数字信号上，所以我们给出时域扩展的定义：</p>
<p><span class="math display">\[
\mathcal{E}_a[x](n) = \begin{cases}
x(k) &amp; n = ka, k \in \mathbb Z \\
0 &amp; {\rm otherwise}
\end{cases} \ (a \in \mathbb{Z} \backslash \{0\})
\]</span></p>
<p>和 FT 类似，时域扩展的 DTFT 满足：</p>
<p><span class="math display">\[
{\rm DTFT}_{n, \omega}[\mathcal{E}_a[x](n)] = X(a\omega)
\]</span></p>
<p>DTFT 我们只探讨频域微分，和 FT 类似，频域微分等价于时域上的加权求和：</p>
<p><span class="math display">\[
{\rm DTFT}_{n, \omega}[nx(n)] = \j X^{(1)}(\omega)
\]</span></p>
<p>讨论卷积的时候，就不得不考虑到 DTFT 得到的频谱是周期的，普通的卷积可能不收敛。所以这里定义<strong>圆卷积</strong>，直观上而言就是指考虑一个周期内的卷积。比如说周期为 <span class="math inline">\(T\)</span> 的两个周期信号 <span class="math inline">\(x, y\)</span> 的圆卷积定义为：</p>
<p><span class="math display">\[
(x\otimes y)(t) := \int_T x(\tau)y(t - \tau) \d\tau
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; {\rm DTFT}[x_1 * x_2] = {\rm DTFT}[x_1] \cdot {\rm DTFT}[x_2] \\
&amp; {\rm DTFT}[x_1 \cdot x_2] = \frac{1}{2\pi} {\rm DTFT}[x_1] \otimes {\rm DTFT}[x_2] \\
\end{aligned}
\]</span></p>
<p>Parseval 定律依然类似成立：</p>
<p><span class="math display">\[
\sum_{n = -\infty}^{+\infty} \|x(n)\|^2 = \frac{1}{2\pi} \int_{-\pi}^{\pi} \|X(\omega)\|^2 \d\omega
\]</span></p>
<h2 id="从有限抽样序列还原信号频谱">从有限抽样序列还原信号频谱</h2>
<p>现在我们基本上解决了时域离散的问题，但是我们要考虑到计算机处理信号的时候时域不可能无限。</p>
<p>我们考虑对数字信号加上一个窗函数：</p>
<p><span class="math display">\[
w(n) := \begin{cases}
1 &amp; 0 \leq n \leq L - 1 \\
0 &amp; {\rm otherwise}
\end{cases}
\]</span></p>
<p>那么 <span class="math inline">\(L\)</span> 长的有限长度数字信号就可以表示为：</p>
<p><span class="math display">\[
x_L = x \cdot w
\]</span></p>
<p>那么显然根据 DTFT 的性质得到 <span class="math inline">\(x_L\)</span> 的 DTFT 为：</p>
<p><span class="math display">\[
X_L(\omega) = \frac{1}{2\pi} ({\rm DTFT}[x] \otimes {\rm DTFT}[w])(\omega)
\]</span></p>
<p>显然：</p>
<p><span class="math display">\[
\begin{aligned}
{\rm DTFT}[w](\omega) &amp;= \sum_{n = -\infty}^{+\infty} w(n)e^{-\j\omega n} = \sum_{n = 0}^{L - 1} e^{-\j\omega n} \\
&amp;= \frac{1 - e^{-\j L\omega}}{1 - e^{-\j\omega}}
\end{aligned}
\]</span></p>
<p>这个窗函数的频谱在周期 <span class="math inline">\([-\pi, \pi]\)</span> 内表现为低频有一个主峰，其余部分有若干指数衰减的副峰。主峰的宽度是绝对值最小两个零点的距离：</p>
<p><span class="math display">\[
\Delta\omega_L = \frac{2\pi}{L}
\]</span></p>
<h3 id="窗宽的限制">窗宽的限制</h3>
<p>现在我们考虑下述数字信号：</p>
<p><span class="math display">\[
x(n) = A_1e^{\j\omega_1 n} + A_2e^{\j\omega_2 n} (0 &lt; \omega_1, \omega_2 &lt; \pi)
\]</span></p>
<p>显然其 DTFT 为：</p>
<p><span class="math display">\[
X(\omega) = 2\pi(A_1\delta(\omega - \omega_1) + A_2\delta(\omega - \omega_2))
\]</span></p>
<p>现在我们将其乘上窗函数得到有限长的数字信号：</p>
<p><span class="math display">\[
x_L(n) = x(n)w(n)
\]</span></p>
<p>其 DTFT 为：</p>
<p><span class="math display">\[
X_L(\omega) = \frac{1}{2\pi}(X \otimes W)(\omega) = A_1W(\omega - \omega_1) + A_2W(\omega - \omega_2)
\]</span></p>
<p>这里我们只考虑 <span class="math inline">\(W\)</span> 的主峰，显然使用窗函数截取之后，频谱上原先是两个冲激的位置变为了两个窗函数频谱主峰。为了保证这两个主峰可以区分，我们要求这两个主峰不重叠。显然这需要 <span class="math inline">\(|\omega_1 - \omega_2|\)</span> 足够大。根据已知的主峰宽度，我们有：</p>
<p><span class="math display">\[
|\omega_1 - \omega_2| &gt; \frac{2\pi}{L}
\]</span></p>
<p>也就是说如果数字信号的最小频率间隔为 <span class="math inline">\(\Delta\omega\)</span>，那么为了保证截取后频谱上各个频率峰可分辨，必须要求窗函数宽度 <span class="math inline">\(L\)</span> 不小于 <span class="math inline">\(2\pi / \Delta\omega\)</span>。</p>
<h3 id="dft-的引入和矩阵形式">DFT 的引入和矩阵形式</h3>
<p>现在我们回到求解有限长数字信号傅立叶变换的问题上。我们继续延续上述 DTFT 的思路。不过我们现在只考虑在 <span class="math inline">\(\omega_k = 2k\pi / N\)</span> 处频谱的取值，即频域 <span class="math inline">\([0, 2\pi]\)</span> 区间内的 <span class="math inline">\(N\)</span> 个特征点：</p>
<p><span class="math display">\[
\begin{aligned}
X_L(\omega_k) &amp;= \frac{1}{2\pi} ({\rm DTFT}[x] \otimes {\rm DTFT}[w])(\omega) \\
&amp;= \frac{1}{2\pi} \int_{-\pi}^{\pi} \left(\sum_{m = -\infty}^{+\infty} x(m)e^{-\j\left(\frac{2k\pi}{N} - \mu\right) m}\right)\left(\sum_{n = 0}^{L - 1} e^{-\j\mu n}\right) \d\mu \\
&amp;= \frac{1}{2\pi} \int_{-\pi}^{\pi} \sum_{n = 0}^{L - 1}\sum_{m = -\infty}^{+\infty} x(m)e^{-\j\frac{2km\pi}{N}}e^{-\j\mu (n - m)} \d\mu \\
&amp;= \frac{1}{2\pi} \sum_{n = 0}^{L - 1}\sum_{m = -\infty}^{+\infty} x(m)e^{-\j\frac{2km\pi}{N}} \int_{-\pi}^{\pi} e^{-\j\mu (n - m)} \d\mu \\
&amp;= \sum_{n = 0}^{L - 1} x(n)e^{-\j\frac{2kn\pi}{N}}
\end{aligned}
\]</span></p>
<p>这里最后一个等号是利用指数函数在周期上的积分除非系数为零，否则积分结果均为零，所以最后只有 <span class="math inline">\(m = n\)</span> 的项被保留。</p>
<p>便于表示，我们把 <span class="math inline">\(X_L(\omega_k)\)</span> 简记为 <span class="math inline">\(X(k)\)</span>。</p>
<p>从而我们就可以做到从有限长的数字信号还原出原信号频谱，这个变换就是<strong>离散傅立叶变换（Discrete Fourier Transformation / DFT）</strong>。</p>
<p>我们注意到这样的一点，就是这里有两个参数是可以独立确定的，即窗函数长度 <span class="math inline">\(L\)</span> 和频域特征点数 <span class="math inline">\(N\)</span>。但实际应用中一般都有 <span class="math inline">\(L = N\)</span>，这主要是因为这样计算方便且 <span class="math inline">\(L \neq N\)</span> 的情况均可以还原成 <span class="math inline">\(L = N\)</span> 的情况。</p>
<hr />
<p>为了论证这一点，我们可以从另外一个角度推导 DFT 公式。也就是回归傅里叶分析的本质，而傅里叶分析的本质就是将函数分解成若干个指数函数的线性组合。之前论述过的 FT 用于分解时域无限的连续信号，而 DFT 则会用于分析时域有限的离散信号。</p>
<p>考虑信号 <span class="math inline">\(f\)</span>，我们在区间 <span class="math inline">\([0, 1]\)</span> 上均匀取 <span class="math inline">\(N\)</span> 个样，组成代表这个信号的向量：</p>
<p><span class="math display">\[
\b{x} = \lv
f(0) &amp; f\left(\frac{1}{N}\right) &amp; \cdots &amp; f\left(\frac{N - 1}{N}\right)
\rv
\]</span></p>
<p>同样的，我们需要对作为基的函数 <span class="math inline">\(e^{2\pi\j kt}\)</span> 也在这些点取样，函数 <span class="math inline">\(e^{2\pi\j kt}\)</span> 取到的样为：</p>
<p><span class="math display">\[
\b{e}_k = \lv
\varepsilon_N^0 &amp; \varepsilon_N^k &amp; \cdots &amp; \varepsilon_N^{(N - 1)k}
\rv
\]</span></p>
<p>这里 <span class="math inline">\(\varepsilon_N\)</span> 表示 <span class="math inline">\(N\)</span> 次单位根。</p>
<p>根据周期性，显然得到：</p>
<p><span class="math display">\[
\b{e}_k = \b{e}_{k + N}
\]</span></p>
<p>所以将 <span class="math inline">\(\b{x}\)</span> 拆分为 <span class="math inline">\(\b{e}_k\)</span> 的线性组合的时候只需要考虑一个周期内的 <span class="math inline">\(\b{e}_k\)</span> 即可，也就是说我们假设存在这样的一系列系数 <span class="math inline">\(\b{X} = \lv X(0) &amp; X(1) &amp; \cdots &amp; X(N - 1)\rv\)</span> 满足（这里的系数 <span class="math inline">\(1 / N\)</span> 是为了简化后续的讨论）：</p>
<p><span class="math display">\[
\b{x} = \frac{1}{N}\sum_{k = 0}^{N - 1} X(k)\b{e}_k
\]</span></p>
<p>如果我们定义这样的一个矩阵：</p>
<p><span class="math display">\[
F_N = \lv \b{e}_0 &amp; \b{e}_1 &amp; \cdots &amp; \b{e}_{N - 1}\rv
\]</span></p>
<p>上述等式实际上就是 <span class="math inline">\(N\b{x} = F_N\b{x}\)</span>。所以要求解系数向量，其实就等价于求解 <span class="math inline">\(F_N\)</span> 的逆矩阵。</p>
<p>考虑这样的数学关系（这里 <span class="math inline">\(\cdot^H\)</span> 表示 Hermit 转置，即共轭转置）：</p>
<p><span class="math display">\[
\b{e}_i^H\b{e}_j = \sum_{k = 0}^{N - 1} (\varepsilon_N^{ik})^*\varepsilon_N^{jk} = \sum_{k = 0}^{N - 1} \varepsilon_N^{(j - i)k} = \begin{cases}
N &amp; i = j \\
\dfrac{1 - \varepsilon_N^{N(j - i)}}{1 - \varepsilon_N^{j - i}} = 0 &amp; i \neq j
\end{cases}
\]</span></p>
<p>这说明 <span class="math inline">\(\dfrac{F_N}{\sqrt{N}}\)</span> 是酉矩阵。即有：</p>
<p><span class="math display">\[
F_N^{-1} = \frac{1}{\sqrt{N}}\left(\frac{F_N}{\sqrt{N}}\right)^{-1} = \frac{1}{\sqrt{N}}\left(\frac{F_N}{\sqrt{N}}\right)^H = \frac{1}{N} (F_N^T)^* = \frac{1}{N} F_N^*
\]</span></p>
<p>所以系数向量就可以表示为：</p>
<p><span class="math display">\[
\b{X} = F_N^* \b{x}
\]</span></p>
<p>对比会发现这个和我们之前推导出来的 DFT 公式是一致的。也就是说我们得到了 <span class="math inline">\(L = N\)</span> 时的 DFT 向量表示。</p>
<hr />
<p>回到先前的问题，我们思考为何 <span class="math inline">\(L \neq N\)</span> 的情况都可以化归为 <span class="math inline">\(L = N\)</span>。</p>
<p>如果 <span class="math inline">\(L &lt; N\)</span>，也就是说窗宽（序列长度）不足，我们可以在序列 <span class="math inline">\(x(n)\)</span> 末尾补零至 <span class="math inline">\(N\)</span> 位得到 <span class="math inline">\(x_D(n)\)</span>，以此计算 DFT：</p>
<p><span class="math display">\[
X_D(k) = \sum_{n = 0}^{N - 1} x_D(n)e^{-\j\frac{2\pi nk}{N}} = \sum_{n = 0}^{L - 1} x_D(n)e^{-\j\frac{2\pi nk}{N}} = \sum_{n = 0}^{L - 1} x(n)e^{-\j\frac{2\pi nk}{N}} = X(k)
\]</span></p>
<p>可见通过补零，补零序列的 DFT 就是原序列的 DFT。所以完全可以认为 <span class="math inline">\(L &lt; N\)</span> 时应化归为 <span class="math inline">\(L = N\)</span>。</p>
<p>而在 <span class="math inline">\(L &gt; N\)</span> 的时候，我们需要使用<strong>回绕</strong>。即定义这样的新序列：</p>
<p><span class="math display">\[
\tilde{x}(n) = \sum_{k \mathop{\equiv} n \mathop{\rm mod} N} x(k)
\]</span></p>
<p>直观而言，就是将原先的过长序列拆为若干长度为 <span class="math inline">\(N\)</span> 的短序列后对齐相加。为了解释此时依然可以化归，我们使用先前得到矩阵形式的 DFT 即可说明。首先我们取 <span class="math inline">\(F_N\)</span>，这里 <span class="math inline">\(N\)</span> 即 DFT 点数，<span class="math inline">\(F_N\)</span> 定义与之前相同。取新矩阵：</p>
<p><span class="math display">\[
F_{N\times L} = \lv F_N &amp; F_N &amp; \cdots \rv
\]</span></p>
<p>即使用 <span class="math inline">\(F_N\)</span> 的列按顺序拼接出一个 <span class="math inline">\(N\)</span> 行 <span class="math inline">\(L\)</span> 列的新矩阵，那么：</p>
<p><span class="math display">\[
{\rm DFT}[x](k) = F_{N\times L}\b{x} = (F_N\lv I_N &amp; I_N &amp; \cdots \rv)\b{x} = F_N\tilde{\b{x}} = {\rm DFT}[\tilde{x}](k)
\]</span></p>
<p>所以回绕序列和原序列具有相同的 DFT。</p>
<p>基于上述讨论，考虑到 <span class="math inline">\(L\)</span> 一般而言是原信号的长度，是一个不能修改的量。而 DFT 的点数 <span class="math inline">\(N\)</span> 则是计算过程中自由选取的参数，是可以随意更改的。为了方便，一般而言直接选定 <span class="math inline">\(N = L\)</span> 以方便计算。</p>
<h3 id="dft-的性质">DFT 的性质</h3>
<p>实际上我们可以发现 DFT 就是对 DTFT 频域一个周期内的取样，即时域从无限变为有限的时候，频域就会变成原先频域一个周期内的取样。这一点对连续信号也是成立的，时域从无限（周期无限）变为有限（有限周期信号）的时候，频域也会变为原先频域一个周期内的取样（周期信号的频域是离散的）。</p>
<p>现在考虑实序列的 DFT，实际上我们考虑 DTFT 即可。令实序列 <span class="math inline">\(x(n)\)</span> 的 DTFT 为 <span class="math inline">\(X(\omega)\)</span>。根据 DTFT 定义：</p>
<p><span class="math display">\[
X(\omega) = \sum_{n = -\infty}^{+\infty} x(n)e^{-\j\omega n}
\]</span></p>
<p>显然：</p>
<p><span class="math display">\[
X(-\omega) = X^*(\omega)
\]</span></p>
<p>另外一个相当重要的性质是：</p>
<p><span class="math display">\[
X(\omega) = X^*(2\pi - \omega)
\]</span></p>
<p>这说明了在周期 <span class="math inline">\([0, 2\pi]\)</span> 上，实序列的 DTFT 和自身共轭对称。这个性质的证明也是简单的：</p>
<p><span class="math display">\[
\begin{aligned}
X(2\pi - \omega) = \sum_{n = -\infty}^{+\infty} x(n)e^{-\j(2\pi - \omega) n} = \sum_{n = -\infty}^{+\infty} x(n)e^{\j\omega n} = X^*(\omega)
\end{aligned}
\]</span></p>
<p>这个性质反映在 DFT 上就是，实序列的偶数点 DFT 序列自身和自身共轭对称。即长度为 <span class="math inline">\(2N\)</span> 的实序列 <span class="math inline">\(x\)</span> 的 DFT 序列 <span class="math inline">\(X\)</span> 满足：</p>
<p><span class="math display">\[
X(N + k) = X^*(N - k)
\]</span></p>
<hr />
<p>DFT 的其他性质和 FT 类似。比如 DFT 是线性的，和共轭及反褶的关系也和 FT 一致，其余类似时域平移、频域平移等性质则自行推导。</p>
<p><code>TODO</code></p>
<h3 id="fft-算法">FFT 算法</h3>
<p>直接计算 <span class="math inline">\(N\)</span> 点 DFT 的时间复杂度为 <span class="math inline">\(O(n^2)\)</span>，但是考虑到 <span class="math inline">\(F_N\)</span> 矩阵的优良性质，应该具有更快速的算法。有一种思路是使用分治，考虑下述数学事实，这里 <span class="math inline">\(X\)</span> 为 <span class="math inline">\(x\)</span> 的 <span class="math inline">\(N\)</span> 点 DFT 序列，<span class="math inline">\(x\)</span> 长度为 <span class="math inline">\(N\)</span>，不妨 <span class="math inline">\(N\)</span> 是偶数：</p>
<p><span class="math display">\[
\begin{aligned}
{\rm DFT}_{n, k}[x(n)](k) &amp;= \sum_{n = 0}^{N - 1} x(n)e^{-\j\frac{2\pi nk}{N}} \\
&amp;= \sum_{r = 0}^{N / 2 - 1} x(2r)e^{-\j\frac{2\pi rk}{N / 2}} + \sum_{r = 0}^{N / 2 - 1} x(2r + 1)e^{-\j\frac{2\pi(r + 1 / 2)k}{N / 2}} \\
&amp;= \sum_{r = 0}^{N / 2 - 1} x(2r)e^{-\j\frac{2\pi rk}{N / 2}} + e^{-\j\frac{2\pi k}{N}}\sum_{r = 0}^{N / 2 - 1} x(2r + 1)e^{-\j\frac{2\pi rk}{N / 2}} \\
&amp;= {\rm DFT}_{n, k}[x(2n)](k) + e^{-\j\frac{2\pi k}{N}}{\rm DFT}_{n, k}[x(2n + 1)](k)
\end{aligned}
\]</span></p>
<p>也就是说，将原序列按照奇偶拆为两个序列，分别作 DFT 后再合并即得到原序列的 DFT。按此分治算法即可得到 <span class="math inline">\(O(n\log n)\)</span> 的 FFT 算法。</p>
<h1 id="laplace-变换与-z-变换">Laplace 变换与 Z 变换</h1>
<p>首先给出两个感性认识，Laplace 变换是拓展的 Fourier 变换，Z 变换是拓展的离散时间 Fourier 变换。</p>
<p>Fourier 变换显然要求连续信号平方可积，但是对于平方积分发散的信号，其进行 FT 后是不收敛的。最简单的让信号 <span class="math inline">\(f\)</span> 平方积分收敛的方式是乘以一个指数衰减 <span class="math inline">\(e^{-\sigma t}(\sigma \in \mathbb R)\)</span>。感性理解就是，大部分信号总是可以用指数信号迫敛的。</p>
<p>此时我们对迫敛后的信号进行 Fourier 变换：</p>
<p><span class="math display">\[
\mathcal{F}_{t, \omega}[f(t)e^{-\sigma t}] = \int_{-\infty}^{+\infty} f(t)e^{-\sigma t}e^{-\j\omega t} \d t = \int_{-\infty}^{+\infty} f(t)e^{-(\sigma + \j\omega) t} \d t
\]</span></p>
<p>此时考虑到 <span class="math inline">\(\sigma\)</span> 的不确定性和 <span class="math inline">\(\omega\)</span> 的任意性，我们取 <span class="math inline">\(s := \sigma + \j\omega \in \mathbb C\)</span>，定义新的变换：</p>
<p><span class="math display">\[
\mathcal{L}[f](s) := \int_{-\infty}^{+\infty} f(t)e^{-st} \d t
\]</span></p>
<p>这就是 Laplace 变换，其为拓展后的 Fourier 变换。Laplace 变换中 <span class="math inline">\(s\)</span> 可以取全复数集，而如果沿用 <span class="math inline">\(\omega\)</span> 是角频率的物理意义，Laplace 变换本质上引入了复频率空间。而如果一个信号 Laplace 变换后的复频率空间的虚轴上全收敛，就说明其 Fourier 变换收敛，此时其频域就是负频率空间虚轴截面。</p>
<hr />
<p>而同样的，DTFT 要求序列之模求和收敛。如果不收敛，我们同样模仿 Laplace 变换的引入，将序列乘以一个指数衰减 <span class="math inline">\(a^{-n}(a &gt; 0)\)</span>，对此时的序列进行 DTFT：</p>
<p><span class="math display">\[
{\rm DTFT}_{n, \omega}[x(n)a^{-n}] = \sum_{n = -\infty}^{+\infty} x(n)a^{-n}e^{-\j\omega n} = \sum_{n = -\infty}^{+\infty} x(n)(ae^{\j\omega})^{-n}
\]</span></p>
<p>同样发现 <span class="math inline">\(z = ae^{\j\omega}\)</span> 取遍全复平面，则不妨定义新变换：</p>
<p><span class="math display">\[
\mathcal{Z}[x](z) := \sum_{n = -\infty}^{+\infty} x(n)z^{-n}
\]</span></p>
<p>此时类似的，Z 变换将变换结果拓展到了整个复平面上。但是和 Laplace 变换后原先 FT 的残余是虚轴不同，Z 变换下 DTFT 的残余是单位圆（即 <span class="math inline">\(a = 1\)</span>）。也就是说，如果 Z 变换下，单位圆上处处收敛，就说明原先信号 DTFT 收敛，此时信号的 DTFT 后频域的一个周期就是单位圆截面。</p>
<hr />
<p>上述讲解的 ZT 是双边 ZT，事实上在应用的时候可能会使用单边 ZT。比如左边 ZT 的表达为：</p>
<p><span class="math display">\[
\mathcal{Z}_L[x](z) := \sum_{n = -\infty}^{0} x(n)z^{-n}
\]</span></p>
<p>右边 ZT 的表达为：</p>
<p><span class="math display">\[
\mathcal{Z}_R[x](z) := \sum_{n = 0}^{+\infty} x(n)z^{-n}
\]</span></p>
<p>一般而言，单边 ZT 中使用最多的是右边 ZT，所以在不引起混淆的时候，可以用单边 ZT 代表右边 ZT。</p>
<h2 id="z-变换的收敛域">Z 变换的收敛域</h2>
<p>Z 变换实际上是一个复平面上的幂级数，所以其具有收敛域（ROC）。</p>
<p>思考两个单边 ZT 的 ROC，这里考虑两个特殊点，即复平面零点 <span class="math inline">\(0\)</span> 与复平面无穷点 <span class="math inline">\(\infty\)</span>。显然左边 ZT 中 <span class="math inline">\(z = 0\)</span> 的时候幂级数收敛至 <span class="math inline">\(0\)</span>，而右边 ZT 中 <span class="math inline">\(z = \infty\)</span> 的时候幂级数收敛至 <span class="math inline">\(0\)</span>。所以左边 ZT 的 ROC 永远包含零点，而右边 ZT 的 ROC 永远包含无穷远点。</p>
<p>此外，考虑这样显然的结论（Abel 定理）。如果幂级数 <span class="math inline">\(\sum_{n = 0}^{+\infty} x(n)z^n\)</span> 在 <span class="math inline">\(z_0\)</span> 处绝对收敛，那么该级数在 <span class="math inline">\(|z| &lt; z_0\)</span> 处均收敛。如果在 <span class="math inline">\(z_0\)</span> 处发散，那么该级数在 <span class="math inline">\(|z| &gt; z_0\)</span> 处发散。那么左边 ZT 的 ROC 的表现为一个圆的内部，右边 ZT 的 ROC 的表现为一个圆的外部。</p>
<p>考虑双边 ZT，其显然可以认为是一个左边 ZT 和右边 ZT 的和，所以其 ROC 只能为两个单边 ZT 的交。考虑到左边 ZT 的 ROC 为圆的内部，右边 ZT 的 ROC 为圆的外部，所以双边 ZT 的 ROC 可以为空集，也可以为某一个圆环。</p>
<hr />
<p>我们需要指出的是，对于同一个 ZT 的结果，只有在指定 ROC 之后才能唯一确定 IZT 的结果。也就是说，必须要指定 ZT 结果和相应的 ROC 才能确定变换前的序列。</p>
<p>考虑某一个 ZT 的结果，假设其极点构成有限集 <span class="math inline">\(\{z_1, z_2, \cdots, z_n\}(|z_i| \leq |z_{i + 1}|)\)</span>。数学上可以证明，所有可能的 ROC 仅可以是 <span class="math inline">\(\{z: |z_i| \leq |z| \leq |z_{i + 1}|\}(0 \leq i \leq n)\)</span>，这里 <span class="math inline">\(z_0 = 0, z_{n + 1} = \infty\)</span>。</p>
<h2 id="z-变换的性质简介">Z 变换的性质简介</h2>
<p>首先简单介绍一些特殊信号的 Z 变换。先考虑单位阶跃信号：</p>
<p><span class="math display">\[
\delta(n) := \begin{cases}
1 &amp; n = 0 \\
0 &amp; n \neq 0
\end{cases}
\Rightarrow \mathcal{Z}[\delta] = 1, {\rm ROC} = \{z: 0 \leq |z| \leq +\infty\}
\]</span></p>
<p>随后是单位阶跃信号：</p>
<p><span class="math display">\[
u(n) := \begin{cases}
1 &amp; n \geq 0 \\
0 &amp; n &lt; 0
\end{cases}
\Rightarrow \mathcal{Z}[u](z) = \frac{1}{1 - z^{-1}}, {\rm ROC} = \{z: |z| &gt; 1\}
\]</span></p>
<p>然后是矩形窗信号：</p>
<p><span class="math display">\[
G_N(n) := \begin{cases}
1 &amp; 0 \leq n &lt; N \\
0 &amp; {\rm otherwise}
\end{cases}
\Rightarrow \mathcal{Z}[G_N](z) = \frac{1 - z^{-N}}{1 - z^{-1}}, {\rm ROC} = \{z: 0 &lt; |z| \leq +\infty\}
\]</span></p>
<p>然后是指数序列的右侧：</p>
<p><span class="math display">\[
\mathcal{Z}_{n, z}[a^nu(n)](z) = \frac{1}{1 - az^{-1}}, {\rm ROC} = \{z: |z| &gt; |a|\}
\]</span></p>
<p>最后是指数序列的左侧：</p>
<p><span class="math display">\[
\mathcal{Z}_{n, z}[-a^nu(-n - 1)](z) = \begin{cases}
\dfrac{1}{1 - az^{-1}} &amp; 0 &lt; |z| &lt; |a| \\
0 &amp; z = 0
\end{cases}, {\rm ROC} = \{z: |z| &lt; |a|\}
\]</span></p>
<hr />
<p>接下来的讨论默认 <span class="math inline">\(X := \mathcal{Z}[x]\)</span>。</p>
<p>ZT 显然是线性的。其时域平移对复频域影响为：</p>
<p><span class="math display">\[
\mathcal{Z}_{n, z}[x(n + m)] = z^mX(z)
\]</span></p>
<h1 id="数字滤波器">数字滤波器</h1>
<p>滤波器我们已经讲解过很多次，但是在理解了离散信号处理的基础上，我们需要说明一下<strong>数字滤波器</strong>和<strong>模拟滤波器</strong>的差别。不过我们首先建立这样的认同，即滤波器可以使用其单位冲激响应唯一代表。</p>
<p>我们在采样部分一直采用的是模拟滤波器的概念，其工作在连续的时域上，具有连续的单位冲激响应，其接受的激励也是连续的模拟信号。从频域上观察其单位冲激响应，显然其单位冲激响应的频域并非周期（这个和非周期信号的频域连续类似，根据时域频域的对偶，时域上连续的单位冲激响应在频域上就不周期）。比如说理想（模拟）低通滤波器在频域上就是一个低频区域的矩形窗，其余部分频域均为零。</p>
<p>接下来我们需要引入新的概念，即数字滤波器。在具体讲解之前，我们先根据我们对模拟滤波器的了解给出一些感性理解。</p>
<ul>
<li><p>数字滤波器是工作在离散时域上的，接受离散激励，具有离散的单位冲激响应</p></li>
<li><p>频域上，其单位冲激响应是周期的，且周期是该滤波器单位冲激响应的采样频率</p></li>
</ul>
<h2 id="数字滤波器的差分方程">数字滤波器的差分方程</h2>
<p>约定这样的记号，<span class="math inline">\(x(n)\)</span> 表示数字滤波器接收到的激励，<span class="math inline">\(y(n)\)</span> 表示数字滤波器作出的响应。</p>
<p>首先我们说明，我们要求滤波器是线性时不变因果系统。线性系统定义先前已经阐述，时不变的含义是无论何时系统接收到相同的激励，其永远给出相同的响应。因果系统则要求系统响应仅依赖于现在及先前的激励，而不依赖于未来未知的激励。所有实际系统都是因果系统。</p>
<p>有时我们要求系统稳定性，即对于任何有界激励都给出有界响应。</p>
<p>基于此，我们考虑数字滤波器。根据其线性时不变及因果性，我们给出数字滤波器需要满足的一般规律，这一般称为滤波器的<strong>差分方程</strong>：</p>
<p><span class="math display">\[
\sum_{k = 0}^N b_ky(n - k) = \sum_{r = 0}^M a_rx(n - r)
\]</span></p>
<p>这里 <span class="math inline">\(N\)</span> 表示滤波器需要的过去输出的个数，一般也称为滤波器的<strong>阶数</strong>。</p>
<p>我们考虑该滤波器的单位冲激响应。如果 <span class="math inline">\(N = 1\)</span>，我们可以注意到在足够大的 <span class="math inline">\(n\)</span> 下，<span class="math inline">\(x(n - r) = \delta(n - r)\)</span> 总是会全部变为零，此时响应为零。也就是说在有限长时间内，滤波器响应总会衰变为零，此时的滤波器称为<strong>有限脉冲响应滤波器</strong>，简称 <strong>FIR 滤波器</strong>。</p>
<p>对应的，如果 <span class="math inline">\(N &gt; 1\)</span>，由于每一个响应都依赖于先前的非零响应，其响应始终不消失，该滤波器则为<strong>无限脉冲响应滤波器</strong>，简称 <strong>IIR 滤波器</strong>。</p>
<h2 id="数字滤波器的流图">数字滤波器的流图</h2>
<p>流图是系统的一种表示方式，没有很深刻的理论需要讲解，这里不赘述。该课程基本仅要求掌握根据差分方程绘制滤波器的 I 型直接实现和 II 型直接实现，根据 PPT 即可很快掌握。</p>
<h2 id="数字滤波器的频率响应">数字滤波器的频率响应</h2>
<p>假设数字滤波器具有单位冲激响应 <span class="math inline">\(h(n)\)</span>，我们先前证明过：</p>
<p><span class="math display">\[
y(n) = (x * h)(n) = \sum_{k = -\infty}^{+\infty} h(k)x(n - k)
\]</span></p>
<p>考虑对两边同时 DTFT，如果将 <span class="math inline">\(x, y, h\)</span> 的 DTFT 分别记作 <span class="math inline">\(X, Y, H\)</span>，则显然有 <span class="math inline">\(Y = XH\)</span>。定义：</p>
<p><span class="math display">\[
H(\omega) = \frac{Y(\omega)}{X(\omega)}
\]</span></p>
<p>为数字滤波器的<strong>频率响应</strong>，频率响应是单位冲激响应的 DTFT。根据 DTFT 可逆，我们实际上也可以说明频率响应唯一代表了一个数字滤波器。然而差分方程的系数理论上也唯一代表了一个数字滤波器。实际上，我们可以使用差分方程系数推导频率响应，即这两者实际等价。</p>
<p>对差分方程两边 DTFT：</p>
<p><span class="math display">\[
\begin{aligned}
&amp; \sum_{k = 0}^N b_ky(n - k) = \sum_{r = 0}^M a_rx(n - r) \\
\iff&amp; {\rm DTFT}_{n, \omega}\left[\sum_{k = 0}^N b_ky(n - k)\right] = {\rm DTFT}_{n, \omega}\left[\sum_{r = 0}^M a_rx(n - r)\right] \\
\iff&amp; \sum_{k = 0}^N b_k{\rm DTFT}_{n, \omega}[y(n - k)] = \sum_{r = 0}^M a_r{\rm DTFT}_{n, \omega}[x(n - r)] \\
\iff&amp; Y(\omega)\sum_{k = 0}^N b_ke^{-\j k\omega} = X(\omega)\sum_{r = 0}^M a_re^{-\j r\omega} \\
\iff&amp; H(\omega) = \frac{Y(\omega)}{X(\omega)} = \frac{\sum_{r = 0}^M a_re^{-\j r\omega}}{\sum_{k = 0}^N b_ke^{-\j k\omega}}
\end{aligned}
\]</span></p>
<p>频率响应可以用来断定滤波器的通阻性质。比如说具有下述差分方程的数字滤波器：</p>
<p><span class="math display">\[
y(n) = ay(n - 1) + x(n)
\]</span></p>
<p>计算其频率响应：</p>
<p><span class="math display">\[
H(\omega) = \frac{\sum_{r = 0}^M a_re^{-\j r\omega}}{\sum_{k = 0}^N b_ke^{-\j k\omega}} = \frac{e^{\j\omega}}{e^{\j\omega} - a} = \frac{1}{1 - a\cos\omega + \j a\sin\omega}
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
|H(\omega)| = \frac{1}{\sqrt{1 + a^2 - 2a\cos\omega}}
\]</span></p>
<p>其在区间 <span class="math inline">\([-\pi, \pi]\)</span> 上的图像为：</p>
<p><img src="/uploads/note-of-dsp/4.png" /></p>
<p>其对低频段给出高响应，所以该数字滤波器为低通滤波器。</p>
<div class="note info"><p>显然可以看出频率响应作为单位冲激响应的 DTFT，其是以 <span class="math inline">\(2\pi\)</span> 为周期的函数。所以我们只需要关注一个周期内的函数表现即可，一般选用 <span class="math inline">\([-\pi, \pi]\)</span>。</p>
</div>
<h2 id="数字滤波器的传递函数与零极点图">数字滤波器的传递函数与零极点图</h2>
<p>我们现在研究系统的稳定性，我们给出下述定理。线性时不变系统稳定的充分必要条件为其单位冲激响应 <span class="math inline">\(h(n)\)</span> 满足：</p>
<p><span class="math display">\[
\sum_{k = -\infty}^{+\infty} |h(k)| &lt; +\infty
\]</span></p>
<p>如果单位冲激响应的模之和收敛，假设其收敛为 <span class="math inline">\(A &lt; +\infty\)</span>，考虑一个有界输入 <span class="math inline">\(x(n)\)</span>，其满足 <span class="math inline">\(|x(n)| &lt; B &lt; +\infty\)</span>。那么系统的响应为：</p>
<p><span class="math display">\[
|y(n)| = \left|\sum_{k = -\infty}^{+\infty} h(k)x(n - k)\right| \leq \sum_{k = -\infty}^{+\infty} |h(k)|\cdot|x(n - k)| &lt; B\sum_{k = -\infty}^{+\infty} h(k) = AB
\]</span></p>
<p>得到了系统稳定的结论。</p>
<p>如果单位冲激响应的模之和发散，考虑这样的激励：</p>
<p><span class="math display">\[
x(n) = {\rm sgn}(h(-n))
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
|y(0)| = \left|\sum_{k = -\infty}^{+\infty} h(k)x(-k)\right| = \left|\sum_{k = -\infty}^{+\infty} h(k){\rm sgn}(h(k))\right| = \left|\sum_{k = -\infty}^{+\infty} |h(k)|\right| = +\infty
\]</span></p>
<p>得到了系统不稳定的结论。</p>
<hr />
<p>这样思考，如果系统的单位冲激响应之模的和不收敛，就意味着我们不能对其进行 DTFT。而我们先前已经介绍过作为 DTFT 拓展的 Z 变换，不妨对用 ZT 代替 DTFT，我们对差分方程两边取 ZT。如果假设 <span class="math inline">\(x, y, h\)</span> 的 ZT 分别为 <span class="math inline">\(X, Y, H\)</span>，仿照之前推导频率响应的方法，不难说明：</p>
<p><span class="math display">\[
H(z) = \frac{Y(z)}{X(z)} = \frac{\sum_{r = 0}^M a_rz^{-r}}{\sum_{k = 0}^N b_kz^{-k}}
\]</span></p>
<p>此时的 <span class="math inline">\(H\)</span> 称为<strong>传递函数</strong>，其为单位冲激响应的 ZT。如果滤波器的传递函数的 ROC 包含了单位圆，意味着其单位冲激响应可以进行 DTFT，也意味着单位冲激响应模之和收敛，这就意味着系统稳定。</p>
<p>从这个角度观察，一个数字滤波器的稳定性等价于其传递函数的 ROC 包含单位圆。</p>
<p>现在我们考虑因果性。显然一个因果数字滤波器的单位冲激响应必然在负数上取零，所以其 ZT 最终退化为右边 ZT，这意味着其 ROC 必然是一个圆的外部。换言之，非因果数字滤波器的单位冲激响应会在负数上取非零，非退化的双边 ZT 的 ROC 不包含无穷远点。从这个角度观察，数字滤波器的因果性等价于 ROC 为某一圆的外部，包含无穷远点。</p>
<hr />
<p>现在考虑 <span class="math inline">\(H(z)\)</span> 的形式，显然其是一个有理分式，其分子为 <span class="math inline">\(z^{-1}\)</span> 的 <span class="math inline">\(M\)</span> 次多项式，分母则是 <span class="math inline">\(N\)</span> 次。那么根据代数基本定理，<span class="math inline">\(H(z)\)</span> 具有 <span class="math inline">\(M\)</span> 个零点和 <span class="math inline">\(N\)</span> 个极点。另外，<span class="math inline">\(0, \infty\)</span> 也可能是零点或者极点。将这些零点和极点绘制在复平面上，则得到了传递函数的零极点图。</p>
<h2 id="由传递函数推算单位冲激响应">由传递函数推算单位冲激响应</h2>
<p>通过传递函数可以推算数字滤波器的差分方程，之后我们可以通过令输入为单位冲激信号的方式求解单位冲激响应。但实际上，我们考虑到传递函数是单位冲激响应的 ZT，而我们已经知道，在给定 ZT 结果和 ROC 之后可以唯一确定 IZT 的结果，而 ROC 可以通过极点来确定。</p>
<h1 id="数模转换">数模转换</h1>
<p>之前讲解的采样与信号复原实际上就已经简单引入了数模转换这个话题。但是当时我们并没有讲解如何处理数字信号（时域离散信号），所以完全采用了模拟信号的视角。现在我们希望能够在理解了数字信号处理的基础上对数模转换进行更深刻的理解。</p>
<p>这里需要提一下，模拟滤波器一般而言成本高，截止频率低的模拟低通滤波器成本则相当高。这一因素决定了实际信号处理往往会<strong>使用高质量的数字信号处理来弥补低成本的模拟抗混叠滤波器</strong>。</p>
<h2 id="抗混叠滤波器">抗混叠滤波器</h2>
<p>我们先前提到过，如果取样频率达不到信号的高频截止频率的两倍则会发生频谱混叠导致无法通过理想低通滤波还原信号。然而现实中的信号的高频截止频率可以很高也可以很低，无法通过统一的采样频率进行采样。面对这种情况，有一种解决方式是引入<strong>抗混叠滤波器</strong>，其作用是滤去信号中过高频率的部分，这样就可以保证后续取样一定不会发生混叠。</p>
<p>抗混叠滤波器是低通滤波器，但是不一定是理想的矩形窗低通滤波器，其频谱表现一般为从低频到高频逐步下降，而非理想矩形窗滤波器的突变。这样做的原因是尽可能保留原信号的所有信息：</p>
<p><img src="/uploads/note-of-dsp/3.png" /></p>
<p>上述图中灰色实线是某信号的频谱，红色虚线是抗混叠滤波器的频谱。</p>
<p>抗混叠滤波器需要和后续的采样器配合使用以保证频谱不混叠。如果后续使用的采样频率过低，则要求抗混叠滤波器的频谱在较低的频段就需要降低到零，这对滤波器设计提出了较高要求，实现成本高。所以即使有抗混叠滤波器，采样频率也不能很低。</p>
<h2 id="过采样与二次采样">过采样与二次采样</h2>
<p>过采样与二次采样就是一种使用高质量数字信号处理弥补低成本模拟抗混叠滤波器的方法。我们考虑这样的实际场景，即需要对某模拟信号以 <span class="math inline">\(2\omega\)</span> 频率进行采样，该信号的重要信息分布于频谱的 <span class="math inline">\([0, \omega)\)</span> 频段。</p>
<p>按照先抗混叠再直接 <span class="math inline">\(2\omega\)</span> 采样的思路，模拟抗混叠滤波器的截止频率必须至多为 <span class="math inline">\(\omega\)</span>，否则会发生频谱混叠，但是这会导致成本过高。</p>
<p>有一种这样的思路，也就是使用很高的采样频率，降低对模拟抗混叠滤波器的截止频率要求，最后再二次取样，将实际的采样频率降回需求值。</p>
<p>比如说我们可以实际使用 <span class="math inline">\(8\omega\)</span> 的采样频率，此时模拟抗混叠滤波器的最高截止频率就放松到了 <span class="math inline">\(4\omega\)</span>。经过模拟抗混叠滤波器和 <span class="math inline">\(8\omega\)</span> 采样后，信号的频谱的 <span class="math inline">\([\omega + 8k\omega, 7\omega + 8k\omega](k \in \mathbb Z)\)</span> 频段实际上混杂着不需要的高频信息，需要过滤。但是注意，此时信号已经是数字信号，所以可以使用数字滤波器处理。</p>
<p>此时使用截止频率为 <span class="math inline">\(\omega\)</span> 的数字滤波器过滤出原信号在低频段的重要信息，再使用 <span class="math inline">\(2\omega\)</span> 频率取样。这样，我们就既做到了抗混叠，也做到了过滤不必要的高频信息。</p>
<p>这里使用远高于二倍高频截止频率的采样频率进行采样的方式称为<strong>过采样</strong>，而二次滤波之后进行的第二次采样就是<strong>二次采样</strong>。这样的方法可以放松对模拟滤波器的要求以降低成本。</p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《GAMES101》学习笔记</title>
    <url>/2021/10/16/note-of-games101/</url>
    <content><![CDATA[<p>这门课是万恶的安主席推荐的，但毕竟已经进入渲染这个计算机方向，这门课必然是首先需要学明白的课程。总之现在这个笔记，既可以是我自己的学习笔记，也是图形学兴趣小组的整理笔记，也可以是技能引导文档，同时也是目前实验室的工作。属于是真的赢麻了。</p>
<span id="more"></span>
<p><span class="math display">\[
\newcommand{\b}{\boldsymbol}
\newcommand{\lv}{\left(\begin{matrix}}
\newcommand{\rv}{\end{matrix}\right)}
\]</span></p>
<h2 id="课程简介">课程简介</h2>
<p>本课程主要分为四个部分，即光栅化、曲线与曲面、光线追踪、动画仿真。</p>
<p><strong>光栅化（Rasterization）</strong>指的是将三维图形实时显示在二维平面上。在图形学中，30 FPS 就可以认为是实时的，低于这个帧率的则认为是离线渲染。</p>
<p><strong>光线追踪（Ray tracing）</strong>指的是像每一个像素发射光，令光线不断反射。这样的技术能够让渲染更加真实，但是效率会更低。使用光线追踪是效果和效率的 Trade-off。</p>
<h3 id="图形学与计算机视觉">图形学与计算机视觉</h3>
<p>从二维图像和三维模型的角度出发，我们认为一切以三维模型为起点的都是<strong>计算机图形学（Computer graphics）</strong>的范畴，而所有从二维图像为起点的都是<strong>计算机视觉（Computer vision）</strong>。特别的，从三维模型出发获得二维图像的称为<strong>渲染（Rendering）</strong>，从三维模型出发获得新的三维模型的可以是<strong>模拟（Simulation）</strong>。但是上述的分类也是粗糙而模糊的。</p>
<h2 id="线性代数回顾">线性代数回顾</h2>
<div class="note success"><p>这里我们默认大家线性代数都挺好的。</p>
</div>
<p>首先明确记号，向量 <span class="math inline">\(\b{a}\)</span> 的长度标记为 <span class="math inline">\(\|\b{a}\|\)</span>。与向量 <span class="math inline">\(\b{a}\)</span> 同方向的单位向量标记为 <span class="math inline">\(\hat{\b{a}}\)</span>，其满足：</p>
<p><span class="math display">\[
\hat{\b{a}} = \frac{\b{a}}{\|\b{a}\|}
\]</span></p>
<p>向量的加减运算、点乘和叉乘运算省略。</p>
<p>另外，该课程明确向量默认为列向量，比如说二维向量表示为：</p>
<p><span class="math display">\[
\b{a} = \lv x \\ y \rv
\]</span></p>
<p>在这个标记下，三维向量的叉乘可以表示为：</p>
<p><span class="math display">\[
\b{a} = \lv \b{a}_x \\ \b{a}_y \\ \b{a}_z \rv, \b{b} = \lv \b{b}_x \\ \b{b}_y \\ \b{b}_z \rv \Rightarrow \b{a}\times\b{b} = \lv \b{a}_y\b{b}_z - \b{b}_y\b{a}_z \\ \b{a}_z\b{b}_x - \b{a}_x\b{b}_z \\ \b{a}_x\b{b}_y - \b{a}_y\b{b}_x \rv
\]</span></p>
<p>此外还需要正交基、矩阵的基本计算等基本知识。</p>
<h2 id="齐次坐标系统">齐次坐标系统</h2>
<p>矩阵可以用于描述线性变换，常见的线性变换包括缩放、反射、切变、旋转。但是注意，在图形学中有一个常见变换并不能简单用矩阵表述，即<strong>平移变换</strong>，其不满足一般的线性变换定义（变换不保原点）。考虑下述二维空间平移：</p>
<p><span class="math display">\[
\begin{cases}
x&#39; = x + \b{t}_x \\
y&#39; = y + \b{t}_y \\
\end{cases}
\]</span></p>
<p>实际上一种解决方式是给点和向量的表述添加一个维度。我们将向量 <span class="math inline">\(\b{a} = \lv x \\ y \rv\)</span> 转换为下述标记：</p>
<p><span class="math display">\[
\b{a} = \lv x \\ y \\ 0 \rv
\]</span></p>
<p>将点 <span class="math inline">\(A(x, y)\)</span> 转换为下述标记：</p>
<p><span class="math display">\[
A = \lv x \\ y \\ 1 \rv
\]</span></p>
<p>并且人为规定第三维度必须归一化，即：</p>
<p><span class="math display">\[
\lv x \\ y \\ w \rv := \lv x / w \\ y / w \\ 1 \rv(w \neq 0)
\]</span></p>
<p>在这种标记下，向量的线性运算得到的依然是向量，点与点的差得到向量，点与点的和得到中点，向量和点的线性运算得到点。这些性质都是符合直觉的。</p>
<p>那么上述的平移变换（变换均指的是对点的变换）在这个标记下就可以表示为：</p>
<p><span class="math display">\[
\lv x&#39; \\ y&#39; \\ 1 \rv = \lv 1 &amp; 0 &amp; \b{t}_x \\ 0 &amp; 1 &amp; \b{t}_y \\ 0 &amp; 0 &amp; 1 \rv \lv x \\ y \\ 1 \rv
\]</span></p>
<p>实际上，上述所有的变换均可以被统一表示为：</p>
<p><span class="math display">\[
\lv x&#39; \\ y&#39; \\ 1 \rv = \lv a &amp; b &amp; \b{t}_x \\ c &amp; d &amp; \b{t}_y \\ 0 &amp; 0 &amp; 1 \rv \lv x \\ y \\ 1 \rv
\]</span></p>
<p>这些变换统称<strong>仿射变换（Affine transformation）</strong>，仿射变换即对某一个点先进行线性变换后再平移的一类变换（考虑到变换复合没有交换律，注意顺序不能变）。仿射变换的矩阵具有一定的结构，即左上角的子阵表示除去平移之外的变换对应的矩阵，右侧的一列则代表平移量。</p>
<p>这种添加维度以表示平移的坐标系统为<strong>齐次坐标</strong>。</p>
<h3 id="三维旋转">三维旋转</h3>
<p>这里着重介绍 Rodrigue 旋转公式，考虑绕轴 <span class="math inline">\(\b{n}\)</span> 逆时针旋转 <span class="math inline">\(\alpha\)</span>，这个变换的矩阵可以表示为：</p>
<p><span class="math display">\[
\b{R}(\b{n}, \alpha) = \cos\alpha \b{I} + (1 - \cos\alpha) \b{n}\b{n}^T + \sin\alpha\lv
0 &amp; -\b{n}_z &amp; \b{n}_y \\
\b{n}_z &amp; 0 &amp; -\b{n}_x \\
-\b{n}_y &amp; \b{n}_x &amp; 0 \\
\rv
\]</span></p>
<p>这是一个三阶矩阵，构成的是齐次坐标意义下的变换矩阵的左上角子阵。</p>
<h2 id="mvp-变换">MVP 变换</h2>
<p>我们的渲染过程一般分为三个部分，即模型变换、视图变换和投影，这一整个变换过程就是 MVP 变换。</p>
<p>模型变换和视图变换一般可以认为是定义相机的位置的过程，定义相机需要三个量：</p>
<ul>
<li><p>位置矢量（Position）<span class="math inline">\(\b{e}\)</span></p></li>
<li><p>相机朝向（Gaze direction）<span class="math inline">\(\hat{\b{g}}\)</span></p></li>
<li><p>向上方向（Up direction）<span class="math inline">\(\hat{\b{t}}\)</span></p></li>
</ul>
<p>位置矢量定义了相机的位置，之后需要使用相机朝向定义观测方向，但是除此之外，我们需要使用向上方向定义相机最后的旋转形态（同一位置且朝向相同的相机依然有一个旋转自由度）。</p>
<p>另外，我们考虑到如果相机和物体进行了完全一致的变换，那么最后渲染结果不应当变化。所以说我们默认模型变换和视图变换最后的结果为：</p>
<ul>
<li><p>相机在原点</p></li>
<li><p>相机朝向 <span class="math inline">\(-z\)</span>，向上方向为 <span class="math inline">\(y\)</span></p></li>
</ul>
<p>为了保证渲染结果不变，该变换需要对物体和相机同时作变换。</p>
<hr />
<p>现在推导模型视图变换的矩阵，考虑原先的相机形态为 <span class="math inline">\((\b{e}, \hat{\b{g}}, \hat{\b{t}})\)</span>。</p>
<p>模型视图变换过程可以这样考虑，即首先将相机平移到原点，随后旋转调整相机。平移的矩阵显然是：</p>
<p><span class="math display">\[
\b{T}_v = \lv
1 &amp; 0 &amp; 0 &amp; -\b{e}_x \\
0 &amp; 1 &amp; 0 &amp; -\b{e}_y \\
0 &amp; 0 &amp; 1 &amp; -\b{e}_z \\
0 &amp; 0 &amp; 0 &amp; 1 \\
\rv
\]</span></p>
<p>写旋转矩阵的时候我们可以先考虑逆矩阵，也就是把规范的相机旋转到 <span class="math inline">\((\hat{\b{g}}, \hat{\b{t}})\)</span> 的视角，这个旋转的矩阵是要求的矩阵的逆矩阵：</p>
<p><span class="math display">\[
\b{R}_v^{-1} = \lv
(\hat{\b{g}} \times \hat{\b{t}})_x &amp; \b{t}_x &amp; -\b{g}_x &amp; 0 \\
(\hat{\b{g}} \times \hat{\b{t}})_y &amp; \b{t}_y &amp; -\b{g}_y &amp; 0 \\
(\hat{\b{g}} \times \hat{\b{t}})_z &amp; \b{t}_z &amp; -\b{g}_z &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1 \\
\rv
\]</span></p>
<p>我们显然发现 <span class="math inline">\(\b{R}_v^{-1}\)</span> 是正交矩阵（各列相互正交且为单位矩阵），从而就有：</p>
<p><span class="math display">\[
\b{R}_v = (\b{R}_v^{-1})^{T} = \lv
(\hat{\b{g}} \times \hat{\b{t}})_x &amp; (\hat{\b{g}} \times \hat{\b{t}})_y &amp; (\hat{\b{g}} \times \hat{\b{t}})_z &amp; 0 \\
\b{t}_x &amp; \b{t}_y &amp; \b{t}_z &amp; 0 \\
-\b{g}_x &amp; -\b{g}_y &amp; -\b{g}_z &amp; 0 \\
0 &amp; 0 &amp; 0 &amp; 1 \\
\rv
\]</span></p>
<p>而最终模型视图变换的矩阵就是：</p>
<p><span class="math display">\[
\b{M}_v = \b{R}_v\b{T}_v
\]</span></p>
<p>从实际意义上而言，模型视图变换的作用是将世界坐标系转换为以相机为基准的相机坐标系。</p>
<hr />
<p>随后发生投影，投影可以分为<strong>正交投影（Orthographic projection）</strong>和<strong>透视投影（Perspective projection）</strong>，分别表示平行光投影和点光源投影。</p>
<p>正交投影基于模型视图变换，此时相机朝向 <span class="math inline">\(-z\)</span>，所以投影之后投影图像应当在 <span class="math inline">\(xy\)</span> 平面上。随后，为了正规化，需要将 <span class="math inline">\(xy\)</span> 平面上的图像平移缩放到正方形 <span class="math inline">\([-1, 1]\times[-1, 1]\)</span> 内。</p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《人工智能导论》学习笔记</title>
    <url>/2021/06/16/note-of-iai/</url>
    <content><![CDATA[<p>这个文档就是一时兴起想要好好学学人工智能背后的玩意创建的。主要还是记录《人工智能导论》课程的笔记。</p>
<span id="more"></span>
<p>大概随着这个文档越来越饱满，我应该就能看懂 <code>paper.md</code> 这个诡异的超纲文档了。</p>
<h2 id="搜索问题">搜索问题</h2>
<h3 id="盲目搜索bfs-dfs">盲目搜索（BFS / DFS）</h3>
<p>DFS 优先扩展深度深的节点，BFS 优先扩展深度浅的节点。由于 DFS 往往存在深度限制，所以 DFS 是有可能找不到最优解的，并且最坏情况下 DFS 等价于枚举。而 BFS 在<strong>单位耗散值的有解问题</strong>上一定能找到最优解。</p>
<p>但有的时候搜索树上的相邻节点之间距离并非一致，所以出现了 Dijkstra 算法。这个算法是最短路算法之中较为重要的一个。在 Dijkstra 算法之中，原则是优先扩展<strong>距离起点最近的节点</strong>。</p>
<p>Dijkstra 算法考虑了当前节点与起点的距离，但是实则没有对距离终点的距离进行评估。所以之后可以引入启发式搜索。</p>
<h3 id="启发式搜索a-a">启发式搜索（A / A*）</h3>
<p>所谓启发式，就是引入<strong>启发知识</strong>，也就是对当前节点与目标之间的距离的评估。</p>
<p>在 A 算法之中，我们引入对节点 <span class="math inline">\(n\)</span> 的<strong>评估函数</strong> <span class="math inline">\(f(n)\)</span>：</p>
<p><span class="math display">\[
f(n) = g(n) + h(n)
\]</span></p>
<p>这里 <span class="math inline">\(h(n)\)</span> 就是对当前节点与目标之间距离的评估，也被称为<strong>启发函数</strong>。</p>
<p>上述函数均为<strong>估计值</strong>。我们把相应的实际值（也就是最短路所对应的）分别标记为 <span class="math inline">\(f^*(n), g^*(n), h^*(n)\)</span>。</p>
<p>A 算法的核心为，优先扩展 <span class="math inline">\(f(n)\)</span> 最小的节点。</p>
<p>在算法的具体实现过程之中，定义了<code>OPEN</code>表以及<code>CLOSE</code>表，分别代表<strong>当前考虑扩展的节点</strong>以及<strong>当前暂时不考虑扩展的节点</strong>。一份伪代码实现为：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">OPEN = [<span class="string">&#x27;s&#x27;</span>] <span class="comment"># &#x27;s&#x27; is the starting node</span></span><br><span class="line">CLOSE = []</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> OPEN.empty():</span><br><span class="line">    <span class="comment"># Select the node with minimum f value</span></span><br><span class="line">    n = OPEN.node_with_min_f()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># n is the expected node</span></span><br><span class="line">    <span class="keyword">if</span> expected(n):</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    OPEN.remove(n)</span><br><span class="line">    CLOSE.add(n)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Traverse the neighbors</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> n.neighbor():</span><br><span class="line">        path_len = g(n) + distance(n, m)</span><br><span class="line">        <span class="comment"># Expand the list</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (<span class="keyword">not</span> m <span class="keyword">in</span> CLOSE):</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been explored before, but it needs update</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            g(m) = path_len</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been discarded, but it can be reused now</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> CLOSE) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            CLOSE.remove(m)</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line"><span class="comment"># Fail</span></span><br><span class="line"><span class="keyword">return</span> FAIL</span><br></pre></td></tr></table></figure>
<p>在 A 算法之中，如果满足：</p>
<p><span class="math display">\[
h(n) \leq h^*(n)
\]</span></p>
<p>那么 A 算法就称为 A* 算法。A* 算法的特点就在于<strong>只要初始节点到目标节点有路径，那么算法永远能找到最优解</strong>，而 A 算法并不保证有最优解。</p>
<p>另外给出一个定理：</p>
<blockquote>
<p>对于两个 A* 算法 <span class="math inline">\(A_1, A_2\)</span>，如果对于非目标节点均满足：</p>
<p><span class="math display">\[
h_2(n) &gt; h_1(n)
\]</span></p>
<p>那么 <span class="math inline">\(A_1\)</span> 所扩展的节点数不小于 <span class="math inline">\(A_2\)</span> 所扩展的节点数。</p>
</blockquote>
<h3 id="改进-a-算法">改进 A* 算法</h3>
<p>A* 算法面临的一个问题在于<strong>可能会多次扩展同一个节点</strong>，这就导致了算法的低效，而实际上多次扩展某一个节点的原因在于扩展该节点所使用的路径并非是最短的。</p>
<p>我们可以认为可以使用<strong>单调的</strong>启发函数来解决这一问题，启发函数的单调性指的是三角形法则：</p>
<p><span class="math display">\[
\begin{cases}
    h(n_i) - h(n_j) \leq {\rm distance}(n_i, n_j) \\
    h(t) = 0
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(n_j\)</span> 为 <span class="math inline">\(n_i\)</span> 的子节点。</p>
<p>我们可以证明如果 <span class="math inline">\(h\)</span> 是单调的，那么使用这个启发函数的 A* 算法一旦扩展到了某一个节点 <span class="math inline">\(n\)</span>，就已经找到了从起点到这个节点的最短路，也就是说 <span class="math inline">\(g(n) = g^*(n)\)</span>。</p>
<p>实际上还有一个结论，就是满足单调性的 <span class="math inline">\(h\)</span> 必然满足 A* 条件。</p>
<p>基于此改进 A* 算法如下（伪代码表示）：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line">OPEN = [<span class="string">&#x27;s&#x27;</span>] <span class="comment"># &#x27;s&#x27; is the starting node</span></span><br><span class="line">CLOSE = []</span><br><span class="line">f_max = <span class="number">0</span> <span class="comment"># The maximum f value that has been found till now</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> OPEN.empty():</span><br><span class="line">    <span class="comment"># Find the nodes in OPEN with f value less than f_max</span></span><br><span class="line">    NEST = OPEN.with_f_less_than(f_max)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Select the node</span></span><br><span class="line">    <span class="comment"># When the f value has been small enough to be selected into NEST</span></span><br><span class="line">    <span class="comment"># We just need to select the minimum g value now</span></span><br><span class="line">    n = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> NEST.empty():</span><br><span class="line">        n = OPEN.node_with_min_f()</span><br><span class="line">        f_max = f(n)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        n = NEST.node_with_min_g()</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># n is the expected node</span></span><br><span class="line">    <span class="keyword">if</span> expected(n):</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    OPEN.remove(n)</span><br><span class="line">    CLOSE.add(n)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Traverse the neighbors</span></span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> n.neighbor():</span><br><span class="line">        path_len = g(n) + distance(n, m)</span><br><span class="line">        <span class="comment"># Expand the list</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">not</span> m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (<span class="keyword">not</span> m <span class="keyword">in</span> CLOSE):</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been explored before, but it needs update</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> OPEN) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            g(m) = path_len</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line">        <span class="comment"># m has been discarded, but it can be reused now</span></span><br><span class="line">        <span class="keyword">elif</span> (m <span class="keyword">in</span> CLOSE) <span class="keyword">and</span> (path_len &lt; g(m)):</span><br><span class="line">            CLOSE.remove(m)</span><br><span class="line">            OPEN.add(m)</span><br><span class="line">            n.<span class="built_in">next</span> = m</span><br><span class="line"><span class="comment"># Fail</span></span><br><span class="line"><span class="keyword">return</span> FAIL</span><br></pre></td></tr></table></figure>
<h2 id="博弈问题对抗搜索">博弈问题（对抗搜索）</h2>
<h3 id="alpha-beta-剪枝"><span class="math inline">\(\alpha-\beta\)</span> 剪枝</h3>
<p>我们在面临双方博弈，需要我方决策的时候，我们可以先搜索一遍所有可能的双方情况并使用专家知识对局面进行评估。由于对方有利就是我方不利，所以在搜索到最底部回溯得到估值的时候，要注意并不是始终取孩子节点的最大值，而是按层数交替取最大值和最小值。</p>
<p>一般而言，根节点要取最大的儿子节点（一般用方形节点代表<strong>极大过程</strong>），下一层要取最小的儿子节点（一般用圆形节点代表<strong>极小过程</strong>），以此类推。</p>
<p>所谓剪枝，就是目前遍历到此，发现继续遍历子节点都不会更新这个节点的估值了，此时就可以剪枝。注意，判定是否剪枝的时候是要和<strong>当前节点的所有祖先</strong>都进行比较的，不能只比较父节点。</p>
<p>不过要注意，在最后给出根节点估值后确定最后决策的时候，<strong>只能沿着决策树走一步</strong>。这是因为你做出决策后决策树可能会改变形态，不能保证后面的决策的估值情况还保证如此。</p>
<h3 id="蒙特卡罗方法">蒙特卡罗方法</h3>
<p><span class="math inline">\(\alpha-\beta\)</span> 剪枝依赖于大量的专家知识，所以在实际应用上也有所局限。其基本的思路是在给定的时限之内不断通过模拟对弈的方式扩展搜索树，最后再给定走步方式。</p>
<p>基本的循环包括以下几个部分：</p>
<ul>
<li>根据前期评估结果选取最有希望的叶子节点</li>
<li>在该叶子节点处随机进行一步，扩展出新叶子节点</li>
<li>从新叶子节点开始随机模拟对弈直到判定出胜负</li>
<li>根据模拟的结果反向更新决策树上各个节点的评估值</li>
</ul>
<p>一般而言，节点的评估值包含两个方面：</p>
<ul>
<li>当前信息下节点是有希望的</li>
<li>深度较浅的节点具有更大的探索可能</li>
</ul>
<p>一般而言可以选择这样的评估方式：</p>
<p><span class="math display">\[
I_j = \overline{X_j} + c\sqrt{\frac{2\ln n}{T_j(n)}}
\]</span></p>
<p>这里 <span class="math inline">\(\overline{X_j}\)</span> 表示经过当前节点的决策路径的胜率，这是一个守成的选项。</p>
<p><span class="math inline">\(n\)</span> 表示当前搜索总次数，<span class="math inline">\(T_j(n)\)</span> 表示当前节点访问次数。</p>
<h2 id="高级搜索">高级搜索</h2>
<h3 id="局部搜索">局部搜索</h3>
<p>局部搜索的意思就是一直往更好的地方走，具体过程为：</p>
<ul>
<li>选择初始点 <span class="math inline">\(x_0\)</span>，以及其相邻可考察点集 <span class="math inline">\(P\)</span></li>
<li>只要不满足退出条件，进行下面循环：
<ul>
<li>选择 <span class="math inline">\(P&#39; \subset P\)</span>，取 <span class="math inline">\(P&#39;\)</span> 之中最优解 <span class="math inline">\(x_b\)</span></li>
<li>如果 <span class="math inline">\(x_b\)</span> 更优，则切换为考察 <span class="math inline">\(x_b\)</span>，<span class="math inline">\(P\)</span> 修改为 <span class="math inline">\(x_b\)</span> 的相邻考察点集</li>
<li>否则 <span class="math inline">\(P = P - P&#39;\)</span></li>
</ul></li>
<li>输出结果</li>
</ul>
<h3 id="模拟退火算法">模拟退火算法</h3>
<p>模拟退火实际上是对局部搜索的一个优化。其基本原理来自于液态金属凝固的时候如果降温过快则有可能由于分子没有充分时间排列为结晶态而导致凝固不工整（没有达到最低能状态），而实际工艺会让温度缓慢下降，并且有回升温度的可能，保证大概率凝固为结晶态。</p>
<p>迁移到局部搜索上，为了防止落入局部最小值，我们可以让“温度回升”是一个有概率发生的事情。对于评估函数 <span class="math inline">\(E(i)\)</span>，以及两个状态 <span class="math inline">\(p,q\)</span>，给出从 <span class="math inline">\(p\)</span> 迁移到 <span class="math inline">\(q\)</span> 的概率：</p>
<p><span class="math display">\[
P(p \rightarrow q) = \begin{cases}
1 &amp; E(q) \leq E(p) \\
\exp\left(\dfrac{E(p) - E(q)}{kT}\right) &amp; E(q) &gt; E(p) \\
\end{cases}
\]</span></p>
<p>这里 <span class="math inline">\(k\)</span> 是一个常量，<span class="math inline">\(T\)</span> 是“温度”，指的是优化问题之中的控制参数。</p>
<p>根据物理定律（Boltzmann 分布）实际上我们可以给出定律：</p>
<ul>
<li>同一温度下，物体处于低能量状态的概率高于高能量状态</li>
<li>温度无限高的时候，物体等概率处于任何状态</li>
<li>温度无限低的时候，物体等概率处于任何最低能状态</li>
<li>温度下降的时候，物体进入低能量状态概率上升，进入高能量状态概率下降</li>
</ul>
<p>所以我们使用模拟退火方法的时候需要尽可能保证：</p>
<ul>
<li>初始能量足够高</li>
<li>每个温度下状态交换足够充分</li>
<li>温度的下降足够缓慢</li>
</ul>
<p>所以算法的基本思路就是：</p>
<ul>
<li>选定初始状态</li>
<li>随机选定初始状态的某一个相邻状态，考察它和初始状态的评估函数差：
<ul>
<li>如果新状态更优，直接迁移</li>
<li>如果原状态更优，则按照概率迁移</li>
</ul></li>
<li>迁移完毕后降温，重复上述迁移步骤直到寻找到满意的状态</li>
</ul>
<p>这里有些细节的问题需要考量。</p>
<p>首先是<strong>什么是满意的状态</strong>，一般而言最简单的就是设定温度阈值或者降温次数阈值，另外一个是如果多次降温都没有能够让评估函数的变化超过阈值就可以认为稳定了。</p>
<p>其次是<strong>什么时机降温</strong>，上述算法框架之中每次迁移完毕就会降温，但实际上有的时候会进行若干次迁移后才会降温。一般而言我们可以设定迁移次数阈值。</p>
<p>之后是<strong>怎么降温</strong>。等比例降温是最简单的，另外还有一个较为常用的：</p>
<p><span class="math display">\[
t_{k + 1} = \frac{t_k}{1 + \frac{t_k\ln(1 + \delta)}{3\sigma_{t_k}}}
\]</span></p>
<p>最后是<strong>初始温度如何设定</strong>。一般而言较高就可以了。</p>
<h3 id="遗传算法">遗传算法</h3>
<p>遗传算法的本质就是模拟生物进化的过程，通过引入交叉、变异等干扰因素尝试在若干代迭代后获得满意的结果。不过我们首先关注最为重要的<strong>选优</strong>过程的模拟。</p>
<p>考虑一个包含 <span class="math inline">\(N\)</span> 个个体的群体，其中第 <span class="math inline">\(i\)</span> 个个体的适应值为 <span class="math inline">\(F(x_i)\)</span>，那么在进化过程中其被选中的概率为：</p>
<p><span class="math display">\[
p(x_i) = \frac{F(x_i)}{\sum_{j = 1}^N F(x_j)}
\]</span></p>
<p>之后就可以模拟选优，过程为：</p>
<ul>
<li>从 <span class="math inline">\(x_1\)</span> 开始，以 <span class="math inline">\(p(x_1)\)</span> 的概率选择 <span class="math inline">\(x_1\)</span>。若选中，结束模拟，否则继续</li>
<li>转到 <span class="math inline">\(x_2\)</span>，以 <span class="math inline">\(p(x_1) + p(x_2)\)</span> 的概率选择 <span class="math inline">\(x_2\)</span>。若选中，结束模拟，否则继续</li>
<li>......</li>
<li>结束模拟</li>
</ul>
<p>这是选出一个染色体的方式，下面介绍如何选出一个群体：</p>
<p>对于每一个个体 <span class="math inline">\(x_i\)</span>，我们用上述方法在 <span class="math inline">\(N\)</span> 个个体之中选取 <span class="math inline">\(\lfloor p(x_i)N\rfloor\)</span> 次。之后按照 <span class="math inline">\(p(x_i)N - \lfloor p(x_i)N\rfloor\)</span> 从大到小排序群体，再取若干个让选出的群体恰好有 <span class="math inline">\(N\)</span> 个个体。</p>
<p>这种方法就是模拟了群体的一次进化，高适应的个体就有高可能得到繁殖（被多次取到）。</p>
<p>另外，交叉和变异则是对表示状态的二进制（或者十进制）数字串进行一定处理。</p>
<p>从而就有了遗传算法的基本框架：</p>
<ul>
<li>给定群体规模 <span class="math inline">\(N\)</span>，交叉概率 <span class="math inline">\(p_c\)</span> 以及变异概率 <span class="math inline">\(p_m\)</span></li>
<li>随机生成 <span class="math inline">\(N\)</span> 个染色体作为初始群体，并计算适应值</li>
<li>下面不断重复循环直到找到合适的解：
<ul>
<li>选优出 <span class="math inline">\(N\)</span> 个染色体成为扩展群体</li>
<li>按照 <span class="math inline">\(p_c,p_m\)</span> 进行交叉和变异，未变化的染色体保留，形成新群体</li>
</ul></li>
<li>选取整个进化过程中最适应的染色体作为最后输出</li>
</ul>
<p>不过我们注意，我们一定要<strong>选取合适的编码方式</strong>，否则可能会因为问题的状态难以描述而导致编码串有过多无用位，从而导致无效变异。</p>
<p>二进制的交叉和变异是简单的，十进制的交叉可以如此：</p>
<ul>
<li>子代 1 的交叉位之后的基因从父代 2 的所有基因之中按顺序取出尚未在子代 1 之中基因</li>
<li>指定若干的欠缺位，让父代 2 这些位置留空，之后按照父代1的顺序把原来的数字填回去形成子代 2</li>
<li>指定一个一一对应的映射，以生成子代</li>
</ul>
<p>变异则可以：</p>
<ul>
<li>指定两个位置，将后面的数字移到前面的指定位置之前</li>
<li>指定两个位置，交换两个位置上的基因</li>
<li>随意打乱某一区间。</li>
</ul>
<h2 id="统计机器学习">统计机器学习</h2>
<h3 id="基本概念">基本概念</h3>
<p>现实中的预测问题都可以归纳为在函数空间 <span class="math inline">\(H = \{f \mid f: X \rightarrow Y\}\)</span> 之中寻找最优的预测函数。这里 <span class="math inline">\(X\)</span> 是输入集，其中的元素一般表示预测的基础（已知信息）。而 <span class="math inline">\(Y\)</span> 是输出集，其中的元素一般表示需要预测的结果。</p>
<p>我们假设 <span class="math inline">\(f \in H\)</span> 为最优函数，也就是我们要寻找的。一般这个函数不会已知，但我们可以知道若干对输入输出组 <span class="math inline">\((x_i, y_i)\)</span> 满足 <span class="math inline">\(f(x_i) = y_i \pm {\rm noise}\)</span>（<span class="math inline">\({\rm noise}\)</span> 指的是可能出现的数据扰动）。这些输入输出组构成<strong>训练集</strong>。</p>
<p>统计机器学习的目标就是根据训练集，按照某种算法尝试找一个 <span class="math inline">\(g \in H\)</span>，让 <span class="math inline">\(g\)</span> 尽可能表现类似 <span class="math inline">\(f\)</span>。</p>
<p>统计机器学习可以按照监督的介入分为：</p>
<ul>
<li>监督学习</li>
<li>无监督学习</li>
<li>半 / 弱监督学习</li>
</ul>
<p>监督学习事实上更贴近我们上述的统计机器学习定义，其又可以被分为<strong>回归</strong>（如线性回归、二次回归）以及<strong>分类</strong>。而无监督学习实际上常常被称为<strong>聚类</strong>。</p>
<p>有无监督的差别可以理解为训练集之中的输入输出对 <span class="math inline">\((x_i, y_i)\)</span> 的 <span class="math inline">\(y_i\)</span> 是否明确。如果 <span class="math inline">\(y_i\)</span> 明确，那么这个学习就有监督，否则无监督。</p>
<p>下面解释为何无监督又被称为聚类。由于 <span class="math inline">\(y_i\)</span> 是不给定的，所以我们不能很明确给出一个已知局面具体属于何种类别，但我们对于给定的两个已知局面，我们可以判断其相似性（断定两者是否大概率属于同一类别），进而将类似的输入输出对聚合在一类里面，不类似的尽可能分开，这就是<strong>聚类（clustering）</strong>。所以尽管学习目标都是寻找 <span class="math inline">\(g\)</span> 让模型的预测尽可能准确，但是两者的学习方式是不同的。</p>
<p>之后我们给出两个概念，就是<strong>过拟合</strong>以及<strong>泛化能力</strong>。</p>
<p>过拟合是机器学习要处理的一个重要问题，其描述的就是算法给出了一个相当复杂的函数 <span class="math inline">\(g\)</span>，其在训练集上能够相当准确率地和 <span class="math inline">\(f\)</span> 类似，但是在其余输入上却不够好。泛化能力描述的是这个模型在面对未知输入的时候是否能够做出合理输出的能力。</p>
<h3 id="朴素-bayes-法">朴素 Bayes 法</h3>
<p>这个方法应用在多分类问题上。我们可以认为输入空间为若干 <span class="math inline">\(n\)</span> 维向量的集合 <span class="math inline">\(\boldsymbol X \subset \mathbb R^n\)</span>，输出空间则是若干类别（标签）的集合 <span class="math inline">\(\boldsymbol Y = \{c_1, c_2, \cdots, c_k\}\)</span>。所以说输入 <span class="math inline">\(X\)</span> 是 <span class="math inline">\(\boldsymbol X\)</span> 上的随机变量，输出 <span class="math inline">\(Y\)</span> 是 <span class="math inline">\(\boldsymbol Y\)</span> 上的随机变量。考虑 <span class="math inline">\(X, Y\)</span> 的联合分布 <span class="math inline">\(f(x, y)\)</span>。</p>
<p>我们得出：</p>
<p><span class="math display">\[
P(Y = c_k \mid X = x) = \frac{
    P(X = x \mid Y = c_k)P(Y = c_k)
} {
    \sum_k P(X = x \mid Y = c_k)P(Y = c_k)
}
\]</span></p>
<p>这个概率实际上是在给定输入 <span class="math inline">\(X = x\)</span> 的时候，输出 <span class="math inline">\(Y = c_k\)</span> 的后验概率。所有的先验概率来源于训练集，也就是用频率近似概率。</p>
<p>我们确定最后的输出的方式是寻找令后验概率最大的 <span class="math inline">\(c_k\)</span>。由于上述分母保持常数，所以输出：</p>
<p><span class="math display">\[
y = \arg\max_{c_k} P(X = x \mid Y = c_k)P(Y = c_k)
\]</span></p>
<p>但是我们这里要注意到先验概率之中的 <span class="math inline">\(P(X = x \mid Y = c_k)\)</span> 项，其复杂度随着 <span class="math inline">\(n\)</span> 的上升而指数上升。但是我们可以假设 <span class="math inline">\(X\)</span> 的各个维度是独立的，所以我们可以得到：</p>
<p><span class="math display">\[
\begin{aligned}
P(X = x \mid Y = c_k) &amp;= P\left(X^{(1)} = x^{(1)}, X^{(2)} = x^{(2)}, \cdots, X^{(n)} = x^{(n)} \ \middle| \  Y = c_k\right) \\
&amp;= \prod_{j = 1}^n P\left(X^{(j)} = x^{(j)} \ \middle| \ Y = c_k\right)
\end{aligned}
\]</span></p>
<p>最终给出的 <strong>Bayes 分类器</strong>为： <span class="math display">\[
y = \arg\max_{c_k} P(Y = c_k)\prod_{j = 1}^n P\left(X^{(j)} = x^{(j)} \ \middle| \ Y = c_k\right)
\]</span></p>
<p>这里给出<strong>平滑</strong>的概念。也就是如果训练集中如果没有出现过某一个 case，这个时候 case 的频率为 <span class="math inline">\(0\)</span>，但是显然我们不能把概率估计为 <span class="math inline">\(0\)</span>，这个时候会引入平滑。这里给出一个例子：</p>
<p><span class="math display">\[
P_\lambda\left(X^{(j)} = a_{jl} \ \middle| \ Y = c_k\right) = \frac{
    \sum_{i = 1}^N {\rm idx}\left(x_i^{(j)} = a_{jl}, y_i = c_k\right) + \lambda
} {
    \sum_{i = 1}^N {\rm idx}(y_i = c_k) + S_j\lambda
}
\]</span></p>
<p><span class="math inline">\({\rm idx}\)</span> 函数为<strong>示性函数</strong>，其参数为布尔表达式，为真的时候函数返回 <span class="math inline">\(1\)</span>，否则返回 <span class="math inline">\(0\)</span>。</p>
<p>这里 <span class="math inline">\(S_j\)</span> 为 <span class="math inline">\(x^{(j)}\)</span>（输入第 <span class="math inline">\(j\)</span> 维）的取值集合 <span class="math inline">\(\{a_{j1}, a_{j2}, \cdots, a_{jS_j}\}\)</span> 的大小。</p>
<p>这里 <span class="math inline">\(\lambda\)</span> 是平滑系数，一般取 <span class="math inline">\(\lambda = 1\)</span>，此时平滑成为 <strong>Laplace 平滑</strong>。</p>
<h3 id="支持向量机svm">支持向量机（SVM）</h3>
<p>SVM 是一个适用于二分类问题的计算模型。</p>
<p>给定线性可分训练集 <span class="math inline">\(T = \{(\boldsymbol x_1, y_1), (\boldsymbol x_2, y_2), \cdots, (\boldsymbol x_N, y_N)\}\)</span>，这里 <span class="math inline">\(\boldsymbol x_i \in X = \mathbb R^n\)</span> 以及 <span class="math inline">\(y_i \in Y = \{1, -1\}\)</span>。这里我们称 <span class="math inline">\(1\)</span> 为正类，<span class="math inline">\(-1\)</span> 为负类。</p>
<p>我们希望寻找一个超平面 <span class="math inline">\(\boldsymbol w^{*T}\boldsymbol x + b^* = 0\)</span>，给定决策函数：</p>
<p><span class="math display">\[
f(\boldsymbol x) = {\rm sgn}(\boldsymbol w^{*T}\boldsymbol x + b^*)
\]</span></p>
<p>这就是<strong>线性可分支持向量机</strong>。</p>
<p>为了评估一个超平面 <span class="math inline">\(\boldsymbol w^T\boldsymbol x + b = 0\)</span>，我们给定 <span class="math inline">\(T\)</span> 之中的一个样本点 <span class="math inline">\((x_i, y_i)\)</span>，定义<strong>函数间隔</strong>：</p>
<p><span class="math display">\[
\hat\gamma_i = y_i(\boldsymbol w^T\boldsymbol x_i + b)
\]</span></p>
<p>定义<strong>几何间隔</strong>：</p>
<p><span class="math display">\[
\gamma_i = y_i\left(\frac{\boldsymbol w^T}{\|\boldsymbol w\|}\boldsymbol x_i + \frac{b}{\|\boldsymbol w\|}\right)
\]</span></p>
<p>上述定义是针对单个样本点的，所以对于整个训练集 <span class="math inline">\(T\)</span>，定义：</p>
<p><span class="math display">\[
\begin{cases}
    \hat\gamma = \min_i \hat\gamma_i \\
    \gamma = \min_i \gamma_i \\
\end{cases}
\]</span></p>
<p>这也就是训练集和超平面的函数间隔以及几何间隔。这两种间隔之间相差 <span class="math inline">\(\|\boldsymbol w\|\)</span> 倍。</p>
<p>我们选择超平面的标准就是<strong>最大化超平面和训练集的间隔</strong>，也就是求取 <span class="math inline">\(\max_{\boldsymbol w, b}\gamma\)</span>。由于 <span class="math inline">\(\boldsymbol w, b\)</span> 可以成比例缩放，所以说我们完全可以假设 <span class="math inline">\(\hat\gamma = 1\)</span>，从而最优化问题转化为最大化 <span class="math inline">\(1 / \|\boldsymbol w\|\)</span>，等价于最小化 <span class="math inline">\(1 / 2\|\boldsymbol w\|^2\)</span>。所以说问题就是求解 <span class="math inline">\(\min_{\boldsymbol w, b} 1 / 2\|\boldsymbol w\|^2\)</span>。</p>
<p>这里由于 <span class="math inline">\(\hat\gamma = 1\)</span>，所以说总是存在 <span class="math inline">\((\boldsymbol x_i, y_i)\)</span> 满足 <span class="math inline">\(y_i(\boldsymbol w^T\boldsymbol x_i + b) = \hat\gamma = 1\)</span>，这个向量就是<strong>支持向量</strong>。</p>
<p>SVM 的学习过程，可以先定义 Lagrange 函数：</p>
<p><span class="math display">\[
L(\boldsymbol w, b, \boldsymbol\alpha) = \frac{1}{2}\|\boldsymbol w\|^2 + \sum_{i = 1}^N \alpha_i[1 - y_i(\boldsymbol w^T\boldsymbol x_i + b)]
\]</span></p>
<p>这里 <span class="math inline">\(\alpha_i \geq 0\)</span>，并且 <span class="math inline">\(\boldsymbol\alpha = (\alpha_1, \alpha_2, \cdots, \alpha_N)^T\)</span> 为 Lagrange 乘子向量。</p>
<p>我们知道：</p>
<p><span class="math display">\[
\max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha) =
\begin{cases}
    \dfrac{1}{2}\|\boldsymbol w\|^2 &amp; {\rm when\ some\ requirements\ are\ satisfied} \\
    \infty &amp; {\rm otherwise}
\end{cases}
\]</span></p>
<p>所以说 <span class="math inline">\(\min_{\boldsymbol w, b}\max_\alpha L(\boldsymbol w, b, \boldsymbol\alpha)\)</span> 与原问题等价。</p>
<p>另外，我们断定：</p>
<p><span class="math display">\[
\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha) \leq L(\boldsymbol w, b, \boldsymbol\alpha) \leq \max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha)
\]</span></p>
<p>所以我们有：</p>
<p><span class="math display">\[
\max_\boldsymbol\alpha\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha) \leq \min_{\boldsymbol w, b}\max_\boldsymbol\alpha L(\boldsymbol w, b, \boldsymbol\alpha)
\]</span></p>
<p>这个等号成立的条件为 <strong>KKT 条件</strong>。所以我们将问题转化为求 <span class="math inline">\(\max_\boldsymbol\alpha\min_{\boldsymbol w, b} L(\boldsymbol w, b, \boldsymbol\alpha)\)</span>。</p>
<p>我们令 <span class="math inline">\(L(\boldsymbol w, b, \boldsymbol\alpha)\)</span> 对 <span class="math inline">\(\boldsymbol w, b\)</span> 偏导为 <span class="math inline">\(0\)</span> 并代入就将问题转化为：</p>
<p><span class="math display">\[
\max_\boldsymbol\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_j(\boldsymbol x_i^T\boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]
\]</span></p>
<p>这里的约束条件为：</p>
<p><span class="math display">\[
\sum_{i = 1}^N \alpha_iy_i = 0\ (\alpha_i \geq 0)
\]</span></p>
<p>我们据此获得 <span class="math inline">\(\alpha^*\)</span>，从而我们可以计算：</p>
<p><span class="math display">\[
\begin{cases}
    \boldsymbol w^* = \sum_{i = 1}^N \alpha_i^*y_i\boldsymbol x_i \\
    b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_i(\boldsymbol x_i^T\boldsymbol x_j)\ (\alpha_j^* \neq 0)
\end{cases}
\]</span></p>
<p>但是有的时候这些点并不能被线性超平面完全分隔，所以说 <span class="math inline">\(y_i(\boldsymbol w^T\boldsymbol x_i + b) \geq 1\)</span> 并不能处处满足，所以需要引入<strong>松弛变量</strong>：</p>
<p><span class="math display">\[
y_i(\boldsymbol w^T\boldsymbol x_i + b) \geq 1 - \xi_i
\]</span></p>
<p>为了尽量减小 <span class="math inline">\(\xi_i\)</span> 的影响，所以我们可以把优化目标改为：</p>
<p><span class="math display">\[
\min_{\boldsymbol w, b, \xi}\left(\frac{1}{2}\|\boldsymbol w\|^2 + C\sum_{i = 1}^N \xi_i\right)
\]</span></p>
<p>这种处理方式称为<strong>软间隔最大化</strong>，这里 <span class="math inline">\(C &gt; 0\)</span> 为惩罚参数，<span class="math inline">\(C\)</span> 越大惩罚力度越大。</p>
<p>按照线性可分 SVM 的方法，问题转化为：</p>
<p><span class="math display">\[
\max_\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_j(\boldsymbol x_i^T\boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]
\]</span></p>
<p>这里的约束条件为：</p>
<p><span class="math display">\[
\sum_{i = 1}^N \alpha_iy_i = 0\ (0 \leq \alpha_i \leq C)
\]</span></p>
<p>我们据此获得 <span class="math inline">\(\alpha^*\)</span>，从而我们可以计算：</p>
<p><span class="math display">\[
\begin{cases}
    \boldsymbol w^* = \sum_{i = 1}^N \alpha_i^*y_i\boldsymbol x_i \\
    b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_i(\boldsymbol x_i^T\boldsymbol x_j)\ (0 &lt; \alpha_j^* &lt; C)
\end{cases}
\]</span></p>
<p><span class="math inline">\(\alpha_i^* &gt; 0\)</span> 对应的 <span class="math inline">\(\boldsymbol x_i\)</span> 是支持向量。</p>
<ul>
<li>若 <span class="math inline">\(\alpha_i^* = 0\)</span>，则不是支持向量（对应曲线外侧的点）</li>
<li>若 <span class="math inline">\(0 &lt; \alpha_i^* &lt; C\)</span>，则 <span class="math inline">\(\xi_i = 0\)</span>，那么 <span class="math inline">\(\boldsymbol x_i\)</span> 在间隔边界上，是支持向量（对应两条虚线上的点）</li>
<li>若 <span class="math inline">\(\alpha_i^* = C\)</span>，那么 <span class="math inline">\(\boldsymbol x_i\)</span> 也是支持向量
<ul>
<li>若 <span class="math inline">\(0 &lt; \xi_i &lt; 1\)</span>，则分类正确（对应在己方虚线和实线之间的点）</li>
<li>若 <span class="math inline">\(\xi_i = 1\)</span>，则在超平面上（对应在实线上的点）</li>
<li>若 <span class="math inline">\(\xi_i &gt; 1\)</span>，则被误分（对应在实线和对方虚线之间的点）</li>
</ul></li>
</ul>
<p>这里给出一个结论，也就是样本点到软间隔边界（虚线边界）的距离为 <span class="math inline">\(\xi_i / \|\boldsymbol w\|\)</span>。</p>
<p>另外一方面，我们考虑使用非线性的方式分割数据点。事实上就是尝试建立一个非线性映射将原空间的数据点映射到新空间上，这些数据点在新空间上线性可分。</p>
<p>考虑使用映射 <span class="math inline">\(\phi: X \rightarrow H\)</span> 将输入 <span class="math inline">\(\boldsymbol x \in X\)</span> 映射到新空间 <span class="math inline">\(H\)</span> 上，这里把 <span class="math inline">\(K(\boldsymbol x, \boldsymbol y) := \phi(\boldsymbol x)^T\phi(\boldsymbol y)\)</span> 称为<strong>核函数</strong>。这个时候所有的与内积相关的运算均应该使用核函数进行。</p>
<p>按照线性可分 SVM 的方法，问题转化为：</p>
<p><span class="math display">\[
\max_\alpha\left[-\frac{1}{2}\sum_{i = 1}^N \sum_{j = 1}^N \alpha_i\alpha_jy_iy_jK(\boldsymbol x_i, \boldsymbol x_j) + \sum_{i = 1}^N \alpha_i\right]
\]</span></p>
<p>这里的约束条件为：</p>
<p><span class="math display">\[
\sum_{i = 1}^N \alpha_iy_i = 0\ (0 \leq \alpha_i \leq C)
\]</span></p>
<p>我们据此获得 <span class="math inline">\(\alpha^*\)</span>，从而我们可以计算：</p>
<p><span class="math display">\[
b^* = y_j - \sum_{i = 1}^N \alpha_i^*y_iK(\boldsymbol x_i, \boldsymbol x_j)\ (0 &lt; \alpha_j^* &lt; C)
\]</span></p>
<p>原有的决策函数之中含有内积，所以也需要将其修改为：</p>
<p><span class="math display">\[
f(\boldsymbol x) = {\rm sgn}\left(\sum_{i = 1}^N \alpha_i^*y_iK(\boldsymbol x_i, \boldsymbol x) + b^*\right)
\]</span></p>
<p>常用的核函数包括<strong>多项式核函数</strong>：</p>
<p><span class="math display">\[
K(\boldsymbol x, \boldsymbol y) = (\boldsymbol x^T\boldsymbol y + 1)^p
\]</span></p>
<p>以及<strong>高斯核函数</strong>：</p>
<p><span class="math display">\[
K(\boldsymbol x, \boldsymbol y) = \exp\left(-\frac{\|\boldsymbol x - \boldsymbol y\|^2}{2\sigma^2}\right)
\]</span></p>
<h3 id="决策树">决策树</h3>
<p>我们定义随机变量 <span class="math inline">\(X\)</span> 的熵为：</p>
<p><span class="math display">\[
H(X) = -\sum_{i = 1}^n p_i\log p_i
\]</span></p>
<p>当概率由训练集 <span class="math inline">\(D\)</span> 给出，该熵可以标记为 <span class="math inline">\(H(D)\)</span>。</p>
<p>之后给出条件熵：</p>
<p><span class="math display">\[
H(Y \mid X) = \sum_{i = 1}^n P(X = x_i)H(Y \mid X = x_i)
\]</span></p>
<p>这表示的是已经知道 <span class="math inline">\(X\)</span> 的时候 <span class="math inline">\(Y\)</span> 的不确定性。</p>
<p>之后定义特征 <span class="math inline">\(A\)</span> 对数据集 <span class="math inline">\(D\)</span> 的<strong>信息增益</strong>为：</p>
<p><span class="math display">\[
g(D, A) = H(D) - H(D \mid A)
\]</span></p>
<p>这实际上表示的是给定特征 <span class="math inline">\(A\)</span> 的时候数据集 <span class="math inline">\(D\)</span> 不确定性减少的程度。</p>
<p>假设有训练集 <span class="math inline">\(D\)</span>，有 <span class="math inline">\(K\)</span> 个类 <span class="math inline">\(C_k\)</span>，特征 <span class="math inline">\(A\)</span> 有 <span class="math inline">\(n\)</span> 个取值 <span class="math inline">\(a_i\)</span>，特征 <span class="math inline">\(A\)</span> 的不同取值将 <span class="math inline">\(D\)</span> 划分为 <span class="math inline">\(n\)</span> 个子集 <span class="math inline">\(D_i\)</span>，记 <span class="math inline">\(D_i\)</span> 中属于 <span class="math inline">\(C_k\)</span> 类的样本集合为 <span class="math inline">\(D_{ik}\)</span>，那么：</p>
<p><span class="math display">\[
\begin{aligned}
    g(D, A) &amp;= H(D) - H(D \mid A) \\
    &amp;= -\sum_{k = 1}^K \frac{|C_k|}{|D|}\log\frac{|C_k|}{|D|} + \sum_{i = 1}^n \frac{|D_i|}{|D|}\left(\sum_{k = 1}^K \frac{|D_{ik}|}{|D_i|}\log\frac{|D_{ik}|}{|D_i|}\right)
\end{aligned}
\]</span></p>
<p>下面介绍 ID3 算法，这个算法可以用于生成决策树：</p>
<ul>
<li>如果 <span class="math inline">\(D\)</span> 之中所有例子属于同一类或者没有用于判断的特征，则返回单节点树，类标记为实例数最多的类</li>
<li>选择信息增益最大的特征 <span class="math inline">\(A_g\)</span>，其信息增益为 <span class="math inline">\(\delta_A\)</span></li>
<li>如果 <span class="math inline">\(\delta_A\)</span> 小于阈值 <span class="math inline">\(\varepsilon\)</span>，那么置单节点决策树，类标记为实例数最多的类</li>
<li>否则按照特征取值分割训练集，如果某个分割后的块为空，那么构建单节点子树，类标记为 <span class="math inline">\(D\)</span> 实例数最多的类。若非空则构建子树，递归上述过程</li>
</ul>
<p>这样的算法倾向于选择分支比较多的属性。</p>
<p>所以定义<strong>信息增益比</strong>：</p>
<p><span class="math display">\[
g_R(D, A) = \frac{g(D, A)}{H_A(D)}
\]</span></p>
<p>将 ID3 算法之中的信息增益换成信息增益比则得到 C4.5 算法。</p>
<p>这种方法生成的决策树可能产生过拟合，所以需要一定程度上的剪枝。剪枝的基本流程在于找到一个父节点，剪取其下一代后将其作为新的叶子节点，其类型标记为其原来对应的子树中量最大的类。</p>
<p>在数据量足够大的时候，可以使用验证集进行剪枝，也就是不断使用验证集剪枝直到性能下降。如果数据量不够，则使用训练集，从下往上缩节点，直到损失函数回升。损失函数定义：</p>
<p><span class="math display">\[
C_a(T) = \sum_{t = 1}^{|T|}N_tH_t(T) + a|T|
\]</span></p>
<p>这里经验熵定义为：</p>
<p><span class="math display">\[
H_t(T) = -\sum_k \frac{N_{tk}}{N_t}\log\frac{N_{tk}}{N_t}
\]</span></p>
<p>这里某一个节点 <span class="math inline">\(t\)</span> 的样本数为 <span class="math inline">\(N_t\)</span>，其中 <span class="math inline">\(k\)</span> 类的样本数为 <span class="math inline">\(N_{tk}\)</span>。</p>
<h2 id="神经网络与深度学习">神经网络与深度学习</h2>
<h3 id="基本神经元结构">基本神经元结构</h3>
<p>一个神经网络中的神经元一般接受多个输出并产生一个输出，一般而言其数学表达为：</p>
<p><span class="math display">\[
y = g\left(\sum_{i = 1}^n w_ix_i + b\right)
\]</span></p>
<p>这里函数 <span class="math inline">\(g\)</span> 一般是非线性的，称为<strong>激活函数</strong>。激活函数常见的有 sigmoid 等。</p>
<h3 id="反向传播算法bp">反向传播算法（BP）</h3>
<p>训练一个多层神经网络可以分为两步，首先是正向从输入计算出输出，和标准输出对比，算出损失函数（衡量实际输出和标准输出的差别），这是<strong>正向传播</strong>。之后就是根据差别的大小，计算出网络中各个权重对最终输出的偏导数，从而更新权重值，这是<strong>反向传播</strong>。</p>
<p>一般而言我们常常使用均方误差评价输出，也就是说对于某一层神经元以及某一个样本 <span class="math inline">\(d\)</span>，标记其中第 <span class="math inline">\(j\)</span> 个神经元的实际输出为 <span class="math inline">\(o_j\)</span>，理想输出为 <span class="math inline">\(t_j\)</span>，那么损失函数为：</p>
<p><span class="math display">\[
E_d(\boldsymbol w) = \frac{1}{2}\sum_j (t_j - o_j)^2
\]</span></p>
<p>根据损失函数，权重 <span class="math inline">\(w_{ji}\)</span>（第 <span class="math inline">\(j\)</span> 个神经元对第 <span class="math inline">\(i\)</span> 个输入的权重）的更新量为：</p>
<p><span class="math display">\[
\Delta w_{ji} = -\eta\frac{\partial E_d}{\partial w_{ji}}
\]</span></p>
<p>这里 <span class="math inline">\(0 &lt; \eta &lt; 1\)</span> 称为<strong>学习率</strong>。</p>
<p>我们设置一个中间量：</p>
<p><span class="math display">\[
n_j := \sum_iw_{ji}x_{ji} + b_j
\]</span></p>
<p>也就是未激活的神经元输出。那么我们知道：</p>
<p><span class="math display">\[
\frac{\partial E_d}{\partial w_{ji}} = \frac{\partial E_d}{\partial n_j}\frac{\partial n_j}{\partial w_{ji}} = \frac{\partial E_d}{\partial n_j}x_{ji}
\]</span></p>
<p>下面我们对输出层和隐含层分别计算损失函数对未激活输出的偏导数。</p>
<p>如果该层为输出层，那么我们进一步展开：</p>
<p><span class="math display">\[
\frac{\partial E_d}{\partial n_j} = \frac{\partial E_d}{\partial o_j}\frac{\partial o_j}{\partial n_j} = \frac{\partial}{\partial o_j}\left(\frac{1}{2}\sum_k(t_k - o_k)^2\right)\frac{\partial \sigma(n_j)}{\partial n_j} = -(t_j - o_j)o_j(1-o_j)
\]</span></p>
<p>这里默认激活函数为 sigmoid 函数。</p>
<p>如果该层为隐藏层，我们记其下游层的神经元构成集合 <span class="math inline">\(D\)</span>。作如下展开：</p>
<p><span class="math display">\[
\begin{aligned}
\frac{\partial E_d}{\partial n_j} &amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}\frac{\partial n_k}{\partial o_j}\frac{\partial o_j}{\partial n_j} \\
&amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}\frac{\partial}{\partial o_j}\left(\sum_l w_{kj}o_j + b\right)\frac{\partial\sigma(n_j)}{\partial n_j} \\
&amp;= \sum_{k \in D}\frac{\partial E_d}{\partial n_k}w_{kj}o_j(1 - o_j) \\
&amp;= o_j(1 - o_j)\sum_{k \in D}\frac{\partial E_d}{\partial n_k}w_{kj}
\end{aligned}
\]</span></p>
<p>这里还有一项偏导数实则可以继续按照上述的方式递推计算，直到计算到输出层。</p>
<p>这里额外提一下，均方误差只是一个选择，在分类问题中，更常用的是<strong>交叉熵误差</strong>：</p>
<p><span class="math display">\[
H_\boldsymbol t(\boldsymbol o) = -\sum_i t_i\log(o_i)
\]</span></p>
<h3 id="过拟合问题与正则化">过拟合问题与正则化</h3>
<p>过拟合问题在之前有过说明，在深度学习之中减少过拟合的一个方法就是在损失函数之中加入正则项：</p>
<p><span class="math display">\[
E_d(\boldsymbol w) = \frac{1}{2}\sum_k(t_k - o_k)^2 + \|\boldsymbol w\|
\]</span></p>
<p>另外还有引入 Dropout 以及引入验证集的方式，这里均不展开。</p>
<h3 id="卷积神经网络cnn">卷积神经网络（CNN）</h3>
<p><code>TODO</code></p>
<h3 id="循环神经网络rnn">循环神经网络（RNN）</h3>
<p><code>TODO</code></p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《计算机网络原理》学习笔记</title>
    <url>/2021/09/13/note-of-net/</url>
    <content><![CDATA[<p>网原总之是一个没打算认真学的专业课，因为真的对网络没有很大的兴趣。再加上上学期曾经看着迅哥哥他们被网原折磨，自己也没什么信心能学好这门专业课。</p>
<p>这个笔记完全基于上一届流传下来的《网原干饭背诵》，在此基础上对重点做一些标记做一些讲解，反正是个背书课，那么就只能一点一点背了。根据前人经验，这个笔记会把比较重要的东西用星号标注出来。</p>
<span id="more"></span>
<h1 id="计算机网络的历史和新进展">计算机网络的历史和新进展</h1>
<h2 id="背诵-1-网络基础">【背诵 1 】网络基础</h2>
<ul>
<li><p>网络所提供的最基本服务为<strong>信息传递</strong>，不同的网络依据其提供的服务进行区分。而区分服务的依据则包括功能、延迟、带宽等各种<strong>外部特性</strong>。</p></li>
<li><p>网络依据<strong>空间距离</strong>可以分为局域网（LAN）、城域网（MAN）、广域网（WAN）和个域网（PAN）。依据<strong>信息类型</strong>可以分为数据网络、电话网络。依据<strong>应用类型</strong>可以分为专用网络、通用网络。依据<strong>使用权</strong>可以分为私有网络、公用网络。同时，网络也可以按照使用的协议进行分类，如 IP 协议等。</p></li>
</ul>
<h2 id="背诵-2-计算机网络发展历史">【背诵 2 】计算机网络发展历史</h2>
<p>计算机网络的历史可以大致描述为：</p>
<ul>
<li>1940 年代，第一个计算机 ENIAC 诞生</li>
<li>1950 年代，大型机和多终端系统诞生</li>
<li>1960 - 1964 年，分组交换网络诞生（Paul Baran）</li>
<li>1960 年代，计算机网络研究开始</li>
<li>* 1969 年，ARPANET 研究启动</li>
<li>1970 年代，计算机网络发展
<ul>
<li>各国电信部门建设运行 X.25 分组交换网</li>
<li>SNA 以及 DNA 等专用网络体系结构出现</li>
<li>Internet 的前身 ARPANET 进行实验运行，带宽小且仅有不到 100 台计算机接入</li>
<li>* 以太网和 Telnet 出现</li>
<li>* 1979 年，TCP/IP 协议成熟</li>
</ul></li>
<li>1980 年代，计算机网络逐步成型
<ul>
<li>标准化的计算机网络体系结构 ISO/OSI 出现</li>
<li>局域网 LAN 技术发展</li>
<li>FTP、NFS、E-mail、USENET 等技术出现</li>
<li>1980 - 1983 年，ARPANET 和 MILNET 分离，前者采用 TCP/IP 协议</li>
<li>1983 年，BSD UNIX 内置 TCP/IP 协议</li>
<li>1985 - 1986 年，NSFNET 建成，用于连接 6 个超级计算中心</li>
<li>1987 - 1990 年，NSFNET 开始连接地区网络</li>
<li>Internet 初具规模，1987 年，中国第一个电子邮件发送到 Internet</li>
<li>中国开始依赖电话线建立低速广域网</li>
</ul></li>
<li>1990 年代，计算机网络进一步发展
<ul>
<li>Internet 商业化，在中国也得到了广泛应用</li>
<li>Web 技术在 Internet 上得到广泛应用</li>
<li>中国出现局域网，如 Novell 等</li>
<li>1990 - 1992 年，NSFNET 带宽提高，连接了 16 个地区网络</li>
<li>1994 年，NSFNET 骨干网解体，出现了若干其他的商用骨干网</li>
<li>1995 年，中国教育和科研网 CERNET 出现</li>
</ul></li>
<li>2000 年代，计算机网络广泛应用
<ul>
<li>网络应用发展迅速，搜索引擎和社交网络出现</li>
<li>移动互联网产业快速发展</li>
<li>2006 年，与 IPv6 相关的 CNGI-CERNET2 出现</li>
</ul></li>
<li>最近，数据中心网络、天地一体化网络、 IPv6 技术等快速发展
<ul>
<li>2011 年开始设立 World IPv6 Day</li>
<li>2011 年 2 月 3 日，全球互联网名称与数字地址分配机构 ICANN 宣布 IPv4 地址耗尽</li>
</ul></li>
</ul>
<h2 id="背诵-3-internet-技术">【背诵 3 】 Internet 技术</h2>
<ul>
<li>Internet 是全球范围的、通用的、异构的公用计算机网络</li>
<li>Internet 是其他类型的计算机网络技术的基础，如企业内部网（Intranet）</li>
<li>Internet 开放的标准由 IETF 负责制定、维护和协调。其他类似 IRTF、IAB、IESG 等机构也参与了标准的维护
<ul>
<li>IETF 全称 Internet Engineering Task Force，其分为若干个工作组（WG），其提交的 Internet 标准被称为 RFC，即 Request For Comments</li>
<li>IRTF 全称 Internet Researching Task Force，由各类专注某一个领域的研究小组组成</li>
<li>IAB 全称 Internet Architecture Board，负责定义 Internet 的大体框架，为 IETF 提供方向上的指导</li>
<li>IESG 全称 Internet Engineering Steering Group，负责在技术方面上管理 IETF 的活动</li>
</ul></li>
<li>Internet 是历史上发展最快的一种技术，其发展速度甚至超越摩尔定律</li>
</ul>
<h2 id="背诵-4-网络时代三大定律">【背诵 4 】网络时代三大定律</h2>
<ul>
<li>【摩尔定律】 CPU 性能每 18 个月会翻番，每 10 年翻 100 倍</li>
<li>【光纤定律】也称超摩尔定律，骨干网带宽每 9 个月会翻番。每 10 年翻 10000 倍</li>
<li>【麦特卡菲定律】也称联网定律，网络价值和用户数量的平方成正比</li>
</ul>
<h2 id="理解-1-分组交换技术">【理解 1 】分组交换技术</h2>
<p>Paul Baran 在设计能承受核攻击的通信系统的时候，确立了三个设计准则。</p>
<ul>
<li>自适应系统的<strong>热土豆路由策略</strong>（能够学习并适应各种新的环境）
<ul>
<li>如果不知道正确的路由，就将分组转发给所有邻居</li>
<li>通过观察路过的分组来更新路由表，旧的路由表项会被删除</li>
<li>尽可能快地转发分组，分组途径的路径并不一定是最短路径</li>
</ul></li>
<li>分组发送策略（端节点能够容忍错误并恢复）
<ul>
<li>每个节点根据自我的路由表决定如何转发分组</li>
<li>每个分组的转发完全独立于其他的分组</li>
<li>交换节点不保存端节点信息，这一点让网络的可拓展性大大增强</li>
</ul></li>
<li>分布式策略
<ul>
<li>所有交换节点平等，避免单一节点失效问题</li>
<li>通过物理硬件冗余和自适应路由实现系统稳健性</li>
</ul></li>
</ul>
<p>而 Internet 就是这一类网络。Internet 连接了各种异构的子网，提供两个最基本的功能，即全球唯一地址和分组通过动态路由传输。</p>
<p>分组交换技术具有相当多的优点，包括：</p>
<ul>
<li>简单性
<ul>
<li>每个分组自身携带信息</li>
<li>一个路由表可以为所有的流量服务</li>
<li>可以适应快速增长的网络规模</li>
</ul></li>
<li>灵活性
<ul>
<li>可以在各种物理底层上运行</li>
<li>可以支持各种网络应用</li>
</ul></li>
<li>可扩展性
<ul>
<li>可以应对端系统的增加</li>
<li>可以应对流量的增加</li>
<li>可以应对网络规模增大带来的路由表增大和路由频繁变化</li>
</ul></li>
<li>健壮性
<ul>
<li>默认了网络结构变化是正常现象</li>
<li>牺牲一定的效率换取网络的稳定</li>
</ul></li>
</ul>
<h2 id="背诵-5-今日互联网">【背诵 5 】今日互联网</h2>
<ul>
<li>今日的互联网具有更大的规模和更多的用户，而且支持更多的功能，具有更高的价值，但是其健壮性、适应性和互联程度都下降了</li>
<li>当今互联网面临的一个问题就是 IPv4 地址耗尽，而目前缓解这个问题地方案是<strong>网络地址转换协议（Network Address Translation / NAT）</strong>
<ul>
<li>NAT 缓解了地址耗尽的问题，增强了安全性和控制性</li>
<li>但是另外一方面却打破了 Internet 中地址唯一的假设</li>
<li>端到端的分组传输路径变成多个 NAT 域的级联，相当于虚电路</li>
<li>为了恢复 Internet 的原有结构，目前正在推进 IPv6 技术</li>
</ul></li>
</ul>
<h2 id="杂项-1-未分类知识点">【杂项 1 】未分类知识点</h2>
<ul>
<li>二十世纪后期人类两项最伟大的战略工程为<strong>星球大战计划</strong>和<strong>互联网计划</strong>。目前互联网已经发展为继海、陆、空、天之后的<strong>第五空间</strong>。</li>
</ul>
<h1 id="计算机网络体系结构">计算机网络体系结构</h1>
<h2 id="背诵-6-计算机网络的定义和组成">【背诵 6 】计算机网络的定义和组成</h2>
<ul>
<li>计算机网络定义为若干独立自治的计算机系统的互联集合体
<ul>
<li>计算机网络和分布式系统不同，分布式系统虽然也是由若干个计算机系统组成，但其具有<strong>内聚性</strong>和<strong>透明性</strong>，故分布式系统呈现给用户的更像是一台计算机。计算机网络则明显分立，在用户的视角依然是若干不同的计算机</li>
<li>目前分布式系统和计算机网络有合流的趋势，两者正在走向统一</li>
</ul></li>
<li>计算机网络有两级组成，即<strong>资源子网</strong>和<strong>通信子网</strong>。资源子网常常是服务器或者用户计算机，而通信子网常常是通信线路等信道和路由器、交换机等网络互联设备</li>
<li>计算机网络之中的通信通常有两种，即<strong>交换式通信</strong>和<strong>广播式通信</strong>
<ul>
<li>交换式通信又称<strong>点对点通信</strong>
<ul>
<li>需要经过交换设备，将消息转发给一个或一组结点</li>
<li>交换设备根据需要选择输出</li>
<li>网络典型的拓扑结构包括 star / ring(loop) / tree / complete / intersecting rings / irregular</li>
<li>关键技术是<strong>路由选择</strong></li>
</ul></li>
<li>广播式通信
<ul>
<li>多台计算机共享通信线路</li>
<li>任一台计算机发出的信息可以直接被其它计算机接收</li>
<li>网络典型的拓扑结构包括 bus / ring(loop)</li>
<li>关键技术是<strong>通道分配</strong>
<ul>
<li>静态分配，即分时间片。特点是控制简单，但通道利用率低</li>
<li>动态分配，即各站点动态使用通道。特点是控制复杂，但通道利用率高。通道分配方法有两种。集中式指的是只有一个仲裁机构，分布式指的是各站点均有仲裁机构</li>
</ul></li>
</ul></li>
<li>传统的 LAN 一般使用广播式通信，而 MAN 和 WAN 一般使用交换式通信。现代的 LAN 中交换式通信的应用正在增多</li>
</ul></li>
</ul>
<h2 id="理解-2-计算机网络体系结构">【理解 2 】计算机网络体系结构</h2>
<ul>
<li>计算机网络体系结构指的是对计算机网络及其部件所完成功能的比较精确的定义，即从功能的角度描述计算机网络的结构，是<strong>层次和层间关系</strong>的集合。但体系结构只会从功能上定义网络，并不会定义协议的细节和接口关系
<ul>
<li>现代计算机网络体系架构指出，计算机网络的基本功能是为地理位置不同的计算机用户之间提供访问通路，并且应当提供若干功能（具体功能列表见 PPT），这些功能中最重要的是<strong>通信功能</strong></li>
<li>这些功能的特征是<strong>分层</strong>，也就是说计算机网络中提供的功能是分成层次的</li>
<li>位于不同计算机上进行对话的同一层通信各方可分别看成是一种进程，称为<strong>对等（同等）进程</strong></li>
</ul></li>
<li>计算机网络分层的体系结构有三个重要的概念，即协议、服务和接口
<ul>
<li>计算机网络体系结构定义了计算机网络的功能是分层次的，而协议（Protocol）就是计算机网络同等层次中，通信双方进行信息交换时必须遵守的规则
<ul>
<li>协议由三部分组成
<ul>
<li>语法（Syntax）部分。即以二进制形式表示的命令和相应的结构</li>
<li>语义（Semantics）部分。即发出的命令请求，完成的动作和回送的响应组成的集合</li>
<li>定时关系（Timing）部分。即有关事件顺序的说明</li>
</ul></li>
<li>网络体系结构的分层决定了协议的分层，协议的分层构成了<strong>洋葱结构</strong>
<ul>
<li>目的主机某一层收到的报文与源主机同一层发出的报文相同</li>
<li>协议分层要保证整个通信系统功能完备高效</li>
</ul></li>
</ul></li>
<li>协议定义了不同计算机同层次之间的关系，而服务（Service）定义同一个计算机的上下层之间的交换信息时必须遵守的规则
<ul>
<li>服务有两种，即面向连接的服务和无连接服务。
<ul>
<li>在使用面向连接的服务进行传输的时候，首先需要建立连接，然后使用这个连接传递数据，使用完毕需要关闭连接。这类服务的顺序性较好</li>
<li>在使用无连接服务的时候，不建立连接，直接通过服务发送数据每个包都需要独立确定路由。这类服务的顺序性较差</li>
<li>需要注意，连接并不意味着可靠，可靠性依然需要通过确认、重传等机制进行保证</li>
</ul></li>
<li>服务在形式上需要通过一组服务原语（Primitive）规定。原语可以分为四类，即请求、指示、响应、确认</li>
</ul></li>
<li>在同一个计算机之中相邻层之间都有一个接口（Interface），它定义了下层向上层提供的原语操作和服务</li>
</ul></li>
<li>基于三大基本概念，计算机网络体系结构的具体实现大致为
<ul>
<li>服务访问点（Service Access Point / SAP）
<ul>
<li>任何的层间服务都是在接口的 SAP 上完成的</li>
<li>每一个 SAP 都有唯一的识别地址</li>
<li>每一个层间接口可以具有多个 SAP</li>
</ul></li>
<li>接口数据单元（Interface Data Unit / IDU）
<ul>
<li>IDU 是通过 SAP 传递的层间信息单元（上下传输）</li>
<li>IDU 的构成是上一层的服务数据单元（Service Data Unit / SDU）和接口控制信息（Interface Control Information / ICI）的拼接</li>
</ul></li>
<li>协议数据单元（Protocol Data Unit / PDU）
<ul>
<li>PDU 是在同层实体之间通过网络传输的信息单元（水平传输）</li>
<li>PDU 的构成是上一层的 SDU 或其分段和协议控制信息（Protocol Control Information / PCI）的拼接</li>
</ul></li>
<li>基于上述定义，计算机网络的工作类似于下述
<ul>
<li>当本层需要水平传输的时候，首先获得上层通过 SAP 传递的，由 SDU 和 ICI 拼接得到的 IDU。然后本层删除 ICI，将剩余的 SDU 拼接上 PCI 获得 PDU 并通过本层网络协议传输</li>
<li>当本层需要继续向下层传输的时候，首先获得上层的 IDU，这个从上层获得到本层的 IDU 在下层看来就是一个新的 SDU。本层随后直接拼接上新的 ICI 获得新的 IDU 向下传输。所以说，最上层产生的数据包向下传播的时候，会逐层添加各层控制信息。而底层接收的数据包向上传播的时候，会逐层把这些控制信息删去，获取最后的数据</li>
</ul></li>
</ul></li>
<li>分层的优点包括模块化、功能抽象、可复用。缺点是数据隐藏会导致可能的低效</li>
<li>计算机网络体系结构的设计中还有两个原则，分别称为<strong>端到端原则</strong>和 <strong>Rule of thumb</strong>
<ul>
<li>端到端原则的思想是底层需要尽可能简单，但是上层应用可以较为复杂（完成验证、纠错等工作），只有当这样的功能明显能提升功能的时候才会放在底层</li>
<li>Rule of thumb 的思想是，底层的新功能不能影响其他不使用这个新功能的部分</li>
</ul></li>
</ul>
<h2 id="理解-3-osi-和-tcpip-模型及其他网络模型">【理解 3 】 OSI 和 TCP/IP 模型及其他网络模型</h2>
<ul>
<li>模型建立的历史事件见 PPT</li>
<li>OSI 模型在 1983 年提出，模型分为七层，从下至上为
<ul>
<li>物理层，这一层包含基础网络硬件，在物理通信线路上传输二进制位（Bit）</li>
<li>数据链路层，这一层目标是在有差错的物理线路上传输无差错的数据帧（Frame）</li>
<li>网络层，这一层控制通信子网提供数据包（Packet）传输功能</li>
<li>传输层，这一层为用户提供端到端的数据传输功能</li>
<li>会话层，这一层为用户提供类似安全认证等会话控制服务</li>
<li>表示层，这一层为用户提供数据表示和数据转换功能</li>
<li>应用层</li>
</ul></li>
<li>TCP/IP 模型的提出早于 OSI 模型，且仅有四层：
<ul>
<li>Host-to-Internet 层，相当于 OSI 的物理层和数据链路层</li>
<li>Internet 层（网络层），控制通信子网提供源点到目的点的 IP 包传送，实现异构网络互联</li>
<li>传输层，提供端到端的数据传送服务，如 TCP 和 UDP</li>
<li>应用层，内部包含了 OSI 的会话层和表示层</li>
</ul></li>
<li>X.25 分组交换网在 70 年代提出，早于 OSI 模型，为公用包交换网与用户之间提供接口
<ul>
<li>该模型面向连接，支持交换虚电路和永久虚电路</li>
<li>物理层使用协议 X.21 以及 X.3 / X.28 / X.29</li>
<li>数据链路层使用协议 LAP 和 LAPB</li>
<li>网络层使用协议 PLP</li>
<li>该模型提出了以下名词 -（用户侧）数据终端设备（Digital Terminal Equipment / DTE）
<ul>
<li>数字线路设备（Digital Circuit Terminating Equipment / DCE）</li>
<li>打包解包设备（Packet Assembler and Disassembler / PAD）</li>
</ul></li>
</ul></li>
<li>Novell Netware 在 1983 年提出，在 2005 年终止开发
<ul>
<li>模型基于 client-server 结构，设计的基本思想是<strong>文件共享</strong>（同时期其它系统还基于磁盘共享，所以模型有一定先进性）</li>
<li>基于 XNS（Xeror Network System），网络层协议是不可靠无连接协议 IPX（Internet Packet Exchange），传输层协议是面向连接的 NCP（Netware Core Protocol）和 SPX（Sequenced Package Exchange）</li>
</ul></li>
<li>B-ISDN 即宽带综合业务数字网，其技术基础为 ATM 异步传输模式（Asynchronous Transfer Mode）
<ul>
<li>ATM 也是分组交换技术
<ul>
<li>异步传输，即不具有主时钟</li>
<li>传输单元为短而定长的信元（cell）</li>
<li>采用虚电路，面向连接</li>
<li>常见速率包括 155M 和 622M</li>
</ul></li>
</ul></li>
</ul>
<h2 id="杂项-2-未分类知识点">【杂项 2 】未分类知识点</h2>
<ul>
<li>美国的标准化组织包括 ANSI 和 NIST，中国的标准化组织包括 CCSA，行业标准则是 IEEE</li>
<li>计算机网络标准化，电信标准为 ITU 而国际标准则是 ISO</li>
<li>Internet 的标准是自发的，并非政府干预，每个标准诞生前都需要提出请求意见稿，即 RFC</li>
</ul>
<h1 id="数据通信基本原理">数据通信基本原理</h1>
<h2 id="理解-4-信号的傅里叶分析">【理解 4 】信号的傅里叶分析</h2>
<ul>
<li>注意网原里傅里叶级数的定义为：</li>
</ul>
<p><span class="math display">\[
g(t) = \frac12 c + \sum_{n = 1}^{+\infty} a_n\sin(2\pi f nt) + \sum_{n = 1}^{+\infty} b_n\cos(2\pi f nt)
\]</span></p>
<p>所以：</p>
<p><span class="math display">\[
\begin{aligned}
c &amp;= \frac2T \int_0^T g(t) {\rm d}t \\
a_n &amp;= \frac2T \int_0^T g(t)\sin(2\pi f nt) {\rm d}t \\
b_n &amp;= \frac2T \int_0^T g(t)\cos(2\pi f nt) {\rm d}t \\
\end{aligned}
\]</span></p>
<ul>
<li>一个信号所包含的信号频率范围为频谱（Spectrum），其宽度称为信号的绝对带宽（Definite bandwidth）。大部分信号有无穷的绝对带宽，但是其能量可能仅集中于某一个频段，这个频带的宽度称为有效带宽（Effective bandwidth），简称带宽</li>
<li>带宽越宽，信号的信息承载能力越强</li>
<li>信号在给定截止频率 <span class="math inline">\(f_c\)</span> 的信道传输的过程中，高于截止频率的频率分量的振幅衰减明显大于低于截止频率的</li>
<li>通过信道的谐波次数越多，信号越逼真</li>
</ul>
<h2 id="计算-1-信号传输基础计算">【计算 1 】信号传输基础计算</h2>
<ul>
<li>波特率指的是信号每秒钟变化的次数，也称调制速率</li>
<li>比特率指的是信号每秒钟传输的二进制位个数</li>
<li>波特率和比特率的关系取决于信号值与比特位的关系，如果每个信号值能表示 <span class="math inline">\(N\)</span> 个二进制位，那么比特率为波特率的 <span class="math inline">\(N\)</span> 倍</li>
<li>对于比特率为 <span class="math inline">\(B({\rm bps})\)</span> 的信道，如果 <span class="math inline">\(M\)</span> 个二进制位为一个周期，则波特率为 <span class="math inline">\(B/M({\rm baud})\)</span>，一次谐波的频率为 <span class="math inline">\(f_1 = B/M({\rm Hz})\)</span>（一次谐波指的是信号傅里叶级数中周期等于原信号周期的分量），能通过信道的最高次谐波次数为 <span class="math inline">\(N = f_c / f_1\)</span>，这里 <span class="math inline">\(f_c\)</span> 为信道的截止频率</li>
<li>信道的有限带宽限制了信号的传输速率，<strong>无噪声</strong>带宽为 <span class="math inline">\(H\)</span> 的信道传输有 <span class="math inline">\(V\)</span> 种电平状态的信号时，最高传输速率为：</li>
</ul>
<p><span class="math display">\[
v = 2H\log_2 V({\rm bps})
\]</span></p>
<ul>
<li>对于<strong>有噪声</strong>信道，其噪声功率为 <span class="math inline">\(N\)</span>，信号功率为 <span class="math inline">\(S\)</span>，其<strong>信噪比</strong>为：</li>
</ul>
<p><span class="math display">\[
x = 10\log_{10}\frac{S}{N}({\rm dB})
\]</span></p>
<p>一般电话系统的典型信噪比为 <span class="math inline">\(30({\rm dB})\)</span>。</p>
<p>带宽为 <span class="math inline">\(H({\rm Hz})\)</span>，信噪比为 <span class="math inline">\(S/N\)</span> 的任何信道的最大传输速率为：</p>
<p><span class="math display">\[
v = H\log_2\left(1 + \frac{S}{N}\right)({\rm bps})
\]</span></p>
<p>该传输速率为理论上限，实际很难达到。该传输速率与电平级数和采样速度无关</p>
<h2 id="背诵-7-传输方式分类">【背诵 7 】传输方式分类</h2>
<ul>
<li>数字传输、模拟传输
<ul>
<li>数字传输的优点是成本低，对噪声不敏感，缺点是易受衰减（频率越高越严重）</li>
</ul></li>
<li>并行传输、串行传输</li>
<li>点到点传输、点到多点传输
<ul>
<li>为适应不同的需要，通信线路采用不同的连接方式</li>
</ul></li>
<li>单工、半双工和全双工传输
<ul>
<li>单工传输：信息只能单向传输，监视信号可回送</li>
<li>半双工传输：信息可以双向传输，但在某一时刻只能单向传输</li>
<li>全双工传输：信息可以同时双向传输</li>
</ul></li>
<li>同步传输、异步传输
<ul>
<li>同步传输
<ul>
<li>传输以报文为基本单位</li>
<li>传输开始的时候需要传输<strong>同步字符</strong>让双方同步</li>
<li>可以不间断传输，传输效率较高但是需要<strong>透明传输处理</strong>，即传输的信息中不存在同步字符</li>
<li>接收方必须知道每一位信号的开始及其持续时间，以便正确的采样接收</li>
<li>基于<strong>二进制位</strong>的传输一般使用同步传输，信息以<strong>二进制位流</strong>为单位传送，传输过程中以<strong>位</strong>为单位同步，传输的开始和结束以特定的<strong>八位二进制位</strong>同步</li>
</ul></li>
<li>异步传输
<ul>
<li>需要辅助位，如起始位、奇偶校验位、终止位</li>
<li>传输效率低，主要用于字符终端与计算机之间的通信</li>
<li>传输字符时，信息传送以字符为单位</li>
</ul></li>
</ul></li>
</ul>
<h2 id="背诵-8-信号发送方式">【背诵 8 】信号发送方式</h2>
<ul>
<li>数据表示分为两种，即模拟数据和数字数据</li>
<li>数据传输方式中以信号为载体，分为模拟信号（模拟信道）和数字信号（数字信道）两种（见【背诵 7 】）</li>
<li>两种数据表示和两种数据传输方式对应形成四种信号发送方式：</li>
</ul>
<table>
<thead>
<tr class="header">
<th style="text-align: center;"></th>
<th style="text-align: center;">模拟数据</th>
<th style="text-align: center;">数字数据</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">模拟信道</td>
<td style="text-align: center;">电话系统</td>
<td style="text-align: center;">频带传输、调制解调器（Modem）</td>
</tr>
<tr class="even">
<td style="text-align: center;">数字信道</td>
<td style="text-align: center;">编码解码器（Codec）</td>
<td style="text-align: center;">基带传输、数字编码解码器</td>
</tr>
</tbody>
</table>
<ul>
<li>数字数据的数字传输
<ul>
<li>基带传输
<ul>
<li>基带指的是传输变换前所占用的频带，是原始信号所固有的频带</li>
<li>基带传输指的是在传输时直接使用基带信号，是一种基本的传输方式，适用于高速低速各种情况</li>
<li>其限制为因基带信号所带的频率成分很宽，所以对传输线有一定的要求</li>
</ul></li>
<li>编码方式
<ul>
<li>不归零制码（NRZ）
<ul>
<li>用高电平表示 1，用低电平表示 0</li>
<li>难以分辨某一位的开始或结束，所以发送和接受方都需要时钟同步</li>
<li>如果信号中 0 或者 1 连续出现，直流电平会叠加</li>
<li>容易产生传播错误</li>
</ul></li>
<li>曼彻斯特码（相位编码）
<ul>
<li>每个周期中间有一个跳变，由低到高为 0，由高到低为 1</li>
<li>克服了 NRZ 的不足，并且每个周期中间的跳变既是信息又是时钟，可以自同步</li>
</ul></li>
<li>差分曼彻斯特码
<ul>
<li>每个周期中间有一个跳变作为时钟</li>
<li>每个周期开始有跳变表示 0，没有跳变表示 1</li>
<li>时钟、数据相分离，便于提取</li>
<li>差分曼彻斯特注意分类讨论初始时是高电平还是低电平</li>
</ul></li>
<li>逢 0 变化 NRZ
<ul>
<li>每个周期开始有跳变表示 0，没有跳变表示 1</li>
<li>每个周期中间没有跳变</li>
<li>注意讨论初始时的电平</li>
</ul></li>
<li>逢 1 变化 NRZ
<ul>
<li>每个周期开始有跳变表示 1，没有跳变表示 0</li>
<li>每个周期中间没有跳变</li>
<li>注意讨论初始时的电平</li>
</ul></li>
</ul></li>
</ul></li>
<li>数字数据的模拟传输
<ul>
<li>频带传输
<ul>
<li>在一定频率范围内的线路上，进行载波传输</li>
<li>用基带信号对载波进行调制，使其变为适合于线路传送的信号</li>
<li>调制指的是用基带脉冲控制载波参数，使得这些参数反应基带脉冲信息</li>
<li>使用调制解调器</li>
</ul></li>
<li>调制技术
<ul>
<li>幅移键控法（调幅 / ASK），即根据基带脉冲调整载波振幅</li>
<li>频移键控法（调频 / FSK），即根据基带脉冲调整载波频率</li>
<li>相移键控法（调相 / PSK），即根据基带脉冲调整载波相位</li>
</ul></li>
</ul></li>
<li>模拟数据的数字传输
<ul>
<li>脉冲代码调制 PCM 技术
<ul>
<li>根据 Nyquist 原理进行采样</li>
<li>将模拟信号的振幅分为 <span class="math inline">\(2^n\)</span> 级，每一个采样点用 <span class="math inline">\(n\)</span> 位二进制位表示</li>
<li>贝尔系统的 T1 载波每个采样点用 7 位二进制表示</li>
</ul></li>
<li>差分脉冲代码调制
<ul>
<li>与 PCM 数字化振幅不同，差分脉冲代码调制数字化的是相邻采样点的振幅差值</li>
<li>可以使用较少的二进制位表示</li>
</ul></li>
<li><span class="math inline">\(\delta\)</span> 调制
<ul>
<li>根据每个采样值与前一个值之间的差来决定输出 1 还是 0</li>
<li>编码速度可能无法跟上变化较快的模拟信号</li>
</ul></li>
</ul></li>
</ul>
<h2 id="背诵-9-多路复用技术">【背诵 9 】多路复用技术</h2>
<ul>
<li>使得多路信号同时使用一条物理线路的技术,允许用户使用一个共享信道进行通信，避免相互干扰，降低成本，提高利用率</li>
<li>多路复用技术分类
<ul>
<li>时分复用（TDM）
<ul>
<li>T1 载波电话系统分为 24 个信道，每个 <span class="math inline">\(64({\rm Kbps})\)</span>，一共 <span class="math inline">\(1.544({\rm Mbps})\)</span>，控制信息带内传输</li>
</ul></li>
<li>频分复用（FDM）
<ul>
<li>频率分割为频段，多用于手机通信</li>
</ul></li>
<li>波分复用（WDM）
<ul>
<li>光传输使用，对波长分段，是特殊的频分复用</li>
</ul></li>
</ul></li>
</ul>
<h2 id="背诵-10-交换技术">【背诵 10 】交换技术</h2>
<ul>
<li>计算机网络通信分为交换式和广播式</li>
<li>交换是在多结点通信网络中，为有效利用通信设备和线路，动态接通、断开、切换通信线路</li>
<li>交换技术分类
<ul>
<li>电路交换
<ul>
<li>直接利用可以切换的物理电路动态调整通信线路</li>
<li>分为建立电路、传输数据、拆除电路三个阶段</li>
<li>在发送数据前，必须建立起点到点的物理通路。建立物理通路时间较长，数据传送延迟较短</li>
<li>电话网和 ISDN 采用电路交换</li>
<li>电路交换一般采用时分复用
<ul>
<li>时间被分为帧（Frame），帧被分为时槽（Slot）</li>
<li>时槽在帧内的相对位置决定这个槽所传输数据所属的会话</li>
<li>发送方和接收方间需要同步</li>
<li>非永久会话需要动态绑定时槽到一个会话</li>
</ul></li>
</ul></li>
<li>报文交换（存储转发方式）
<ul>
<li>信息以报文（逻辑上完整的信息段）为单位进行存储转发</li>
<li>线路利用率高、要求中间结点（网络通信设备）缓冲大、延迟时间长</li>
</ul></li>
<li>分组交换（包交换）
<ul>
<li>分组是一种报文还小的信息段，可定长也可变长。分组交换中信息以分组为单位进行存储转发。源结点把报文分为分组，在中间结点存储转发，目的结点把分组合成报文。用附加的分组头来区分数据</li>
<li>特点
<ul>
<li>每个分组头包括源地址和目的地址，独立进行路由选择
<ul>
<li>所以不保证到达顺序</li>
</ul></li>
<li>网络结点设备中不预先分配资源，使用统计复用，线路利用率高
<ul>
<li>相比于电路交换最明显的优势</li>
</ul></li>
<li>易于重传，可靠性高</li>
<li>易于开始新的传输，让紧急信息优先通过</li>
<li>开销增加</li>
<li>需要处理拥塞问题
<ul>
<li>需要复杂的路由器，难以保证端到端的服务质量</li>
</ul></li>
</ul></li>
<li>分组交换分为虚电路分组交换和数据报分组交换
<ul>
<li>数据报分组交换（如 IP Networks）
<ul>
<li>每个分组均带有网络地址（源、目的），可走不同的路径</li>
</ul></li>
<li>虚电路分组交换（如 ATM Networks）
<ul>
<li>其是电路交换和分组交换的结合
<ul>
<li>数据以分组形式传输，来自同一流的分组通过一个预先建立的路径（虚电路）传输</li>
<li>确保分组的顺序，但是来自不同虚电路的分组可能会交错在一起</li>
</ul></li>
<li>分三个阶段
<ul>
<li>建立：发带有全称网络地址的呼叫分组，建立虚电路</li>
<li>传输：沿建立好的虚电路传输数据</li>
<li>拆除：拆除虚电路</li>
</ul></li>
<li>分组头不需要包含完整的地址信息，路由器需要维护虚电路的状态信息</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li>电路交换、报文交换、分组交换的时序图如下。其中电路交换要逐层申请预留占用资源，这段申请时间用于<strong>寻找出境中继线</strong>，申请完毕后节点会占用这段传输线</li>
</ul>
<p><img src="/uploads/note-of-net/1.png" /></p>
<ul>
<li>三类交换技术的特点
<ul>
<li>电路交换适用于实时信息和模拟信号传送，在线路带宽比较低的情况下使用比较经济</li>
<li>报文交换适用于线路带宽比较高的情况，可靠灵活，但延迟大</li>
<li>分组交换缩短了延迟，也能满足一般的实时信息传送。在高带宽的通信中更为经济、合理、可靠。是目前公认较好的一种交换技术</li>
<li>电路交换和分组交换可以结合，如 IP over SONET 以及 IP over Frame Relay</li>
</ul></li>
</ul>
<h2 id="背诵-11-交换结构">【背诵 11 】交换结构</h2>
<ul>
<li>Crossbar 交换结构：无阻塞内部交换</li>
<li>空分交换：多个 Crossbar 互联，有无阻塞均可</li>
<li>时分交换：高效处理</li>
</ul>
<h2 id="杂项-3-未分类知识点">【杂项 3 】未分类知识点</h2>
<ul>
<li>数据通信技术由编码技术、多路复用和交换技术构成</li>
</ul>
<h1 id="物理层接口及其协议">物理层接口及其协议</h1>
<h2 id="背诵-12-物理层的定义与功能">【背诵 12 】物理层的定义与功能</h2>
<ul>
<li>物理层提供机械的、电气的、功能的和规程的特性，目的是启动、维护和关闭<strong>数据链路实体</strong>之间进行<strong>比特传输</strong>的<strong>物理连接</strong>。这种连接可能通过中继系统，在中继系统内的传输也是在物理层</li>
<li>物理层的功能是在两个网络设备之间提供透明的比特流传输</li>
<li>物理层的传输方式
<ul>
<li>连接方式（点到点，点到多点）</li>
<li>通信方式（单工，半双工，全双工）</li>
<li>位传输方式（串行，并行）</li>
</ul></li>
<li>物理层的重要特性
<ul>
<li>机械特性（Mechanical characteristics）
<ul>
<li>定义物理连接的边界点，即接插装置</li>
<li>规定物理连接时所采用的规格、引脚的数量和排列情况</li>
</ul></li>
<li>电气特性（Electrical characteristics）
<ul>
<li>规定传输二进制位时，线路上信号的电压高低、阻抗匹配、传输速率和距离限制</li>
</ul></li>
<li>功能特性（Functional characteristics）
<ul>
<li>主要定义各条物理线路的功能，比如数据、控制、定时、地线</li>
</ul></li>
<li>规程特性（Procedural characteristics）
<ul>
<li>主要定义各条物理线路的工作规程和时序关系</li>
</ul></li>
</ul></li>
</ul>
<h2 id="背诵-13-物理层传输介质">【背诵 13 】物理层传输介质</h2>
<ul>
<li>双绞线。既可以用于模拟传输，也可以用于数字传输，带宽依赖于线的类型和传输距离</li>
<li>同轴电缆
<ul>
<li>基带同轴电缆，用于数字传输（数字数据数字传输用基带传输）</li>
<li>宽带同轴电缆，用于模拟传输（模拟数据数字传输用频带传输）</li>
</ul></li>
<li>光纤
<ul>
<li>分为单模光纤和多模光纤，两者都支持波分复用，使用的波长越长衰减越小，但成本也越高
<ul>
<li>单模光纤只有一个入射角度，半径小，适合<strong>长距离传输</strong></li>
<li>多模光纤有多个入射角度，半径大，适合短距离传输</li>
</ul></li>
<li>光纤组网
<ul>
<li>点到点，使用四根线，两根用于保护倒换</li>
<li>环，使用两根线，一根用于保护倒换</li>
</ul></li>
<li>光纤中继器。分为光电光式和全光式
<ul>
<li>全光网具有光因特网论坛 OIF</li>
</ul></li>
</ul></li>
</ul>
<h2 id="背诵-14-sonet-sdh-网络传输技术">【背诵 14 】 SONET / SDH 网络传输技术</h2>
<ul>
<li>80 年代提出，应用<strong>时分复用</strong>技术，同步传输，有主时钟控制</li>
<li>SONET 路径为：路径（Path）、线路（Line）、段（Section）</li>
<li>基于<strong>字节</strong>的复用。但是 OC-3c 中的 c 表示<strong>级联</strong>而非复用</li>
</ul>
<h2 id="背诵-15-移动电话网络传输技术">【背诵 15 】移动电话网络传输技术</h2>
<ul>
<li>单方向的寻呼系统
<ul>
<li>寻呼过程
<ul>
<li>打电话给寻呼公司，输入寻呼机号码</li>
<li>寻呼公司的计算机收到请求，通过线路传到高处的天线</li>
<li>天线直接广播信号（本地寻呼），或传递给卫星（异地寻呼），卫星再广播</li>
</ul></li>
<li>单向系统</li>
<li>需要很小的带宽</li>
</ul></li>
<li>蜂窝电话
<ul>
<li>1G：模拟蜂窝电话，只能传送话音</li>
<li>2G：数字蜂窝电话，主要传送话音，相关概念有 GSM 和 CDMA</li>
<li>3G / 4G：可以传送话音和数据</li>
</ul></li>
<li>模拟蜂窝电话
<ul>
<li>Push-to-talk system。早期用于军事通信，单信道，半双工系统</li>
<li>IMTS。双频，全双工系统</li>
<li>AMPS。使用小蜂窝，蜂窝中心有基站，不相邻且相近的蜂窝中<strong>重用频率</strong></li>
</ul></li>
</ul>
<div class="note warning"><p>网原实在是看不会了，这个笔记也就到此为止吧。</p>
</div>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>Next.js 框架摸索实录</title>
    <url>/2022/11/24/note-of-next/</url>
    <content><![CDATA[<p>在出软工小作业的时候遇到了 React Router 配置和跨域问题，虽然这两个都不是什么大问题，我也不是不会解决，但是要是出到作业里面，势必会导致我要写好多文档还要写很多讲解。这个时候 yfgg 告诉我 Next.js 框架好之又好，昨天稍微试了一下感觉确实不错，所以就吃了安利迁移到了 Next.js 框架。但是今天接着写的时候，还是发现不少细节是需要注意的，这里就当备忘了。</p>
<span id="more"></span>
<h1 id="初始配置">初始配置</h1>
<p>由于 Next.js 自己带了不少初始配置，所以加东西的时候不一定每个都需要自己从头再来，完全可以用官方模板。</p>
<p>我出的小作业采用 Next.js + TypeScript + ESLint + Jest，这一整套模板也正在编写，到时候可以开放给同学们直接下载。</p>
<h1 id="csr-还是-ssr">CSR 还是 SSR</h1>
<p>Next.js 框架的一大优势就在 SSR。然而说实话我自己也没有特别明白 SSR 之类的概念，所以昨晚花了点时间学了一下。</p>
<p>最早期的前后端耦合应用实际上就采用 SSR，即 <strong>S</strong>erver <strong>S</strong>ide <strong>R</strong>ender，服务端渲染。当时严格而言就没有前端这个概念，服务器直接将渲染好的 HTML 扔给浏览器就结束了。</p>
<p>而随着前后端分离开发概念的出现，Vue、React 等框架逐渐采用 CSR，即 <strong>C</strong>lient <strong>S</strong>ide <strong>R</strong>ender，客户端渲染。CSR 中，数据交互大致可以描述为：</p>
<ul>
<li>浏览器向前端服务器请求模板 HTML（或者说空缺关键数据的 HTML），这些 HTML 中携带获取关键数据的脚本</li>
<li>浏览器渲染模板 HTML，执行获取数据的脚本，向后端服务器请求关键数据</li>
<li>浏览器获得关键数据后，调整 DOM 展示最终页面</li>
</ul>
<p>CSR 比较大的问题有两点：</p>
<ul>
<li>如果后端服务器响应慢或者数据量大，模板 HTML 在页面上留存时间长，表现为 Loading 界面或者白屏，严重削弱用户体验</li>
<li>爬虫难以处理这类网页，对搜索引擎的优化（<strong>S</strong>earch <strong>E</strong>ngine <strong>O</strong>pimization，简称 SEO）困难，导致网页宣传效果不佳</li>
</ul>
<p>但就开发环节而言，开发需要不断处理白屏问题，不断在组件中设置 <code>refreshing</code> 状态实际上比较浪费开发时间。</p>
<p>而现代优化过的 SSR 则相应做出了部分解决，其基本思路为：</p>
<ul>
<li>浏览器向前端服务器请求页面</li>
<li>前端服务器向后端服务器请求关键数据，获取数据后根据自己已有的模板 HTML 渲染出完整 HTML 发回浏览器</li>
<li>浏览器直接渲染出完整页面</li>
</ul>
<p>首先，浏览器不会收到缺失数据的 HTML，这样就从根源上解决白屏问题。进一步，由于服务端的算力和内网传输速度一般高于客户端算力和外网传输速度，所以渲染出最终 HTML 的时间相应缩短。另外，由于客户端能够直接得到完整 HTML，所以 SEO 也是简单的。</p>
<p>然而 SSR 显然也是有问题的：</p>
<ul>
<li>服务器端压力极大，对于多并发情况处理无力</li>
<li>针对每个用户都需要重新渲染完整 HTML，重复计算问题严重</li>
</ul>
<p>其中第二个问题实际上比较重要，如果某个网页和客户端具体信息无关，也就是说任何客户端都收到相同内容，那么这种 SSR 实际上不如 CSR。CSR 可以通过 CDN 缓存模板 HTML，而 SSR 此时对每个用户的请求，每次都需要完整渲染 HTML。</p>
<p>所以这也是 SSG，<strong>S</strong>erver <strong>S</strong>ide <strong>G</strong>eneration，服务端生成提出的契机。针对与客户端无关的、更新速度慢的页面，SSG 会在构建时直接生成页面并缓存在前端服务器，浏览器发出请求后会直接返回缓存页面，从而解决上述问题。</p>
<p>显然，CSR、SSR、SSG 各有利弊。就目前你清的教学、科协各个成员的掌握情况看，CSR 系列的开发明显占优势。另外考虑到软工课程不少类似于后台管理页面等更重视数据时效性、用户交互体验的应用，CSR 更应当重点讲解。</p>
<p>然而 SSR 不能因此完全废弃不讲，因为其针对用户无关页面的白屏加载问题绝对是重要的一种解决方案。SSR 依然是企业官网、个人博客等网页的首选。</p>
<p>所以目前依然是将传统的 CSR 布置为作业，然后让他们强制将 API 睡眠，体验白屏问题后让他们叙述 SSR 的好处，用此作为思考题。</p>
<h1 id="useeffect-重复调用问题"><code>useEffect</code> 重复调用问题</h1>
<p>这是一个老问题，说实话也和 Next.js 没有多少关系。如果在 React 中写下述代码：</p>
<figure class="highlight typescript"><figcaption><span>TypeScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> App = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;useEffect called!&quot;</span>);</span><br><span class="line">    &#125;, []);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span> Test page. <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>会发现控制台里出现了两次 <code>useEffect called!</code> 的输出。</p>
<p>虽然严格而言不会出现很大的问题，然而由于这种 <code>useEffect</code> 常常用于获取页面的初始数据（CSR 常用手法），这个问题可能导致重复请求后端数据，对于用户鉴权等需求甚至可能是危险的，后端如果不去做相应处理甚至可能打穿后端（我软工还真的差点出锅，然而当时也没在意）。</p>
<p>然后我搜索引擎大作业里面采用了非常丑陋的写法解决了：</p>
<p><img src="/uploads/note-of-next/1.jpeg" /></p>
<p>今天才知道这个是 React 的严格模式的锅。严格模式下，在 dev 条件下 React 会有意重复调用这些钩子来提示可能的危险。</p>
<p>也就是说打穿后端实际上就是 React 告诉你，你这有可能出锅，你自己不处理好不怪我。</p>
<p>当然，release 之后 React 就不会有意重复调用了。</p>
<p>所以解决方式就两种：</p>
<ul>
<li>好好写能够处理并发的代码，React 都告诉你会出事了</li>
<li>关掉严格模式，让 React 闭嘴</li>
</ul>
<p>我选择了后者。</p>
<p>参考：<a href="https://juejin.cn/post/7105652180501135367" class="uri">https://juejin.cn/post/7105652180501135367</a>。</p>
<h1 id="useroute-与注水"><code>useRoute</code> 与注水</h1>
<p>使用动态路由的时候，我按照 React 的开发习惯写了下述代码：</p>
<figure class="highlight typescript"><figcaption><span>TypeScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> route = useRouter();</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(route.query.id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use route.query.id to fetch data</span></span><br><span class="line">&#125;, []);</span><br></pre></td></tr></table></figure>
<p>令人惊讶的是，这里输出了 <code>undefined</code>。</p>
<p>事实上这是 Next.js 预渲染的锅，原文是这样的：</p>
<div class="note info no-icon"><p>Pages that are statically optimized by <strong>Automatic Static Optimization</strong> will be hydrated without their route parameters provided, i.e <code>query</code> will be an empty object (<code>{}</code>).</p>
<p>After hydration, Next.js will trigger an update to your application to provide the route parameters in the <code>query</code> object.</p>
</div>
<p>简而言之，ASO 是一种预渲染优化，在不获取路由信息的条件下先弄出来一个页面给浏览器，然后再注水（即向 <code>query</code> 注入路由信息）并触发组件更新，也就是说页面获取到路由信息并不是一开始，从而 <code>useEffect(*, [])</code> 是拿不到路由信息的。</p>
<p>了解这一点后，代码就应该写为：</p>
<figure class="highlight typescript"><figcaption><span>TypeScript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> route = useRouter();</span><br><span class="line"><span class="keyword">const</span> query = route.query;</span><br><span class="line"></span><br><span class="line">useEffect(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (!route.isReady) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(route.query.id);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Use route.query.id to fetch data</span></span><br><span class="line">&#125;, [route, query]);</span><br></pre></td></tr></table></figure>
<p>应该让 <code>useEffect</code> 检测 <code>route</code> 和 <code>query</code> 的变动，在注水完成后才能触发数据获取。</p>
]]></content>
      <categories>
        <category>【杂谈】开发</category>
      </categories>
  </entry>
  <entry>
    <title>强化学习入门学习笔记</title>
    <url>/2022/06/30/note-of-rl/</url>
    <content><![CDATA[<p>目前实验室的项目和强化学习关系比较大，然而自己确实没有什么强化学习的基础。</p>
<p>实验室的学长似乎有一个不错的强化学习入门学习仓库，感觉可以照着这个慢慢学来。</p>
<p><span class="math display">\[
\newcommand{\b}{\boldsymbol}
\newcommand{\argmax}{\mathop{\rm argmax}}
\newcommand{\argmin}{\mathop{\rm argmin}}
\newcommand{\P}{\mathbb{P}}
\newcommand{\E}{\mathbb{E}}
\newcommand{\opE}{\mathop{\mathbb{E}}}
\newcommand{\relmiddle}[1]{\mathrel{}\middle#1\mathrel{}}
\]</span></p>
<span id="more"></span>
<p>本笔记也有参考代码 Repo，虽然大部分是从别人那边搬过来的，但是我自己还是稍微做了一些调整，增加了一些可读性然后修复了一些 deprecated 的问题。</p>
<p>代码 Repo 的地址：<a href="https://github.com/Ashitemaru/RL-tutorial">Reinforce learning code repository</a>。</p>
<h1 id="强化学习的基本概念">强化学习的基本概念</h1>
<p>强化学习和常见的监督学习有一定的类似，但是也有区别。监督学习我们给出的监督往往是数据集上的标签，但是强化学习我们能给出的提示是给机器的行为作出评分。即，在强化学习中，我们会有一个不断给机器的行为评分的监督者，我们希望机器能够通过这个评分监督者学习到如何作出高分行为。</p>
<p>监督学习的标签往往需要事先由人类标注出来，也就是说监督学习学习的是人类标签的模式，但是强化学习不一定需要事先标注，他需要学习我们给出的评分策略的模式。</p>
<h2 id="强化学习方法的分类">强化学习方法的分类</h2>
<p>根据强化学习方法是否需要理解环境，可以将强化学习算法分为 model-based 和 model-free 两类。</p>
<p>model-free 方法不需要机器去理解环境，他每一步决策都需要等待真实环境的反馈才能进行下一步。而 model-based 方法可以通过 model 来模拟现实环境，这样机器可以通过这个模拟现实环境的 model 来预测自己的行为对环境的影响，甚至分析行为不同分支的影响，从而做到对现实环境的理解。</p>
<p>model-free 方法包括 Q Learning、Sarsa、Policy gradients。</p>
<hr />
<p>根据强化学习方法最后选择行为的依据，可以将强化学习算法分为基于概率（policy-based）和基于价值（value-based）两类。</p>
<p>基于概率的强化学习算法是最自然的，其会根据其感官接收到的信息，给出其下一步各个行为的概率，然后根据这个概率随机选择下一步的行为。这些算法包括 Policy gradients。</p>
<p>基于价值的强化学习算法则会测算各个行动的价值，并且选择价值最高的作为自己下一步的行为。这类算法包括 Sarsa、Q Learning。</p>
<p>基于概率的方法的一个优势在于能够根据概率分布作出连续动作的选择，而基于价值的方法不得不在选择一步动作后才能作出下一步动作的价值评估。</p>
<p>当然现在也有将两者结合起来的算法，即 Actor-Critic 方法，这个方法内 Actor 会基于概率给出动作，而 Critic 会给出价值评估，这样的话能够在 Policy gradients 的基础上加快训练速度。</p>
<hr />
<p>根据其更新参数的策略，可以将强化学习算法分为回合制更新（Monte-Carlo update）和单步更新（temporal difference update）。</p>
<p>Monte-Carlo learning 和基础版本的 Policy gradients 方法都是回合制更新的，然而 Q Learning、Sarsa 和升级版本的 Policy gradients 都会基于更为现实和有效的单步更新。</p>
<hr />
<p>另外还有在线算法（on policy）和离线算法（off policy）的区别。离线算法的优势就是我可以在脱离交互环境的条件下，学习先前的交互记录。而在线算法必须要在交互环境内更新参数。</p>
<p>最典型的在线算法是 Sarsa 和强化过后的 Sarsa lambda。而典型的离线算法为 Q Learning 和强化过的 Deep Q network。</p>
<h1 id="q-learning">Q Learning</h1>
<p>首先引入 Q 表这个概念，Q 表可以看作一个函数 <span class="math inline">\(Q(s, a)\)</span>，这个函数值的含义为在状态 <span class="math inline">\(s\)</span> 的条件下，作出行为 <span class="math inline">\(a\)</span> 的潜在收益。而 Q Learning 的决策过程就是选择当前状态的所有可选行为中潜在收益最高的行为。</p>
<p>Q 表的更新是在进行决策之后开始的，如果我们原先在状态 <span class="math inline">\(s\)</span>，并且我们通过行为 <span class="math inline">\(a\)</span> 到达新状态 <span class="math inline">\(s&#39;\)</span>，这个时候我们需要重新估算 <span class="math inline">\(Q(s, a)\)</span> 的值。这个估计值新增的部分应当包含两个部分，即我们采取这个行为立刻能得到的奖励和我们在 <span class="math inline">\(s&#39;\)</span> 状态处能够达到的最大可能收益。</p>
<p>我们的更新策略如下：</p>
<p><span class="math display">\[
Q&#39;(s, a) := Q(s, a) + \alpha\left[r + \gamma\max_{a&#39; \in \Gamma(s&#39;)} Q(s&#39;, a&#39;) - Q(s, a)\right]
\]</span></p>
<p>这里 <span class="math inline">\(\Gamma(s&#39;)\)</span> 表示在状态 <span class="math inline">\(s&#39;\)</span> 处能够选择的所有行为构成的集合，<span class="math inline">\(\alpha\)</span> 表示<strong>学习率</strong>。</p>
<p>这样我们就能看到调整估计值的逻辑。我们首先获取在新状态 <span class="math inline">\(s&#39;\)</span> 处所有行为可能得到的最大收益 <span class="math inline">\(\max_{a&#39; \in \Gamma(s&#39;)} Q(s&#39;, a&#39;)\)</span>，乘以一个衰减 <span class="math inline">\(\gamma\)</span>，之后加上采取行为 <span class="math inline">\(a\)</span> 后立刻能得到的收益 <span class="math inline">\(r\)</span> 计算出行为 <span class="math inline">\(a\)</span> 的潜在收益。之后我们将这个估计值和原先的值作差得到差距，乘以学习率 <span class="math inline">\(\alpha\)</span> 之后就得到了我们需要更新到 <span class="math inline">\(Q(s, a)\)</span> 上的增量。</p>
<p>实际使用的 Q Learning 为了防止完全贪心算法导致算法无法充分探索环境，故在作出决策的时候其实也不一定完全按照最高价值选择，而是可能通过 epsilon greedy 的策略。即提前设定一个 <span class="math inline">\(\varepsilon \in (0, 1)\)</span>，以 <span class="math inline">\(\varepsilon\)</span> 概率按照 Q 表最优价值选择行为，以 <span class="math inline">\(1 - \varepsilon\)</span> 概率随机选择行为。这里 <span class="math inline">\(\varepsilon\)</span> 也被称为<strong>贪婪度</strong>。</p>
<p>在学习过程的初期，我们希望机器能够随机探索环境，所以此时 <span class="math inline">\(\varepsilon\)</span> 参数会设定较小。而后期我们在已经具有较为可靠的 Q 表并且希望得到最优解的时候，就可以适当调整到较高的 <span class="math inline">\(\varepsilon\)</span>。</p>
<hr />
<p>如果我们分析参数 <span class="math inline">\(\gamma\)</span> 在这个学习过程中的作用，我们注意到第一步的奖励会以 <span class="math inline">\(\gamma\)</span> 衰减，而第二步的奖励会以 <span class="math inline">\(\gamma^2\)</span> 衰减，以此类推，越远的奖励衰减的次数越高。</p>
<p>这就说明，如果令 <span class="math inline">\(\gamma = 0\)</span>，就意味着除了最近的直接奖励，其余奖励均会清空，此时机器只会关注最近的直接奖励。而如果令 <span class="math inline">\(\gamma = 1\)</span>，则意味着机器会平等地对待所有可能的奖励。而一般条件下 <span class="math inline">\(0 &lt; \gamma &lt; 1\)</span>，此时机器会按照指数衰减的方式对待从近到远的奖励。所以 <span class="math inline">\(\gamma\)</span> 也被称为<strong>奖励衰减指数</strong>。</p>
<h2 id="代码示例">代码示例</h2>
<p>这里在 <code>$&#123;repo&#125;/Q-learning</code> 下写了一个简单的通过 Q Learning 学习走迷宫的小程序，这里稍微介绍一下。</p>
<p>其实主要关注主函数之中的主循环就可以知道 Q Learning 是如何进行的了：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Q-learning/main.py</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span>():</span></span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">        <span class="comment"># Initial state</span></span><br><span class="line">        state = env.reset()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># Refresh the canvas</span></span><br><span class="line">            env.render()</span><br><span class="line"></span><br><span class="line">            <span class="comment"># RL choose action based on state</span></span><br><span class="line">            action = RL.choose_action(<span class="built_in">str</span>(state))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># RL take action and get next state and reward</span></span><br><span class="line">            next_state, reward, done = env.step(action)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># RL learn from this transition</span></span><br><span class="line">            RL.learn(<span class="built_in">str</span>(state), action, reward, <span class="built_in">str</span>(next_state))</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Swap state, move ahead</span></span><br><span class="line">            state = next_state</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Break while loop when end of this episode</span></span><br><span class="line">            <span class="keyword">if</span> done:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># End of game</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Game over&quot;</span>)</span><br><span class="line">    env.destroy()</span><br></pre></td></tr></table></figure>
<p>这里的 <code>RL</code> 相当于我们学习认识环境的机器，其具备的接口包括选择下一步行动（即 <code>RL.choose_action</code>）和根据环境的反馈做出学习（即 <code>RL.learn</code>）。而 <code>env</code> 则模拟了机器需要去认识的环境，其实质上是一个方形地图，地图上有两个地狱和一个代表最终结果的天堂，机器应该尝试着去学习一个绕过地狱到达天堂的路径。</p>
<p>其实主逻辑十分简单。我们需要训练 100 个 epoch，对于每个 epoch 我们首先初始化环境和机器所在的位置，然后在主循环中重复进行下述动作：</p>
<ul>
<li>令机器选择一个行为</li>
<li>将这个行为传递给环境，令环境给出反馈（包括奖励函数、是否终止、机器即将转到的状态）</li>
<li>机器通过环境的反馈进行学习</li>
<li>令机器采取该行为</li>
</ul>
<p>这里机器选择一个行为即我们提到的 epsilon greedy 策略，而其学习方式就是 Q 表的更新策略也已经叙述过。环境给出反馈则是简单判定机器是否走到了地狱或者天堂，并给出相应的结果。</p>
<p>只需要这样简单的代码，我们就可以看见一个红色方块仅依靠着环境的反馈学习到了如何登上天堂。</p>
<h1 id="sarsa">Sarsa</h1>
<p>Sarsa 和 Q Learning 的策略选择方面是一致的，也就是使用 epsilon greedy 策略选择自己下一步实际的路径，但是 Sarsa 在更新 Q 表的策略上和 Q Learning 是不同的。</p>
<p>我们观察 Q Learning 的更新策略：</p>
<p><span class="math display">\[
Q&#39;_{\rm QL}(s, a) := Q(s, a) + \alpha\left[r + \gamma{\color{red} \max_{a&#39; \in \Gamma(s&#39;)} Q(s&#39;, a&#39;)} - Q(s, a)\right]
\]</span></p>
<p>而 Sarsa 的更新策略为：</p>
<p><span class="math display">\[
Q&#39;_{\rm Sarsa}(s, a) := Q(s, a) + \alpha\left[r + \gamma{\color{red} Q(s&#39;, {\rm EG}(s&#39;))} - Q(s, a)\right]
\]</span></p>
<p>这里 <span class="math inline">\(a = {\rm EG}(s)\)</span> 表示的是在状态 <span class="math inline">\(s\)</span> 处使用 epsilon greedy 策略选择行为 <span class="math inline">\(a\)</span>。</p>
<p>除去这里更新策略的不同之外，Sarsa 在到达新状态 <span class="math inline">\(s&#39;\)</span> 后决定此时需要采取的行动的时候，就会采取之前更新策略中的 <span class="math inline">\({\rm EG}(s&#39;)\)</span> 直接作为下一步。</p>
<hr />
<p>Sarsa 的策略意味着，其在评估新状态 <span class="math inline">\(s&#39;\)</span> 的潜在收益的时候，并不会像 Q Learning 一样贪心选择最大的可能收益，而是更为现实地选择下一步行为，并且一定会采取这一步行为。</p>
<p>而 Q Learning 这里使用最大值贪心的更新策略也意味着其会完全沿着局部最优的路径前行，而无视可能造成的负面效果。Sarsa 则相对而言较为实际且保守。</p>
<p>另外，Q Learning 由于可以脱离环境，所以是 off policy 的。而 Sarsa 需要边转移状态边更新 Q 表，所以是 on policy 的。</p>
<h2 id="代码示例-1">代码示例</h2>
<p>这里不具体展示代码了，代码位于 <code>$&#123;repo&#125;/Sarsa</code> 目录之下。</p>
<p>需要注意和 Q Learning 算法不同的地方在于，在主循环里面我们除了需要保存一个 <code>state</code> 变量，我们还需要一个 <code>action</code> 变量保存即将需要采取的动作。</p>
<p>如果比对两种算法的效率，其实可以发现 Sarsa 算法的收敛速度明显慢于 Q Learning 算法。</p>
<h1 id="sarsa-lambda">Sarsa lambda</h1>
<p>Sarsa lambda 相对于 Sarsa 的优化点在于，机器最初探索环境的时候所采取的那些行为很有可能和最终结果无关，但是在经典的 Sarsa 算法中，每一步都会以同等的权重更新 Q 表，这很有可能导致后续真正导致较高奖励函数的行为没有匹配到较高权重。</p>
<p>所以我们可以采取近似于回合制更新的方式取代经典的 Sarsa 单步更新策略。我们令到达最终结果的最后一步以原始权重更新 Q 表，倒数第二步需要乘以常数 <span class="math inline">\(\lambda\)</span> 再更新到 Q 表，以此类推，倒数第 <span class="math inline">\(n\)</span> 步需要以权重 <span class="math inline">\(\lambda^{n - 1}\)</span> 更新到 Q 表。</p>
<p>我们可以注意到 <span class="math inline">\(\lambda = 0\)</span> 的时候，只有最后一步被更新到 Q 表，这就是最经典的回合更新。而 <span class="math inline">\(\lambda = 1\)</span> 的时候就是经典的 Sarsa 单步更新。</p>
<p>这里的 <span class="math inline">\(\lambda\)</span> 就被称为<strong>路径衰减指数</strong>。</p>
<h2 id="代码示例-2">代码示例</h2>
<p>这里只需要在 Sarsa 的基础上加上一个 E 表来累计每一步的 Q 表更新值即可，每走一步就需要将 E 表以 <span class="math inline">\(\lambda\)</span> 权重衰减一次。</p>
<p>主要观察 E 表在模型学习过程中的作用：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Sarsa/model.py - class SarsaLambdaTable</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">learn</span>(<span class="params">self, state, action, reward, next_state, next_action</span>):</span></span><br><span class="line">    self.check_state_exist(next_state)</span><br><span class="line"></span><br><span class="line">    q_predict = self.q_table.loc[state, action]</span><br><span class="line">    <span class="keyword">if</span> next_state != <span class="string">&quot;terminal&quot;</span>:</span><br><span class="line">        q_target = reward + self.gamma * self.q_table.loc[next_state, next_action]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        q_target = reward</span><br><span class="line">        </span><br><span class="line">    error = q_target - q_predict</span><br><span class="line"></span><br><span class="line">    self.e_table.loc[state, :] *= <span class="number">0</span></span><br><span class="line">    self.e_table.loc[state, action] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    self.q_table += self.lr * error * self.e_table</span><br><span class="line">    self.e_table *= self.gamma * self.lambda_ <span class="comment"># Decay</span></span><br></pre></td></tr></table></figure>
<p>前半部分和经典 Sarsa 是完全一致的，但是注意后续的两个更新。在说明具体更新之前，我们可以说明 E 表的含义，E 表实际上就是将具体值更新到 Q 表时的权重表。</p>
<p>首先是将当前状态对应的 E 表行清零并将当前动作对应的列设为 <code>1</code>，即更新 E 表。之后以当前权重将误差更新到 Q 表，最后对权重作出衰减。</p>
<div class="note info"><p>我觉得他这个代码框架存在一个问题，就是当机器走到角落的时候，实际上它的决策空间会变小，但是代码里面没有体现这一点，只是简单的让机器不动。比如机器在左上角选择向左走，那么只是简单地让机器停在左上角。</p>
<p>这是一个并不好的处理，因为如果此时机器还没有碰巧到达天堂产生正向激励的话，机器完全会缩在角落里来避免地狱的反向激励。</p>
<p>有时间给他代码改改吧。</p>
</div>
<h1 id="deep-q-network-dqn">Deep Q Network (DQN)</h1>
<p>在我们面对更大的解空间的时候，存储过大的 Q 表会导致内存不够使用，所以此时我们需要令 <span class="math inline">\(Q(s, a)\)</span> 使用其他的方法计算，比如说我们可以引入深度神经网络来计算 <span class="math inline">\(Q(s, a)\)</span>。</p>
<p>这里我们可以引入这样的一个深度神经网络，该网络接受的输入是当前机器的状态 <span class="math inline">\(s\)</span>，该网络给出的输出则是各种可行的行为以及其评估值，我们只需要按照最基本的 Q Learning 原则根据神经网络的输出给出。</p>
<p>在这个给定的决策过程下，我们需要给出神经网络的训练策略。实际上我们只需要给出网络 loss 的计算方式就可以。我们思考 Q Learning 之中的训练策略，我们可以得知，在经典的 Q Learning 算法中我们会求出估计的 Q 值，将其与现实的 Q 值做差之后乘以学习率叠加到原先的 Q 表上。</p>
<p>而如果将这样的策略和神经网络联系起来，我们会发现估计的 Q 值和现实的 Q 值之间的差距实际上就表现出了 loss，我们只需要将这个 loss 对网络各个参数的梯度乘以学习率叠加到网络上就可以。</p>
<p>基于这样的认识，我们给出下述 loss 计算，使用平方误差的基本思想：</p>
<p><span class="math display">\[
\mathcal{L} := \left[r + \gamma\max_{a&#39; \in \Gamma(s&#39;)} Q(s&#39;, a&#39;) - Q(s, a)\right]^2
\]</span></p>
<p>这里在状态 <span class="math inline">\(s\)</span> 下选择动作 <span class="math inline">\(a\)</span> 会转移到状态 <span class="math inline">\(s&#39;\)</span>。</p>
<hr />
<p>另外，我们可以使用两种方法强化 DQN，这两种方法包括 Experience replay 和 Fixed Q targets。</p>
<p>前者实际上基于 Q Learning 的 off policy 特性，我们可以使用以往的训练数据乃至其他机器的经验数据来训练网络。</p>
<p>后者的含义是使用两个同样结构但是参数不同的网络，一个使用较早的参数来给出估计的 Q 值，而且这个网络的参数几乎不会在训练过程中更新，这个网络代表了过去的经验。一个使用较新的参数来给出现实的 Q 值，这个网络会在训练过程中更新参数并且会被应用到实际场景之中。这样做的原因是取消数据的相关性和提高训练的稳定性，具体的原因后续研讨。</p>
<p>在引入了这两个强化方法之后，loss 的具体计算方式会有所不同，具体的讨论见下方。</p>
<h2 id="代码示例-3">代码示例</h2>
<p>这里我们使用 Tensorflow 实现 DQN，这里我们使用的 DQN 具体算法描述为：</p>
<ul>
<li>首先初始化一个容量为 <span class="math inline">\(N\)</span> 的记忆库 <span class="math inline">\(D\)</span> 用于存放先前的经验，这里 <span class="math inline">\(N\)</span> 是先前设定的超参</li>
<li>随机初始化两个结构一致的神经网络 <span class="math inline">\(Q, \hat Q\)</span>，其初始化参数分别为 <span class="math inline">\(\b\theta, \b\theta^-\)</span>，初始化的时候保证 <span class="math inline">\(\b\theta = \b\theta^-\)</span></li>
<li>对模型按照下述流程训练 <span class="math inline">\(M\)</span> 个 epoch，这里 <span class="math inline">\(M\)</span> 为先前设定的超参
<ul>
<li>假定初始状态 <span class="math inline">\(s_1\)</span>，初始化 <span class="math inline">\(s = s_1\)</span></li>
<li>重复下述流程直到需要中断
<ul>
<li>以超参 <span class="math inline">\(\varepsilon\)</span> 使用 epsilon greedy 策略选取行为 <span class="math inline">\(a := \argmax_{a&#39;} Q(s, a&#39;; \b\theta)\)</span></li>
<li>令 <span class="math inline">\(r\)</span> 表示在状态 <span class="math inline">\(s\)</span> 的条件下执行行为 <span class="math inline">\(a\)</span> 得到的直接收益</li>
<li>令 <span class="math inline">\(s&#39;\)</span> 表示在状态 <span class="math inline">\(s\)</span> 的条件下执行行为 <span class="math inline">\(a\)</span> 转移到的状态</li>
<li>将描述状态转移的元组 <span class="math inline">\((s, a, r; s&#39;)\)</span> 存入 <span class="math inline">\(D\)</span></li>
<li>从 <span class="math inline">\(D\)</span> 中抽取 <span class="math inline">\(B\)</span> 组数据回放，更新 <span class="math inline">\(\b\theta\)</span>，具体流程见下述，这里 <span class="math inline">\(B\)</span> 是先前设定的超参</li>
<li>如果此时 <span class="math inline">\(s&#39;\)</span> 是终止状态，则终止流程，否则令 <span class="math inline">\(s \leftarrow s&#39;\)</span>，转移状态</li>
<li>每经过 <span class="math inline">\(C\)</span> 步，令 <span class="math inline">\(\b\theta^- \leftarrow \b\theta\)</span>，即令 <span class="math inline">\(\hat Q\)</span> 更新至 <span class="math inline">\(Q\)</span>，这里 <span class="math inline">\(C\)</span> 是先前设定的超参</li>
</ul></li>
</ul></li>
</ul>
<p>阐述具体学习过程之前，我们研讨一下引入了 Experience replay 和 Fixed Q targets 之后 loss 的计算。首先由于引入了两个神经网络，计算估计 Q 值和现实 Q 值的网络参数不一致，上述已经通过 <span class="math inline">\(\b\theta, \b\theta^-\)</span> 作出区分。</p>
<p>另外，由于引入了记忆库 <span class="math inline">\(D\)</span> 并且需要从中随机抽取转移对，那么最后的 loss 应该是基于 <span class="math inline">\(D\)</span> 上的均匀分布的期望，所以最后的 loss 为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DQN}(\b\theta) := \opE_{(s, a, r; s&#39;) \sim U(D)} \left[r + \gamma\max_{a&#39; \in \Gamma(s&#39;)} \hat Q(s&#39;, a&#39;; \b\theta^-) - Q(s, a; \b\theta)\right]^2
\]</span></p>
<p>具体的学习流程为：</p>
<ul>
<li>从 <span class="math inline">\(D\)</span> 中抽取 <span class="math inline">\(B\)</span> 组转移元组</li>
<li>对每一个元组 <span class="math inline">\((s, a, r; s&#39;)\)</span> 计算 loss</li>
<li>计算梯度将 loss 反向传播到 <span class="math inline">\(\b\theta\)</span> 参数上，完成一次参数更新</li>
<li>根据具体情况调整 epsilon greedy 参数 <span class="math inline">\(\varepsilon\)</span></li>
</ul>
<p>这里使用的网络的数据依赖关系表现为：</p>
<p><img src="/uploads/note-of-rl/1.png" /></p>
<p>现在关注具体的代码实现，我们需要注意到我们采用的网络是两层全连接层：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/DQN/dqn.py - def _build_net</span></span><br><span class="line"></span><br><span class="line">self.state = tf.placeholder(tf.float32, [<span class="literal">None</span>, self.n_features], name = <span class="string">&quot;state&quot;</span>)</span><br><span class="line">...</span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;eval_net&quot;</span>):</span><br><span class="line">    eval_layer = tf.keras.layers.Dense(</span><br><span class="line">        units = <span class="number">20</span>,</span><br><span class="line">        activation = tf.nn.relu,</span><br><span class="line">        kernel_initializer = w_initializer,</span><br><span class="line">        bias_initializer = b_initializer,</span><br><span class="line">        name = <span class="string">&quot;eval_layer&quot;</span></span><br><span class="line">    )(self.state) <span class="comment"># Output: (None, 20)</span></span><br><span class="line">    self.q_eval = tf.keras.layers.Dense(</span><br><span class="line">        units = self.n_actions,</span><br><span class="line">        kernel_initializer = w_initializer,</span><br><span class="line">        bias_initializer = b_initializer,</span><br><span class="line">        name = <span class="string">&quot;q_eval_layer&quot;</span></span><br><span class="line">    )(eval_layer) <span class="comment"># Output: (None, n_actions)</span></span><br></pre></td></tr></table></figure>
<p>其逻辑是接受一个 <code>(batch_size, n_features)</code> 形状的输入，产生一个 <code>(batch_size, n_actions)</code> 形状的输出。<code>n_features</code> 表示需要多少个特征描述一个状态 <span class="math inline">\(s\)</span>，即状态空间维数。最后的输出则是各个动作的 Q 值。</p>
<p>在这样的网络设计之下，我们在求取 loss 的时候需要将 <code>(batch_size, n_actions)</code> 形状的输出中每一行挑出我们实际上选取的行为的 Q 值，压缩为 <code>(batch_size, )</code> 形状的 Q 值向量，再求取平方误差。所以就有下述代码：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/DQN/dqn.py - def _build_net</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;q_target&quot;</span>):</span><br><span class="line">    q_target = self.reward + self.gamma * tf.reduce_max(self.q_next, axis = <span class="number">1</span>, name = <span class="string">&quot;q_max_next_state&quot;</span>)</span><br><span class="line">    self.q_target = tf.stop_gradient(q_target) <span class="comment"># Shape: (None, )</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;q_eval&quot;</span>):</span><br><span class="line">    action_indices = tf.stack([</span><br><span class="line">        tf.<span class="built_in">range</span>(tf.shape(self.action)[<span class="number">0</span>], dtype = tf.int32), <span class="comment"># Index</span></span><br><span class="line">        self.action <span class="comment"># The index of action</span></span><br><span class="line">    ], axis = <span class="number">1</span>)</span><br><span class="line">    self.q_eval_wrt_action = tf.gather_nd(params = self.q_eval, indices = action_indices) <span class="comment"># Shape: (None, )</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;loss&quot;</span>):</span><br><span class="line">    self.loss = tf.reduce_mean(tf.squared_difference(</span><br><span class="line">        self.q_target, self.q_eval_wrt_action,</span><br><span class="line">        name = <span class="string">&quot;error&quot;</span></span><br><span class="line">    ))</span><br></pre></td></tr></table></figure>
<p>这里 <code>q_target</code> 部分只需要直接求取每一行的最大值就可以，而 <code>q_eval</code> 部分需要根据 <code>self.action</code> 压缩网络的输出，得到 <code>q_eval</code>。最后求取平方误差即可。</p>
<h2 id="dqn-enhancement">DQN Enhancement</h2>
<h3 id="double-dqn">Double DQN</h3>
<p>上述讨论的 DQN 其实有 overestimate 的问题，因为我们每次都会使用旧参数 <span class="math inline">\(\b\theta^-\)</span>，采用最大值函数去估计 evaluated Q value。为了解决这个问题，我们需要利用另外一个网络，即参数及时更新的网络来平衡旧参数网络的估计。</p>
<p>传统 DQN 的 loss 计算为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DQN} := \left[r + \gamma{\color{red} \max_{a&#39; \in \Gamma(s&#39;)} \hat Q(s&#39;, a&#39;; \b\theta^-)} - Q(s, a; \b\theta)\right]^2
\]</span></p>
<p>这里 <span class="math inline">\(a&#39;\)</span> 的选择仅仅依赖于 <span class="math inline">\(\hat Q\)</span> 网络的情况，我们在 Double DQN 中可以使用 <span class="math inline">\(Q\)</span> 网络来选择 <span class="math inline">\(a&#39;\)</span> 以控制 Q 值的估计：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DDQN} := \left[r + \gamma{\color{red} \hat Q\left(s&#39;, \argmax_{a&#39; \in \Gamma(s&#39;)} Q(s&#39;, a&#39;; \b\theta); \b\theta^-\right)} - Q(s, a; \b\theta)\right]^2
\]</span></p>
<p>也就是说这里令 <span class="math inline">\(a&#39;\)</span> 是 <span class="math inline">\(Q\)</span> 网络选取出的在 <span class="math inline">\(s&#39;\)</span> 状态下的最佳行为，而非仅通过 <span class="math inline">\(\hat Q\)</span> 网络选择，这样做的平衡就可以防止 <span class="math inline">\(\hat Q\)</span> 给出过高的 Q 值。</p>
<hr />
<p>这里就不给出具体的代码实现了。</p>
<p><code>UPDATE TODO</code></p>
<h3 id="prioritized-experience-replay">Prioritized Experience Replay</h3>
<p>如果我们的环境的 reward 分配比较不均匀，正向反馈较难获取，但是却需要要求机器重点学习正向反馈，我们原先的 replay 策略就会失效，因为在原先的策略内，我们令各个回忆的权重是一致的，这个分配并不符合实际。</p>
<p>我们可以这样估计每个回忆的优先级，和 loss 的计算类似，我们用估计的 Q 值直接减去现实的 Q 值，如果这个值越大，就说明还能提升的空间就越大，从而说明这个回忆的优先级越高。上述 Q 值的差值一般称为 TD error。</p>
<hr />
<p>每次选取回忆的时候，我们都需要根据 TD error 给出的优先级排序各个回忆，但如果每次都排序的话显然会浪费算力，所以我们需要使用 Sum tree 数据结构组织各个回忆。</p>
<p><code>TODO</code></p>
<h1 id="policy-gradients">Policy Gradients</h1>
<p>Policy Gradients 的特点在于其直接输出下一步行为本身，而不是行为的某种评分。这个特点使得 Policy Gradients 可以应对决策空间无限的情况，而 Q Learning 则无法应对无限决策空间。</p>
<p>Policy Gradients 基于随机策略，也就是我们需要给出在某个状态 <span class="math inline">\(s\)</span> 下我们采取行为 <span class="math inline">\(a\)</span> 的概率，这种随机策略一般用参数 <span class="math inline">\(\b\theta\)</span> 建模。</p>
<p>我们把基于参数为 <span class="math inline">\(\b\theta\)</span> 的随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span>，在状态 <span class="math inline">\(s\)</span> 下，我们采取行为 <span class="math inline">\(a\)</span> 的概率表示为 <span class="math inline">\(\pi_{\b\theta}(a \mid s)\)</span>。这里 <span class="math inline">\(s_t, a_t\)</span> 表示在第 <span class="math inline">\(t\)</span> 时刻的状态和行为，后续有类似的 <span class="math inline">\(r_t\)</span>。</p>
<p>显然这样的 <span class="math inline">\(\pi_{\b\theta}(\cdot\mid s)\)</span> 代表了一个行为决策空间 <span class="math inline">\(\mathcal{A}\)</span> 上的一个分布。</p>
<p>我们首先定义累计收益：</p>
<p><span class="math display">\[
G_t(\b\tau) := \sum_{k = 0}^{+\infty} \gamma^k r_{t + k}
\]</span></p>
<p>这里 <span class="math inline">\(\b\tau\)</span> 是一个已知的转移过程，<span class="math inline">\(G_t(\b\tau)\)</span> 就表示沿着已知的转移过程 <span class="math inline">\(\b\tau\)</span>，从时刻 <span class="math inline">\(t\)</span> 开始能获得的累计收益。<span class="math inline">\(\gamma\)</span> 则是先前介绍过的奖励衰减指数，我们将未来所有的收益全部相加作为总收益。</p>
<p>那么我们可以基于此定义出一个行为评估函数：</p>
<p><span class="math display">\[
Q^{\pi_{\b\theta}}(s, a) := \opE_{\b\tau \sim \pi_{\b\theta}} \left[G_t(\b\tau) \mid s_t = s, a_t = a\right]
\]</span></p>
<p>定义的含义也是直观的，这个评估函数的值就是随机取出一个在第 <span class="math inline">\(t\)</span> 时刻，状态和行为分别为 <span class="math inline">\(s, a\)</span> 的转移过程 <span class="math inline">\(\b\tau\)</span>，求取后续能获取的收益的期望。</p>
<p>另外，由于我们知道给定状态 <span class="math inline">\(s\)</span> 的时候行为 <span class="math inline">\(a\)</span> 的分布就是随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 指定的，所以我们可以定义一个不需要给定具体行为的，仅针对状态进行评估的状态函数：</p>
<p><span class="math display">\[
V^{\pi_{\b\theta}}(s) := \int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s)Q^{\pi_{\b\theta}}(s, a) {\rm d}a = \opE_{\b\tau \sim \pi_{\b\theta}} \left[G_t(\b\tau) \mid s_t = s\right]
\]</span></p>
<p>此外，我们可以注意到这个随机策略实际上定义了一个在状态空间 <span class="math inline">\(\mathcal{S}\)</span> 上的 Markov chain，那么我们就有下述稳态概率的定义：</p>
<p><span class="math display">\[
d^{\pi_{\b\theta}}(s) := \lim_{t \to +\infty} \P_{\pi_{\b\theta}}(s_t = s \mid s_0)
\]</span></p>
<p>稳态概率实际上描述了在给定初始状态 <span class="math inline">\(s_0\)</span> 的条件下，使用随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 在状态空间 <span class="math inline">\(\mathcal{S}\)</span> 上随机转移，最终到达稳定状态的时候，位于状态 <span class="math inline">\(s\)</span> 的概率。</p>
<p>基于稳态概率，我们就可以给一个策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 定义价值：</p>
<p><span class="math display">\[
\mathcal{J}(\b\theta) := \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s)V^{\pi_{\b\theta}}(s) {\rm d}s = \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s)Q^{\pi_{\b\theta}}(s, a) {\rm d}a{\rm d}s
\]</span></p>
<p>容易看出 <span class="math inline">\(d^{\pi_{\b\theta}}(s)\pi_{\b\theta}(a \mid s)\)</span> 给出了 <span class="math inline">\(\mathcal{S} \times \mathcal{A}\)</span> 上的分布：</p>
<p><span class="math display">\[
\int_{s \in \mathcal{S}}\int_{a \in \mathcal{A}} d^{\pi_{\b\theta}}(s)\pi_{\b\theta}(a \mid s) {\rm d}a{\rm d}s = 1
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
\mathcal{J}(\b\theta) = \opE_{(s, a) \sim \pi_{\b\theta}} [Q^{\pi_{\b\theta}}(s, a)]
\]</span></p>
<p>为了尽可能提高策略的价值，我们采用梯度上升的方式，所以重点就是计算上述价值函数的梯度 <span class="math inline">\(\nabla_{\b\theta}\mathcal{J}(\b\theta)\)</span>。</p>
<hr />
<p>首先我们对 <span class="math inline">\(Q^{\pi_{\b\theta}}(s, a)\)</span> 做一些简单的展开。</p>
<p>我们只需要遍历 <span class="math inline">\(s\)</span> 所有可能的下一步状态 <span class="math inline">\(s&#39;\)</span>，得到其发生转移 <span class="math inline">\(s \to s&#39;\)</span> 的概率，而相应的价值评估也会拆分为直接收益 <span class="math inline">\(r\)</span> 和接下来到达状态 <span class="math inline">\(s&#39;\)</span> 的收益（与 Q Learning 具有类似的结构）。基于上述思路，得到下述展开：</p>
<p><span class="math display">\[
Q^{\pi_{\b\theta}}(s, a) = \int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a)\left[r + V^{\pi_{\b\theta}}(s&#39;)\right] {\rm d} s&#39;
\]</span></p>
<p>这里概率符号带有下标 <span class="math inline">\(\mathcal{E}\)</span>，表示这个概率仅仅依赖于环境 <span class="math inline">\(\mathcal{E}\)</span>，和随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 并无关系。那么考虑到 <span class="math inline">\(r, \P_{\mathcal{E}}(s&#39; \mid s, a)\)</span> 相对于 <span class="math inline">\(\b\theta\)</span> 都是常数，可以得到：</p>
<p><span class="math display">\[
\nabla_{\b\theta}Q^{\pi_{\b\theta}}(s, a) = \int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a)\nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;) {\rm d} s&#39;
\]</span></p>
<p>基于此，我们做出如下推理：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;{\color{red} \nabla_{\b\theta}V^{\pi_{\b\theta}}(s)} \\
=&amp; \nabla_{\b\theta}\left[\int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s)Q^{\pi_{\b\theta}}(s, a) {\rm d} a\right] \\
=&amp; \int_{a \in \mathcal{A}}\left[Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) + \pi_{\b\theta}(a \mid s)\nabla_{\b\theta}Q^{\pi_{\b\theta}}(s, a)\right] {\rm d} a \\
=&amp; \int_{a \in \mathcal{A}}\left[Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) + \pi_{\b\theta}(a \mid s)\int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a)\nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;) {\rm d} s&#39;\right] {\rm d} a \\
=&amp; \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) {\rm d} a + \int_{a \in \mathcal{A}}\left[\pi_{\b\theta}(a \mid s)\int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a) {\color{red} \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;)} {\rm d} s&#39;\right] {\rm d} a
\end{aligned}
\]</span></p>
<p>这里我们观测到了 <span class="math inline">\(\nabla_{\b\theta}V^{\pi_{\b\theta}}(s)\)</span> 结构的重复，下面思考该递归结构。</p>
<p>定义记号：</p>
<p><span class="math display">\[
\P_{\pi_{\b\theta}}(s \mathop{\to}^k s_\bot)
\]</span></p>
<p>表示从初态 <span class="math inline">\(s\)</span> 通过随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 经过 <span class="math inline">\(k\)</span> 步转移能够到达终态 <span class="math inline">\(s_\bot\)</span> 的概率。这个概率也具有递归的运算特征，即：</p>
<p><span class="math display">\[
\P_{\pi_{\b\theta}}(s \mathop{\to}^{k + 1} s_\bot) = \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^k s&#39;) \P_{\pi_{\b\theta}}(s&#39; \mathop{\to}^1 s_\bot) {\rm d}s&#39;
\]</span></p>
<p>此外，根据该概率的定义，我们能确定：</p>
<p><span class="math display">\[
\P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;) = \int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s)\P_{\mathcal{E}}(s&#39; \mid s, a) {\rm d}a
\]</span></p>
<p>另外，为了后续讨论简单，定义记号：</p>
<p><span class="math display">\[
\phi(s) := \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) {\rm d} a
\]</span></p>
<p>从而观察下述展开：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\nabla_{\b\theta}V^{\pi_{\b\theta}}(s) \\
=&amp; \phi(s) + \int_{a \in \mathcal{A}}\left[\pi_{\b\theta}(a \mid s)\int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a) \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;) {\rm d} s&#39;\right] {\rm d} a \\
=&amp; \phi(s) + \int_{s&#39; \in \mathcal{S}} \left[\int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s) \P_{\mathcal{E}}(s&#39; \mid s, a) {\rm d} a\right] \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;) {\rm d} s&#39; \\
=&amp; \phi(s) + {\color{red} \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;) \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;) {\rm d} s&#39;} \\
=&amp; \phi(s) + \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;) \left[\phi(s&#39;) + \int_{s&#39;&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s&#39; \mathop{\to}^1 s&#39;&#39;) \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;&#39;) {\rm d} s&#39;&#39;\right] {\rm d} s&#39; \\
=&amp; \phi(s) + \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;)\phi(s&#39;) {\rm d} s&#39; + \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;) \left[\int_{s&#39;&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s&#39; \mathop{\to}^1 s&#39;&#39;) \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;&#39;) {\rm d} s&#39;&#39;\right]{\rm d} s&#39; \\
=&amp; \phi(s) + \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;)\phi(s&#39;) {\rm d} s&#39; + \int_{s&#39;&#39; \in \mathcal{S}}\left[\int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;) \P_{\pi_{\b\theta}}(s&#39; \mathop{\to}^1 s&#39;&#39;){\rm d} s&#39;\right] \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;&#39;) {\rm d} s&#39;&#39; \\
=&amp; \phi(s) + {\color{green} \int_{s&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^1 s&#39;)\phi(s&#39;) {\rm d} s&#39;} + {\color{red} \int_{s&#39;&#39; \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^2 s&#39;&#39;) \nabla_{\b\theta}V^{\pi_{\b\theta}}(s&#39;&#39;) {\rm d} s&#39;&#39;}
\end{aligned}
\]</span></p>
<p>我们这一次观察到了如上述的递归现象，红色部分始终保持结构一致，并且每展开一次就会得到类似绿色部分的一个常数项。</p>
<p>注意到：</p>
<p><span class="math display">\[
\P_{\pi_{\b\theta}}(s \mathop{\to}^{+\infty} s_\bot) = 0
\]</span></p>
<p>所以上述展开中红色部分在无穷次递归后会变为零，那么上述式子应当在无穷次递归后仅仅留下绿色的常数项的累加：</p>
<p><span class="math display">\[
\nabla_{\b\theta}V^{\pi_{\b\theta}}(s) = \sum_{k = 0}^{+\infty} \int_{s_\bot \in \mathcal{S}} \P_{\pi_{\b\theta}}(s \mathop{\to}^k s_\bot)\phi(s_\bot) {\rm d} s_\bot
\]</span></p>
<p>根据定义，实际上我们有：</p>
<p><span class="math display">\[
\sum_{k = 0}^{+\infty}\P_{\pi_{\b\theta}}(s \mathop{\to}^k s_\bot) = d^{\pi_{\b\theta}}(s_\bot)
\]</span></p>
<p>那么，考虑到对策略的评估实际上就是对该策略下初态价值的评估，我们得到：</p>
<p><span class="math display">\[
\begin{aligned}
\nabla_{\b\theta}\mathcal{J}(\b\theta) &amp;= \nabla_{\b\theta} V^{\pi_{\b\theta}}(s_0) \\
&amp;= \sum_{k = 0}^{+\infty} \int_{s_\bot \in \mathcal{S}} \P_{\pi_{\b\theta}}(s_0 \mathop{\to}^k s_\bot)\phi(s_\bot) {\rm d} s_\bot \\
&amp;= \int_{s_\bot \in \mathcal{S}} \left[\sum_{k = 0}^{+\infty} \P_{\pi_{\b\theta}}(s_0 \mathop{\to}^k s_\bot)\right] \phi(s_\bot) {\rm d} s_\bot \\
&amp;= \int_{s_\bot \in \mathcal{S}} d^{\pi_{\b\theta}}(s_\bot) \phi(s_\bot) {\rm d} s_\bot \\
&amp;= \int_{s_\bot \in \mathcal{S}} d^{\pi_{\b\theta}}(s_\bot) \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) {\rm d} a {\rm d} s_\bot
\end{aligned}
\]</span></p>
<p>将 <span class="math inline">\(s_\bot\)</span> 替换回 <span class="math inline">\(s\)</span> 就得到 Policy gradient theorem 的公式：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \int_{s \in \mathcal{S}}\left[d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s) {\rm d} a\right] {\rm d} s
\]</span></p>
<p>为了让计算机便于计算，我们对上述计算式作出进一步变形：</p>
<p><span class="math display">\[
\begin{aligned}
\nabla_{\b\theta}\mathcal{J}(\b\theta) &amp;= \int_{s \in \mathcal{S}}\left[d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\pi_{\b\theta}(a \mid s){\rm d} a\right]{\rm d} s \\
&amp;= \int_{s \in \mathcal{S}}\left[d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}}Q^{\pi_{\b\theta}}(s, a)\pi_{\b\theta}(a \mid s)\frac{\nabla_{\b\theta}\pi_{\b\theta}(a \mid s)}{\pi_{\b\theta}(a \mid s)}{\rm d} a\right]{\rm d} s \\
&amp;= \int_{s \in \mathcal{S}}\int_{a \in \mathcal{A}} (d^{\pi_{\b\theta}}(s)\pi_{\b\theta}(a \mid s)) \cdot (Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)){\rm d} a {\rm d} s \\
&amp;= \opE_{(s, a) \sim \pi_{\b\theta}} [Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\end{aligned}
\]</span></p>
<p>为了计算这个期望，我们可以通过 <span class="math inline">\(\pi_{\b\theta}\)</span> 确定转移过程 <span class="math inline">\(\b\tau\)</span>，之后将转移过程上的所有 <span class="math inline">\((s, a)\)</span> 代入：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\]</span></p>
<h2 id="代码示例-4">代码示例</h2>
<p>这里使用 Reinforce 方法实现 Policy Gradients，这是最为基本的一种实现方式，是一种回合制更新策略。</p>
<p>首先我们使用两层全连接层作为随机策略，其参数为 <span class="math inline">\(\b\theta\)</span>，网络整体结构为：</p>
<p><img src="/uploads/note-of-rl/2.png" /></p>
<p>之后我们需要在随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 指导下得到的一整个回合信息：</p>
<p><span class="math display">\[
s_1, a_1, r_1; s_2, a_2, r_2; s_3, \cdots; s_T, a_T, r_T; {\rm terminal}
\]</span></p>
<p>在将状态、行为、奖励列表传入网络之前，我们需要对奖励列表根据参数 <span class="math inline">\(\gamma\)</span> 作出衰减并累计，同时将其均值归零标准差归一，这样就完成了 reward 的规范化。</p>
<p>下面考虑我们之前计算的梯度：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [G_t\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\]</span></p>
<p>这里上述序列就是一个简单的抽样，我们用该抽样近似表示期望，这样就能够得到更新为：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \frac{1}{T}\sum_{i = 1}^T [G_i \nabla_{\b\theta}\ln \pi_{\b\theta}(a_i \mid s_i)]
\]</span></p>
<p>考虑到 <span class="math inline">\(G_{i}\)</span> 对 <span class="math inline">\(\b\theta\)</span> 是常数，那么：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \nabla_{\b\theta}\frac{1}{T}\sum_{i = 1}^T [G_{i}\ln \pi_{\b\theta}(a_i \mid s_i)]
\]</span></p>
<p>梯度是容易实现的，我们只需要计算出下述式子（即目标式）：</p>
<p><span class="math display">\[
\frac{1}{T}\sum_{i = 1}^T [G_{i}\ln \pi_{\b\theta}(a_i \mid s_i)]
\]</span></p>
<p>然后将其传入优化器，交由优化器推算其梯度并附加到 <span class="math inline">\(\b\theta\)</span> 上即可。</p>
<p>基于这个式子，我们观察代码中 loss 的计算：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Policy-gradients/pg.py - def _build_net</span></span><br><span class="line"></span><br><span class="line">all_action = tf.keras.layers.Dense(...)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.name_scope(<span class="string">&quot;loss&quot;</span>):</span><br><span class="line">    <span class="comment"># To maximize total reward (log_p * R) is to minimize -(log_p * R)</span></span><br><span class="line">    <span class="comment"># And the tf only have minimize(loss)</span></span><br><span class="line">    neg_log_prob = tf.nn.sparse_softmax_cross_entropy_with_logits(</span><br><span class="line">        logits = all_action,</span><br><span class="line">        labels = self.tf_action_list) <span class="comment"># This is negative log of chosen action</span></span><br><span class="line"></span><br><span class="line">    loss = tf.reduce_mean(neg_log_prob * self.tf_reward_list) <span class="comment"># Reward guided loss</span></span><br></pre></td></tr></table></figure>
<p>这里用到了 <code>tf.nn.sparse_softmax_cross_entropy_with_logits</code> 函数，这个函数接受的参数中 <code>logits</code> 形状为 <code>[batch_size, n_action]</code>，<code>labels</code> 形状为 <code>[n_action]</code>，<code>labels</code> 参数中的项代表该 batch 给出的分类结果。返回值的形状则为 <code>[n_action]</code>。</p>
<p>对于每一个 batch，该函数首先将 <code>logits</code> 对应行取 softmax，并取出序号为 <code>labels</code> 参数指定的项，取其负对数作为该 batch 的结果。</p>
<p>比如对于某 batch，其 <code>logits</code> 为 <span class="math inline">\(\{L_j\}_{1 \leq j \leq N}\)</span>，这里 <span class="math inline">\(N\)</span> 为 <code>n_action</code>，而该 batch 的 <code>labels</code> 为 <span class="math inline">\(M(1 \leq M \leq N)\)</span>，那么最后对该 batch，该函数返回：</p>
<p><span class="math display">\[
R = -\ln\left(\frac{e^{L_M}}{\sum_{j = 1}^N e^{L_j}}\right)
\]</span></p>
<p>而我们也发现我们也是通过 softmax 来定义动作的概率：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Policy-gradients/pg.py - def _build_net</span></span><br><span class="line"></span><br><span class="line">self.all_action_prob = tf.nn.softmax(all_action, name = <span class="string">&quot;action_prob&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>也就是说：</p>
<p><span class="math display">\[
\pi_{\b\theta}(a_i \mid s_i) = \frac{e^{L_{a_i}}}{\sum_{j = 1}^N e^{L_j}}
\]</span></p>
<p>所以 <code>tf.nn.sparse_softmax_cross_entropy_with_logits</code> 的返回值实际上就是下述数列构成的向量：</p>
<p><span class="math display">\[
-\ln\pi_{\b\theta}(a_1 \mid s_1), -\ln\pi_{\b\theta}(a_2 \mid s_2), \cdots, -\ln\pi_{\b\theta}(a_i \mid s_i), \cdots, -\ln\pi_{\b\theta}(a_T \mid s_T)
\]</span></p>
<p>将这个数列和规范化后的 reward 数组逐项相乘，求取所有积的平均值就得到了目标式的相反数。这里求出其相反数的目的是通过优化器最小化负梯度，得到最大化梯度从而实现梯度上升。</p>
<p>这样我们就给出了 Policy gradients 的基本实现。</p>
<h1 id="actor-critic">Actor Critic</h1>
<p>我们注意到 Q Learning 无法处理决策空间无限的问题，而 Policy Gradients 又仅能完成回合更新，效率低。为了结合这两者的优点，这里介绍 Actor Critic 网络。</p>
<p>Actor Critic 的基本思路是，利用一个基于概率的 Actor 网络随机给出行为，利用一个基于价值的 Critic 网络给出 Actor 网络行为的评价。具体而言，Actor 网络不断进行梯度上升，而 Critic 网络会判定本次上升是否合理，其会根据其学习到的规则来衰减本次 Actor 的梯度上升。</p>
<p>单步更新还有一个好处，如果一个完整的转移过程 <span class="math inline">\(\b\tau\)</span> 中既需要上升参数，又需要下降参数，这两个都需要细节学习的内容会因为沿着路径累计而消失，从而两者均没有学习到。</p>
<h2 id="数学推理">数学推理</h2>
<p>这里我们聚焦于 Actor Critic 的基本数学原理，我们思考 Policy Gradients 的梯度计算：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [Q^{\pi_{\b\theta}}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\]</span></p>
<p>我们下面将其扩展为 Actor 网络的行为。</p>
<p>现在由于引入了 Critic 网络，所以 Actor 的更新也变成了在线单步更新。也就是说我们在逐探索转移过程，在某一时刻到达状态 <span class="math inline">\(s\)</span>，并且根据 Actor 网络 <span class="math inline">\(\pi_{\b\theta}\)</span> 选择了行为 <span class="math inline">\(a\)</span>，那么此时只需要完成下述单步更新即可：</p>
<p><span class="math display">\[
\b\theta \leftarrow \b\theta + \alpha_{\b\theta}Q^{\b w}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)
\]</span></p>
<p>这里 <span class="math inline">\(\alpha_{\b\theta}\)</span> 为 Actor 网络 <span class="math inline">\(\pi_{\b\theta}\)</span> 的学习率，这里 <span class="math inline">\(\b w\)</span> 是 Critic 网络的参数。</p>
<p>注意到这里 <span class="math inline">\(Q\)</span> 的参数是 <span class="math inline">\(\b w\)</span> 而非 <span class="math inline">\(\b\theta\)</span>，这是因为我们需要将 Actor 的评价权力交给 Critic 网络，用 Critic 的输出来控制 Actor 参数的更新。</p>
<p>而 Critic 的数学原理就是 Q Learning 的 TD Error 思想。观察我们对一个状态的价值评估函数：</p>
<p><span class="math display">\[
V^{\b w}(s) = \opE_{\b\tau \sim \b w} \left[G_t(\b\tau) \mid s_t = s\right]
\]</span></p>
<p>而另外一方面：</p>
<p><span class="math display">\[
G_t(\b\tau) = \sum_{k = 0}^{+\infty} \gamma^k r_{t + k + 1} = r_{t + 1} + \gamma\sum_{k = 0}^{+\infty} \gamma^k r_{t + k + 2} = r_{t + 1} + \gamma G_{t + 1}(\b\tau)
\]</span></p>
<p>所以：</p>
<p><span class="math display">\[
\begin{aligned}
V^{\b w}(s) &amp;= \opE_{\b\tau \sim \b w} \left[G_t(\b\tau) \mid s_t = s\right] \\
&amp;= \opE_{\b\tau \sim \b w} \left[r_{t + 1} + \gamma G_{t + 1}(\b\tau) \mid s_t = s\right] \\
&amp;= \opE_{\b\tau \sim \b w} \left[r_{t + 1} \mid s_t = s\right] + \gamma\opE_{\b\tau \sim \b w}\left[G_{t + 1}(\b\tau) \mid s_t = s\right] \\
&amp;= \opE_{\b\tau \sim \b w} \left[r_{t + 1} \mid s_t = s\right] + \gamma\opE_{\b\tau \sim \b w}\left[G_{t + 1}(\b\tau) \mid s_{t + 1} = s&#39;\right] \\
&amp;= \opE_{\b\tau \sim \b w} \left[r_{t + 1} \mid s_t = s\right] + \gamma V^{\b w}(s&#39;)
\end{aligned}
\]</span></p>
<p>这里 <span class="math inline">\(s&#39;\)</span> 为转移过程中 <span class="math inline">\(s\)</span> 的下一个状态。这说明了 <span class="math inline">\(r_{t + 1} + \gamma V^{\b w}(s&#39;) - V^{\b w}(s)\)</span> 构成了一个无偏估计，从而可以用此修正对 <span class="math inline">\(V^{\b w}\)</span> 的估计。而这里 <span class="math inline">\(r_{t + 1} + \gamma V^{\b w}(s&#39;) - V^{\b w}(s)\)</span> 就被称为 TD Error。</p>
<p>上述推理对 <span class="math inline">\(Q^{\b w}\)</span> 依然有效，与之对应的 <span class="math inline">\(r_{t + 1} + \gamma Q^{\b w}(s&#39;, a&#39;) - Q^{\b w}(s, a)\)</span> 也可以称为 TD Error。</p>
<p>从而 Critic 网络的更新策略为首先计算 TD Error：</p>
<p><span class="math display">\[
\delta_t \leftarrow r_{t + 1} + \gamma Q^{\b w}(s&#39;, a&#39;) - Q^{\b w}(s, a)
\]</span></p>
<p>之后用 TD Error 更新 Critic 网络参数：</p>
<p><span class="math display">\[
\b w \leftarrow \b w + \alpha_{\b w}\delta_t\nabla_{\b w}Q^{\b w}(s, a)
\]</span></p>
<p>这也就是最经典的 Actor Critic 算法。</p>
<h1 id="advantage-actor-critic-a2c">Advantage Actor Critic (A2C)</h1>
<p>我们注意到直接让 Critic 学习 Q 值存在一个问题，那就是 Q 值均值很大，但是波动很小。在均值很大的背景下，较小的波动的分布可能被网络忽略，所以相比较于直接使用 Q 值，我们不妨设立 Baseline 函数，替换为使用 Q 值和 Baseline 的差值。这个差值就是 Advantage 函数。</p>
<p>我们首先需要在数学上论证引入 Baseline 并不影响无偏性，也就是说需要证明：</p>
<p><span class="math display">\[
\begin{aligned}
\nabla_{\b\theta}\mathcal{J}(\b\theta) &amp;= \opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [Q^{\b w}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)] \\
&amp;= \opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [(Q^{\b w}(s, a) - b(s)) \nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\end{aligned}
\]</span></p>
<p>事实上，我们只需要令 Baseline 函数和行为 <span class="math inline">\(a\)</span> 无关，就可以保证上述关系成立。证明思路为考虑下面的式子，如下，首先展开数学期望：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\opE_{\b\tau \sim \pi_{\b\theta}} \frac{1}{|\b\tau|} \sum_{(s, a) \in \b\tau} [b(s) \nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)] \\
=&amp; \opE_{(s, a) \sim \pi_{\b\theta}} [b(s) \nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)] \\
=&amp; \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s) [b(s) \nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)] {\rm d}a {\rm d}s \\
\end{aligned}
\]</span></p>
<p>根据：</p>
<p><span class="math display">\[
\pi_{\b\theta}(a \mid s) \cdot \nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s) = \nabla_{\b\theta}\pi_{\b\theta}(a \mid s)
\]</span></p>
<p>得到下述：</p>
<p><span class="math display">\[
{\rm LHS} = \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}} b(s) \nabla_{\b\theta} \pi_{\b\theta}(a \mid s) {\rm d}a {\rm d}s \\
\]</span></p>
<p>考虑到 <span class="math inline">\(b(s)\)</span> 和 <span class="math inline">\(a\)</span> 的无关性，继续展开得到：</p>
<p><span class="math display">\[
\begin{aligned}
{\rm LHS} &amp;= \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s)b(s) \nabla_{\b\theta}\left[\int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s) {\rm d}a\right] {\rm d}s \\
&amp;= \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s)b(s) (\nabla_{\b\theta} 1) {\rm d}s \\
&amp;= 0
\end{aligned}
\]</span></p>
<p>据此显然就能得到无偏性依然保持。</p>
<h2 id="bellman-equation">Bellman equation</h2>
<p>我们一般选取的 Baseline 函数就是该状态的评价函数 <span class="math inline">\(V^{\b w}(s)\)</span>，所以此时我们定义 Advantage 函数：</p>
<p><span class="math display">\[
A^{\b w}(s, a) := Q^{\b w}(s, a) - V^{\b w}(s)
\]</span></p>
<p>之前我们得到过下述结论：</p>
<p><span class="math display">\[
Q^{\b w}(s, a) = \int_{s&#39; \in \mathcal{S}} \P_{\mathcal{E}}(s&#39; \mid s, a)\left[r + V^{\b w}(s&#39;)\right] {\rm d}s&#39; = \opE_{s&#39; \sim \b w} \left[r + V^{\b w}(s&#39;)\right]
\]</span></p>
<p>那么我们不妨把 Advantage 函数写为：</p>
<p><span class="math display">\[
A^{\b w}(s, a) := r + V^{\b w}(s&#39;) - V^{\b w}(s)
\]</span></p>
<p>而 Critic 就需要学习 Advantage 函数，相应的 Actor 的梯度计算更新为：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}(\b\theta) = \opE_{(s, a) \sim \pi_{\b\theta}} [A^{\b w}(s, a)\nabla_{\b\theta}\ln \pi_{\b\theta}(a \mid s)]
\]</span></p>
<h2 id="代码示例-5">代码示例</h2>
<p>这里采用这样的网络结构：</p>
<p><img src="/uploads/note-of-rl/3.png" /></p>
<p>Critic 网络的结构很简单，其接受一个状态，输出这个状态的价值，即 Advantage 函数的作用。而其 loss 的计算即为 TD Error 的平方。这样我们训练 Critic 的方法就很明确，只需要不断在状态转移过程中计算 TD Error 后平方并将其反向传播即可：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Actor-Critic/ac.py - class Critic def __init__</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;critic_squared_td_error&quot;</span>):</span><br><span class="line">    self.td_error = self.reward + self.gamma * self.next_state_value - self.state_value</span><br><span class="line">    self.loss = tf.square(self.td_error)</span><br></pre></td></tr></table></figure>
<p>Critic 引导 Actor 的方式为将 TD Error 传递给 Actor，与梯度求积后进行反向传播：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/Actor-Critic/ac.py - class Actor def __init__</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;action_value&quot;</span>):</span><br><span class="line">    log_prob = tf.log(self.action_prob[<span class="number">0</span>, self.action])</span><br><span class="line">    <span class="comment"># TD Error - scalar</span></span><br><span class="line">    self.action_value = tf.reduce_mean(log_prob * self.td_error) <span class="comment"># Advantage (TD_error) guided loss</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;actor_train&quot;</span>):</span><br><span class="line">    self.train_op = tf.train.AdamOptimizer(lr).minimize(-self.action_value)</span><br></pre></td></tr></table></figure>
<h1 id="deep-deterministic-policy-gradients-ddpg">Deep Deterministic Policy Gradients (DDPG)</h1>
<p>DDPG 的主要思想是将 DQN 的双网络思想借鉴到 Actor Critic 结构中。在 DDPG 中，Actor 具有两个相同结构的网络，Critic 也具有两个相同结构的网络。</p>
<p>在具体介绍 DDPG 之前，我们首先简单介绍 Deterministic Policy Gradients，即 DPG。这里 Deterministic 的含义就是区别于一般的 Policy Gradients 最后输出的是行为空间 <span class="math inline">\(\mathcal{A}\)</span> 上的概率分布，DPG 会直接给出某个状态下应当采取何种行为。其决策函数我们标记为：</p>
<p><span class="math display">\[
a = \mu_{\b\theta}(s)
\]</span></p>
<p>我们用符号 <span class="math inline">\(\mu\)</span> 表示确定性策略，与随机策略 <span class="math inline">\(\pi\)</span> 区分。</p>
<p>我们首先观察随机策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 下的评价函数表达：</p>
<p><span class="math display">\[
\mathcal{J}_{\pi}(\b\theta) = \int_{s \in \mathcal{S}} d^{\pi_{\b\theta}}(s) \int_{a \in \mathcal{A}} \pi_{\b\theta}(a \mid s)Q^{\pi_{\b\theta}}(s, a) {\rm d}a {\rm d}s
\]</span></p>
<p>两者实际上都表达出了同样的含义，即策略的评价函数就是 Q 值的数学期望：</p>
<p><span class="math display">\[
\mathcal{J}_{\pi}(\b\theta) = \opE_{(s, a) \sim \pi_{\b\theta}} Q^{\pi_{\b\theta}}(s, a)
\]</span></p>
<p>那么在确定性策略下，策略的评价函数应当定义为：</p>
<p><span class="math display">\[
\mathcal{J}_{\mu}(\b\theta) := \opE_{s \sim \mu_{\b\theta}} Q^{\mu_{\b\theta}}(s, \mu_{\b\theta}(s)) = \int_{s \in \mathcal{S}} d^{\mu_{\b\theta}}(s)Q^{\mu_{\b\theta}}(s, \mu_{\b\theta}(s)) {\rm d}s
\]</span></p>
<p>这里梯度的推理则较为简单，直接使用复合函数的导数法则即可：</p>
<p><span class="math display">\[
\begin{aligned}
\nabla_{\b\theta}\mathcal{J}_{\mu}(\b\theta) &amp;= \int_{s \in \mathcal{S}} d^{\mu_{\b\theta}}(s) \nabla_{\b\theta}Q^{\mu_{\b\theta}}(s, \mu_{\b\theta}(s)) {\rm d}s \\
&amp;= \int_{s \in \mathcal{S}} d^{\mu_{\b\theta}}(s) \nabla_{a} \left.Q^{\mu_{\b\theta}}(s, a)\right|_{a = \mu_{\b\theta}(s)} \nabla_{\b\theta}\mu_{\b\theta}(s) {\rm d}s \\
&amp;= \opE_{s \sim \mu_{\b\theta}} \left[\nabla_{a} \left.Q^{\mu_{\b\theta}}(s, a)\right|_{a = \mu_{\b\theta}(s)} \nabla_{\b\theta}\mu_{\b\theta}(s)\right]
\end{aligned}
\]</span></p>
<p>基于此，我们在 DPG 的基础上引入 DQN 的双网络思路。我们记 Actor 网络中在线更新网络的参数为 <span class="math inline">\(\b\theta\)</span>，目标网络的参数为 <span class="math inline">\(\b\theta^-\)</span>。Critic 网络中在线更新网络的参数为 <span class="math inline">\(\b w\)</span>，目标网络的参数为 <span class="math inline">\(\b w^-\)</span>。初始化时应当令 <span class="math inline">\(\b\theta = \b\theta^-, \b w = \b w^-\)</span>。</p>
<p>DDPG 的算法流程完全基于 DQN 算法，这里简单介绍如下：</p>
<ul>
<li>首先初始化一个容量为 <span class="math inline">\(N\)</span> 的记忆库 <span class="math inline">\(D\)</span> 用于存放先前的经验，这里 <span class="math inline">\(N\)</span> 是先前设定的超参</li>
<li>随机初始化结构一致的 Critic 网络 <span class="math inline">\(Q, \hat Q\)</span>，其初始化参数分别为 <span class="math inline">\(\b\theta, \b\theta^-\)</span>，初始化的时候保证 <span class="math inline">\(\b\theta = \b\theta^-\)</span></li>
<li>随机初始化结构一致的 Actor 网络 <span class="math inline">\(\mu, \hat\mu\)</span>，其初始化参数分别为 <span class="math inline">\(\b w, \b w^-\)</span>，初始化的时候保证 <span class="math inline">\(\b w = \b w^-\)</span></li>
<li>对模型按照下述流程训练 <span class="math inline">\(M\)</span> 个 epoch，这里 <span class="math inline">\(M\)</span> 为先前设定的超参
<ul>
<li>初始化随机数发生器 <span class="math inline">\(\mathcal{N}\)</span></li>
<li>假定初始状态 <span class="math inline">\(s_1\)</span>，初始化 <span class="math inline">\(s = s_1\)</span></li>
<li>推演下述状态转移 <span class="math inline">\(T\)</span> 次，这里 <span class="math inline">\(T\)</span> 为先前设定的超参，下述过程的 <span class="math inline">\(t\)</span> 表示目前转移的次数
<ul>
<li>使用 Actor 网络选取行为 <span class="math inline">\(a_t := \mu_{\b\theta}(s_t) + \mathcal{N}(t)\)</span></li>
<li>令 <span class="math inline">\(r_t\)</span> 表示在状态 <span class="math inline">\(s_t\)</span> 的条件下执行行为 <span class="math inline">\(a_t\)</span> 得到的直接收益</li>
<li>令 <span class="math inline">\(s_{t + 1}\)</span> 表示在状态 <span class="math inline">\(s_t\)</span> 的条件下执行行为 <span class="math inline">\(a_t\)</span> 转移到的状态</li>
<li>将描述状态转移的元组 <span class="math inline">\((s_t, a_t, r_t; s_{t + 1})\)</span> 存入 <span class="math inline">\(D\)</span></li>
<li>从 <span class="math inline">\(D\)</span> 中抽取 <span class="math inline">\(B\)</span> 组数据，更新 <span class="math inline">\(\b\theta, \b w\)</span>，具体流程见下述，这里 <span class="math inline">\(B\)</span> 是先前设定的超参</li>
<li>令 <span class="math inline">\(\b\theta^- \leftarrow \tau\b\theta + (1 - \tau)\b\theta^-\)</span>，这里 <span class="math inline">\(\tau\)</span> 是先前设定的超参</li>
<li>令 <span class="math inline">\(\b w^- \leftarrow \tau\b w + (1 - \tau)\b w^-\)</span>，这里 <span class="math inline">\(\tau\)</span> 是先前设定的超参</li>
</ul></li>
</ul></li>
</ul>
<p>具体需要说明的是如何更新 <span class="math inline">\(\b\theta, \b w\)</span>。首先观察 Critic 网络，其几乎完全就是 DQN 更新方式。下述为 DQN 的 loss 计算：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DQN}(\b\theta) := \opE_{(s, a, r; s&#39;) \sim U(D)} \left[r + \gamma\max_{a&#39; \in \Gamma(s&#39;)} \hat Q(s&#39;, a&#39;; \b\theta^-) - Q(s, a; \b\theta)\right]^2
\]</span></p>
<p>而 DDPG 中 Critic 的 loss 则为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DDPG(Critic)}(\b w) := \opE_{(s, a, r; s&#39;) \sim U(D)} \left[r + \gamma\hat Q(s&#39;, \hat\mu_{\b\theta^-}(s&#39;); \b w^-) - Q(s, a; \b w)\right]^2
\]</span></p>
<p>显然，仅仅是将通过贪心获取 <span class="math inline">\(s&#39;\)</span> 状态下的下一行为修改为通过 Actor 网络来获取 <span class="math inline">\(s&#39;\)</span> 状态下的下一行为，这样的设计使得 Critic 更为现实化。</p>
<p>Actor 网络的梯度则先前已经证明：</p>
<p><span class="math display">\[
\nabla_{\b\theta}\mathcal{J}_{\mu}(\b\theta) = \opE_{s \sim \mu_{\b\theta}} \left[\nabla_{a} \left.Q(s, a; \b w)\right|_{a = \mu_{\b\theta}(s)} \nabla_{\b\theta}\mu_{\b\theta}(s)\right]
\]</span></p>
<p>这里仅仅将严格的 Q 值函数替换为 Critic 网络给出的估计值。</p>
<p>可以看出 DDPG 和 DQN 不同的地方仅在于：</p>
<ul>
<li>选取行为是通过 Actor 网络完成的，而非使用 epsilon greedy 策略，使用神经网络一定程度上也保证了行为的随机性</li>
<li>选取行为的时候加入了全局随机数发生器增加探索未知状态的可能</li>
<li>每一回合均更新目标网络的参数，但是使用 Soft update，即通过衰减系数 <span class="math inline">\(\tau\)</span> 进行更新，而非 DQN 中完全同步</li>
<li>loss 的计算融入了 Policy Gradients 的思路</li>
</ul>
<p>这种能够打乱学习顺序的方式，很好地解决了传统 Actor Critic 中由于经常抽样到相同的转移路径导致反复学习无用知识的问题。</p>
<h2 id="代码示例-6">代码示例</h2>
<p>这里的网络结构为：</p>
<p><img src="/uploads/note-of-rl/4.png" /></p>
<p>此时的网络结构图并不一定清晰，所以我们基于代码完成分析。</p>
<p>这里直接把构建网络的代码贴过来：</p>
<figure class="highlight python"><figcaption><span>Python</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment"># $&#123;repo&#125;/DDPG/ddpg.py - class DDPG def __init__</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Placeholders</span></span><br><span class="line">self.state = tf.placeholder(tf.float32, [<span class="literal">None</span>, n_feature], <span class="string">&quot;state&quot;</span>)</span><br><span class="line">self.next_state = tf.placeholder(tf.float32, [<span class="literal">None</span>, n_feature], <span class="string">&quot;next_state&quot;</span>)</span><br><span class="line">self.reward = tf.placeholder(tf.float32, [<span class="literal">None</span>, <span class="number">1</span>], <span class="string">&quot;reward&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;actor&quot;</span>):</span><br><span class="line">    self.action = self._build_actor(self.state, scope = <span class="string">&quot;eval&quot;</span>, trainable = <span class="literal">True</span>)</span><br><span class="line">    next_action = self._build_actor(self.next_state, scope = <span class="string">&quot;target&quot;</span>, trainable = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> tf.variable_scope(<span class="string">&quot;critic&quot;</span>):</span><br><span class="line">    <span class="comment"># Assign self.action = action in memory when calculating Q value for td_error,</span></span><br><span class="line">    <span class="comment"># Otherwise the self.action is from Actor when updating Actor</span></span><br><span class="line">    q_value = self._build_critic(self.state, self.action, scope = <span class="string">&quot;eval&quot;</span>, trainable = <span class="literal">True</span>)</span><br><span class="line">    next_q_value = self._build_critic(self.next_state, next_action, scope = <span class="string">&quot;target&quot;</span>, trainable = <span class="literal">False</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Networks parameters</span></span><br><span class="line">self.actor_eval_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope = <span class="string">&quot;actor/eval&quot;</span>)</span><br><span class="line">self.actor_target_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope = <span class="string">&quot;actor/target&quot;</span>)</span><br><span class="line">self.critic_eval_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope = <span class="string">&quot;critic/eval&quot;</span>)</span><br><span class="line">self.critic_target_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope = <span class="string">&quot;critic/target&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Target net replacement</span></span><br><span class="line">self.soft_replace = [</span><br><span class="line">    tf.assign(t, (<span class="number">1</span> - self.tau) * t + self.tau * e)</span><br><span class="line">        <span class="keyword">for</span> t, e <span class="keyword">in</span> <span class="built_in">zip</span>(</span><br><span class="line">            self.actor_target_params + self.critic_target_params,</span><br><span class="line">            self.actor_eval_params + self.critic_eval_params</span><br><span class="line">        )</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">q_target = self.reward + self.gamma * next_q_value</span><br><span class="line">td_error = tf.losses.mean_squared_error(labels = q_target, predictions = q_value)</span><br><span class="line">self.critic_train = tf.train.AdamOptimizer(critic_lr).minimize(td_error, var_list = self.critic_eval_params)</span><br><span class="line"></span><br><span class="line">actor_loss = -tf.reduce_mean(q_value)</span><br><span class="line">self.actor_train = tf.train.AdamOptimizer(actor_lr).minimize(actor_loss, var_list = self.actor_eval_params)</span><br></pre></td></tr></table></figure>
<p>这里 <code>self._build_actor</code> 以及 <code>self._build_critic</code> 是构建 Actor 和 Critic 网络具体结构的函数，这里省略。</p>
<p>可以看到，首先需要构建 Tensorflow Placeholder，之后构建 Actor 的 Eval 和 Target 网络，Critic 的 Eval 和 Target 网络。其中 Actor 网络接受的输入是当前状态，给出的输出是行为选择。而 Critic 网络接受的输入是当前状态和 Actor 网络给出的行为选择，给出的输出是行为的评估值。</p>
<p>之后需要编写软替换算子，直接遍历所有网络参数，对其施以软替换即可。</p>
<p>最后是 loss 的计算。Critic 网络的 loss 较为简单，公式为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm DDPG(Critic)}(\b w) := \opE_{(s, a, r; s&#39;) \sim U(D)} \left[r + \gamma\hat Q(s&#39;, \hat\mu_{\b\theta^-}(s&#39;); \b w^-) - Q(s, a; \b w)\right]^2
\]</span></p>
<p>而代码中也只是简单将这个公式转换为代码。</p>
<p>之后是 Actor，我们注意到评价函数就是 Q 值的期望，所以只需要把 <code>q_value</code> 求取平均送入优化器求取其梯度即可。</p>
<p>后面的具体运行学习过程的代码和 DQN 类似，从记忆库中抽样，之后将其送入网络运算即可。</p>
<p>实际上 DDPG 就是 AC 和 DQN 代码的结合，基本上的原理并没有很大的差别。</p>
<p>使用上述代码获得的 Reward 曲线为：</p>
<p><img src="/uploads/note-of-rl/5.png" /></p>
<h1 id="asynchronous-advantage-actor-critic-a3c">Asynchronous Advantage Actor Critic (A3C)</h1>
<p>A3C 相较于 A2C 多出的特征是 Asynchronous，即异步。其核心思想是让多个网络尝试不同的行为，获得各类反馈传播到主网络。这样主网络由于接收到多个副网络的更新请求，就不会发生连续更新导致连续学习无用知识的问题，这样就可以抛弃 DQN 的记忆库策略解决这个问题。此外，主网络对副网络的指导也能够加速收敛的速度。</p>
<p>这里并不想过多解释 A3C 代码，因为其核心思路并没有发生变化，这里直接给出训练结果：</p>
<p><img src="/uploads/note-of-rl/6.png" /></p>
<h1 id="trust-region-policy-optimization-trpo">Trust Region Policy Optimization (TRPO)</h1>
<p>TRPO 是引入最后的 DPPO 算法之前，我们需要事先了解的一个简单的算法。</p>
<h2 id="kl-散度">KL 散度</h2>
<p>KL 散度是一种度量两个随机分布之间距离的一种方式，对于空间 <span class="math inline">\(X\)</span> 上的概率分布 <span class="math inline">\(P, Q\)</span>，其 KL 散度定义为：</p>
<p><span class="math display">\[
D_{\rm KL}(P \parallel Q) := \opE_{x \sim P}\left[\ln \frac{P(x)}{Q(x)}\right] = \int_{x \in X} P(x)\ln \frac{P(x)}{Q(x)} {\rm d}x
\]</span></p>
<p>KL 度量的意义在于，如果我们将 <span class="math inline">\(P\)</span> 认为是标准分布，即需要学习的概率分布。而 <span class="math inline">\(Q\)</span> 是机器给出的预测分布，那么 KL 散度实际上给出了当前机器给出的预测和真实分布的距离，机器应当尽可能缩小 KL 散度来逼近真实分布。</p>
<p>可以证明 <span class="math inline">\(D_{\rm KL}(P \parallel Q) = 0\)</span> 当且仅当 <span class="math inline">\(P \equiv Q\)</span>。</p>
<p>这是显然的：</p>
<p><span class="math display">\[
\begin{aligned}
D_{\rm KL}(P \parallel Q) &amp;= \int_{x \in X} P(x)\ln \frac{P(x)}{Q(x)} {\rm d}x = -\int_{x \in X} P(x) \ln \frac{Q(x)}{P(x)} {\rm d}x \\
&amp;\geq -\int_{x \in X} P(x) \left(\frac{Q(x)}{P(x)} - 1\right) {\rm d}x = -\int_{x \in X} (Q(x) - P(x)) {\rm d}x \\
&amp;= 0
\end{aligned}
\]</span></p>
<p>显然等号仅仅在 <span class="math inline">\(P \equiv Q\)</span> 的时候得到。</p>
<p>另外，我们需要说明 KL 散度并不是对称的，也就是说 KL 散度虽然直观上可以理解为一种度量，但是实际上并不满足数学上度量的定义：</p>
<p><span class="math display">\[
D_{\rm KL}(P \parallel Q) \neq D_{\rm KL}(Q \parallel P)
\]</span></p>
<p>在先前提到的机器学习场合下，往往把 <span class="math inline">\(D_{\rm KL}(P \parallel Q)\)</span> 称为前向 KL 散度，而 <span class="math inline">\(D_{\rm KL}(Q \parallel P)\)</span> 则是后向 KL 散度。</p>
<hr />
<p>此外，我们需要说明的是，如果分布 <span class="math inline">\(Q\)</span> 是参数 <span class="math inline">\(\b\theta\)</span> 建模的，那么最小化前向 KL 散度得到的参数 <span class="math inline">\(\b\theta = \argmin_{\b\theta} D_{\rm KL}(P \parallel Q_{\b\theta})\)</span> 等价于极大似然估计。</p>
<p>在此之前，我们需要对机器学习领域中的极大似然估计作出说明。对于参数 <span class="math inline">\(\b\theta\)</span> 建模的，空间 <span class="math inline">\(X\)</span> 上的随机分布 <span class="math inline">\(A\)</span>，我们观测到了样本 <span class="math inline">\(x\)</span>，那么似然函数定义为：</p>
<p><span class="math display">\[
\mathcal{L}(\b\theta) := A_{\b\theta}(x)
\]</span></p>
<p>即似然函数描述了在不同的分布参数之下，我们观测到该样本的概率。那么极大似然估计的思想就是最大化似然函数，作为该样本观测下的参数估计值。</p>
<p>而如果我们观测到了样本列 <span class="math inline">\(\{x_n\} \in X^n\)</span>，那么似然定义为：</p>
<p><span class="math display">\[
\mathcal{L}(\b\theta) := \prod_{k = 1}^n A_{\b\theta}(x_k)
\]</span></p>
<p>机器学习中为了防止连乘下溢，会使用对数似然：</p>
<p><span class="math display">\[
\mathcal{L}&#39;(\b\theta) := \sum_{k = 1}^n \ln A_{\b\theta}(x_k)
\]</span></p>
<p>在这种条件下最大似然估计就是：</p>
<p><span class="math display">\[
\b\theta := \argmax_{\b\theta} \sum_{k = 1}^n \ln A_{\b\theta}(x_k) = \argmax_{\b\theta} \frac{1}{n}\sum_{k = 1}^n \ln A_{\b\theta}(x_k) = \argmax_{\b\theta} \opE_{x \sim \mathcal{D}_A}[\ln A_{\b\theta}(x)]
\]</span></p>
<p>这里 <span class="math inline">\(\mathcal{D}_A\)</span> 是在分布 <span class="math inline">\(A\)</span> 下采样得到的采样分布。</p>
<p>那么回到原先的问题，我们对 KL 散度作变形：</p>
<p><span class="math display">\[
\begin{aligned}
\b\theta &amp;= \argmin_{\b\theta} D_{\rm KL}(P \parallel Q_{\b\theta}) = \argmin_{\b\theta} \opE_{x \sim P}\left[\ln \frac{P(x)}{Q_{\b\theta}(x)}\right] \\
&amp;= \argmin_{\b\theta} \left(\opE_{x \sim P}\left[\ln P(x)\right] - \opE_{x \sim P}\left[\ln Q_{\b\theta}(x)\right]\right) \\
&amp;= \argmin_{\b\theta} \left(-\opE_{x \sim P}\left[\ln Q_{\b\theta}(x)\right]\right) = \argmax_{\b\theta} \opE_{x \sim P}\left[\ln Q_{\b\theta}(x)\right] \\
&amp;\approx \argmax_{\b\theta} \opE_{x \sim \mathcal{D}_P}\left[\ln Q_{\b\theta}(x)\right]
\end{aligned}
\]</span></p>
<p>这里基于 <span class="math inline">\(\mathcal{D}_P \approx P\)</span>，即采样分布近似表示原先分布得到了最后的结果。所以我们证明了最小化 KL 散度得到的参数等价于根据真实分布 <span class="math inline">\(P\)</span> 的样本对分布 <span class="math inline">\(Q\)</span> 作极大似然估计。</p>
<h2 id="off-policy-policy-gradients">Off-policy Policy gradients</h2>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>原创数学题集</title>
    <url>/2022/07/12/orginal-problems/</url>
    <content><![CDATA[<p>一些奇妙的数学想法而已，可能是初中、高中、大学题，反正是弄着玩的。</p>
<span id="more"></span>
<p><span class="math display">\[
\newcommand{\i}{\mathop{\rm i}}
\]</span></p>
<h1 id="problem-1">Problem 1</h1>
<p>已知函数 <span class="math inline">\(f(x) = [x](x - [x]), x \geq 0\)</span>，这里 <span class="math inline">\([x]\)</span> 表示不大于 <span class="math inline">\(x\)</span> 的最大整数。</p>
<p>另外定义函数迭代符号 <span class="math inline">\(f^{(n)}\)</span> 如下：</p>
<p><span class="math display">\[
\begin{cases}
f^{(1)}(x) = f(x) \\
f^{(k + 1)}(x) = f(f^{(k)}(x)), k \in \mathbb{N}^*
\end{cases}
\]</span></p>
<p>证明：对于任何 <span class="math inline">\(x \geq 0\)</span>，都有：</p>
<p><span class="math display">\[
\lim_{n \to \infty} f^{(n)}(x) = 0
\]</span></p>
<h2 id="solution">Solution</h2>
<p>首先证明，<span class="math inline">\(x \geq 1\)</span> 时 <span class="math inline">\(f(x) \leq x - 1\)</span>。</p>
<p>我们不妨记 <span class="math inline">\(\{x\} := x - [x]\)</span>，显然有 <span class="math inline">\(0 \leq \{x\} &lt; 1\)</span>。进一步，根据 <span class="math inline">\(x \geq 1\)</span> 得知 <span class="math inline">\([x] \geq 1\)</span>，那么显然：</p>
<p><span class="math display">\[
([x] - 1)(\{x\} - 1) \leq 0
\]</span></p>
<p>展开得到：</p>
<p><span class="math display">\[
f(x) = [x]\{x\} \leq [x] + \{x\} - 1 = x - 1
\]</span></p>
<p>引理证明完毕，回到原题。</p>
<p>此外，我们需要了解，若 <span class="math inline">\(x \in [0, 1)\)</span>，则有 <span class="math inline">\([x] = 0\)</span>，即 <span class="math inline">\(f(x) = 0\)</span>。</p>
<p>那么我们考虑下述数列，我们即需要证明下述数列极限为零：</p>
<p><span class="math display">\[
x, f(x), f^{(2)}(x), \cdots, f^{(n)}(x), \cdots
\]</span></p>
<p>若 <span class="math inline">\(x \in [0, 1)\)</span>，显然 <span class="math inline">\(f(x) = 0\)</span>，且根据 <span class="math inline">\(f(0) = 0\)</span> 得到 <span class="math inline">\(\forall n \in \mathbb{N}^*\)</span> 有 <span class="math inline">\(f^{(n)}(x) = 0\)</span>，上述数列极限显然为零。</p>
<p>若 <span class="math inline">\(x \geq 1\)</span>，我们只需要证明必然存在 <span class="math inline">\(k \in \mathbb{N}^*\)</span> 使得 <span class="math inline">\(f^{(k)}(x) &lt; 1\)</span> 即可，因为只要该结论成立，就说明 <span class="math inline">\(f^{(k + 1)}(x) = 0\)</span>，从而之后的所有项均为零，结论成立。</p>
<p>使用反证法，如果结论不成立，即 <span class="math inline">\(\forall k \in \mathbb{N}^*\)</span> 有 <span class="math inline">\(f^{(k)}(x) \geq 1\)</span>。那么根据引理：</p>
<p><span class="math display">\[
f^{(k + 1)}(x) \leq f^{(k)}(x) - 1, k \in \mathbb{N}^*
\]</span></p>
<p>所以：</p>
<p><span class="math display">\[
f^{([x])}(x) \leq f^{([x] - 1)}(x) - 1 \leq \cdots \leq f^{(0)}(x) - [x] = x - [x] \in [0, 1)
\]</span></p>
<p>和假设矛盾，故原结论成立。</p>
<p>至此，结论证明完毕。</p>
<h1 id="problem-2">Problem 2</h1>
<p>已知凸多边形 <span class="math inline">\(\mathcal{A}, \mathcal{B}\)</span> 没有公共点，且 <span class="math inline">\(\mathcal{A}\)</span> 的任何一边不平行于 <span class="math inline">\(\mathcal{B}\)</span> 的任何一边。</p>
<p>已知点 <span class="math inline">\(A \in \mathcal{A}, B \in \mathcal{B}\)</span>。给出已知向量 <span class="math inline">\(\boldsymbol t\)</span>，且已知 <span class="math inline">\(\vec{AB} \parallel \boldsymbol{t}\)</span>。</p>
<p>证明：当 <span class="math inline">\(\vec{AB}\)</span> 的长度最小的时候，点 <span class="math inline">\(A, B\)</span> 中必有一个为其所在凸多边形的顶点。</p>
<h2 id="solution-1">Solution</h2>
<p>使用反证法。假设当 <span class="math inline">\(\|\vec{AB}\|_2\)</span> 取到最小值的时候 <span class="math inline">\(A, B\)</span> 中至少有一点位于其所在多边形的内部（即不位于其所在多边形的边界），不妨令 <span class="math inline">\(A\)</span> 位于 <span class="math inline">\(\mathcal{A}\)</span> 的内部。由于 <span class="math inline">\(\mathcal{A} \cap \mathcal{B} = \varnothing\)</span> 与 <span class="math inline">\(B \in \mathcal{B}\)</span>，可以得知 <span class="math inline">\(B\)</span> 位于多边形 <span class="math inline">\(\mathcal{A}\)</span> 的外部。那么线段 <span class="math inline">\(AB\)</span> 显然与 <span class="math inline">\(\mathcal{A}\)</span> 的边界 <span class="math inline">\(\partial\mathcal{A}\)</span> 有交点，不妨记为 <span class="math inline">\(A&#39;\)</span>。那么我们显然得到 <span class="math inline">\(\|\vec{A&#39;B}\|_2 &lt; \|\vec{AB}\|_2\)</span>，这与最小性假设矛盾，假设不成立。故当 <span class="math inline">\(\|\vec{AB}\|_2\)</span> 取到最小值的时候 <span class="math inline">\(A, B\)</span> 均应当位于其所在多边形的边界上。</p>
<p>继续使用反证法。假设当 <span class="math inline">\(\|\vec{AB}\|_2\)</span> 取到最小值的时候 <span class="math inline">\(A, B\)</span> 均不位于其所在多边形的顶点。此时不妨假设 <span class="math inline">\(A\)</span> 所在的 <span class="math inline">\(\mathcal{A}\)</span> 的边为线段 <span class="math inline">\(a\)</span>，<span class="math inline">\(B\)</span> 所在的 <span class="math inline">\(\mathcal{B}\)</span> 的边为线段 <span class="math inline">\(b\)</span>。由 <span class="math inline">\(\mathcal{A}\)</span> 的任何一条边不平行于 <span class="math inline">\(\mathcal{B}\)</span> 的任何一条边知 <span class="math inline">\(a\)</span> 不平行于 <span class="math inline">\(b\)</span>，且据假设知 <span class="math inline">\(A\)</span> 不位于 <span class="math inline">\(a\)</span> 的顶点，<span class="math inline">\(B\)</span> 不位于 <span class="math inline">\(b\)</span> 的顶点。</p>
<p>由于 <span class="math inline">\(a\)</span> 不平行于 <span class="math inline">\(b\)</span>，记 <span class="math inline">\(a\)</span> 所在直线和 <span class="math inline">\(b\)</span> 所在直线的交点为 <span class="math inline">\(C\)</span>，令点 <span class="math inline">\(A&#39;\)</span> 为线段 <span class="math inline">\(AC\)</span> 上一点，过 <span class="math inline">\(A&#39;\)</span> 作 <span class="math inline">\(A&#39;B&#39; \parallel AB\)</span> 与 <span class="math inline">\(b\)</span> 所在直线相交于 <span class="math inline">\(B&#39;\)</span>。显然无论 <span class="math inline">\(A&#39;\)</span> 如何取，均能够满足 <span class="math inline">\(\|\vec{A&#39;B&#39;}\|_2 &lt; \|\vec{AB}\|_2\)</span>。</p>
<p>由于 <span class="math inline">\(A, B\)</span> 均不是其所在线段的顶点，那么存在一个 <span class="math inline">\(\delta_A &gt; 0\)</span> 满足 <span class="math inline">\(\|\vec{AA&#39;}\|_2 &lt; \delta_A\)</span> 时即有 <span class="math inline">\(A&#39; \in a\)</span>，即 <span class="math inline">\(A&#39; \in \mathcal{A}\)</span>。同理也存在类似的 <span class="math inline">\(\delta_B &gt; 0\)</span> 满足 <span class="math inline">\(\|\vec{BB&#39;}\|_2 &lt; \delta_B\)</span> 时即有 <span class="math inline">\(B&#39; \in \mathcal{B}\)</span>。</p>
<p>考虑到 <span class="math inline">\(\triangle CAB \backsim \triangle CA&#39;B&#39;\)</span>，我们有下述关系：</p>
<p><span class="math display">\[
\frac{\|\vec{AA&#39;}\|_2}{\|\vec{BB&#39;}\|_2} = \frac{\|\vec{CA}\|_2}{\|\vec{CB}\|_2} \iff\|\vec{AA&#39;}\|_2 = \frac{\|\vec{CA}\|_2 \cdot \|\vec{BB&#39;}\|_2}{\|\vec{CB}\|_2}
\]</span></p>
<p>故我们只需要令：</p>
<p><span class="math display">\[
0 &lt; \|\vec{AA&#39;}\|_2 &lt; \min\left\{\delta_A, \frac{\|\vec{CA}\|_2 \cdot \delta_B}{\|\vec{CB}\|_2}\right\}
\]</span></p>
<p>即可保证 <span class="math inline">\(\|\vec{AA&#39;}\|_2 &lt; \delta_A\)</span> 且 <span class="math inline">\(\|\vec{BB&#39;}\|_2 &lt; \delta_B\)</span>，这就保证了 <span class="math inline">\(A&#39; \in \mathcal{A}, B&#39; \in \mathcal{B}\)</span>，并且有 <span class="math inline">\(\|\vec{A&#39;B&#39;}\|_2 &lt; \|\vec{AB}\|_2\)</span>。这样就与最小性假设矛盾，假设不成立。故当 <span class="math inline">\(\|\vec{AB}\|_2\)</span> 取到最小值的时候 <span class="math inline">\(A, B\)</span> 中至少有一个点为其所在多边形的顶点。</p>
<h1 id="problem-3">Problem 3</h1>
<p>(Credit to PKU 零之审判)</p>
<p>边长为 <span class="math inline">\(2\)</span> 的正方形 <span class="math inline">\(ABCD\)</span> 内有四条长度为 <span class="math inline">\(1\)</span> 的线段 <span class="math inline">\(l_{1, 2, 3, 4}\)</span>，这四条线段满足：</p>
<ul>
<li><span class="math inline">\(l_i\)</span> 与 <span class="math inline">\(l_{i + 1}\)</span> 相交但其内部不相交（即交点为 <span class="math inline">\(l_i\)</span> 或 <span class="math inline">\(l_{i + 1}\)</span> 的端点）</li>
<li><span class="math inline">\(l_1, l_3\)</span> 没有公共点且 <span class="math inline">\(l_2, l_4\)</span> 没有公共点</li>
<li><span class="math inline">\(l_i\)</span> 垂直于 <span class="math inline">\(l_{i + 1}\)</span></li>
</ul>
<p>上述陈述中 <span class="math inline">\(i \in \{1, 2, 3, 4\}\)</span>，并且定义 <span class="math inline">\(l_5 := l_1\)</span>。</p>
<p>记 <span class="math inline">\(S = l_1 \cup l_2 \cup l_3 \cup l_4\)</span>，<span class="math inline">\(V\)</span> 为正方形 <span class="math inline">\(ABCD\)</span> 四边中点构成的集合，定义：</p>
<p><span class="math display">\[
d := \max_{v \in V, s \in S} |v - s|
\]</span></p>
<p>求 <span class="math inline">\(d\)</span> 的最小值。</p>
<h2 id="solution-2">Solution</h2>
<p>考虑如下图所示的 <span class="math inline">\(l_{1, 2, 3, 4}\)</span>：</p>
<p><img src="/uploads/original-problems/1.png" height="20%" width="20%" /></p>
<p>这里 <span class="math inline">\(l_{1, 2, 3, 4}\)</span> 构成边长为 <span class="math inline">\(1\)</span> 的正方形，该正方形与正方形 <span class="math inline">\(ABCD\)</span> 有共同中心且 <span class="math inline">\(l_1 \parallel AD\)</span>。不难看出若令 <span class="math inline">\(M\)</span> 为 <span class="math inline">\(CD\)</span> 中点，<span class="math inline">\(N\)</span> 为 <span class="math inline">\(l_1, l_2\)</span> 交点，则 <span class="math inline">\(d = MN = \dfrac{\sqrt{10}}{2}\)</span>。</p>
<p>下面我们证明 <span class="math inline">\(d \geq \dfrac{\sqrt{10}}{2}\)</span>。为了证明该结论，我们考虑下述圆 <span class="math inline">\(P\)</span>：</p>
<p><img src="/uploads/original-problems/3.png" height="20%" width="20%" /></p>
<p>圆 <span class="math inline">\(P\)</span> 以正方形 <span class="math inline">\(ABCD\)</span> 的中心 <span class="math inline">\(O\)</span> 为圆心，半径为 <span class="math inline">\(\dfrac{\sqrt{2}}{2}\)</span>。</p>
<p>我们首先证明下述引理，即如果 <span class="math inline">\(l_{1, 2, 3, 4}\)</span> 上有点 <span class="math inline">\(X\)</span> 在圆 <span class="math inline">\(P\)</span> 外或者在圆 <span class="math inline">\(P\)</span> 边界上，那么 <span class="math inline">\(d \geq \dfrac{\sqrt{10}}{2}\)</span>。</p>
<p>我们考虑下述图形：</p>
<p><img src="/uploads/original-problems/4.png" height="35%" width="35%" /></p>
<p>这里的四个虚线圆为以正方形 <span class="math inline">\(ABCD\)</span> 各边中点为圆心，以 <span class="math inline">\(\dfrac{\sqrt{10}}{2}\)</span> 为半径所作的。注意到由于这四个圆的内部（不包含边界）的交集完全位于圆 <span class="math inline">\(P\)</span> 的内部，这说明 <span class="math inline">\(X\)</span> 必然在这四个虚线圆中的某个之外或者这四个虚线圆中的某个的边界上。也就是说必然存在某个 <span class="math inline">\(M \in V\)</span> 使得 <span class="math inline">\(MX \geq \dfrac{\sqrt{10}}{2}\)</span>，从而：</p>
<p><span class="math display">\[
d \geq MX \geq \dfrac{\sqrt{10}}{2}
\]</span></p>
<p>引理证明完毕，回到原题。</p>
<p>根据引理我们得知，如果 <span class="math inline">\(l_{1, 2, 3, 4}\)</span> 上有点在圆 <span class="math inline">\(P\)</span> 外，则欲证命题成立，所以现在只需要考虑 <span class="math inline">\(S \subseteq P\)</span>。</p>
<p>根据题设对四条线段的约束，我们可以得知这四条线段仅有下述两种可能：</p>
<p><img src="/uploads/original-problems/2.png" height="50%" width="50%" /></p>
<p>上述两种情况的旋转、镜面对称等视为同种情况。</p>
<p>首先考虑左边的情况，这里记 <span class="math inline">\(A&#39;D&#39; = B&#39;C&#39; =: a, A&#39;B&#39; = C&#39;D&#39; =: b\)</span>，我们有 <span class="math inline">\(0 &lt; a, b \leq 1\)</span>。根据 <span class="math inline">\(S \subseteq P\)</span> 此时必然有下述两条虚线段长度不大于 <span class="math inline">\(\sqrt{2}\)</span>：</p>
<p><img src="/uploads/original-problems/5.png" height="25%" width="25%" /></p>
<p>从而有下述约束：</p>
<p><span class="math display">\[
\begin{cases}
a^2 + (2 - b)^2 \leq 2 \Rightarrow a^2 + b^2 - 4b + 2 \leq 0 \\
b^2 + (2 - a)^2 \leq 2 \Rightarrow a^2 + b^2 - 4a + 2 \leq 0 \\
\end{cases}
\]</span></p>
<p>两式相加并整理得到：</p>
<p><span class="math display">\[
(a - 1)^2 + (b - 1)^2 \leq 0
\]</span></p>
<p>可知 <span class="math inline">\(a = b = 1\)</span>，此时 <span class="math inline">\(A&#39;, B&#39;, C&#39;, D&#39;\)</span> 构成边长为 <span class="math inline">\(1\)</span> 的正方形。考虑到边长为 <span class="math inline">\(1\)</span> 的正方形的外接圆半径为 <span class="math inline">\(\dfrac{\sqrt{2}}{2}\)</span>，所以为了 <span class="math inline">\(S \subseteq P\)</span>，只能有该正方形内接于圆 <span class="math inline">\(P\)</span>。</p>
<p>之后考虑右边的情况，根据 <span class="math inline">\(S \subseteq P\)</span> 此时必然有下述两条虚线段长度不大于 <span class="math inline">\(\sqrt{2}\)</span>。</p>
<p>这里记 <span class="math inline">\(A&#39;B&#39; = C&#39;D&#39; =: a, A&#39;A&#39;&#39; =: b, D&#39;D&#39;&#39; =: c\)</span>，我们有 <span class="math inline">\(0 &lt; a \leq 1\)</span> 以及 <span class="math inline">\(0 \leq b, c \leq 1 - a\)</span>：</p>
<p><img src="/uploads/original-problems/6.png" height="20%" width="20%" /></p>
<p>从而有下述约束：</p>
<p><span class="math display">\[
\begin{cases}
D&#39;&#39;C&#39; + B&#39;B&#39;&#39; \leq 1 \Rightarrow b - c + 1 \leq 1 \\
A&#39;&#39;B&#39; + C&#39;C&#39;&#39; \leq 1 \Rightarrow c - b + 1 \leq 1 \\
\end{cases}
\]</span></p>
<p>可知 <span class="math inline">\(b = c\)</span>，此时 <span class="math inline">\(A&#39;&#39;, B&#39;&#39;, C&#39;&#39;, D&#39;&#39;\)</span> 构成边长为 <span class="math inline">\(1\)</span> 的正方形。考虑到边长为 <span class="math inline">\(1\)</span> 的正方形的外接圆半径为 <span class="math inline">\(\dfrac{\sqrt{2}}{2}\)</span>，所以为了 <span class="math inline">\(S \subseteq P\)</span>，只能有该正方形内接于圆 <span class="math inline">\(P\)</span>。</p>
<p>综上所述，此时无论如何均存在四个 <span class="math inline">\(S\)</span> 内的点构成内接于圆 <span class="math inline">\(P\)</span> 的正方形，至少说明 <span class="math inline">\(S\)</span> 中存在某一个点 <span class="math inline">\(X\)</span> 在圆 <span class="math inline">\(P\)</span> 边界上。根据引理，原命题证明完毕。</p>
<p>综上所述，<span class="math inline">\(d\)</span> 的最小值为 <span class="math inline">\(\dfrac{\sqrt{10}}{2}\)</span>。</p>
<h1 id="problem-4">Problem 4</h1>
<p>记 <span class="math inline">\(\theta_{n, k} := \dfrac{(2k + 1)\pi}{2^n}\)</span>，证明：</p>
<p><span class="math display">\[
\sum_{k = 0}^{2^n - 1} \frac{1}{1 - \cos\theta_{n, k}} = 2^{2n - 1}
\]</span></p>
<h2 id="solution-3">Solution</h2>
<p>我们注意到下述恒等式：</p>
<p><span class="math display">\[
\frac{4}{1 - \cos 2\theta} = \frac{1}{1 - \cos\theta} + \frac{1}{1 + \cos\theta}
\]</span></p>
<p>证明如下：</p>
<p><span class="math display">\[
\frac{1}{1 - \cos\theta} + \frac{1}{1 + \cos\theta} = \frac{2}{1 - \cos^2\theta} = \frac{4}{1 - (2\cos^2\theta - 1)} = \frac{4}{1 - \cos 2\theta}
\]</span></p>
<p>基于上述恒等式，我们令：</p>
<p><span class="math display">\[
S_n := \sum_{k = 0}^{2^n - 1} \frac{1}{1 - \cos\theta_{n, k}}
\]</span></p>
<p>我们即可得到：</p>
<p><span class="math display">\[
S_{n + 1} = \sum_{k = 0}^{2^{n + 1} - 1} \frac{1}{1 - \cos\theta_{n + 1, k}} = \sum_{k = 0}^{2^n - 1} \left(\frac{1}{1 - \cos\theta_{n + 1, k}} + \frac{1}{1 - \cos\theta_{n + 1, 2^n + k}}\right) \\
\]</span></p>
<p>这里注意到：</p>
<p><span class="math display">\[
\cos\theta_{n + 1, 2^n + k} = \cos\dfrac{[2(2^n + k) + 1]\pi}{2^{n + 1}} = \cos\left(1 + \frac{2k + 1}{2^{n + 1}}\right)\pi = -\cos\theta_{n + 1, k}
\]</span></p>
<p>另外注意到：</p>
<p><span class="math display">\[
\theta_{n, k} = \dfrac{(2k + 1)\pi}{2^n} = 2\theta_{n + 1, k}
\]</span></p>
<p>那么：</p>
<p><span class="math display">\[
\begin{aligned}
S_{n + 1} &amp;= \sum_{k = 0}^{2^n - 1} \left(\frac{1}{1 - \cos\theta_{n + 1, k}} + \frac{1}{1 - \cos\theta_{n + 1, 2^n + k}}\right) \\
&amp;= \sum_{k = 0}^{2^n - 1} \left(\frac{1}{1 - \cos\theta_{n + 1, k}} + \frac{1}{1 + \cos\theta_{n + 1, k}}\right) \\
&amp;= \sum_{k = 0}^{2^n - 1} \frac{4}{1 - \cos2\theta_{n + 1, k}} \\
&amp;= 4\sum_{k = 0}^{2^n - 1} \frac{1}{1 - \cos\theta_{n, k}} \\
&amp;= 4S_n
\end{aligned}
\]</span></p>
<p>而显然有 <span class="math inline">\(S_1 = 2\)</span>，从而命题证明完毕。</p>
<h1 id="problem-5">Problem 5</h1>
<p>已知正整数 <span class="math inline">\(n\)</span> 与实数 <span class="math inline">\(x\)</span>，证明：</p>
<p><span class="math display">\[
\sum_{k = 0}^n C_n^k\sin kx = 2^n\cos^n\frac{x}{2}\sin\frac{nx}{2}
\]</span></p>
<h2 id="solution-4">Solution</h2>
<p>考虑 <span class="math inline">\((\cos x + \i\sin x + 1)^n \in \mathbb{C}\)</span> 的虚部。</p>
<p>一方面：</p>
<p><span class="math display">\[
\begin{aligned}
(\cos x + \i\sin x + 1)^n &amp;= \left[\left(2\cos^2\frac{x}{2} - 1\right) + 2\i\sin\frac{x}{2}\cos\frac{x}{2} + 1\right]^n \\
&amp;= 2^n\cos^n\frac{x}{2}\left(\cos\frac{x}{2} + \i\sin\frac{x}{2}\right)^n \\
&amp;= 2^n\cos^n\frac{x}{2}\cos\frac{nx}{2} + \i2^n\cos^n\frac{x}{2}\sin\frac{nx}{2}
\end{aligned}
\]</span></p>
<p>可知该复数的虚部即为欲证等式的右侧。</p>
<p>另一方面：</p>
<p><span class="math display">\[
\begin{aligned}
(\cos x + \i\sin x + 1)^n &amp;= \sum_{k = 0}^n C_n^k(\cos x + \i\sin x)^k \\
&amp;= \sum_{k = 0}^n C_n^k(\cos kx + \i\sin kx) \\
&amp;= \sum_{k = 0}^n C_n^k\cos kx + \i\sum_{k = 0}^n C_n^k\sin kx
\end{aligned}
\]</span></p>
<p>可知该复数的虚部即为欲证等式的左侧。</p>
<p>综上所述，证明完毕。</p>
<h1 id="problem-6">Problem 6</h1>
<p>已知数列 <span class="math inline">\(\{a_n\}_{n \geq 0}\)</span> 满足 <span class="math inline">\(a_0 = 1, a_1 = 0\)</span> 且 <span class="math inline">\(a_{n + 2} = (n + 1)(a_{n + 1} + a_n)\)</span>。证明：</p>
<p><span class="math display">\[
\sum_{k = 0}^n C_n^ka_k = n!
\]</span></p>
<h2 id="solution-5">Solution</h2>
<p>定义命题 <span class="math inline">\(A_n\)</span> 表示下述等式成立：</p>
<p><span class="math display">\[
\sum_{k = 0}^{n + 1} C_{n + 1}^ka_k = (n + 1)\sum_{k = 0}^n C_n^ka_k
\]</span></p>
<p>命题 <span class="math inline">\(B_n\)</span> 表示下述等式成立：</p>
<p><span class="math display">\[
\sum_{k = 0}^n C_n^ka_{k + 1} = n\sum_{k = 0}^n C_n^ka_k
\]</span></p>
<p>首先我们证明由 <span class="math inline">\(B_n\)</span> 能推出 <span class="math inline">\(A_n\)</span>。现在在 <span class="math inline">\(B_n\)</span> 成立的基础上，考虑下述计算：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;(n + 1)\sum_{k = 0}^n C_n^ka_k = n\sum_{k = 0}^n C_n^ka_k + \sum_{k = 0}^n C_n^ka_k = \sum_{k = 0}^n C_n^ka_{k + 1} + \sum_{k = 0}^n C_n^ka_k \\
=&amp; C_n^na_{n + 1} + \left(\sum_{k = 1}^n C_n^{k - 1}a_k + \sum_{k = 1}^n C_n^ka_k\right) + C_n^0a_0 = C_n^na_{n + 1} + \sum_{k = 1}^n (C_n^{k - 1} + C_n^k)a_k + C_n^0a_0 \\
=&amp; C_{n + 1}^{n + 1}a_{n + 1} + \sum_{k = 1}^n C_{n + 1}^ka_k + C_{n + 1}^0a_0 = \sum_{k = 0}^{n + 1} C_{n + 1}^ka_k
\end{aligned}
\]</span></p>
<p>这就说明了在 <span class="math inline">\(B_n\)</span> 成立的基础上 <span class="math inline">\(A_n\)</span> 成立，其中第二个等号的依据为 <span class="math inline">\(B_n\)</span> 成立。</p>
<p>之后我们证明 <span class="math inline">\(A_n, B_n\)</span> 能推出 <span class="math inline">\(B_{n + 1}\)</span>。现在在 <span class="math inline">\(A_n, B_n\)</span> 均成立的基础上，考虑下述计算：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\sum_{k = 0}^{n + 1} C_{n + 1}^ka_{k + 1} = C_{n + 1}^0a_1 + \sum_{k = 1}^{n + 1} C_{n + 1}^ka_{k + 1} = \sum_{k = 1}^{n + 1} \frac{n + 1}{k}C_{n}^{k - 1}a_{k + 1} \\
=&amp; (n + 1)\sum_{k = 0}^{n} \frac{1}{k + 1}C_{n}^{k} \cdot (k + 1)(a_{k + 1} + a_k) = (n + 1)\left(\sum_{k = 0}^{n} C_{n}^{k}a_{k + 1} + \sum_{k = 0}^{n} C_{n}^{k}a_k\right) \\
=&amp; (n + 1)\left(n\sum_{k = 0}^{n} C_{n}^{k}a_k + \sum_{k = 0}^{n} C_{n}^{k}a_k\right) = (n + 1)\left[(n + 1)\sum_{k = 0}^{n} C_{n}^{k}a_k\right] = (n + 1)\sum_{k = 0}^{n + 1} C_{n + 1}^ka_k\\
\end{aligned}
\]</span></p>
<p>这就说明了在 <span class="math inline">\(A_n, B_n\)</span> 成立的基础上 <span class="math inline">\(B_{n + 1}\)</span> 成立，其中倒数第二个等号的依据为 <span class="math inline">\(B_n\)</span> 成立，倒数第一个等号的依据为 <span class="math inline">\(A_n\)</span> 成立。</p>
<p>而我们显然可以计算出 <span class="math inline">\(a_2 = 1\)</span>，从而得知命题 <span class="math inline">\(B_1\)</span> 成立，进而据归纳法得到对任何的正整数 <span class="math inline">\(n\)</span>，都有命题 <span class="math inline">\(A_n\)</span> 成立。据命题 <span class="math inline">\(A_n\)</span> 成立即可得到本问题欲证命题成立。</p>
<h1 id="problem-7">Problem 7</h1>
<p>已知正数数列 <span class="math inline">\(\{x_k\}_{0 \leq k \leq n}\)</span> 满足：</p>
<p><span class="math display">\[
x_0 = \sum_{k = 1}^n x_k
\]</span></p>
<p>定义数列 <span class="math inline">\(\{y_k\}_{1 \leq k \leq n}\)</span> 为：</p>
<p><span class="math display">\[
y_k := \sqrt{\sum_{i = 0}^{k - 1} x_i} \sqrt{\sum_{i = k}^n x_i}
\]</span></p>
<p>证明：</p>
<p><span class="math display">\[
1 &lt; \sum_{k = 1}^n \frac{x_k}{y_k} &lt; \frac{\pi}{2}
\]</span></p>
<h2 id="solution-6">Solution</h2>
<p>根据均值不等式显然有：</p>
<p><span class="math display">\[
y_k = \sqrt{\sum_{i = 0}^{k - 1} x_i} \sqrt{\sum_{i = k}^n x_i} \leq \frac{1}{2}\left(\sum_{i = 0}^{k - 1} x_i + \sum_{i = k}^n x_i\right) = \frac{1}{2}\left(x_0 + \sum_{i = 1}^n x_i\right) = x_0
\]</span></p>
<p>并且由于：</p>
<p><span class="math display">\[
\sum_{i = 0}^{k - 1} x_i &gt; x_0 = \sum_{i = 1}^n x_i &gt; \sum_{i = k}^n x_i
\]</span></p>
<p>得知上述等号无法取到，那么：</p>
<p><span class="math display">\[
\sum_{k = 1}^n \frac{x_k}{y_k} &gt; \sum_{k = 1}^n \frac{x_k}{x_0} = 1
\]</span></p>
<p>从而不等式左侧得证。</p>
<p>为了证明不等式右侧，我们考虑下述数列 <span class="math inline">\(\{S_k\}_{0 \leq k \leq n}\)</span>，其在 <span class="math inline">\(k = 0\)</span> 的时候定义为 <span class="math inline">\(S_0 := 0\)</span>，在 <span class="math inline">\(k &gt; 0\)</span> 的时候定义为：</p>
<p><span class="math display">\[
S_k := \sum_{i = 1}^k \frac{x_k}{x_0}
\]</span></p>
<p>考虑到 <span class="math inline">\(\{x_k\}_{0 \leq k \leq n}\)</span> 是正数数列，可以得知 <span class="math inline">\(\{S_k\}_{0 \leq k \leq n}\)</span> 是递增数列。另一方面，我们可以得知 <span class="math inline">\(S_n = 1\)</span>。综合上述条件我们可以得知 <span class="math inline">\(\{S_k\}_{0 \leq k \leq n}\)</span> 各项均落在区间 <span class="math inline">\([0, 1]\)</span> 上。</p>
<p>那么即存在所有项均落在区间 <span class="math inline">\(\left[0, \dfrac{\pi}{2}\right]\)</span> 上的数列 <span class="math inline">\(\{\theta_k\}_{0 \leq k \leq n}\)</span> 使得 <span class="math inline">\(\sin\theta_k = S_k\)</span> 对所有 <span class="math inline">\(0 \leq k \leq n\)</span> 成立。此时 <span class="math inline">\(\theta_0 = 0\)</span> 并且 <span class="math inline">\(\theta_n = \dfrac{\pi}{2}\)</span>。另一方面，据 <span class="math inline">\(\{S_k\}_{0 \leq k \leq n}\)</span> 是递增数列得知 <span class="math inline">\(\{\theta_k\}_{0 \leq k \leq n}\)</span> 是递增数列。</p>
<p>从而我们得知：</p>
<p><span class="math display">\[
\begin{aligned}
y_k &amp;= \sqrt{\sum_{i = 0}^{k - 1} x_i} \sqrt{\sum_{i = k}^n x_i} = x_0 \sqrt{\sum_{i = 0}^{k - 1} \frac{x_i}{x_0}} \sqrt{\sum_{i = k}^n \frac{x_i}{x_0}} = x_0 \sqrt{1 + S_{k - 1}} \sqrt{S_n - S_{k - 1}} \\
&amp;= x_0 \sqrt{1 - S^2_{k - 1}} = x_0 \sqrt{1 - \sin^2\theta_{k - 1}} = x_0\cos\theta_{k - 1}
\end{aligned}
\]</span></p>
<p>从而：</p>
<p><span class="math display">\[
\begin{aligned}
\sum_{k = 1}^n \frac{x_k}{y_k} &amp;= \sum_{k = 1}^n \frac{x_k}{x_0\cos\theta_{k - 1}} = \sum_{k = 1}^n \frac{S_k - S_{k - 1}}{\cos\theta_{k - 1}} = \sum_{k = 1}^n \frac{\sin\theta_k - \sin\theta_{k - 1}}{\cos\theta_{k - 1}} \\
&amp;= \sum_{k = 1}^n \frac{2\cos\dfrac{\theta_k + \theta_{k - 1}}{2}\sin\dfrac{\theta_k - \theta_{k - 1}}{2}}{\cos\theta_{k - 1}} &lt; 2\sum_{k = 1}^n\sin\dfrac{\theta_k - \theta_{k - 1}}{2}
\end{aligned}
\]</span></p>
<p>这里的不等号考虑到 <span class="math inline">\(\{\theta_k\}_{0 \leq k \leq n}\)</span> 是递增数列，从而 <span class="math inline">\(\theta_k &gt; \theta_{k - 1}\)</span>。</p>
<p>应用不等式 <span class="math inline">\(\sin x &lt; x, x &gt; 0\)</span> 得到：</p>
<p><span class="math display">\[
\sum_{k = 1}^n \frac{x_k}{y_k} &lt; 2\sum_{k = 1}^n\sin\dfrac{\theta_k - \theta_{k - 1}}{2} &lt; \sum_{k = 1}^n \theta_k - \theta_{k - 1} = \theta_n - \theta_0 = \frac{\pi}{2}
\]</span></p>
<p>综上所述，证明完毕。</p>
]]></content>
      <categories>
        <category>【杂谈】数学</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年 2 月论文笔记</title>
    <url>/2022/01/18/paper-2022-02/</url>
    <content><![CDATA[<p>2022 年 2 月，主要工作为可微渲染相关方向。</p>
<span id="more"></span>
<h1 id="soft-rasterizer---a-differentiable-renderer-for-image-based-3d-reasoning">Soft Rasterizer - A Differentiable Renderer for Image-based 3D Reasoning</h1>
<h2 id="工作概述">工作概述</h2>
<p>主要思想还是想把逆向渲染管线（通过二维图像推理三维模型的参数）和神经网络结合，但是最大的问题是管线中的光栅化是离散化操作，可能导致不可微。一些其他的工作在尝试<strong>近似估算</strong>梯度，但是这个工作提出了一种真正可微的框架，能做到：</p>
<ul>
<li>直接用可微函数渲染染色的网格</li>
<li>能从轮廓、阴影等各种二维图像信息有效反向传递为网格顶点参数</li>
</ul>
<p>这个工作的重点是把渲染过程的部分看作<strong>聚合函数（Aggregation function）</strong>，该函数联系了三维模型的网格三角形的概率分布以及其渲染出来的像素。</p>
<div class="note info no-icon"><p>看起来标题中的 Soft 的含义就是使用概率分布的方式来把离散的光栅化变成可微的，最初始的光栅化一般会涉及到离散采样（即确定每一个离散的像素是否要显示网格上的某一个三角形），这也是不可微性的来源。</p>
</div>
<p>本论文主要讲述了如何通过 Soft rasterization 框架实现可微的光栅化以保证渲染管线的可微性，基于此，该渲染框架即可方便地接入神经网络以将二维图像信息反向传播到三维模型。同时，本论文也会指出近期的近似估算梯度的方式（使用 hand-crafted 的函数近似表示梯度）并不具有泛用性，且可能会降低三维模型信息更新的效率。</p>
<h3 id="softras-与传统光栅化">SoftRas 与传统光栅化</h3>
<p>SoftRas 在将模型投影到平面上的时候，会将模型转换为投影平面上的概率分布。而传统光栅化则是转化为具体某个像素是否染色。</p>
<p>另外，似乎 SoftRas 对遮挡的处理也和传统渲染管线的 z-buffer 不一样。传统光栅化会使用 onehot 的方式处理遮挡（应该指的是处理为完全遮挡），而 SoftRas 也会基于概率分布做出不同处理。</p>
<h2 id="相关工作">相关工作</h2>
<h3 id="可微渲染">可微渲染</h3>
<p>主要关注如何描述二维图像变化和三维模型操作的关系，主要解决如何从二维图像重建三维场景。考虑给定的二维图片 <span class="math inline">\(A\)</span>，首先粗略初始化一个三维场景 <span class="math inline">\(B&#39;\)</span>，然后通过渲染管线渲染得到二维图片 <span class="math inline">\(B\)</span>。计算 <span class="math inline">\(A\)</span> 和 <span class="math inline">\(B\)</span> 的 loss，将其梯度反向传播给三维场景 <span class="math inline">\(B&#39;\)</span> 的参数，更新之。这里反向传播就是可微渲染最重要的步骤，即如何计算梯度，因为三维场景参数更新量取决于 loss 对参数的偏导数。</p>
<p>先前提到，这里获取梯度有困难。有些工作使用估计梯度的方式进行，有些工作可以精确计算梯度但是不具有泛用性。</p>
<h3 id="基于图像的三维推理">基于图像的三维推理</h3>
<p>依然考虑从二维图像重建三维场景。传统方法往往要求获得从多个角度观察得到的二维图像，而由于数据集的扩大，基于学习的重建方法可以使用一张或少量二维图像来重建场景。部分工作会将重建三维场景拆分为首先重建 2.5 维的表示（深度表等）。</p>
<p>另外，姿态估计也是三位推理的一个重要的子任务。通过深度学习的方法，预测刚体姿态是较为简单的，而预测人体这类非刚体的姿态则较为困难。</p>
<h2 id="softras-基本原理">SoftRas 基本原理</h2>
<p>大约是这样的一个流程：</p>
<p><img src="/uploads/paper-2022-02/1.png" /></p>
<p>这里外部因素包含相机参数 <span class="math inline">\(\boldsymbol{P}\)</span> 和环境光照 <span class="math inline">\(\boldsymbol{L}\)</span>，内部因素包括网格信息 <span class="math inline">\(\boldsymbol{M}\)</span> 以及各个顶点的信息（如颜色、材质）<span class="math inline">\(\boldsymbol{A}\)</span>。</p>
<p>这里第一步要做的是获取三个中间信息，即网格法向量 <span class="math inline">\(\boldsymbol{N}\)</span>、视图空间（投影后的空间）各点坐标 <span class="math inline">\(\boldsymbol{U}\)</span> 以及 View dependent depths <span class="math inline">\(\boldsymbol{Z}\)</span>。这三个量只需要使用相机参数和网格信息即可得到。</p>
<p>之后可以使用例如 Phong 模型等着色模型计算出颜色 <span class="math inline">\(\boldsymbol{C}\)</span>。</p>
<p>进行到这一步，上述这些操作都是可微的。但是如果按照传统的渲染管线，下一步应该分别确定每一个网格三角形与每一个像素的对应（即光栅化），之后还要用 z-buffer 处理遮挡，这两步都因为离散采样从而是不可微的。</p>
<p>SoftRas 软化光栅化和 z-buffer 的方式是引入 probability maps <span class="math inline">\(\{\mathcal{D}_j\}\)</span> 和聚合函数 <span class="math inline">\(\mathcal{A}(\cdot)\)</span> 分别代替光栅化和 z-buffer。这里 <span class="math inline">\(\mathcal{D}_j\)</span> 表示的是每一个像素在网格三角形 <span class="math inline">\(f_j\)</span> 内部的概率在平面上的分布。而聚合函数 <span class="math inline">\(\mathcal{A}(\cdot)\)</span> 联系起了 probability maps 以及深度信息，作为整个后续渲染流程的代表。</p>
<h3 id="probability-maps-计算">probability maps 计算</h3>
<p>考虑网格三角形在屏幕上的投影 <span class="math inline">\(f_j\)</span> 和屏幕上的像素 <span class="math inline">\(p_i\)</span>，记在屏幕上 <span class="math inline">\(p_i\)</span> 到 <span class="math inline">\(f_j\)</span> 的边最近距离为 <span class="math inline">\(d(i, j)\)</span>。显然，这个距离越小的像素点，出现在内部的概率越大。由于其可以反映三角形对屏幕的影响，并且其可微，所以可以用此作为 probability maps 的代表。随后通过添加控制常数、符号标记并归一化到 <span class="math inline">\((0, 1)\)</span> 内之后，我们得到了 probability maps 的公式：</p>
<p><span class="math display">\[
\mathcal{D}_{i, j} = \mathrm{sigmoid}\left(\delta_{i, j}\cdot\frac{d^2(i, j)}{\sigma}\right)
\]</span></p>
<p>这里 <span class="math inline">\(\sigma\)</span> 是一个正常数，一般默认为 <span class="math inline">\(1\times 10^{-4}\)</span>。而 <span class="math inline">\(\delta_{i, j}\)</span> 标记了 <span class="math inline">\(p_i\)</span> 是否在 <span class="math inline">\(f_j\)</span> 之中。若在，则 <span class="math inline">\(\delta_{i, j} = 1\)</span>，否则 <span class="math inline">\(\delta_{i, j} = -1\)</span>。</p>
<p>下图展示了 <span class="math inline">\(d(i, j)\)</span> 的定义以及 <span class="math inline">\(\sigma\)</span> 常数对概率分布的影响：</p>
<p><img src="/uploads/paper-2022-02/2.png" /></p>
<p>显然看出 <span class="math inline">\(\sigma\)</span> 越大，概率分布就越模糊。</p>
<p>另外一个显然的点是 <span class="math inline">\(\sigma \to 0\)</span> 的时候概率分布中三角形外的点概率密度为 <span class="math inline">\(0\)</span>，而三角形内的点为 <span class="math inline">\(1\)</span>。此时 SoftRas 退化为一般的光栅化。</p>
<h3 id="聚合函数">聚合函数</h3>
<p>我们考虑最后一个阶段，这里我们需要根据深度信息、 probability maps 以及颜色信息计算出最后的渲染结果。</p>
<p>最后渲染结果中，像素 <span class="math inline">\(p_i\)</span> 的渲染结果用聚合函数表示，定义为：</p>
<p><span class="math display">\[
I_i = \mathcal{A}_S(\{C_j\}) := \sum_j w_{i, j}C_{i, j} + w_{i, b}C_b
\]</span></p>
<p>这里渲染结果定义为一系列颜色信息的加权求和，颜色构成的集合为 <span class="math inline">\(\{C_j\}\)</span>，符号 <span class="math inline">\(C_{i, j}\)</span> 表示三角形 <span class="math inline">\(f_j\)</span> 在像素 <span class="math inline">\(p_i\)</span> 处的颜色。而 <span class="math inline">\(C_b\)</span> 表示背景颜色。</p>
<p>权重 <span class="math inline">\(w_{i, j}\)</span> 至少满足归一化条件：</p>
<p><span class="math display">\[
w_{i, b} + \sum_j w_{i, j} = 1
\]</span></p>
<p>而权重的具体值取决于先前得到的 probability maps 以及深度信息。我们将三角形 <span class="math inline">\(f_j\)</span> 中投影到 <span class="math inline">\(p_i\)</span> 像素的点的逆深度记为 <span class="math inline">\(z_{i, j}\)</span>。概率分布沿用先前的符号。定义：</p>
<p><span class="math display">\[
w_{i, j} := \frac{\mathcal{D}_{i, j}\exp(z_{i, j} / \gamma)}{\sum_k \mathcal{D}_{i, k}\exp(z_{i, k} / \gamma) + \exp(\varepsilon / \gamma)}
\]</span></p>
<p>依据归一化条件就有：</p>
<p><span class="math display">\[
w_{i, b} := \frac{\exp(\varepsilon / \gamma)}{\sum_k \mathcal{D}_{i, k}\exp(z_{i, k} / \gamma) + \exp(\varepsilon / \gamma)}
\]</span></p>
<div class="note info no-icon"><p>可以看出权重的计算公式其实是类似 Softmax 函数：</p>
<p><span class="math display">\[
{\rm softmax}(z_1, z_2, \cdots, z_n)_j = \frac{e^{z_j}}{\sum_i e^{z_i}}
\]</span></p>
</div>
<p>这里可以看出 <span class="math inline">\(\varepsilon\)</span> 是一个小正常数，其作用是将背景颜色纳入计算。<span class="math inline">\(\gamma\)</span> 是一个调节清晰度的正常数，与计算 probability maps 的 <span class="math inline">\(\sigma\)</span> 类似，默认值一般是 <span class="math inline">\(1 \times 10^{-4}\)</span>。</p>
<p>可以看出，具有更大概率密度的，且离投影平面更近的（即具有更大逆深度的）三角形会获得更大的权重，这符合直觉。</p>
<hr />
<p>现在考虑退化。针对像素 <span class="math inline">\(p_i\)</span>，假设 <span class="math inline">\(z_{i, 1} &lt; z_{i, 2} &lt; \cdots &lt; z_{i, N}\)</span>，考虑 <span class="math inline">\(\gamma\to 0\)</span>。首先考察 <span class="math inline">\(j = N\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
w_{i, N} &amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, N}\exp(z_{i, N} / \gamma)}{\sum_k \mathcal{D}_{i, k}\exp(z_{i, k} / \gamma) + \exp(\varepsilon / \gamma)} \\
&amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, N}}{\sum_k \mathcal{D}_{i, k}\exp((z_{i, k} - z_{i, N}) / \gamma) + \exp((\varepsilon - z_{i, N}) / \gamma)} \\
&amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, N}}{\sum_{k = 1}^{N - 1} \mathcal{D}_{i, k}\exp((z_{i, k} - z_{i, N}) / \gamma) + \mathcal{D}_{i, N} + \exp((\varepsilon - z_{i, N}) / \gamma)} \\
&amp;= 1
\end{aligned}
\]</span></p>
<p>最后一步注意到 <span class="math inline">\(z_{i, N}\)</span> 大于任何 <span class="math inline">\(z_{i, k}(k &lt; N)\)</span>，故有这样的结果。而对于 <span class="math inline">\(j &lt; N\)</span>：</p>
<p><span class="math display">\[
\begin{aligned}
w_{i, j} &amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, j}\exp(z_{i, j} / \gamma)}{\sum_k \mathcal{D}_{i, k}\exp(z_{i, k} / \gamma) + \exp(\varepsilon / \gamma)} \\
&amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, N}}{\sum_k \mathcal{D}_{i, k}\exp((z_{i, k} - z_{i, j}) / \gamma) + \exp((\varepsilon - z_{i, j}) / \gamma)} \\
&amp;= \lim_{\gamma\to 0}\frac{\mathcal{D}_{i, N}}{\left(\sum_{k = 1}^{j - 1} + \sum_{k = j + 1}^{N}\right) \mathcal{D}_{i, k}\exp((z_{i, k} - z_{i, N}) / \gamma) + \mathcal{D}_{i, N} + \exp((\varepsilon - z_{i, N}) / \gamma)} \\
&amp;= 0
\end{aligned}
\]</span></p>
<p>这里要注意到分母上 <span class="math inline">\(\sum_{k = j + 1}^{N}\)</span> 的部分最终会趋向于正无穷，整体极限为 <span class="math inline">\(0\)</span>。最后根据归一化条件也有 <span class="math inline">\(w_{i, b} = 0\)</span>。</p>
<p>结合这样的推理，可以看出：</p>
<p><span class="math display">\[
I_i = \mathcal{A}_S(\{C_j\}) = C_{i, N}
\]</span></p>
<p>也就是说最后渲染的结果只考虑了最近的网格三角形，这也就是 z-buffer 方法。</p>
<hr />
<p>似乎还有一个和轮廓相关的聚合函数：</p>
<p><span class="math display">\[
I_{i, S} = \mathcal{A}_O(\{\mathcal{D}_j\}) := 1 - \prod_j (1 - \mathcal{D}_{i, j})
\]</span></p>
<p>这里没有出现颜色项，这是因为轮廓的颜色一般设定为常数。这里聚合函数形式上实际上就是计算出了像素 <span class="math inline">\(p_i\)</span> 被至少一个三角形覆盖的概率。</p>
<h2 id="实验内容">实验内容</h2>
<h3 id="single-view-mesh-reconstruction">Single-View Mesh Reconstruction</h3>
<p>使用这样的结构：</p>
<p><img src="/uploads/paper-2022-02/3.png" /></p>
<p>这里固定了渲染管线中的外部变量，即固定了相机位置和环境光照。每一个输入图片都会进入 color generator 和 shape generator 生成三维模型参数 <span class="math inline">\(\boldsymbol{C}\)</span> 和 <span class="math inline">\(\boldsymbol{M}\)</span>。随后后续接入 SoftRas，渲染得到带颜色的图像 <span class="math inline">\(I_C\)</span> 和轮廓 <span class="math inline">\(I_S\)</span>，最后和原先图像比较计算 loss。</p>
<p>最后定义的 loss 分为三部分。在叙述定义之前，我们将原始图像的颜色和轮廓定义为 <span class="math inline">\(\hat I_C\)</span> 以及 <span class="math inline">\(\hat I_S\)</span>：</p>
<ul>
<li>color loss。定义为颜色之差的 1- 范数：</li>
</ul>
<p><span class="math display">\[
\mathcal{L}_C := \|I_C - \hat I_C\|_1
\]</span></p>
<ul>
<li>silhouette loss。定义为，这里使用 <span class="math inline">\(\otimes\)</span> 表示逐元素求积，<span class="math inline">\(\oplus\)</span> 表示逐元素求和：</li>
</ul>
<p><span class="math display">\[
\mathcal{L}_S := 1 - \frac{\|I_S \otimes \hat I_S\|_1}{\|I_S \oplus \hat I_S - I_S \otimes \hat I_S\|_1}
\]</span></p>
<ul>
<li>geometry loss。作用是对 loss 进行 L1 正则化。</li>
</ul>
<p>最后定义的 loss 是这三部分的加权求和：</p>
<p><span class="math display">\[
\mathcal{L} := \mathcal{L}_S + \lambda\mathcal{L}_C + \mu\mathcal{L}_G
\]</span></p>
<p>这里论文主要提了一下 color generator 的结构：</p>
<p><img src="/uploads/paper-2022-02/4.png" /></p>
<p>似乎是提出了一种新结构，让颜色重建变为一个多分类问题，进而降低了时间复杂度。但是论文的描述中有若干的暂且不太清楚的名词，暂且把原文贴在这里以后再来看：</p>
<div class="note info no-icon"><p>Instead of directly regressing the color value, our color generator formulates color reconstruction as a classification problem that learns to reuse the pixel colors in the input image for each sampling point. Let <span class="math inline">\(N_c\)</span> denote the number of sampling points on <span class="math inline">\(\boldsymbol{M}\)</span> and <span class="math inline">\(H, W\)</span> be the height and width of the input image respectively. However, the computational cost of a naive color selection approach is prohibitive, i.e. <span class="math inline">\(O(HWN_c)\)</span>. To address this challenge, we propose a novel approach to colorize mesh using a color palette, as shown in Figure 7. Specifically, after passing input image to a neural network, the extracted features are fed into (1) a sampling network that samples the representative colors for building the palette; and (2) a selection network that combines colors from the palette for texturing the sampling points. The color prediction is obtained by multiplying the color selections with the learned color palette. Our approach reduces the computation complexity to <span class="math inline">\(O(N_d(HW + N_c))\)</span>, where <span class="math inline">\(N_p\)</span> is the size of color palette. With a proper setting of <span class="math inline">\(N_p\)</span>, one can significantly reduce the computational cost while achieving sharp and accurate color recovery.</p>
</div>
<h3 id="image-based-shape-fitting">Image-based Shape Fitting</h3>
<p>似乎依然是从图像重建模型，但是这个重建任务似乎和姿态预测有较为紧密的联系。</p>
<p>传统方法面临的问题依然是梯度不精确的问题，这样就导致反向传播较为困难。另外，传统方法也面临这样的问题：</p>
<ul>
<li><p>遮挡问题。传统方法中，被遮挡的三角形无法调整参数，而 SoftRas 允许被遮挡的三角形参与到运算中，所以这个问题可以解决。</p></li>
<li><p>局部最小值问题。我们希望误差反向传播可以传播到较大范围，即希望一次三维模型参数调整不局限于较小的局部，否则可能会导致模型收敛到局部最小值而非更优的结果。而 SoftRas 使用的概率分布算法允许全局的像素参与到运算中，所以理论上误差可以传播到较大范围，这个问题可以解决。</p></li>
</ul>
<p>所以最后就直接使用这样的方式训练就行了：</p>
<p><span class="math display">\[
\{\rho, \theta, t\} = \mathop{\mathrm{argmin}}_{\rho, \theta, t}\|R(M(\rho, \theta, t)) - I_t\|_2
\]</span></p>
<p>这里 <span class="math inline">\(\rho, \theta, t\)</span> 是三维模型的参数，分别是非刚体形变参数、姿态角度、转换参数（或许就是视图转换的参数），<span class="math inline">\(M(\cdot)\)</span> 将这些参数转换为网格，<span class="math inline">\(R(\cdot)\)</span> 是渲染函数，<span class="math inline">\(I_t\)</span> 则是目标图像。这个训练方式也就是机器学习的通式。</p>
<h2 id="实验结果">实验结果</h2>
<h3 id="single-view-mesh-reconstruction-1">Single-View Mesh Reconstruction</h3>
<p>实验结果看确实挺好的，下面展示的是不带颜色的网格重建：</p>
<p><img src="/uploads/paper-2022-02/5.png" /></p>
<p>颜色似乎也重建得挺好：</p>
<p><img src="/uploads/paper-2022-02/6.png" height="50%" width="50%" /></p>
<p>使用的评价方法是 3D IoU，即 3D Intersection over Union。这是一种物体检测领域的评价函数。二维情况下的 IoU 定义如下图所示。这里的矩形均指代物体的包围盒，分别为实际的包围盒和模型预测的包围盒：</p>
<p><img src="/uploads/paper-2022-02/7.png" height="50%" width="50%" /></p>
<p>SoftRas 的平均 3D IoU 超出了 state-of-art 的 NMR 的 3D IoU 约 4.5 点，从而说明在网格重建任务上 SoftRas 的表现超出了传统方法。</p>
<p>另外似乎还有一项称为 Ablation Study 的后续实验，这里省略。</p>
<h3 id="image-based-shape-fitting-1">Image-based Shape Fitting</h3>
<p>首先实验刚体结构预测，这里采用六面着不同色的正方体。给定渲染后图像，要求给出正方体应当旋转的角度。SoftRas 和 NMR 的实验结果如下：</p>
<p><img src="/uploads/paper-2022-02/8.png" /></p>
<p>可以发现 SoftRas 成功获得了最后的结果，而 NMR 则收敛到了一个局部最小值无法得到正确结果。</p>
<p>论文认为 NMR 失败的原因正是因为六个面的相互遮挡，这导致了 NMR 无法越过局部最小值。</p>
<p>另外其也做了大量实验，表明 SoftRas 预测的旋转角度误差严格优于 NMR，在不优化的情况下，SoftRas 的角度误差平均比 NMR 低 <span class="math inline">\(10.60^\circ\)</span>。</p>
<p>这里似乎涉及到 <span class="math inline">\({\rm SO}(3)\)</span> 旋转群的一些东西，后面再来研究吧。</p>
<hr />
<p>非刚体结构预测则选用了人体结构预测，这里初始化时人的右手位于背后，而目标图像中右手已经移动到前面，实验目标是将手移出来。显然 NMR 依然因为无法处理遮挡，最后没有能够完成任务。而 SoftRas 完成了：</p>
<p><img src="/uploads/paper-2022-02/9.png" /></p>
<h2 id="附录梯度计算">附录：梯度计算</h2>
<p>我们现在研究一下 SoftRas 渲染出来的图像 <span class="math inline">\(\boldsymbol{I}\)</span> 对网格参数 <span class="math inline">\(\boldsymbol{M}\)</span> 的梯度，这个梯度也就是在反向传播的时候要计算的值。首先显然有：</p>
<p><span class="math display">\[
\frac{\partial\boldsymbol{I}}{\partial\boldsymbol{M}} = \frac{\partial\boldsymbol{I}}{\partial\boldsymbol{U}}\frac{\partial\boldsymbol{U}}{\partial\boldsymbol{M}} + \frac{\partial\boldsymbol{I}}{\partial\boldsymbol{Z}}\frac{\partial\boldsymbol{Z}}{\partial\boldsymbol{M}} + \frac{\partial\boldsymbol{I}}{\partial\boldsymbol{N}}\frac{\partial\boldsymbol{N}}{\partial\boldsymbol{M}}
\]</span></p>
<p>这里显然可以看出 <span class="math inline">\(\dfrac{\partial\boldsymbol{U}}{\partial\boldsymbol{M}}, \dfrac{\partial\boldsymbol{Z}}{\partial\boldsymbol{M}}, \dfrac{\partial\boldsymbol{N}}{\partial\boldsymbol{M}}\)</span> 是可以简单计算的，因为 <span class="math inline">\(\boldsymbol{U}, \boldsymbol{Z}, \boldsymbol{N}\)</span> 都可以由 <span class="math inline">\(\boldsymbol{M}\)</span> 通过简单的视图变换得到，由变换矩阵即可推算偏导数。</p>
<p>而根据着色模型，<span class="math inline">\(\dfrac{\partial\boldsymbol{I}}{\partial\boldsymbol{N}}\)</span> 也是可以计算的。</p>
<p>剩余的两个梯度中，<span class="math inline">\(\dfrac{\partial\boldsymbol{I}}{\partial\boldsymbol{Z}}\)</span> 直接和聚合函数相关，而 <span class="math inline">\(\dfrac{\partial\boldsymbol{I}}{\partial\boldsymbol{U}}\)</span> 经过了两层，分别是概率分布计算和聚合函数，所以我们需要拆解：</p>
<p><span class="math display">\[
\dfrac{\partial\boldsymbol{I}}{\partial\boldsymbol{U}} = \dfrac{\partial\boldsymbol{I}}{\partial\mathcal{D}}\dfrac{\partial\mathcal{D}}{\partial\boldsymbol{U}}
\]</span></p>
]]></content>
      <categories>
        <category>【论文笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年 8 月论文笔记</title>
    <url>/2022/06/10/paper-2022-08/</url>
    <content><![CDATA[<p>这个月主要是刚刚进入流媒体相关的方向，需要阅读一些论文来了解目前的发展。</p>
<span id="more"></span>
<h1 id="stick---a-harmonious-fusion-of-buffer-based-and-learning-based-approach-for-adaptive-streaming">Stick - A Harmonious Fusion of Buffer-based and Learning-based Approach for Adaptive Streaming</h1>
<h2 id="introduction">Introduction</h2>
<p>首先考虑到现实应用背景，视频流传输已经占据了大部分的网络传输带宽。但视频传输的问题在于视频内容的多样性和可能的网络波动。一种可能的解决方案是使用 Adaptive bitrate (ABR) 算法，这些算法已经被证实可以提供高 QoE 的传输服务。</p>
<p>传统的 ABR 算法往往是 buffer-based 的（例如 BBA 和 BOLA），这些算法通过固定的 buffer 和参数来选定下一个视频块的码率，这可能难以在波动网络环境下保证 QoE。</p>
<p>另一方面，基于深度强化学习（DRL）的 ABR 算法 Pensieve 却给出了 state-of-the-art 的表现。在实践上，这类算法也常常部署在服务器侧以避免客户端的高计算开销。但是考虑到 ABR 算法往往需要部署在前端以避免连接后端的网络延迟，这使得这类算法理论可用但是并不实际。</p>
<p>那么我们可以将这两种方法结合起来，使用 DRL 来强化 buffer-based 的方法，同时使用固定的缓冲区限制来限制计算开销。从而该论文提出了 Stick 框架，该框架将 QoE 参数、网络状态、视频特征作为输入参数，而缓冲区限制（连续的标量）作为其输出。</p>
<p>考虑到连续的动作空间，我们计划使用 Deep deterministic policy gradient (DDPG) 来从头开始训练模型。此外，Stick 在无假设条件下通过和 ABR 环境交互来学习策略。</p>
<p>为了保证计算效率，我们进一步提出了 Trigger。Trigger 会观测当前和先前的缓冲区限制，只在必要的时候激活 Stick 来更新缓冲区限制。Trigger 使用 imitation learing 方法来学习专家行为。同时，为了克服数据的无偏分布【Question #1】，我们使用了 prioritized experience replay 来存储专家策略。同时，该论文还提出了一种可以让其他 ABR 算法框架接入 Trigger 的方法。</p>
<p>这篇论文的重点在于：</p>
<ul>
<li>首次提出结合 buffer-based 方法和 learning-based 方法</li>
<li>通过 Stick，可以使用更小的模型实现比已有方法更好的效果</li>
<li>通过 Trigger，证明轻量级模型可以有效降低计算开销</li>
</ul>
<h2 id="buffer-based-learning-based-abr-algorithm">Buffer-based &amp; learning-based ABR algorithm</h2>
<p>BBA 只根据当前缓冲区限制来选定下一个视频块的码率。具体而言，其将对吞吐量的估计固定为启动态额吞吐量以克服吞吐量的波动，之后在稳定态时，使用缓冲区限制 <span class="math inline">\(\{B_{\rm min}, B_{\rm max}\}\)</span> 来获取块映射，块映射的作用是将缓冲区占用情况映射为码率。</p>
<p>而这个映射也是简单的分块线性映射，缓冲区占用低于 <span class="math inline">\(B_{\rm min}\)</span> 时下一个视频块码率为低码率 <span class="math inline">\(R_{\rm min}\)</span>，缓冲区占用高于 <span class="math inline">\(B_{\rm max}\)</span> 时下一个视频块码率为高码率 <span class="math inline">\(R_{\rm max}\)</span>，位于这两者之间的时候使用线性函数决定。</p>
<p>这个方法大部分情况下简单且有效，但是也在许多条件下效果不理想。原因是 BBA 使用的固定参数应当根据应用环境做出相应的调整。</p>
<p>而 learning-based ABR，例如 Pensieve 则给出了较好的理论结果，但是该方案并不容易应用到现实中。此外，Pensieve 也在部分应用环境下效果不理想。</p>
<h2 id="key-ideas">Key ideas</h2>
<p>总结起来是这样的几点：</p>
<ul>
<li>使用 DRL 的方法调整 ABR 的参数，避免使用查表或者预训练模型造成的过大存储和计算成本</li>
<li>模型的状态空间需要考虑全面，不仅包括当前缓冲区限制，还要包括网络状况和视频特征
<ul>
<li>此外，实验发现 Stick 可以仅使用一个参数控制缓冲区，而非两个参数</li>
</ul></li>
<li>QoE 要求会被作为 goal 输入模型，该参数会随机初始化，这会让模型意识到 QoE 参数和 feedback reward 之间的关系</li>
<li>使用轻量级的 Trigger 来决定是否需要通过 Stick 更新缓冲区限制，以降低计算成本</li>
</ul>
<h2 id="system-overview">System overview</h2>
<p>整体的框架可以表现为：</p>
<p><img src="/uploads/paper-2022-08/1.png" /></p>
<h3 id="stick-mechanism">Stick mechanism</h3>
<p>Stick 的结构图可以表示为：</p>
<p><img src="/uploads/paper-2022-08/2.png" /></p>
<h4 id="design">Design</h4>
<p>首先叙述状态空间的构造：</p>
<ul>
<li><span class="math inline">\(T\)</span> 为由客户端测量的前 <span class="math inline">\(k\)</span> 个序列的吞吐量</li>
<li><span class="math inline">\(d\)</span> 为前 <span class="math inline">\(k\)</span> 个序列的下载时间</li>
<li><span class="math inline">\(q\)</span> 为上一个视频块选定的码率</li>
<li><span class="math inline">\(r\)</span> 为视频剩余播放时间</li>
<li><span class="math inline">\(b\)</span> 为当前缓冲区占有情况</li>
<li><span class="math inline">\(S\)</span> 为表示下一个视频块大小的向量</li>
<li><span class="math inline">\(g\)</span> 为 QoE goal 参数，由 <span class="math inline">\(\mu, \tau\)</span> 构成</li>
</ul>
<p>动作空间则是一个连续标量 <span class="math inline">\(B \in [0, {\rm buffer}_{\rm max}]\)</span>，用于控制缓冲区限制。</p>
<p>奖励函数则根据不同的 <span class="math inline">\(g\)</span>，使用经典的线性 QoE 指标来构造。</p>
<h4 id="training-methodology-implementation">Training methodology &amp; Implementation</h4>
<p>【这一部分在阅读完 DPG 相关论文之后再具体展开】</p>
<h3 id="trigger">Trigger</h3>
<p>Trigger 的一个核心思想在于，如果 Stick 在连续两个视频块上给出相同的结果，那么其第二次计算是无用的。而实验证明，无用操作可能占比达到 30%，所以我们的目标就是用 Trigger 去判别哪些操作是无用的。</p>
<p>现在考量 Trigger 的状态空间。根据 Related work，网络吞吐量是我们需要考虑的重要参数。但是我们也发现了，先前的缓冲区占用情况也是一个重要特征，其可以揭示网络环境状态和视频块大小之间的隐藏关系。</p>
<p>所以我们最终令 Trigger 的输入是先前的网络吞吐量、缓冲区大小和现在的缓冲区限制。而输出是一个二维向量，表示 Stick 保持或者改变当前缓冲区限制的概率。</p>
<hr />
<p>使用 imitation learning 来训练 Trigger，这种方法能够根据 expert demonstration 给出预期的结果。训练的算法可以表示为：</p>
<p><img src="/uploads/paper-2022-08/3.png" /></p>
<hr />
<p>另外，我们需要关注训练数据集分布的问题。论文使用的数据集中有 83% 的操作是无用操作，这种分布不均匀的数据集和理想的 50%-50% 数据集差距过大，可能导致特征训练不均衡。所以这里使用了 Prioritized experience replay 方法来重新平衡数据集。</p>
<p>关于这个方法的介绍可以参考 <a href="https://paperswithcode.com/method/prioritized-experience-replay">这篇文章</a>。</p>
<p>之后讨论如何将 Trigger 应用到其他的 ABR 算法上。</p>
<p>【这一部分在阅读完 DPG 相关论文之后再具体展开】</p>
<h2 id="evaluation">Evaluation</h2>
<p>介绍了使用的实验环境、数据集、训练方式、Baseline 的选取、QoE 指标的计算公式等等。</p>
<p>首先在一个数据集上，实验证明了 Stick 输出单参数的表现并不比双参数差很多，甚至在一些条件下能得到更好的 QoE 指标。</p>
<p>之后通过实验说明了 Stick 在各种数据集上都表现出了比 buffer-based 方法更为优秀的性能。</p>
<p>有关比较性能，论文里面有这样一句被强调的话：</p>
<div class="note success"><p>Note that Stick only utilize onequarter number of neurons that of Pensieve.</p>
<p>感觉是一种简单的强大。</p>
</div>
<p>之后还探讨了不同 QoE 指标下 Stick 的表现，探讨了 Trigger 的网络结构（全连接、LSTM 还是 CNN），做了一些进一步的 Evaluation，这里就不具体展开了。</p>
<h1 id="neural-adaptive-video-streaming-with-pensieve">Neural Adaptive Video Streaming with Pensieve</h1>
<h2 id="introduction-1">Introduction</h2>
<p>现行的 ABR 算法在选择下一个视频块的码率的时候往往面临下述四个问题：</p>
<ul>
<li>网络吞吐量的不稳定</li>
<li>部分 QoE 指标内存在相互矛盾的要求（如高质量和尽可能减少缓冲）</li>
<li>当前码率选择可能对未来的选择产生影响</li>
<li>ABR 的决策可能是粗粒度的</li>
</ul>
<p>现行的大部分 ABR 方法都依赖于对网络吞吐的估计或者对缓冲区大小的估计，所以其难以应对网络吞吐的不稳定。比如说 SOTA 方法 MPC 依赖于对网络吞吐量的预估，原文：</p>
<div class="note info no-icon"><p>However, MPC’s performance relies on an accurate model of the system dynamics - particularly, a forecast of future network throughput.</p>
</div>
<p>这样的限制使得 MPC 对预测结果的偏差十分敏感。</p>
<p>从而本文提出了 Pensieve，该方法会自动学习 ABR 算法，而不需要任何的预训练的控制规则或者对运行环境的假设条件。Pensieve 是基于强化学习的，其完全通过其与环境交互的经验学习。Pensieve 的核心为一个神经网络，该神经网络代表了 Pensieve 所采取的针对网络环境的策略。该网络接受的输入为各种对网络环境的原始观测数据（吞吐量采样、回放缓冲区占用率、视频块尺寸等），而其输出则为下一个视频块应当采取的码率。该网络的训练方式为 A3C。</p>
<p>Pensieve 的训练方式的核心则是一个模拟器，用于将大规模的网络跟踪信息数据库回放给 Pensieve，其划分粒度可以是块级别的，也可以是包级别的或者其他。Pensieve 的评测方式为将算法部署在一个 ABR 服务器上，令算法不断给出下一个视频块应当采取的码率，这样做可以避免在客户端上进行繁重的神经网络计算。</p>
<p>最后 Pensieve 在几乎所有的网络环境和 QoE 指标上持平或超过现有最佳的 ABR 算法。</p>
<h2 id="background">Background</h2>
<p>当前占主导地位的视频分发策略为 HTTP-based adaptive streaming，而其标准化技术为 DASH，即 Dynamic Adaptive Streaming over HTTP。而 DASH 的流程可以大致描述为下图：</p>
<p><img src="/uploads/paper-2022-08/4.png" /></p>
<ul>
<li>首先播放器向服务器获得认证</li>
<li>服务器应答一个保存有实际视频数据的 CDN 地址，并且列出所有可选码率</li>
<li>播放器使用 ABR 算法逐个请求视频块，视频块下载完成后渲染到屏幕上播放</li>
</ul>
<p>这里 ABR 算法几乎决定了整体的视频传输性能，其面临的若干挑战已经在 Introduction 部分给出了基本的介绍，这里稍加详细叙述。</p>
<ol type="1">
<li><p>ABR 算法并不能仅考虑网络情况，因为在类似蜂窝移动网络等不稳定网络条件下，我们难以预测未来的网络吞吐，最后往往仅能够获取到保守估计导致性能浪费，或者过高估计导致传输延迟。从而 ABR 也应当考虑缓冲区占有率等更为稳定的参数。</p></li>
<li><p>QoE 指标可能是相互冲突的。在带宽有限的网络环境中持续以最高码率请求视频可以保证视频质量，但是会升高缓冲率。相反，在不稳定的网络环境中，在任何时候选取当前网络环境能提供的最高码率会导致视频播放不平滑。</p></li>
<li><p>当前视频块的选择会对后续视频块的码率选择产生影响。其一，高码率视频块常常会导致后续视频块难以维持该高码率，因为可能导致缓冲。其二，为了保证视频播放平滑，ABR 算法不倾向于突然改变码率，所以后续视频块的码率并不会在当前码率基础上改变很大。</p></li>
<li><p>由于 ABR 算法能选择的码率范围被服务器给出的 Manifest file 限制，所以其选择往往是粗粒度的。有时网络环境会恰好落在某一个低码率过于浪费资源而稍高的码率就会导致缓冲的临界区域。</p></li>
</ol>
<h2 id="learning-abr-algorithms">Learning ABR Algorithms</h2>
<p>其首先将 Pensieve 和 Robust MPC 进行了对比，指出了 Robust MPC 的部分缺陷（基本还是先前部分提到的缺陷，只是使用了实验数据做了支持）。</p>
<p>这一部分似乎并没有写出很多新东西，还是先前部分的重复。</p>
<h2 id="design-1">Design</h2>
<h3 id="training-methodology">Training Methodology</h3>
<p>训练策略的核心是一个模拟视频下载流程的模拟器。其对于每一个视频块，模拟器会根据该视频块的码率以及网络状况生成下载耗时。在这一段时间，模拟器会缓慢消耗缓冲区内已经存在的视频块以模拟视频播放，之后再将该视频块压入缓冲区。模拟器会跟踪所有可能导致重新缓冲的事件，比如缓冲区剩余视频块长度小于正在下载的视频块需要的时间（这会导致已经缓冲的视频播放完成后新的视频块还未下载完毕）。另外一方面，如果当前缓冲区无法容纳新的视频块，那么模拟器会暂停下载 500 毫秒，之后重新开始请求。</p>
<p>在完成下载之后，模拟器会给出若干参数，比如当前缓冲区占有率、重新缓冲时间、视频块下载时间、（在所有可选码率下）下一个视频块的大小、该视频剩余的视频块数量等。这些参数的具体使用方式见后。</p>
<p>基于该模拟器，Pensieve 可以在很短的时间内学习一个本应占用长时间的视频下载流程。</p>
<p>虽然上述基于应用层行为的建模简单直接，但是实际上由于传输层复杂的行为，上述建模有可能并不精确。例如，播放器在缓冲区已满的条件下可能并不会在视频块下载完成后立刻请求下一个视频块，这可能导致传输层 TCP 回退到慢启动状态，这样可能并不能充分利用带宽。该问题实际上让 ABR 算法需要考虑的方面增多了，因为通常意义上快速填满缓冲区的策略会导致 TCP 慢启动从而造成事实上的低效率。</p>
<p>为了了解 TCP 慢启动造成的影响，设计的实验为在带宽 6 Mbps 的条件下不断以某一个恒定的码率请求视频块。得出的结论为，在启用 TCP 慢启动的条件下请求的码率越低带宽利用率越低，而不启用 TCP 慢启动的条件下所有码率均充分利用了带宽。</p>
<p>所以为了让模拟贴合现实，我们可以关闭服务器的 TCP 慢启动。虽然这可能导致流量的突变，但目前可以有其他的解决方案解决这一问题而不需要 Pensieve 来处理。</p>
<p>事实上上述模拟依然是不精确的，但是我们发现 Pensieve 依然可以通过上述不完整的模拟学习到高质量的 ABR 算法，这可能是由于 Pensieve 强大的泛用能力。</p>
]]></content>
      <categories>
        <category>【论文笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>2022 年 9 月论文笔记</title>
    <url>/2022/09/20/paper-2022-09/</url>
    <content><![CDATA[<p>这个月正式参与进入了实验室和快手的一个合作项目，依然还是需要从论文先开始。</p>
<span id="more"></span>
<h1 id="causalsim---unbiased-trace-driven-network-simulation">CausalSim - Unbiased Trace-Driven Network Simulation</h1>
<h2 id="abstract-introduction">Abstract &amp; Introduction</h2>
<p>在测评网络协议在线上的实际性能的时候，虽然 RCT 方法是最为标准的，但是由于其极其昂贵，对周边基础设施的要求也很高，所以只有若干大型网络运营方才能支持这种测评方法。基于此，一般的研究所会选择网络模拟器或者 trace-based simulation。但是网络模拟器往往难以模拟出真实网络环境中的复杂情况，并且这类模拟器需要对网络环境的极其详细的掌握。而 trace-based simulation 又常常因为数据质量不高或者有偏导致测评不精确。</p>
<p>【RCT 方法之后看论文】</p>
<p>应用反事实模拟以利用离线历史数据的主要思路为，首先获取在某一个给定网络条件下使用某一个网络协议时的 trajectory，而我们需要训练一个模型来预测在这个网络条件下使用其他网络协议的时候的 trajectory。基于这个模型，我们只需要已知一个协议的性能，就能够得知新协议的性能表现而不需要实际部署该协议。</p>
<p>使用反事实模拟的好处包括：</p>
<ul>
<li>节省部署协议和使用 RCT 方法评测的成本</li>
<li>能够在完全一致的网络条件下比较不同协议的差异</li>
<li>使用模型进行反事实模拟得到的数据可在社区内交流，帮助无法访问大型网络以测试其协议设计的开发者</li>
</ul>
<p>当然，反事实模拟的方法是困难的，原因之一是用于采集观测数据的策略可能破坏无偏性，这一点我们后续阐述。</p>
<p>那么本文的核心成果就是：</p>
<div class="note info no-icon"><p>We present CausalSim, a framework for learning <strong>unbiased trace-driven counterfactual simulation models</strong> for network protocols.</p>
</div>
<h2 id="motivation">Motivation</h2>
<p>总体而言，该文章尝试解决的问题依然是，考虑到直接线上测试算法性能较为耗时且代价较大，能否：</p>
<ul>
<li>使用历史数据预测算法的性能</li>
<li>服务运营商能否使用历史数据构建一个模拟器使得开发者可以在不接触实际网络环境的条件下评测算法</li>
</ul>
<h3 id="the-problem-of-trace-driven-network-simulation">The problem of trace-driven network simulation</h3>
<p>这一部分假设了一个新算法 FabABR，然后在 Puffer 数据集上收集了类似 BOLA-BASIC、BBA、Fugu 等已知的算法在给定的网络条件下的 buffer occupancy，令 BOLA-BASIC v1 充当新算法 FabABR，之后构建了两个模型来通过其他已知算法的 buffer occupancy 预测 FabABR 的 buffer occupancy，并和 ground truth 比较。</p>
<p>当然，在实际环境中，我们是没有 ground truth 的，因为我们没有新算法通过 RCT 方法评测得到的 buffer occupancy 作为 ground truth。</p>
<p>第一个模型是 ExpertSim。其原理为，在某个网络条件下，如果某个算法在时刻 <span class="math inline">\(t\)</span> 达成的吞吐率为 <span class="math inline">\(\hat c_t\)</span>，那么我们假设在该网络条件下，新算法达成的吞吐率也是 <span class="math inline">\(\hat c_t\)</span>。这也是该模型的首要假设，即不同算法对码率的决策不影响观测到的网络吞吐率，而这个假设广泛应用于各种模型。</p>
<p>在这个假设下，记时刻 <span class="math inline">\(t\)</span> 时的 buffer size 为 <span class="math inline">\(b_t\)</span>，而时刻 <span class="math inline">\(t + 1\)</span> 时的 buffer size 为 <span class="math inline">\(b_{t + 1}\)</span>，时刻 <span class="math inline">\(t\)</span> 的视频块时间为 <span class="math inline">\(T\)</span>，根据 FabABR 选择的码率该视频块的大小为 <span class="math inline">\(s_t\)</span>，那么：</p>
<p><span class="math display">\[
b_{t + 1} = \max\left(0, b_t - \frac{s_t}{\hat c_t}\right) + T
\]</span></p>
<p>第二个模型为 SLSim。其模型为两层全链接层，每层 128 个 ReLU 激活的神经元。该网络的输入为 <span class="math inline">\(b_t, \hat c_t, s_t\)</span>，输出为 <span class="math inline">\(b_{t + 1}\)</span>，符号的意义同上。由于我们具有 ground truth，我们就将其作为 supervisor 进行训练，loss 设定为 L2 loss。最后的实验结果为：</p>
<p><img src="/uploads/paper-2022-09/1.png" height="50%" width="50%" /></p>
<p>这里可以看见两种模型都不及 CausalSim 做出的预测。而这一差距的本质就是这两个模型都默认了不同算法对码率的决策不影响观测到的网络吞吐率，但实际上由于类似于 TCP 慢启动、和其他流量竞争等因素，不同的码率选择实际上会影响实际的吞吐率。而 Puffer 数据集实际上就能证明该假设错误：</p>
<p><img src="/uploads/paper-2022-09/2.png" height="50%" width="50%" /></p>
<p>可见不同算法影响了吞吐率的分布。这种错误的假设导致了数据的有偏。</p>
<h3 id="causal-inference-to-the-rescue">Causal inference to the rescue</h3>
<p>如果我们能够获取更深层次的网络情况而非仅仅是表层的吞吐率，我们完全就能修正原先的错误假设，这是因为我们可以将这些底层的网络情况视作独立于 ABR 算法的因素。</p>
<p>但是这些底层网络情况并不出现在数据集中，我们需要通过表层数据推测这些底层情况，而这也就是反事实推理介入的地方。</p>
<p>具体的设计见下述部分。</p>
<h2 id="model">Model</h2>
<h3 id="causal-dynamics">Causal dynamics</h3>
<p>我们给出这样的建模，令 <span class="math inline">\(o_t^\star\)</span> 表示时刻 <span class="math inline">\(t\)</span> 的时候系统观测到的表层数据，<span class="math inline">\(u_t\)</span> 表示时刻 <span class="math inline">\(t\)</span> 的时候系统的底层数据，<span class="math inline">\(a_t\)</span> 表示时刻 <span class="math inline">\(t\)</span> 时我们对系统做出的决策，那么系统行为可以建模为：</p>
<p><span class="math display">\[
o_{t + 1}^\star = \mathcal{F}_{\rm evolution}(o_t^\star, u_t, a_t)
\]</span></p>
<p>在 ABR 问题中，<span class="math inline">\(o_t^\star\)</span> 包括的因素有 buffer size、实际吞吐率、Min RTT、可选视频块大小，而 <span class="math inline">\(u_t\)</span> 包括的因素有瓶颈连接时间、竞争流量的数量、竞争流量的 congestion control。</p>
<p>此外，我们可以将 <span class="math inline">\(o_t^\star\)</span> 拆分为 <span class="math inline">\(o_t\)</span> 和 <span class="math inline">\(m_t\)</span>，这里 <span class="math inline">\(m_t\)</span> 是观测数据中受到底层数据所影响的部分，从而我们可以拆分出纯外部数据 <span class="math inline">\(o_t\)</span>，而后续我们所称呼的“观测数据”即指代 <span class="math inline">\(o_t\)</span>。这一步拆分后，建模可以变为：</p>
<p><span class="math display">\[
\begin{aligned}
m_t &amp;= \mathcal{F}_{\rm mediation}(a_t, u_t) \\
o_{t + 1} &amp;= \mathcal{F}_{\rm system}(o_t, m_t, a_t) \\
o_t^\star &amp;= [o_t, m_t]
\end{aligned}
\]</span></p>
<p>这里，我们需要说明的是 <span class="math inline">\(m_t\)</span> 是可观测的，而 <span class="math inline">\(u_t\)</span> 是潜在而不可观测的。另外，<span class="math inline">\(m_t\)</span> 受到决策的影响，而 <span class="math inline">\(u_t\)</span> 不受到决策的影响。</p>
<p>在 ABR 问题中，<span class="math inline">\(m_t\)</span> 就是我们实现的吞吐率，其不仅受到潜在网络环境影响，还受到 ABR 码率决策的影响，而这也就是先前两个策略失败的核心原因。此外，根据该建模，在得知吞吐率 <span class="math inline">\(m_t\)</span> 的信息之后，我们完全不需要了解其他信息即可推断出其他可观测的信息 <span class="math inline">\(o_t\)</span>。</p>
<h3 id="trace-driven-simulation-is-counterfactual-estimation">Trace-driven simulation is counterfactual estimation</h3>
<p>首先统一符号，我们假设数据集一共采用了 <span class="math inline">\(K\)</span> 种不同算法，一共生成了 <span class="math inline">\(N\)</span> 条 trajectory，我们记第 <span class="math inline">\(i\)</span> 个 trajectory 的长度为 <span class="math inline">\(H_i\)</span>。</p>
<p>那么我们的训练策略可以描述为，首先对于任何 <span class="math inline">\(i\)</span>，我们给出决策序列 <span class="math inline">\(\{\tilde a_t^i\}_{t = 1}^{H_i}\)</span>，给定初始观测 <span class="math inline">\(o_1^i\)</span>，并且我们确定所有 trajectory 均基于同一个潜在状态序列 <span class="math inline">\(\{u_t^i\}_{t = 1}^{H_i}\)</span>，我们的目的是预测出观测序列 <span class="math inline">\(\{\tilde o_t^i\}_{t = 1}^{H_i}\)</span>。</p>
<p>此外，我们注意到学习 <span class="math inline">\(\mathcal{F}_{\rm system}\)</span> 是完全监督的，因为所有需要的数据均可以观测。所以最终的困难点在于估计 <span class="math inline">\(\{u_t^i\}_{t = 1}^{H_i}, \{m_t^i\}_{t = 1}^{H_i}\)</span> 以及学习 <span class="math inline">\(\mathcal{F}_{\rm mediation}\)</span>。</p>
<h2 id="causalsim---key-insights">CausalSim - Key insights</h2>
<h3 id="counterfactual-estimation-as-matrix-completion">Counterfactual estimation as matrix completion</h3>
<p>这一步的核心在于将反事实推理等效为矩阵填充问题。我们假设动作空间大小为 <span class="math inline">\(A\)</span>，即 <span class="math inline">\(a_t^i \in \{1, 2, \cdots, A\}\)</span>，另外记：</p>
<p><span class="math display">\[
U := \sum_{i = 1}^NH_i
\]</span></p>
<p>那么我们考虑一个 <span class="math inline">\(A \times U\)</span> 的矩阵，其中每一行代表一种决策，每一列代表潜在状态。这里我们将第 <span class="math inline">\(i\)</span> 个 trajectory 的第 <span class="math inline">\(t\)</span> 时刻中所有的 <span class="math inline">\((i, t)\)</span> 按 <span class="math inline">\(i\)</span> 为主序数排列为长度为 <span class="math inline">\(U\)</span> 的序列，从而每一个 <span class="math inline">\((i, t)\)</span> 都能对应到 <span class="math inline">\(M\)</span> 中的某一列。</p>
<p>在第 <span class="math inline">\(i\)</span> 个 trajectory 的第 <span class="math inline">\(t\)</span> 时刻，我们观测到 <span class="math inline">\(m_t^i = \mathcal{F}_{\rm mediation}(a_t^i, u_t^i)\)</span>，而 <span class="math inline">\(m_t^i\)</span> 就是矩阵 <span class="math inline">\(M\)</span> 中 <span class="math inline">\(a_t^i\)</span> 所对应的行和 <span class="math inline">\((i, t)\)</span> 所对应的列处的已知元素，该列其余元素均为未知元素。也就是说我们在初始条件下，每一列都会有一个已知元素。</p>
<p>而现有的矩阵填充算法并不能直接应用到本问题上，因为本问题中的 <span class="math inline">\(M\)</span> 元素缺失的 pattern 并不随机并且缺失元素数量过多。但是另外一方面，矩阵 <span class="math inline">\(M\)</span> 显然具有更为优越的结构，因为元素缺失的 pattern 和已知的 ABR 算法决策流程相关，并且 <span class="math inline">\(N\)</span> 个 trajectory 的网络潜在条件是一致的。</p>
<h3 id="exploiting-the-policy-invarience-of-latent-factors">Exploiting the policy invarience of latent factors</h3>
<p>我们这里考虑一个简单情况，即 <span class="math inline">\(A = 2, U = 2n\)</span>，并且矩阵 <span class="math inline">\(M\)</span> 秩为 <span class="math inline">\(1\)</span>。这说明存在 <span class="math inline">\(a \in \mathbb{R}^2, u \in \mathbb{R}^{2n}\)</span> 满足 <span class="math inline">\(M = au^T\)</span>。之后我们令 <span class="math inline">\(K = 2\)</span>。</p>
<p>考虑到：</p>
<p><span class="math display">\[
\frac{M_{1, j}}{M_{2, j}} = \frac{a_1u_j}{a_2u_j} = \frac{a_1}{a_2}
\]</span></p>
<p>并且每一列必然有一个已知元素，所以我们只需要估计 <span class="math inline">\(a_1 / a_2\)</span>。</p>
<p>另外，基于两个 trajectory 均基于一致的网络潜在条件，所以对于较大的 <span class="math inline">\(n\)</span>，每一列的期望应当类似，所以有以下估计（这个估计我感觉比较奇怪，说理也比较不充分）：</p>
<p><span class="math display">\[
\frac{1}{n}\sum_{j = 1}^n u_j \approx \frac{1}{n}\sum_{j = n + 1}^{2n} u_j
\]</span></p>
<p>之后我们就可以得到下述估计：</p>
<p><span class="math display">\[
\frac{\sum_{j = 1}^n M_{1, j}}{\sum_{j = n + 1}^{2n} M_{2, j}} = \frac{\sum_{j = 1}^n a_1u_j}{\sum_{j = n + 1}^{2n} a_2u_j} \approx \frac{a_1}{a_2}
\]</span></p>
<p>从而我们得到了我们需要的估计，从而我们就能补充完整整个矩阵。</p>
<h2 id="causalsim---details">CausalSim - Details</h2>
<p>最后采用了这样的一个网络结构：</p>
<p><img src="/uploads/paper-2022-09/3.png" height="50%" width="50%" /></p>
<p>该网络的目标是为了获取不变的潜在条件 <span class="math inline">\(\{u_t^i\}_{t = 1}^{H_i}\)</span>，而完成这项任务的网络是 Policy Discriminator，其接受 <span class="math inline">\(\{u_t^i\}_{t = 1}^{H_i}\)</span> 作为输入，输出为其认为该行为决策是由哪一个算法做出的。由于其为一个简单的多分类任务，所以其 loss 就采用简单的交叉熵表示为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm disc} := \mathbb{E}_D[-\ln \mathbb{P}(\pi \mid \hat u)]
\]</span></p>
<p>而我们的目标是让 Policy Discriminator 的 loss 尽可能大，从而通过分类器无法区分各类算法保证抽取的潜在不变条件确实和具体的算法无关。</p>
<p>整个网络采用的 loss 为：</p>
<p><span class="math display">\[
\mathcal{L}_{\rm total} := \mathbb{E}_D[\delta(m_t^i - \hat m_t^i)^2 + (o_t^i - \hat o_t^i)^2] - \kappa\mathcal{L}_{\rm disc}
\]</span></p>
<h2 id="evaluation">Evaluation</h2>
<h3 id="a-real-world-abr-experiment">A real-world ABR experiment</h3>
<p>实验过程比较简单，问题出现在如何评测。因为 Puffer 数据集里每一个 trajectory 仅使用了一种算法跑过，所以实际上是无法对多个新算法进行评测的。所以其采用了评价变量分布的方式进行评测。即，不同的算法在不同的 trajectory 上运行，只要潜在网络因素不变，各类变量的分布应该是类似的。那么基于此，我们只要再做一次模拟，之后指定一个变量，评价两次模拟中该变量分布之间的差距。这里评价分布的差距使用 EMD：</p>
<p><span class="math display">\[
{\rm EMD}(\mathcal{P}, \mathcal{Q}) := \int_{-\infty}^{+\infty} |\mathcal{P}(x) - \mathcal{Q}(x)| {\rm d}x
\]</span></p>
<p>这里 <span class="math inline">\(\mathcal{P}, \mathcal{Q}\)</span> 都是累积分布函数。</p>
<p>评测结果自然是 CausalSim 很厉害：</p>
<p><img src="/uploads/paper-2022-09/4.png" height="50%" width="50%" /></p>
<h3 id="learning-abr-policies-with-causalsim">Learning ABR policies with CausalSim</h3>
<p>既然现在已经具有了工作良好的模拟器，我们就可以利用该模拟器训练 ABR，具体的过程不阐述，结果如下：</p>
<p><img src="/uploads/paper-2022-09/5.png" height="70%" width="70%" /></p>
<p>总体而言，CausalSim 显然和真实环境下训练的结果贴近，而其他的模拟器均有很大偏差。并且对于高 RTT 的 Agent，这个差距更大。这个差距的根本原因依然是其他模拟器都是有偏的，在例如慢启动等条件下，容易选择保守的码率。</p>
<h3 id="server-load-balancing">Server load balancing</h3>
<p>【PASS】</p>
<h2 id="final-analysis">Final analysis</h2>
<p>读这一篇论文目的是为了研究怎么离线评测算法，也就是训练一个合理的环境模拟器出来。但感觉本文的一个核心思想为将网络吞吐率等因素视作和 ABR 决策有关的变量，将其纳入考虑。严格而言就是更新了对环境内部逻辑的建模，使之更为贴近真实环境。而如果不把网络吞吐率纳入考虑，则前一时刻无论做出什么选择，下一时刻环境都会要求算法实现同样的吞吐率，从而导致算法趋近于保守，在高 RTT Agent 上表现出仅选择较低码率。</p>
<p>方法上的话，感觉 Policy Discriminator 没有太见过，是一个训练无关性的好方法。</p>
<h1 id="deployment-efficient-reinforcement-learning-via-model-based-offline-optimization">Deployment-Efficient Reinforcement Learning via Model-Based Offline Optimization</h1>
<h2 id="abstract-introduction-1">Abstract &amp; Introduction</h2>
<p>离线 RL 的问题在于在线和环境交互可能导致较大开销，为了解决这一问题，主要的策略分为：</p>
<ul>
<li>限制 agent 的行为，防止其做出错误举动。这里 BCQ 就采用了这样的做法（但是 BCQ 论文实在是需要慢慢看）</li>
<li>强化 agent 的 exploitation 能力，令其最大化利用有限的数据</li>
</ul>
<p>本文的成果是提出了衡量 RL 算法的一个指标，即 deployment efficiency，其基于了 RL 学习过程中数据采集策略发生变化的次数（因为策略发生变化意味着需要一次新的部署）。完全离线的 RL 算法如 BCQ、BRAC 具有很高的 deployment efficiency，而完全在线的 RL 算法如 DDPG、SAC 则较低。</p>
<p>论文特别指出，deployment efficiency 和已有的 data efficiency 并不完全类似，这里后者衡量了 RL 学习过程中采集数据的次数。这意味着，即使 data efficiency 很低（数据采样次数极大），只要收集数据的策略没变，那么 deployment efficiency 依然较高。</p>
<p>目前大部分的离线 RL 算法都在大数据集上进行训练和评测，以保证 deployment efficiency 和 data efficiency 都很高。但实际上我们注意到由于 extrapolation error，这种简单直接的算法其实并不优越。而对于在线算法，虽然可以克服数据集数据分布不符合真实数据分布的问题，但实际上会限制 policy 的表达能力【Question #1：这里没有特别明白】。</p>
<p>此外，本文还提出了 BREMEN，即 Behavior Regularized Model ENsemble。</p>
<div class="note info no-icon"><p>We propose Behavior-Regularized Model-ENsemble (BREMEN), which learns an ensemble of dynamics models in conjunction with a policy using imaginary rollouts while implicitly regularizing the learned policy via appropriate parameter initialization and conservative trust-region learning updates.</p>
</div>
<p>自然，BREMEN 在高维连续决策空间上也表现很好。</p>
<h2 id="preliminaries">Preliminaries</h2>
<p>首先定义 MDP <span class="math inline">\((\mathcal{S}, \mathcal{A}, p, r, \gamma)\)</span>，而 policy <span class="math inline">\(\pi\)</span> 定义了 agent 的行为，<span class="math inline">\(\pi\)</span> 接受一个状态，输出一个状态空间 <span class="math inline">\(\mathcal{A}\)</span> 上的概率分布，表示 agent 做出给定行为的概率。我们的目标是获取下述最优 policy：</p>
<p><span class="math display">\[
\pi^* = \mathop{\rm argmax}_\pi \eta[\pi] = \mathop{\rm argmax}_\pi \mathbb{E}_\pi\left[\sum_{t = 0}^{+\infty} \gamma^tr(s_t)\right]
\]</span></p>
<p>而所谓 model-based 的 RL 方法，就需要对 MDP 中的 <span class="math inline">\(p(s&#39; \mid s, a)\)</span> 建模估计。</p>
<p>RL 的学习过程中包含两种行为，分别为获取 MDP 转移对（即 deployment）与更新 policy 参数（即 learning）。如果学习过程中每次更新参数后均将收集到的数据舍弃，那么该学习就是 on-policy 的。反之，如果不断积累数据形成 replay dataset <span class="math inline">\(\mathcal{D}\)</span>，那么该学习就是 off-policy 的，因为用于更新 policy 的数据并不一定通过当前 policy 收集。</p>
<p>但是上述的学习过程都是 online 的，因为其 deployment 和 learning 是混合进行的，而纯 offline 算法中 agent 不会直接与环境进行任何的交互，agent 只能从固定的数据集之中学习。当然，介于 online 和 offline 之间有 semi-batch RL，其实现了较高的 deployment efficiency，当然这种方法并没有完全研究过。</p>
<h2 id="deployment-efficiency">Deployment efficiency</h2>
<p>这里主要阐述这样的观点，即对于 online RL，无论其是 on-policy 还是 off-policy，在一次迭代之后，必然会部署新的 policy 并获取数据，这显然是 deployment unefficient 的。相反，纯 offline RL 只会学习一次部署得到的数据。而一个理想的平衡算法应当位于这两个极端之间。</p>
<p>论文认为现在的 RL 算法忽视了 deployment efficiency，并且现行的部分 SOTA 算法甚至需要百万量级的部署次数（如 SAC）。本文提出了只需要五次到十次部署即可有效学习的算法。</p>
<h2 id="behavior-regularized-model-ensemble">Behavior regularized model ensemble</h2>
<h3 id="imaginary-rollout-from-model-ensemble">Imaginary rollout from model ensemble</h3>
<p>为了解决 model bias 的问题，BREMEN 使用了包含 <span class="math inline">\(K\)</span> 个 deterministic dynamic model 的 <span class="math inline">\(\hat f_\phi := \left\{\hat f_{\phi_1}, \cdots, \hat f_{\phi_K}\right\}\)</span>，其中 <span class="math inline">\(\phi_i\)</span> 表示模型参数。这些模型的训练方式都是最小化下述均方误差，即 model 预测的后续状态和数据集 <span class="math inline">\(\mathcal{D}\)</span> 指示的后续状态：</p>
<p><span class="math display">\[
\min_{\phi_i} \frac{1}{|\mathcal{D}|} \sum_{(s_t, a_t; s_{t + 1}) \in \mathcal{D}} \frac{1}{2} \left\|s_{t + 1} - \hat f_{\phi_i}(s_t, a_t)\right\|_2^2
\]</span></p>
<p>在实际训练 policy <span class="math inline">\(\pi_\theta\)</span> 的时候，会从这 <span class="math inline">\(K\)</span> 个 model 中随机选择一个来提供下一状态：</p>
<p><span class="math display">\[
a_t \sim \pi_\theta(\cdot \mid \hat s_t), \hat s_{t + 1} = \hat f_{\phi_t}(\hat s_t, a_t), i \sim \{1, 2, \cdots, K\}
\]</span></p>
<h3 id="policy-update-with-behavior-regularization">Policy update with behavior regularization</h3>
<p>这里训练具体的 policy 的时候，需要使用置信区间约束来解决 distribution shift 的问题，即在每一次部署之后都使用 behavior clone 得到的 policy <span class="math inline">\(\hat\pi_\beta\)</span> 对 <span class="math inline">\(\pi_\theta\)</span> 重新初始化。具体而言，在每一次部署之后我们都能得到一个更新过的数据集 <span class="math inline">\(\mathcal{D}\)</span>，从而我们使用 BC 对真实的 policy <span class="math inline">\(\pi_b\)</span> 进行估计。具体的训练方式为下述，这里论文作了 fixed variance 假设：</p>
<p><span class="math display">\[
\min_\beta \frac{1}{|\mathcal{D}|} \sum_{(s_t, a_t) \in \mathcal{D}} \frac{1}{2} \left\|a_t - \hat\pi_\beta(s_t)\right\|_2^2
\]</span></p>
<div class="note info no-icon"><p>好像 behavior clone 和 distribution shift 都是模仿学习的东西，这里还真的不太会，后面补。</p>
<p>一个可能有用的 <a href="https://wensun.github.io/CS4789_data/Imitation_Learning_April_8_annotated.pdf">slide</a>。</p>
<hr />
<p>似乎学明白了一点东西，模仿学习是一种改进的 RL，其面对的是无法合理得到 reward signal 的 RL 环境，但是其可以获得部分专家数据，那么我们就可以模仿专家数据进行学习，这就是 behavior clone。</p>
<p>behavior clone 的基本思想借鉴了监督学习。例如我们获得了专家数据集 <span class="math inline">\(\mathcal{D}\)</span>，那么我们的训练方式就是：</p>
<p><span class="math display">\[
\theta^* := \mathop{\rm argmin}_\theta \mathbb{E}_{(s, a) \sim \mathcal{D}} \mathcal{L}(\pi_\theta(s), a)
\]</span></p>
<p>这里 <span class="math inline">\(\mathcal{L}\)</span> 是 loss，可以设定为负 reward 等。</p>
<p>但这个方法有很多问题，包括在数据集较小的时候学习效率极低、无法分辨真正导致 reward 上升的行为等，但是更为致命的问题是 distribution shift。</p>
<p>这个问题指的是专家数据和实际数据分布不一致，尤其指训练集和测试集分布之间有偏差。由于我们参考了监督学习的思想，behavior clone 实际上也继承了监督学习的一个假设，即数据集分布和真实数据分布一致。但是，即使这个假设并不严格成立，监督学习也是可以忽略的，因为监督学习的各个数据之间独立，可以忽略。然而 RL 是逐步决策的，某一步的偏差可能导致后续误差的累积导致后续决策的极大偏移。</p>
<p>有一种解决方式是数据聚合，这里就和论文无关了，故不做讨论。</p>
</div>
<p>而通过 <span class="math inline">\(\hat\pi_\beta\)</span> 重新初始化 <span class="math inline">\(\pi_\theta\)</span> 的方式为正态分布初始化，均值设定为 <span class="math inline">\(\hat\pi_\beta\)</span> 而标准差置 <span class="math inline">\(1\)</span>。论文认为在这里将 BC 和普通的梯度下降相结合可以使得 <span class="math inline">\(\pi_\theta\)</span> 趋向于新数据集 <span class="math inline">\(\mathcal{D}\)</span> 代表的 policy，可以认为是一种 distribution shift 问题的补救措施。</p>
<p>为了进一步补救，其进一步使用 KL-based trust region optimization。总体上 BREMEN 的 policy 更新策略就是：</p>
<p><span class="math display">\[
\theta_{k + 1} = \mathop{\rm argmax}_\theta \mathbb{E}_{(s, a) \sim (\pi_{\theta_k}, \hat f_{\phi_i})} \left[\frac{\pi_\theta(a \mid s)}{\pi_{\theta_k}(a \mid s)} A^{\pi_{\theta_k}}(s, a)\right]
\]</span></p>
<p>这里要求：</p>
<p><span class="math display">\[
\mathbb{E}_{s \sim (\pi_{\theta_k}, \hat f_{\phi_i})} D_{\rm KL}(\pi_\theta(\cdot \mid s) \parallel \pi_{\theta_k}(\cdot \mid s)) \leq \delta
\]</span></p>
<p>此外定义初始值：</p>
<p><span class="math display">\[
\pi_{\theta_0} := \mathcal{N}(\hat\pi_\beta, 1)
\]</span></p>
<p>得到的 BREMEN 算法流程为：</p>
<p><img src="/uploads/paper-2022-09/6.png" /></p>
<p>总体来看，简化了部署的过程，然后使用类似 TRPO 中信任域的方式约束了 agent 的行为。</p>
<h2 id="experiments">Experiments</h2>
<p>既然 BREMEN 的优势在于少量部署条件下能高效学习，其第一个实验就是和其余 RL 在约束部署次数的条件下比较 reward，效果是明显的：</p>
<p><img src="/uploads/paper-2022-09/7.png" /></p>
<p>这里每一条竖直虚线都代表一次部署，部署次数约束在五次到十次之间，每次 batch size 约束在 200k 到 100k。可见 BREMEN 明显优于大部分算法，而几乎仅劣于完全在线的 SAC，但是 SAC 可能需要近百万量级的部署次数。</p>
<p>此外，为了测试 data efficiency，论文采用的方法是训练一个 SAC 后用该 policy 采集一个 dataset 并用该 dataset 训练各种离线算法，根据下述结果可以看出 BREMEN 能在很小的数据集下就能超越 BC 的 baseline，而其余类似 BCQ 等的方法甚至无法超越 baseline，这说明了 BREMEN 不仅 deployment efficient 而且是 data efficient 的：</p>
<p><img src="/uploads/paper-2022-09/8.png" /></p>
<h2 id="final-analysis-1">Final analysis</h2>
<p>说实话由于 RL 基础还是有点欠缺，自己不是很了解信任域相关方法的数学基础，所以对其数学论证也没看很细致，尤其是涉及到 implicit KL regularization 的部分。</p>
<p>但总体而言这篇文章提出的核心思想是需要考虑部署带来的开销，并且提出了利用 BC 等方法来强化模型的 exploitation 能力并且尝试使用信任域的想法约束 agent 的行为，总体上依然符合离线 RL 的两大思路。</p>
<p>数学证明之类的可能真的要等到补补 TRPO 之类 RL 方法之后写，目前打算基于 Sutton 把博客里面这些有关 RL 的一些东西串起来。</p>
]]></content>
      <categories>
        <category>【论文笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>《Petal Letter》歌词试译</title>
    <url>/2022/10/27/petal-letter-lyrics/</url>
    <content><![CDATA[<p>秋枫老师发来的一份歌词，感觉挺有意思就试着自己翻译看看了。</p>
<p>歌曲的地址是 BV1Y14y1j7Fi。</p>
<span id="more"></span>
<p><strong><code>@ 朝日 あさひ</code>に<code>@ 溶 と</code>ける<code>@ 微睡 まどろ</code>みと<code>@ 目覚 めざ</code>めの<code>@ 狭間 はざま</code>、そっと<code>@ 口遊 くちずさ</code>む<code>@ 旋律 メロディ</code>、<code>@ 花片 はなびら</code>にのせ、<code>@ 風 かぜ</code>よ<code>@ 届 とど</code>けて、あなたが<code>@ 旅 たび</code>する<code>@ 世界 せかい</code>へ。</strong></p>
<p>在朝阳中浅睡与苏醒的间隙中悄悄吟唱的旋律，乘上飘落的花瓣，就让微风将它传达到你所旅行的世界吧。</p>
<p><strong><code>@ 魔法 まほう</code>で<code>@ 出逢 であ</code>った、あなたと<code>@ 私 わたし</code>、<code>@ 今 いま</code>は<code>@ 別々 べつべつ</code>の<code>@ 物語 ものがたり</code>を<code>@ 行 ゆ</code>く。</strong></p>
<p>因魔法而相遇的你我二人，如今却向着不同的未来而去。</p>
<p>【注释 #1】这里并没有将「<code>@ 物語 ものがたり</code>」直接翻译为“故事”，感觉并不太符合中文的语感。</p>
<p><strong><code>@ 何 なに</code>かが<code>@ 始 はじ</code>まる<code>@ 予感 よかん</code>を<code>@ 胸 むね</code>に、<code>@ 歩 ある</code>き<code>@ 出 だ</code>してから、どれだけ<code>@ 経 た</code>ったの。</strong></p>
<p>心中不知为何，总有着何事将至的预感。即使知道那时的分别，已经过去了不知多长时间。</p>
<p><strong><code>@ 緩 ゆる</code>やかな<code>@ 坂道 さかみち</code>、<code>@ 登 のぼ</code>ればまた<code>@ 独 ひと</code>りきり。</strong></p>
<p>登上平缓的山坡，依然独自一人。</p>
<p><strong><code>@ 寂 さび</code>しさに、<code>@ 心細 こころぼそ</code>さに、<code>@ 寄 よ</code>り<code>@ 添 そ</code>ってくれる、あなたと<code>@ 交 か</code>わした<code>@ 心 こころ</code>の<code>@ 花束 はなたば</code>。</strong></p>
<p>在这寂寞与不安中，我依偎着的，是与你交换的心之花束。</p>
<p>【注释 #2】这里的语句结构有点怪异，歌曲中这里的断句也比较怪异，难以判定「くれる」与后续句子的关系。这里又要经典批判一遍为何现代日语的终止形和连体形合流，这显然难以判定一个动词词组究竟是修饰名词还是直接终止语句，这导致大量的歌词翻译困难。</p>
<p><strong>いつでも<code>@ 誰 だれ</code>かが<code>@ 泣 な</code>いている<code>@ 世界 せかい</code>、<code>@ 鏡 かがみ</code>の<code>@ 向 む</code>こうに<code>@ 霞 かす</code>んだ。<code>@ 今 いま</code>は<code>@ 消 き</code>えた、<code>@ 祭 まつ</code>りの<code>@ 果 は</code>てで。</strong></p>
<p>无论何时都有谁在哭泣着的世界，也在镜子中烟雾朦胧。现在早已在祭典的尽头，消失不见。</p>
<p><strong><code>@ 触 ふ</code>れ<code>@ 合 あ</code>うことすら、できずに<code>@ 別 わか</code>れた。</strong></p>
<p>我们甚至都还没有再次相遇，却又再次分别。</p>
<p><strong>あなたを<code>@ 感 かん</code>じたい<code>@ 時 とき</code>は、<code>@ 名前 なまえ</code>をもう<code>@ 一度 いちど</code> <code>@ 呼 よ</code>ぶ。</strong></p>
<p>每当想要感受你的温暖的时候，再一次，呼唤你的名字。</p>
<p><strong><code>@ 青 あお</code>い<code>@ 薔薇 ローズ</code>、<code>@ 赤 あか</code>い<code>@ 椿 カメリア</code>、<code>@ 花 はな</code>は<code>@ 今日 きょう</code>も<code>@ 咲 さ</code>いてますか。</strong></p>
<p>蓝色的玫瑰，红色的山茶花，花朵如今，也依然在绽放吗。</p>
<p><strong><code>@ 問 と</code>いかけて<code>@ 応 こた</code>えなくても、<code>@ 同 おな</code>じ<code>@ 楽園 そら</code>を<code>@ 見上 みあ</code>げてる。</strong></p>
<p>即使问而不答，我们也始终仰望着同一片乐园（天空）。</p>
<p><strong>あれから<code>@ 始 はじ</code>まった<code>@ 長 なが</code>い<code>@ 旅 たび</code>も、<code>@ 終 お</code>わる、いつかは、<code>@ 消 き</code>える、<code>@ 全 すべ</code>てが。そして、<code>@ 星 ほし</code>は、<code>@ 巡 めぐ</code>る。</strong></p>
<p>从那时开始的漫长旅途，总有一天也会结束，到那时，一切都会消逝。而后，群星依然流转。</p>
<p><strong><code>@ 止 や</code>まない<code>@ 嵐 あらし</code>に<code>@ 足 あし</code>を<code>@ 止 と</code>められ、<code>@ 草臥 くたび</code>れた<code>@ 靴 くつ</code>の<code>@ 跡 あと</code>を<code>@ 振 ふ</code>り<code>@ 返 かえ</code>る。</strong></p>
<p>无休无止的山林雾气中，我不得不停下脚步，回望着以往的足迹，鞋履也早因旅途破旧不堪。</p>
<p><strong><code>@ 大事 だいじ</code>なものはまだ、<code>@ 歩 ある</code>く<code>@ 度 たび</code>に<code>@ 増 ふ</code>えるでしょう。</strong></p>
<p>然而，那些珍贵的回忆，依然随着我们前行的每一步而积累着。</p>
<p><strong>それでも<code>@ 俯 うつむ</code>く<code>@ 私 わたし</code>の<code>@ 背中 せなか</code>を<code>@ 押 お</code>すのは、あなたと<code>@ 交 か</code>わした、<code>@ 叶 かな</code>わぬ<code>@ 約束 やくそく</code>。</strong></p>
<p>尽管如此，激励着早已疲惫不堪的我继续前行的，是与你定下的未竟约定。</p>
<p>【注释 #3】这里意译了「<code>@ 俯 うつむ</code>く」，其本意是“低下头”。</p>
<p><strong><code>@ 大 おお</code>きな<code>@ 鞄 かばん</code>に<code>@ 閉 と</code>じこめた<code>@ 願 ねが</code>い、<code>@ 鏡 かがみ</code>と<code>@ 一緒 いっしょ</code>に<code>@ 壊 こわ</code>れた。<code>@ 夢 ゆめ</code>と<code>@ 追憶 ついおく</code>が<code>@ 降 ふ</code>り<code>@ 注 そそ</code>ぐ。</strong></p>
<p>珍藏在大大的行李箱中的愿望，也随着镜子一同破碎，梦与追忆倾泻而下。</p>
<p><strong><code>@ 砂 すな</code>へと<code>@ 零 こぼ</code>れた<code>@ 涙 なみだ</code>を<code>@ 拭 ぬぐ</code>って、<code>@ 震 ふる</code>える<code>@ 手 て</code>が<code>@ 拾 ひろ</code>い<code>@ 上 あ</code>げた。</strong></p>
<p>拭去飘落在沙地上的泪水，用颤抖的手将碎片拾起。</p>
<p><strong><code>@ 光 ひかり</code>はきっと、<code>@ 同 おな</code>じ<code>@ 色 いろ</code>をした<code>@ 花 はな</code>。</strong></p>
<p>那光芒必然是，闪耀着相同颜色的花朵。</p>
<p><strong><code>@ 目 め</code>を<code>@ 閉 と</code>じれば、<code>@ 耳 みみ</code>を<code>@ 澄 す</code>ませば、<code>@ 花片 はなびら</code>が<code>@ 風 かぜ</code>に<code>@ 乗 の</code>って、<code>@ 旋律 メロディ</code>を<code>@ 届 とど</code>けるでしょう。</strong></p>
<p>闭上眼睛，侧耳倾听，花瓣乘上微风，将那旋律传达给你。</p>
<p><strong><code>@ 私 わたし</code>からあなたへの<code>@ 手紙 レター</code>。</strong></p>
<p>这就是，我寄给你的，一封信。</p>
]]></content>
      <categories>
        <category>【杂谈】日语</category>
      </categories>
  </entry>
  <entry>
    <title>直博招生专业面试的一些</title>
    <url>/2022/09/14/phd-interview/</url>
    <content><![CDATA[<p>2022 年 9 月 14 日，是清华大学计算机科学与技术系 2023 级免试攻读博士生招生专业面试。Holder 参加了这一场面试，然后人炸了。</p>
<span id="more"></span>
<p>今天面试本来就有点不安，最大的问题就是唯一能吹的一份挂了名的 SIGGRAPH 的文章实际上自己并没有参与特别核心的工作，而且做到一半就被拒了，所以实际上最后那段时间就在摆烂，组会吹水也不去了。</p>
<p>然而，今天就是这么时运不济，面试的评委里同时有徐昆老师和胡事民老师。没听过组会吹水不敢乱说，但胡老师就喜欢捉着这些问。他要是具体问如何实现了我负责的代码部分，我倒是可以说不少，但是问我一些 Overview，说实话倒还真的不会。</p>
<p>Holder 的科研真的毫无意义，毕竟自己就是如丧家之犬一般到处跑路。或许 Holder 真的就不应该硬头皮读这个博士，或许就该进厂上班了。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>《美少女万华镜 5 ——理与迷宫的少女》游戏测评</title>
    <url>/2021/08/18/renge-5/</url>
    <content><![CDATA[<p>Holder 不是一个玩 GAL 的人，能想到的 GAL 除了万华镜就是柚子社这种。但是 Holder 想了想，决定把万华镜 5 这个宣称中的最终章认真通一下，也算对我几乎唯一知晓的 GAL 致以敬意。</p>
<p>离万华镜 5 发售差不多过去一年半了，各路汉化理论上应该充斥互联网，但 Holder 也只找到了生肉，于是也顺便当成了日语阅读练习。</p>
<span id="more"></span>
<h1 id="总的感想">总的感想</h1>
<p>Holder 大概花掉了靠近三十个小时打通了所有的线，由于 H 情节在一年前实际上就已经都看过一遍而且自己也有全 CG，这次的重点就是把当时看来冗杂无比的剧情认真看一下。</p>
<p>当然，一直都说万华镜系列就是单纯的拔作，剧情几乎可有可无，这句话我可以说认同一半。首先，针对万华镜 5，如果不走莲华线，而是没有压住枪走了月丘线，那确实没有任何剧情，平平淡淡地每晚在澡堂触发 H 情节就结束了。而你如果剧情看到一半没忍住走了绿毛线（绿毛名字是もよか，说实话不知道怎么找当て字，倒是“绿毛”这个代号挺深入人心的），那也是很快就 BE 了。而如果你认认真真把莲华线推完，就会发现若干的伏笔被回收，剧情似乎就有了那么一点的道理（Holder 整体上还是觉得这个剧情偏扯，但是莲华线稍微补了一点论述）。其次，万华镜整个系列，确实几乎都是没啥剧情的，除了 5。其他系列都是推一会就开始炮火连天，而 5 我是整整看剧情看了靠近两天之后才解锁了新天地（当然玩的莲华线）。</p>
<p>如果说总的感想的话，就是感觉看了一个很普通的小说。撇去还算优秀的 H 情节不谈，我在玩的时候几乎全程在看底下的文字，因为图像说实话提供不了信息。比如说“ A 把 B 扶起来”，这个动作在番或者剧里面都可以画或者演出来，但是万华镜里面也仅仅是两个人的立绘贴了一下，动作则是文字给出。所以整体我还是一直在看文字，当小说看。</p>
<p>而说它“普通”，是因为贯穿全程的就是“理”或者“命运”或者“轮回转生”，题材不是什么新颖的东西，而且能预料到莲华和男主的一些前世姻缘之类的。然后中心矛盾之一也是普通的，“我能逆天改命”和“我们只能顺应命运”的矛盾，最后认为“我能逆天改命”的人盒饭了，但却让“我们只能顺应命运”的思想少许动摇，但是为时已晚不得不继续投入到命运的轮回之中。</p>
<p>要我说的话，论剧情，万华镜 5 就是很普通的一个小说，人物关系简单，矛盾点简单。但是论 H 情节，首先我认为绿毛连动态情节都没有是很难受的（巫女后辈啊！不配画一点动态的吗！），但是莲华在二次轮回的时候 H 情节确实作画很好，动态也不错，还是稍微给点表扬。</p>
<h1 id="剧情简要分析">剧情简要分析</h1>
<h2 id="莲华-轮回线">莲华-轮回线</h2>
<p>既然核心是“理”（不得不提的就是这个“理”在游戏里面训读成ことわり，而这个读音一般写成“断り”）和“轮回转生”，那么我们应该默认天理和轮回转生的存在。</p>
<p>剧情的主干实际上就是莲华和男主深见夏彦的前世姻缘，他们可以说每一世都会相遇相爱但由于各种不可抗力无法修成正果。先是罗马时代的奴隶主和奴隶，又是中世纪的女王和下臣，之后是猎巫人和女巫。而重点是第四世，他们是古代日本的一对恋人（这时深见夏彦的名字是“彦一”，记住，要考的），而第五世就是莲华和深见夏彦。</p>
<p>说第四世重要，是因为这里狐妖介入了进来。实际上狐妖附身了第四世的莲华，或者在一定程度上，莲华在这个时候已经成为了狐妖。而当彦一（第四世的深见夏彦）死于战火的时候，狐妖则处于对人类的憎恨和爱人亡故的怨念火烧城池。人们最后将狐妖的怨念封印为“杀生石”，并在城中修建相当数量的狐狸雕像望向杀生石的方向以镇压，同时也在杀生石所在的山顶修建了一座规模宏大的神社。但是神社实际上在很多年之后的又一次战火中被烧毁，但是村民并没有重建的计划（多半是已经忘了这段历史）。而杀生石和狐狸雕像却保留了下来，成为了传说。</p>
<p>这里的杀生石、狐狸雕像、神社则是第五世（现代）剧情推进的一条线索。</p>
<p>而这个时候就必须引出绿毛了。在第五世，也就是现代，绿毛先前有一个家境优渥的家庭，但是由于他人嫉妒而故意放出的无端谣言而招致了全村人的厌恶，随后她的家人因他人纵火全部亡故，而纵火者却至今逍遥法外，绿毛也因此有了对人类的憎恨和怨念。孤身一人的她投靠了从兄弟 H（名字不想打了，但是这个人的人设和痴汉别无他样，所以就用 Hentai 的首字母代称。这里 H 是一个女子中学的音乐老师），此时绿毛沉迷于深见夏彦所在的杂志社编辑的灵异杂志，自学了很多通灵方法。最终，她独身一人走上了原来有神社和杀生石的山顶，被满是怨念的狐妖附身，开启了剧情主线。</p>
<p>绿毛有了狐妖的力量，而狐妖的一个信念就是“我是可以逆天改命的”，或者说“我不愿意服从命运的安排”。狐妖因恋人离世而对人类憎恶，绿毛因为家人离世也对人类憎恶，两个怨念叠加，绿毛开始了复仇。她的第一步就是先转学到 H 所在的女子高中并要控制全校，因为女子高中生就是当时散布绿毛家族无端谣言的主力。绿毛看中了这所高中禁止使用手机和通信软件，利用了她们相对闭锁的信息环境，开始通过狐妖的力量诱骗她们迷信自己的占卜，随后再通过狐妖的力量对她们下诅咒。诅咒的内容就是：</p>
<div class="note info no-icon"><p>山顶有神社可以实现你的愿望，但是在前往神社之前，你必须不停地画白狐氏（びゃっこ氏）以表虔诚，否则就会降下惩罚。</p>
</div>
<p>而这座神社在现实中是真的不存在的（早就烧掉了还没重建），但是狐妖的灵力可以在山顶创建一个传送门，传送到若干年前的神社，而这个神社就在狐妖（或者说绿毛）控制之下。白狐氏就是这座神社供奉的神灵（就是狐妖），而所谓的惩罚是各种莫名其妙的伤害事件（突然被钢琴盖子砸断手指，实验的时候突然自燃之类），并且惩罚的共同点就是受伤的地方毛细血管会聚集成青色的蜘蛛网的样子，而且会长一个痣。</p>
<p>这也就是最初的最初，深见夏彦所要调查的“青蜘蛛的诅咒”事件。</p>
<hr />
<p>主角团是四人组，深见夏彦，他的编辑月丘香恋，同期的只相信科学的优秀作家皇公晓，以及实体化的莲华。</p>
<p>莲华在第五世转生的时候，没有获得肉体，成为了阿紫旅馆（也就是万华镜 1-4 开头的那个旅馆，其和神社等位于同一个村子）的座敷童子。所谓座敷童子，第五世的莲华的任务就是“超度”，也就是帮助满是怨念的灵魂安宁地走向死亡，走向轮回。而完成超度的道具就是“万华镜”。</p>
<p>所以说 1-4 里面深见夏彦透过万华镜看到的，就是那些已经被超度的魂灵的生前故事，而往往这些故事都或多或少带着点怨恨（1 是人鬼情恋的越界之恨，2 是沉溺于爱而伤害恋人的愧疚之恨，3 是文明凋亡的孤独之恨，4 则是近亲的禁忌之恨）。</p>
<p>另外，作为灵力的持有者，莲华的能力就是能够读取和修改人的记忆。</p>
<p>由于没有肉体，莲华无法被感知，从而也让她一直孤独一人。但深见夏彦，作为这么多次轮回之中莲华的恋人，自然是唯一一个能感知到她存在的的人。所以深见夏彦对莲华而言，简直就是世界上唯一可以交流的人类。</p>
<p>另一方面，莲华在得知深见夏彦想要来调查“青蜘蛛的诅咒”事件，要在阿紫旅馆住上一星期左右的时候，其花费了很多的灵力为自己构筑了肉体，并且通过修改记忆让主角团和旅馆工作人员都认为莲华是真实存在的一个女高中生，这也就是实体化。这个时候的莲华就可以和正常人一样活动了。</p>
<hr />
<p>先前提到，第四世的莲华和狐妖实际上几乎是一体的，而在第四世到第五世的轮回之中，莲华被拆分成了两部分，狐妖的部分被封印而剩下的部分幻化成了现在的莲华，这莲华是通过触碰了一只小狐狸之后回想起来的。</p>
<p>在主角团调查的时候，绿毛自然早已经觉察到，深见夏彦就是自己前世恋人彦一，所以绿毛对从兄弟 H 不屑一顾而单单对深见夏彦热情，而且在深见夏彦和莲华前往深山随便走走的时候将他们拉入了神社。绿毛自然也早就明白莲华和自己理论上是一体的，所以才有绿毛的“我唯一的朋友是莲华”这一句。</p>
<p>而绿毛为了在他人面前让自己和深见夏彦亲近显得合理，她故意称其为“哥哥”（大家都知道绿毛失去家人的过往，所以因此会把她亲近深见夏彦理解为“绿毛把对哥哥的思念寄托在深见身上”）。而绿毛则不需要对莲华隐藏，所以在澡堂里直接说“深见才不是我哥哥呢”。</p>
<p>绿毛在知道深见夏彦的存在后，除去复仇的主线，自然是尝试再构姻缘。所以她引诱深见夏彦去神社，去看杀生石，去看她舞蹈，去听铜铃的声音，给他托梦，目的就是让深见夏彦回想起自己的前世。深见夏彦在经历了若干天的噩梦和梦游（梦游去神社）之后，终于在某一天晚上回想起来了自己的一切。但是深见夏彦已经沉迷莲华，依然坚称自己是深见夏彦而非彦一。</p>
<p>得知恋人心意的绿毛，自然是相当悲愤。我大费周章为你复仇，你却出轨我自己（莲华理论上和绿毛是一体的，可以理解为绿毛是邪恶的一面，莲华是善良的一面），于是托了一个巨大的噩梦给深见夏彦（就是那个，裂嘴黑眼圈的莲华 CG，这也是游戏发售前就流传出来的梗图），想让他忘记莲华。随后动用了巨大的灵力干趴了学校里所有的学生，尝试吸取她们的灵魂。</p>
<p>而随着调查的深入，莲华也了解了狐妖已经附身到绿毛身上开始复仇，而这个时候绿毛也已经因为深见夏彦的背叛而暴走了。所以为了阻止这些计划，莲华只身一人前往神社和狐妖打灵力战斗去了。</p>
<p>但是莲华毕竟力量并非很充足，最后体力渐渐不支。这个时候深见夏彦突然赶到，给莲华挡下一击。绿毛眼看自己的攻击伤到的是自己的恋人，立马停手了。随后由于巨大的自责，她没有抵挡得住莲华的最后一击而幻化为怨念，被万华镜收纳住了。</p>
<p>绿毛是解脱了，和 H 去过平凡的女高中生生活去了。学校的诅咒也解除了，大家渐渐都回到正轨了。但是深见夏彦的灵魂却因为狐妖的一击变得支离破碎，如果不修复，就等于死亡。莲华这个时候想到了解决方式，就是和深见夏彦一起回到万华镜，让深见夏彦重新回想起来所有的回忆，补全灵魂，最后用莲华的力量让死者复生。这里显然就注意到了，死者复生是违反“理”的，也就是说，莲华最终还是走上了背离天理的路。</p>
<p>莲华和深见夏彦两人在万华镜里遨游，把 1-4 的场景都走了一遍，深见夏彦也渐渐回想起了各种东西，灵魂也渐渐补全。在走完第一圈后，莲华认为已经可以送深见夏彦回去了，但是深见夏彦坚决要和莲华在一起，于是他们又走了第二圈。这之后，莲华并不再是询问语气，而是命令深见夏彦赶快回去。</p>
<p>原因很简单，莲华知道自己也是狐妖的一部分，包括自己的实体化，所动用的灵力的基础都是狐妖赖以生存的力量——人类的悲痛，莲华决定自己超度自己肮脏的灵魂。而这最后的力量就是留给将深见夏彦死者复生的，违反天理的力量。但是深见夏彦最终还是不愿回去，而这个时候他需要经受身边人的各种诘难以确认自己的心意。最后在一通告白之后，两人携手走向又一次轮回。</p>
<p>轮回到第六世的结果，就是深见夏彦成了你（这也就是游戏开头让你输入你的名字的原因），莲华成为了一个知性大姐姐和你相遇，和你相恋。两人最后渐渐回想起了前世，由于狐妖已经消逝，阻碍已经消失，所以两人修成正果，过上了炮火连天的日子。</p>
<h2 id="莲华-非轮回线">莲华-非轮回线</h2>
<p>狐妖的部分都是一致的，第一世到第五世都是一致的，一直到两人走进万华镜都和莲华-轮回线一样。</p>
<p>莲华在第一圈后会询问两次深见夏彦是否愿意回去，第二圈则会再问一次。三次都回答不想回去，才会进入轮回线，只要有一次回答了想回去，就会进入非轮回线。</p>
<p>在这里，最后深见夏彦死者复生，但是他丧失了所有和莲华有关的记忆，“青蜘蛛的诅咒”事件也被科学解释了。苏醒的深见夏彦和月丘以及皇，去和旅馆工作人员、学校老师告别后回到东京过上了平凡的生活。虽然深见夏彦时不时还是觉得自己在搜寻着什么，但是总体而言并没有想起莲华。而莲华的灵魂，也随着狐妖一起被超度，不再和深见夏彦产生任何交集。</p>
<h2 id="绿毛线">绿毛线</h2>
<p>应该说是很单纯的 BE。</p>
<p>绿毛在无数若干次引诱深见夏彦，让他回想前世之后，最终有一天直接冲进澡堂色诱深见夏彦。这个时候如果选择“放任自己”，则会开启第一段绿毛 H，否则则会以绿毛无故消失结束这一天。</p>
<p>最后某一晚，深见夏彦再一次前往神社的时候终于回想起了一切，这个时候会有选项问“你是谁”。如果先前压住了枪，这里就会有两个选项，一个是“深见夏彦”一个是“彦一”。选择深见夏彦就进入莲华线，被绿毛噩梦调戏一番后直接开始和莲华炮火连天。选择彦一则进入第二段绿毛 H。不过在一炮之后，绿毛就会以“我要将你变成我的玩物”为由杀死深见夏彦后自杀。而在现实世界中，消息就是“深见夏彦和绿毛在深山中失踪”。随后两年后，月丘香恋和皇公晓回到这个村子尝试回忆一些什么，误入了深山，看到了杀生石下两人的遗体。</p>
<p>如果先前没有压住枪，那么在问“你是谁”的时候，只有“彦一”一个选项，后面的剧情是一样的。</p>
<h2 id="月丘线">月丘线</h2>
<p>最没有意思的线。</p>
<p>月丘实际上一直喜欢着深见。在主角组前往调查之前，月丘前往深见夏彦的家交代一些工作的事情，这个时候月丘得知深见一直不会做饭，于是她决定给深见做一顿饭。在饭后，带有一点醉意的两人突然趴倒在墙角，男下女上。这个时候月丘向深见表白，会有“接受”和“拒绝”的选项。</p>
<p>拒绝的话就正常开始调查，会调查到很多东西，会有机会进绿毛线、莲华线之类。</p>
<p>接受的话直接开启 H 情节。而因此深见夏彦的心态就变成了“我要尝试融入‘大人’的世界，不能再沉迷于莲华的万华镜了”。而这种心态下，主角组调查的时候，莲华就一直处于很边缘的地位，而月丘和深见则会每晚定时开 H 情节。</p>
<p>这次调查最终无疾而终，莲华在意识到深见的心意之后也只是默默留下一句“那就结束了吧”，便再也不见。主角组回到东京之后，自然是深见和月丘的炮火连天的二人世界。</p>
<h1 id="一些其他地方的想法">一些其他地方的想法</h1>
<p>总体而言还是贯彻了万华镜系列“压住枪的都是好儿郎”的准则，越早压不住枪就只能解锁越少的剧情，然后留下越多的没有起底的伏笔。</p>
<p>虽然说万华镜没啥剧情，但是实际上总体看下来虽然平淡无奇，但还算是叙事完整，能看明白。而且有些伏笔也还算可以，比如说旅馆的“野干（やかん）”面具（“野干”在日语中是狐狸的一种代称），一方面暗示了这里和狐狸有千丝万缕的联系，而最终，绿毛跳舞给深见夏彦看的时候，戴的就是野干面具。另一方面，这个村子叫“薬缶”，和“野干”日语同音，应该是讹传出来的地名。</p>
<p>此外，一定要抨击一下文案，不是说他写的东西多差，是<strong>经常把一些已经约定俗成不写汉字的关联词、虚词写成汉字</strong>，而有的时候又会把<strong>约定俗成写成汉字的词写成假名</strong>。这让我这个现代日语没学好的人读得有那么点难受。举点例子吧：</p>
<div class="note info no-icon"><p>成程、折角、兎に角、沢山、取り敢えず、一寸、丁度、其程、是迄</p>
</div>
<p>他们实际上是：</p>
<div class="note info no-icon"><p>なるほど、せっかく、とにかく、たくさん、とりあえず、ちょっと、ちょうど、それほど、ここまで</p>
</div>
<p>这些词可以说是，不太懂日语的人只要听到读音都能回想起来点什么的词，结果硬生生给我看不懂了。</p>
<h1 id="最后的最后">最后的最后</h1>
<p>万华镜系列我认为是，中下的剧情，中上的作画，虽然不知道为何如此火，但还是有点为三十个小时感到不值。</p>
<p>但如果闲的话推推也不错，当成一个耗时间的小说吧。不过个人建议先把月丘和绿毛推了，先推莲华会很容易没有推支线的动力，因为莲华线的叙事已经很完备，其他线的逻辑就是误入歧途从而有些事情没发现最后遗憾收场。</p>
<p>知乎上看了一句总结比较好：</p>
<div class="note info no-icon"><p>你以为是你把卖片的上了，谁知道人家是命中注定给你卖片。</p>
</div>
<p>就这样吧，小学期还在等着我。</p>
]]></content>
      <categories>
        <category>【杂谈】游戏</category>
      </categories>
  </entry>
  <entry>
    <title>强化学习算法与 demo 代码</title>
    <url>/2022/10/01/rl-algorithm-list/</url>
    <content><![CDATA[<p>本文基本基于原先的强化学习入门笔记，但是增加了不少东西，代码也从 Tensorflow 改成 Pytorch。</p>
<p>这篇文章大概会忽略掉不少基础部分的讲解，会更为侧重于说明各个算法的 motivation 和 implementation，可能会涉及到部分数学推理。</p>
<span id="more"></span>
<p><span class="math display">\[
\newcommand{\Pe}{\mathbb{P}_{\mathcal{E}}}
\newcommand{\P}{\mathbb{P}}
\newcommand{\E}{\mathbb{E}}
\newcommand{\R}{\mathbb{R}}
\newcommand{\S}{\mathcal{S}}
\newcommand{\A}{\mathcal{A}}
\newcommand{\Eop}{\mathop{\mathbb{E}}}
\newcommand{\b}{\boldsymbol}
\newcommand{\argmax}{\mathop{\rm argmax}}
\]</span></p>
<h1 id="强化学习的基本概念与基本优化理论">强化学习的基本概念与基本优化理论</h1>
<h2 id="环境与策略">环境与策略</h2>
<p>强化学习的基本框架为一个智能体和环境交互，环境对智能体的决策给出反馈，即收益信号并转移到下一状态，智能体需要学会在不同的状态下应该做出何种决策以收获最高总收益。</p>
<p>这里环境常常建模为 Markov 决策过程，即 MDP <span class="math inline">\((\S, \A, \Pe, r, \gamma)\)</span>。所谓 Markov 过程，指的是状态转移和历史状态无关，仅仅和当前状态有关，可以简单描述为 <span class="math inline">\(\P(s_{t + 1} \mid s_t) = \P(s_{t + 1} \mid s_t, s_{t - 1}, \cdots, s_1)\)</span>。MDP 中各项指的是：</p>
<ul>
<li>状态空间 <span class="math inline">\(\S\)</span>。即环境可以表现出的所有状态构成的集合。</li>
<li>决策空间 <span class="math inline">\(\A\)</span>。即环境允许智能体做出的所有决策构成的集合。</li>
<li>状态转移概率函数 <span class="math inline">\(\Pe\)</span>。<span class="math inline">\(\Pe(s&#39; \mid s, a)\)</span> 表示环境在状态 <span class="math inline">\(s \in \S\)</span> 且智能体做出决策 <span class="math inline">\(a \in \A\)</span> 的时候环境下一步转移到状态 <span class="math inline">\(s&#39; \in \S\)</span> 的概率。这里下标 <span class="math inline">\(\mathcal{E}\)</span> 表示该概率仅与环境 <span class="math inline">\(\mathcal{E}\)</span> 本身有关。</li>
<li>收益函数 <span class="math inline">\(r\)</span>。收益函数为从 <span class="math inline">\(\S \times \A \times \S\)</span> 到 <span class="math inline">\(\R\)</span> 的映射。<span class="math inline">\(r(s, a, s&#39;)\)</span> 表示环境在状态 <span class="math inline">\(s \in \S\)</span> 且智能体做出决策 <span class="math inline">\(a \in \A\)</span> 并转移到新状态 <span class="math inline">\(s&#39; \in \S\)</span> 的时候环境给予智能体的收益。</li>
<li>收益衰减系数 <span class="math inline">\(\gamma\)</span>。这里 <span class="math inline">\(\gamma \in [0, 1]\)</span>。该参数代表收益随着时间步衰减的系数，具体含义将会在后续定义累计收益的时候展开。</li>
</ul>
<p>而智能体内部所使用的策略一般表现为 <span class="math inline">\(\pi_{\b\theta}(a \mid s)\)</span>。这里策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 的下标 <span class="math inline">\(\b\theta\)</span> 表示该策略由参数 <span class="math inline">\(\b\theta \in \R^n\)</span> 建模。另外 <span class="math inline">\(\pi_{\b\theta}(a \mid s)\)</span> 表示了智能体在该策略条件下，在状态 <span class="math inline">\(s\)</span> 时做出决策 <span class="math inline">\(a\)</span> 的概率。</p>
<p>上述的策略往往称为<strong>非确定性策略</strong>，因为其对于某个状态给出的是做出某一种决策的概率，是不确定的。而另外一类策略，即<strong>确定性策略</strong>，会对于某个状态给出具体的某一种决策。确定性策略的记号，为了和非确定性策略的 <span class="math inline">\(\pi_{\b\theta}\)</span> 区别，往往使用 <span class="math inline">\(\mu_{\b\theta}\)</span>。而 <span class="math inline">\(a := \mu_{\b\theta}(s)\)</span> 就表示了智能体在该策略条件下，在状态 <span class="math inline">\(s\)</span> 时会做出决策 <span class="math inline">\(a\)</span>。</p>
<p>一条<strong>轨迹</strong>，或者 <strong>trajectory</strong>，指的是智能体和环境不断交互的过程的记录。具体而言，环境首先位于状态 <span class="math inline">\(s_0\)</span>，智能体做出决策 <span class="math inline">\(a_0\)</span>，环境返回收益 <span class="math inline">\(r_1\)</span> 后转入新状态 <span class="math inline">\(s_1\)</span>。以此类推形成 <span class="math inline">\(s_0, a_0, r_1; s_1, a_1, r_2; \cdots\)</span>。轨迹常常使用记号 <span class="math inline">\(\tau\)</span> 表示。</p>
<p>显然根据 Markov 的特性，我们可以得到在策略 <span class="math inline">\(\pi_{\b\theta}\)</span> 的条件下某一条轨迹 <span class="math inline">\(\tau = (s_0, a_0, r_1; s_1, a_1, r_2; \cdots)\)</span> 出现的概率为：</p>
<p><span class="math display">\[
\P_{\b\theta}(\tau) = \Pe(s_0)\prod_{t = 0}^{+\infty} \pi_{\b\theta}(a_t \mid s_t)\Pe(s_{t + 1} \mid s_t, a_t)
\]</span></p>
<p>这里 <span class="math inline">\(\Pe(s_0)\)</span> 表示环境初始状态为 <span class="math inline">\(s_0\)</span> 的概率。</p>
<p>我们表示轨迹 <span class="math inline">\(\tau\)</span> 服从上述概率分布的时候，可以写成多种符号，包括 <span class="math inline">\(\tau \sim \P_{\b\theta}(\tau)\)</span> 或者 <span class="math inline">\(\tau \sim \pi_{\b\theta}\)</span> 等等，本文会使用第二种表达。</p>
<h2 id="累计收益与价值函数">累计收益与价值函数</h2>
<p>对一条轨迹，<strong>累计收益</strong>的定义为：</p>
<p><span class="math display">\[
R_t(\tau) := \sum_{k = 0}^{+\infty} \gamma^k r_{t + k + 1}
\]</span></p>
<p>这里注意到我们累加收益的时候需要不断使用衰减因子进行衰减，这一操作主要是为了拟合现实中距离现在越远的行为对当前决策的影响越小的特征。</p>
<p>之后，我们进一步定义<strong>价值函数</strong>。首先需要定义<strong>状态行为价值函数</strong>：</p>
<p><span class="math display">\[
Q^{\pi_{\b\theta}}(s, a) := \Eop_{\tau \sim \pi_{\b\theta}}[R_t(\tau) \mid s_t = s, a_t = a]
\]</span></p>
<p>可以注意到上述期望中 <span class="math inline">\(t\)</span> 的分布并没有指定，这里一般认为是等概率地选择一个自然数即可。</p>
<p>进一步即可有<strong>状态价值函数</strong>：</p>
<p><span class="math display">\[
V^{\pi_{\b\theta}}(s) := \Eop_{\tau \sim \pi_{\b\theta}}[R_t(\tau) \mid s_t = s]
\]</span></p>
<p>我们可以发现状态行为价值函数描述了在状态 <span class="math inline">\(s\)</span> 下做出决策 <span class="math inline">\(a\)</span> 后期望的累计收益，也就是说该价值函数评价了给定状态下的某个决策的期望收益，所以我们常常使用状态行为价值函数辅助决策。而状态价值函数则和具体的决策无关，是衡量从某一个状态出发，能够获得的期望收益。</p>
<p>显然这两个价值函数之间存在相互推出关系，而这种关系描述如下：</p>
<div class="note info no-icon"><p><strong>Theorem 1.01</strong> 对于任何 MDP 与其上的策略 <span class="math inline">\(\pi\)</span>，该策略的状态价值函数与状态行为价值函数满足：</p>
<p><span class="math display">\[
\begin{aligned}
{\color{red} V^\pi(s)} &amp;= \sum_{a \in \mathcal{A}} \pi(a \mid s){\color{red} Q^\pi(s, a)} \\
{\color{red} Q^\pi(s, a)} &amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)[r(s, a, s&#39;) + \gamma {\color{red} V^\pi(s&#39;)}] \\
\end{aligned}
\]</span></p>
</div>
<p>第一个等式是由 <span class="math inline">\(Q^\pi\)</span> 推出 <span class="math inline">\(V^\pi\)</span> 的路径，证明也是简单的：</p>
<p><span class="math display">\[
\begin{aligned}
V^\pi(s) &amp;= \Eop_{\tau \sim \pi}[R_t(\tau) \mid s_t = s] \\
&amp;= \sum_{\tau} \P_{\b\theta}(\tau \mid s_t = s)R_t(\tau) \\
&amp;= \sum_{\tau} \left(\sum_{a \in \mathcal{A}} \P_{\b\theta}(\tau, a_t = a \mid s_t = s)\right)R_t(\tau) \\
&amp;= \sum_{\tau} \left(\sum_{a \in \mathcal{A}} \P_{\b\theta}(\tau \mid s_t = s, a_t = a)\P_{\b\theta}(a_t = a \mid s_t = s)\right)R_t(\tau) \\
&amp;= \sum_{a \in \mathcal{A}} \P_{\b\theta}(a_t = a \mid s_t = s) \left(\sum_{\tau} \P_{\b\theta}(\tau \mid s_t = s, a_t = a) R_t(\tau)\right) \\
&amp;= \sum_{a \in \mathcal{A}} \pi(a \mid s)\Eop_{\tau \sim \pi}[R_t(\tau) \mid s_t = s, a_t = a] \\
&amp;= \sum_{a \in \mathcal{A}} \pi(a \mid s)Q^\pi(s, a) \\
\end{aligned}
\]</span></p>
<p>第二个等式是由 <span class="math inline">\(V^\pi\)</span> 推出 <span class="math inline">\(Q^\pi\)</span> 的路径，其涉及到了后续状态，从而实际上描述出了价值函数之间的递推关系。</p>
<p>我们考虑其证明，首先我们显然有这个等式：</p>
<p><span class="math display">\[
r(s, a, s&#39;) = \Eop_{\tau \sim \pi}[r_{t + 1} \mid s_t = s, a_t = a, s_{t + 1} = s&#39;]
\]</span></p>
<p>之后考虑对状态行为价值函数的单步展开：</p>
<p><span class="math display">\[
\begin{aligned}
Q^\pi(s) &amp;= \Eop_{\tau \sim \pi}[R_t(\tau) \mid s_t = s, a_t = a] \\
&amp;= \Eop_{\tau \sim \pi}\left[\sum_{k = 0}^{+\infty} \gamma^k r_{t + k + 1} \middle| s_t = s, a_t = a\right] \\
&amp;= \Eop_{\tau \sim \pi}\left[r_{t + 1} + \sum_{k = 1}^{+\infty} \gamma^k r_{t + k + 1} \middle| s_t = s, a_t = a\right] \\
&amp;= \Eop_{\tau \sim \pi}\left[r_{t + 1} + \gamma\sum_{k = 0}^{+\infty} \gamma^k r_{t + k + 2} \middle| s_t = s, a_t = a\right] \\
&amp;= \Eop_{\tau \sim \pi}[r_{t + 1} \mid s_t = s, a_t = a] + \Eop_{\tau \sim \pi}\left[\gamma\sum_{k = 0}^{+\infty} \gamma^k r_{(t + 1) + k + 1} \middle| s_t = s, a_t = a\right] \\
&amp;= \Eop_{\tau \sim \pi}[r_{t + 1} \mid s_t = s, a_t = a] + \gamma\Eop_{\tau \sim \pi}[R_{t + 1}(\tau) \mid s_t = s, a_t = a] \\
\end{aligned}
\]</span></p>
<p>之后我们使用全期望公式处理条件期望中的条件：</p>
<p><span class="math display">\[
\begin{aligned}
\Eop_{\tau \sim \pi}[r_{t + 1} \mid s_t = s, a_t = a] &amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a) \Eop_{\tau \sim \pi}[r_{t + 1} \mid s_t = s, a_t = a, s_{t + 1} = s&#39;] \\
&amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)r(s, a, s&#39;) \\
\Eop_{\tau \sim \pi}[R_{t + 1}(\tau) \mid s_t = s, a_t = a] &amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a) \Eop_{\tau \sim \pi}[R_{t + 1}(\tau) \mid s_t = s, a_t = a, s_{t + 1} = s&#39;] \\
&amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a) \Eop_{\tau \sim \pi}[R_{t + 1}(\tau) \mid s_{t + 1} = s&#39;] \\
&amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)V^\pi(s&#39;) \\
\end{aligned}
\]</span></p>
<p>这里注意到处理第二个条件期望的时候，直接删去了 <span class="math inline">\(s_t = s\)</span> 和 <span class="math inline">\(a_t = a\)</span> 两个条件，这是因为 <span class="math inline">\(R_{t + 1}(\tau)\)</span> 与 <span class="math inline">\(s_t, a_t\)</span> 无关，可以直接删去而不影响最后的期望。</p>
<p>将此代入原有展开式即可证明完毕。</p>
<p>事实上，基于这两个价值函数的互相推出，我们可以得到 <span class="math inline">\(Q^\pi\)</span> 推出 <span class="math inline">\(Q^\pi\)</span> 的公式：</p>
<p><span class="math display">\[
{\color{red} Q^\pi(s, a)} = \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a) \left[r(s, a, s&#39;) + \gamma\sum_{a&#39; \in \A} \pi(a&#39; \mid s&#39;){\color{red} Q^\pi(s&#39;, a&#39;)}\right]
\]</span></p>
<p>以及 <span class="math inline">\(V^\pi\)</span> 推出 <span class="math inline">\(V^\pi\)</span> 的公式：</p>
<p><span class="math display">\[
{\color{red} V^\pi(s)} = \sum_{a \in \A} \pi(a \mid s) \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)[r(s, a, s&#39;) + \gamma {\color{red} V^\pi(s&#39;)}]
\]</span></p>
<p>这两个公式直接表现出了价值函数自身具有的迭代结构，也就是当前强化学习中最为重要的方程之一，目前大部分强化学习方法的核心就是拟合该方程。该方程即 <strong>Bellman 方程（Bellman Equation）</strong>。</p>
<h2 id="基本优化理论">基本优化理论</h2>
<p>现在我们讨论如何获取一个最有价值的策略。</p>
<p>首先，我们定义<strong>最优状态行为价值函数</strong>和<strong>最优状态价值函数</strong>：</p>
<p><span class="math display">\[
\begin{aligned}
Q^\star(s, a) &amp;:= \max_\pi Q^\pi(s, a) \\
V^\star(s) &amp;:= \max_\pi V^\pi(s) \\
\end{aligned}
\]</span></p>
<p>基于最优性，我们可以定义策略之间的序。我们称策略 <span class="math inline">\(\pi\)</span> 优于 <span class="math inline">\(\pi&#39;\)</span>，记作 <span class="math inline">\(\pi \geq \pi&#39;\)</span>，当且仅当对于所有 <span class="math inline">\(s \in \S\)</span> 都满足 <span class="math inline">\(\pi\)</span> 的状态函数优于 <span class="math inline">\(\pi&#39;\)</span>，即 <span class="math inline">\(V^\pi(s) \geq V^{\pi&#39;}(s)\)</span>。</p>
<p>我们有下述基本优化理论：</p>
<div class="note info no-icon"><p><strong>Theorem 1.02</strong> 对于任何 MDP，都存在一个最优策略 <span class="math inline">\(\pi^\star\)</span> 满足对于任何 <span class="math inline">\(\pi\)</span> 都有 <span class="math inline">\(\pi^\star \geq \pi\)</span>。并且该最优策略 <span class="math inline">\(\pi^\star\)</span> 在在任何状态与任何决策下均实现了最优价值，即对于任何 <span class="math inline">\(s \in \S, a \in \A\)</span> 都有 <span class="math inline">\(V^{\pi^\star}(s) = V^\star(s), Q^{\pi^\star}(s, a) = Q^\star(s, a)\)</span>。</p>
</div>
<p>本文不加证明地认为该理论成立。另外，这里给出最优策略的构造。可见最优策略是确定性策略：</p>
<p><span class="math display">\[
\pi^\star(a \mid s) := \begin{cases}
1 &amp; a = \argmax_{a \in \A} Q^\star(s, a) \\
0 &amp; \text{otherwise}
\end{cases}
\]</span></p>
<p>基于该定理我们能够得到两个最优价值函数之间存在的关系：</p>
<div class="note info no-icon"><p><strong>Theorem 1.03</strong> 对于任何 MDP，其最优状态价值函数与最优状态行为价值函数满足：</p>
<p><span class="math display">\[
\begin{aligned}
{\color{red} V^\star(s)} &amp;= \max_{a \in \mathcal{A}} {\color{red} Q^\star(s, a)} \\
{\color{red} Q^\star(s, a)} &amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)[r(s, a, s&#39;) + \gamma {\color{red} V^\star(s&#39;)}] \\
\end{aligned}
\]</span></p>
</div>
<p>第一个等式是简单的：</p>
<p><span class="math display">\[
V^\star(s) = V^{\pi^\star}(s) = \sum_{a \in \A} \pi^\star(a \mid s)Q^{\pi^\star}(s, a) = \max_{a \in \A} Q^{\pi^\star}(s, a) = \max_{a \in \A} Q^\star(s, a)
\]</span></p>
<p>第二个等式直接对 <span class="math inline">\(\pi^\star\)</span> 应用一般的 Bellman 方程即可得到。</p>
<p>从而还有下述<strong>最优 Bellman 方程（Bellman Optimality Equation）</strong>：</p>
<p><span class="math display">\[
{\color{red} Q^\star(s, a)} = \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a) \left[r(s, a, s&#39;) + \gamma\max_{a&#39; \in \A} {\color{red} Q^\star(s&#39;, a&#39;)}\right]
\]</span></p>
<p>以及：</p>
<p><span class="math display">\[
{\color{red} V^\star(s)} = \max_{a \in \A} \left[\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)[r(s, a, s&#39;) + \gamma {\color{red} V^\star(s&#39;)}]\right]
\]</span></p>
<p>理论上我们可以求解最优 Bellman 方程得到 <span class="math inline">\(V^\star\)</span>，从而就能够反推出 <span class="math inline">\(\pi^\star\)</span>。然而求解最优 Bellman 方程是计算困难的，现行的强化学习方法就是在尝试近似求解最优 Bellman 方程。</p>
<h1 id="dynamic-programming-dp">Dynamic Programming (DP)</h1>
<h2 id="policy-iteration-pi">Policy Iteration (PI)</h2>
<p>如果我们已经对环境有了完整的建模，我们完全可以使用迭代的方式求解最优 Bellman 方程。</p>
<p>具体的迭代过程分为两步，分别为<strong>策略评估（Policy Evaluation）</strong>和<strong>策略提升（Policy Improvement）</strong>，这两步会交替进行。具体而言，策略评估是在已知 <span class="math inline">\(\pi\)</span> 的条件下迭代计算其状态价值函数 <span class="math inline">\(V^\pi\)</span>。而策略提升为在得知状态价值函数的基础上优化策略 <span class="math inline">\(\pi\)</span>。</p>
<p>首先阐述策略评估的迭代过程。</p>
<p>我们记 <span class="math inline">\(V_k\)</span> 是第 <span class="math inline">\(k\)</span> 轮迭代的时候的状态价值函数，那么我们在初始化 <span class="math inline">\(V_0\)</span> 之后不断进行下述迭代直到状态价值函数收敛：</p>
<p><span class="math display">\[
V_{k + 1}(s) \leftarrow \sum_{a \in \A} \pi(a \mid s) \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)[r(s, a, s&#39;) + \gamma V_k(s&#39;)]
\]</span></p>
<p>收敛后，应当有 <span class="math inline">\(V_{+\infty} = V^\pi\)</span>，此时我们就得到了策略 <span class="math inline">\(\pi\)</span> 所对应的价值函数。</p>
<p>之后阐述策略提升的方法。</p>
<p>我们在得知了策略 <span class="math inline">\(\pi\)</span> 的状态价值函数 <span class="math inline">\(V^\pi\)</span> 之后，我们可以贪心地构造一个确定性策略 <span class="math inline">\(\pi&#39;\)</span>，保证策略更优。保证这一点能够成立的是下述定理：</p>
<div class="note info no-icon"><p><strong>Theorem 2.01 (Policy Improvement Theorem)</strong> 对于已知的策略 <span class="math inline">\(\pi\)</span>，定义确定性策略 <span class="math inline">\(\pi&#39;\)</span>：</p>
<p><span class="math display">\[
\pi&#39;(a \mid s) := \begin{cases}
1 &amp; a = \argmax_{a \in \A} Q^\pi(s, a) \\
0 &amp; \text{otherwise}
\end{cases}
\]</span></p>
<p>那么 <span class="math inline">\(\pi&#39; \geq \pi\)</span>，并且等号成立当且仅当 <span class="math inline">\(\pi = \pi&#39; = \pi^\star\)</span>。</p>
</div>
<p>证明是简单的，首先我们可以注意到：</p>
<p><span class="math display">\[
Q^\pi(s, \pi&#39;(s)) = \max_{a \in \A} Q^\pi(s, a) \geq \sum_{a \in \A} \pi(a \mid s)Q^\pi(s, a) = V^\pi(s)
\]</span></p>
<p>我们从而能得到下述不等式。这里事实上进行了单步展开，进一步就可以尝试利用迭代结构构造不等式链，具体细节则在后续证明中说明：</p>
<p><span class="math display">\[
\begin{aligned}
V^\pi(s) &amp;\leq Q^\pi(s, \pi&#39;(s)) \\
&amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))[r(s, \pi&#39;(s), s&#39;) + \gamma V^\pi(s&#39;)] \\
&amp;= \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))r(s, \pi&#39;(s), s&#39;) + \gamma\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s)) V^\pi(s&#39;) \\
\end{aligned}
\]</span></p>
<p>另外，我们可以证明：</p>
<p><span class="math display">\[
\begin{aligned}
&amp;\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))r(s, \pi&#39;(s), s&#39;) \\
=&amp; \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))\Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s, a_t = \pi&#39;(s), s_{t + 1} = s&#39;] \\
=&amp; \sum_{a \in \A} \pi&#39;(a \mid s)\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, a)\Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s, a_t = a, s_{t + 1} = s&#39;] \\
=&amp; \Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s]
\end{aligned}
\]</span></p>
<p>即得到：</p>
<p><span class="math display">\[
V^\pi(s) \leq \Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s] + \gamma\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s)) V^\pi(s&#39;)
\]</span></p>
<p>对这个不等式迭代展开：</p>
<p><span class="math display">\[
\begin{aligned}
V^\pi(s) &amp;\leq \Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s] + \gamma\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s)) V^\pi(s&#39;) \\
&amp;\leq \Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s] + \gamma\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s)) \left[\Eop_{\tau \sim \pi&#39;}[r_{t + 2} \mid s_{t + 1} = s&#39;] + \gamma\sum_{s&#39;&#39; \in \S} \Pe(s&#39;&#39; \mid s&#39;, \pi&#39;(s&#39;)) V^\pi(s&#39;&#39;)\right] \\
&amp;= \Eop_{\tau \sim \pi&#39;}[r_{t + 1} \mid s_t = s] + \gamma{\color{red} \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))\Eop_{\tau \sim \pi&#39;}[r_{t + 2} \mid s_{t + 1} = s&#39;]} + \gamma^2\sum_{s&#39; \in \S}\sum_{s&#39;&#39; \in \S}\Pe(s&#39;&#39; \mid s&#39;, \pi&#39;(s&#39;)) V^\pi(s&#39;&#39;) \\
\end{aligned}
\]</span></p>
<p>对于红色部分，我们容易发现 <span class="math inline">\(s_t = s\)</span> 对于 <span class="math inline">\(r_{t + 2}\)</span> 的期望是无效条件，所以：</p>
<p><span class="math display">\[
\sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))\Eop_{\tau \sim \pi&#39;}[r_{t + 2} \mid s_{t + 1} = s&#39;] = \sum_{s&#39; \in \S} \Pe(s&#39; \mid s, \pi&#39;(s))\Eop_{\tau \sim \pi&#39;}[r_{t + 2} \mid s_t = s, s_{t + 1} = s&#39;] = \Eop_{\tau \sim \pi&#39;}[r_{t + 2} \mid s_t = s]
\]</span></p>
<p>所以：</p>
<p><span class="math display">\[
V^\pi(s) \leq \Eop_{\tau \sim \pi&#39;}[{\color{red} r_{t + 1} + \gamma r^{t + 2}} \mid s_t = s] + {\color{green} \gamma^2\sum_{s&#39; \in \S}\sum_{s&#39;&#39; \in \S}\Pe(s&#39;&#39; \mid s&#39;, \pi&#39;(s&#39;)) V^\pi(s&#39;&#39;)}
\]</span></p>
<p>我们接下来展开绿色部分的时候，可以注意到我们需要为 <span class="math inline">\(r_{t + 3}\)</span> 的条件期望补上 <span class="math inline">\(s_t = s\)</span> 和 <span class="math inline">\(s_{t + 1} = s&#39;\)</span> 两个无效条件，然后两个求和号通过全期望公式消去 <span class="math inline">\(s_{t + 1} = s&#39;\)</span> 以及 <span class="math inline">\(s_{t + 2} = s&#39;&#39;\)</span> 两个条件，故剩余的条件仅有 <span class="math inline">\(s_t = s\)</span>，从而可以进一步合并到红色部分。以此类推，我们就能够说明该不等式的迭代展开是可行的，从而得到：</p>
<p><span class="math display">\[
V^\pi(s) \leq \Eop_{\tau \sim \pi&#39;}[{\color{red} r_{t + 1} + \gamma r^{t + 2} + \gamma^2r_{t + 3} + \cdots} \mid s_t = s] = V^{\pi&#39;}(s)
\]</span></p>
<p>从而欲证明的不等式成立。</p>
<p>而根据证明过程，该不等式取等当且仅当满足 <span class="math inline">\(V^\pi(s) = Q^\pi(s, \pi&#39;(s)) = \max_{a \in \A}Q^\pi(s, a)\)</span>，而这正是最优 Bellman 方程。也就是说我们使得 <span class="math inline">\(V^\pi = V^\star\)</span>。此外，<span class="math inline">\(\pi\)</span> 目前也必须是一个确定性策略，从而也就保证了 <span class="math inline">\(\pi = \pi^\star\)</span>。</p>
<p>综合策略评估和策略提升，交替进行两者我们就可以保证能够获取到最优策略。然而这个方法并不现实，因为理论上我们需要对环境有完全把握，至少我们需要得到整个环境状态转移矩阵才能进行。</p>
<h2 id="value-iteration-vi">Value Iteration (VI)</h2>
<h1 id="q-learning">Q-learning</h1>
<p>Q-learning 是 off-policy 的、value-based 的、</p>
]]></content>
      <categories>
        <category>【学习笔记】计算机</category>
      </categories>
  </entry>
  <entry>
    <title>第七回 V+Next 曲推《旅》小作文</title>
    <url>/2022/11/11/vnext-7/</url>
    <content><![CDATA[<p>整整 24 篇小作文呢！</p>
<span id="more"></span>
<h1 id="basic-info">Basic Info</h1>
<p>投 4 稿的群友：</p>
<ul>
<li>蒼</li>
</ul>
<p>投 3 稿的群友：</p>
<ul>
<li>Chake</li>
</ul>
<p>投 2 稿的群友：</p>
<ul>
<li>珍猪奶茶、rako、Ashitemaru、电球</li>
</ul>
<p>投 1 稿的群友：</p>
<ul>
<li>Ne.、星体、Aeterrno Amora、寄る寄る、nagi、Akechi、20、月檬、SauceCode</li>
</ul>
<h1 id="post-1-始発とカフカ">Post 1 始発とカフカ</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">n-buna</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">Chake</td>
</tr>
</tbody>
</table>
<p>我们乘上并非我们选择的列车，踏上并非我们选择的旅途。轻快的曲调背后是淡淡的哀伤，好似成为了不自觉的卑微存在，被命运一步步推向了终点与消亡。初听曲子只是感受到欢快，但是当深入了解之后，感觉每一句的唱腔都染上了悲哀的气息，这样的曲子总是那么吸引人呢。</p>
<h1 id="post-2-山遥路远">Post 2 山遥路远</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ChiliChill</td>
<td style="text-align: center;">乐正绫</td>
<td style="text-align: center;">蒼</td>
</tr>
</tbody>
</table>
<p>听闻这首歌使用了非常小众的北欧乐器，古典吉他的音色像温柔的月光虚虚地笼在皑皑的雪山上。</p>
<p>我非常喜欢这首歌的歌词，充满了不舍和祝福的道别。像是追随着对方的身影，直到其被山吞没的目光。</p>
<p>这是一首送挚爱的对方踏上旅程的歌，怕自己反悔不断催促着他的离去。</p>
<p>以及 V5 绫的歌声也很棒，很喜欢动点调的有张力的高音。</p>
<p>最后关注 chilichill 喵，谢谢喵。</p>
<h1 id="post-3-bon-voyage">Post 3 Bon Voyage!!</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Kevinz</td>
<td style="text-align: center;">洛天依 &amp; 星尘 &amp; 乐正绫</td>
<td style="text-align: center;">Ne.</td>
</tr>
</tbody>
</table>
<blockquote class="blockquote-center">
<p>而我驰骋山川仍愿与你同享</p>
<p>行至银河深处 点亮每束林海和潮浪</p>
<p>生命颠扑流淌 而我们于浪潮中央</p>
<p>揽遍这世界盛况 笑谈一路风光</p>

</blockquote>
<p>krz 是一款我的中 V xp。</p>
<p>《Himawari》中的邂逅，《七月二十七号夏日记事》里的慵懒暑假出游，《Say a Good Bye》更为正对题目，可爱少女的一场异国旅行，上一期也很想推与题目最接近的《<span class="math inline">\(\beta\)</span> 受体阻滞剂与星辰》（《To the moon》的同人曲）。</p>
<p>《Say a Good Bye》大概是早期作品（词作于 2016），太甜啦，然而一看《Bon Voyage!!》的词作不免也同样是生气勃勃与年少气盛的意境（2017），我听来像是一觉起来，异常难得地觉得自己真的醒了。看 krz 的作品从学生时代到社畜时期，虽在我的阅历之外，多少还是唏嘘。没有什么不是时间的函数吧，在上演的别离与欢聚之中，听听歌好啦。</p>
<h1 id="post-4-last-journey">Post 4 Last Journey</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">いよわ</td>
<td style="text-align: center;">初音ミク &amp; V Flower</td>
<td style="text-align: center;">nagi</td>
</tr>
</tbody>
</table>
<p>胃弱早期作品中极具个性，散发着荒诞而又诡魅的美感的一作。</p>
<p>变成尸体后的最终旅程，将时钟反拨，哪怕爱情已经变为了灰烬，但是拖着僵直且腐坏的躯体，沿着昏暗的小路，在锈色的世界中，等待着破晓天明，希望能够再见爱过的你。</p>
<p>全曲使用了大量象征着颠倒的元素，采样逆再生、旋律倒放、画面反转、动画倒放，甚至歌词本身都是完全颠倒的，给音乐本身增添了神秘氛围和扭曲感的同时，也和时间逆行的死后旅程的世界观相照应。扭曲的文字、骇人的泪水、不安定的旋律和鼓点、行将支离破碎的和声、胃弱经典叮当效果音，勾勒出临终之际的幻梦与回光返照时的心景。</p>
<p>如果说最近的胃弱风格更加柔和和偏向流行了的话，那么这首曲子可以说是早期胃弱原初风格的最好代表之一，是只有胃弱才能做出来的东西，适合任何想要了解胃弱或尝试 Vocaloid 另类表现乐曲的人收听！（场外信息：这还是葱花曲！）</p>
<h1 id="post-5-alice">Post 5 Alice</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">古川本舗</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">蒼</td>
</tr>
</tbody>
</table>
<p>老曲回顾环节——！</p>
<p>一首曾经的爱曲。老实说刚开始看到这个题目的时候脑内并没有浮现出什么契合的曲子。契机是看到米白毕业的时候主页刚好给我推了 Alice，没由来地觉得非常合适。</p>
<p>古川说这首写的是单恋的故事，“我”与“你”在幽深的森林中不断地走着，互相交织，后来再分离，最后一个人踽踽独行。生命的旅程中总会有人到来过，走过。</p>
<p>这首歌确实也承载了很多回忆和旅程，无论是 12 年重填词创作了《至此，我不再独自前行》的 B 站，还是古川 P 本人的经历，亦或者是我自己都在旅程中经历着塑造与变化。</p>
<p>在长长的旅程中回望起点总有一种物是人非的感觉，但这样也显得它们弥足珍贵。依旧感谢相遇。</p>
<h1 id="post-6-サンセットバスストップ-sunset-bus-stop">Post 6 サンセットバスストップ (Sunset Bus Stop)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">トーマ</td>
<td style="text-align: center;">GUMI</td>
<td style="text-align: center;">SauceCode</td>
</tr>
</tbody>
</table>
<p>黄昏，一个人的旅途，却又不知道终点。些许忧伤的曲调，配上 GUMI 略带沙哑的声音，诉说着一个迷茫的故事。反复的铺垫，终于得以将饱含情绪的副歌引出：黄昏巴士会开向哪儿，又会在哪儿停下呢？谁能知道呢……</p>
<h1 id="post-7-タイムマシン-time-machine">Post 7 タイムマシン (Time Machine)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">1640mP</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">rako</td>
</tr>
</tbody>
</table>
<p>旅途的意象总是带有一些孤寂的气息。告别，相遇，人生在一段段的旅途中前进。</p>
<p>「生活就像海洋，只有意志坚强的人才能到达彼岸。」我大概是不够坚强的，轻微的扰动也足以让我失去脆弱的平衡。我不喜欢沉浸在感伤中的自己，但又享受着与世隔绝的孤独感。戴上耳机，世界仿佛离我而去，我蜷缩在自己的空间之中，「悲しくなんかないさと、イヤホンで閉じ込めたよ」。清脆的钢琴声静静地流过心头；这一刻，我是属于自己的罢。</p>
<h1 id="post-8-daybreak-frontline">Post 8 DAYBREAK FRONTLINE</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Orangestar</td>
<td style="text-align: center;">IA</td>
<td style="text-align: center;">Akechi</td>
</tr>
</tbody>
</table>
<p>听着这首歌的时候总是会想起以前看过的一些公路片或某些“圣地巡礼”的图文记录。</p>
<p>一个旅行者，一辆车，在几乎是空空荡荡的公路上飞驰着，正在赶赴某一个早早就被写入行程表中的目的地。</p>
<p>黎明前夕的风从车窗里涌入，吹向了旅行者，但无法吹散那个人心中的兴奋和略微的不安——因为这是一场期待了太久的旅程，因为那里是曾经认为遥不可及的梦想之地。</p>
<p>想要奔向远方。</p>
<p>想要“看到同样的风景”。</p>
<p>想要站在那样的目的地。</p>
<p>想要跨越夜与昼的界线，跨越现实与梦境的边缘。</p>
<p>车轮继续向前，向着日出的方向奔赴而去。</p>
<h1 id="post-9-天穹のアクアリウム-stargazer-in-aquarium">Post 9 天穹のアクアリウム (Stargazer in Aquarium)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">Fty</td>
<td style="text-align: center;">すずきつづみ</td>
<td style="text-align: center;">rako</td>
</tr>
</tbody>
</table>
<p>すずきつづみ的声音像大海一样清澈，听着感觉就可以给人带来活力。清爽的曲风搭配明快的PV，在略微悲伤的氛围中流露出一丝期冀，引领着视听者探寻「蒼く光る遥かな航路」。</p>
<h1 id="post-10-兔子先生">Post 10 兔子先生</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">小桦</td>
<td style="text-align: center;">洛天依</td>
<td style="text-align: center;">Aeterrno Amora</td>
</tr>
</tbody>
</table>
<p>摘自评论区：</p>
<blockquote class="blockquote-center">
<p>但渺小的我，流浪的步伐，还没法停下。</p>

</blockquote>
<p>为了寻求梦想和独立，我们不得不离开家，就像雏鹰会离开，幼狮会远去，兔子会流浪，父母会老去。</p>
<h1 id="post-11-starry-starry">Post 11 Starry Starry</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">FUZI &amp; 一二三</td>
<td style="text-align: center;">音街ウナ</td>
<td style="text-align: center;">珍猪奶茶</td>
</tr>
</tbody>
</table>
<p>有时候会有一种冲动，想开一辆随处可见的车，在一个无关紧要的夜晚，离开这个看不见什么星星的城市，往星光最明亮的方向前进，然后把天上的星星一颗一颗数清楚。不需要带上什么行李，走到哪就算哪吧，也许会抵达一个星星多到数不清楚的地方，那时候就停下来。夏天可以找找夏日大三角，冬天可以看看猎户座星云。为什么这几颗星星像一个猎户呢？如果它们可以是拿着弓的猎人的话，又为什么不可以是拿着葱的初音未来呢？想把多余的感情全都向着这片星空发射出去，它们又会化作怎样的星星呢？抛下这些思绪，然后继续前进吧。夜还很长，星星还有很多。</p>
<p>题外话，这个 una 居然一点也不吵。</p>
<h1 id="post-12-종착역终点站">Post 12 종착역（终点站）</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">상록수（常青树）</td>
<td style="text-align: center;">UNI</td>
<td style="text-align: center;">Chake</td>
</tr>
</tbody>
</table>
<p>希望大家能听到最后，感受那燃烧生命一般的歌声。</p>
<p>另：UNI 的歌声也是有独特魅力的呢。</p>
<h1 id="post-13-まほろば少年譚">Post 13 まほろば少年譚</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ユリイ・カノン</td>
<td style="text-align: center;">初音ミク &amp; GUMI</td>
<td style="text-align: center;">Chake</td>
</tr>
</tbody>
</table>
<p>初为笼中之鸟，后欲高飞翅振。迷途黑夜黯淡里，手中明灯尚存。生命不过一瞬，歌声却留永恒。人生恰似逆旅，我亦匆匆行人。</p>
<h1 id="post-14-チャンバラジョニー-chambara-johnny">Post 14 チャンバラジョニー (Chambara Johnny)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">DECO*27</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">20</td>
</tr>
</tbody>
</table>
<p>虽然歌词和主题没什么关系，不过像素风的 RPG 还是会给人一种旅途的感觉。</p>
<p>歌很可爱，PV 很好听。</p>
<p>顺便打听一下 Holder 什么时候能请来 DECO（<strong>Holder 注：</strong>今年看起来是没啥希望了）。</p>
<h1 id="post-15-だんだん早くなる">Post 15 だんだん早くなる</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">40mP</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">月檬</td>
</tr>
</tbody>
</table>
<p>（推首儿歌，希望不会被打）</p>
<p>令人感到轻松的歌曲。</p>
<p>如果用一个词来形容的话，我会选择“可愛い”。虽然不是我最喜欢的类型，但是应该没人拒绝可爱吧～</p>
<p>也许旅途就像这首歌一样，时而加快，时而放缓；时而高兴，时而沮丧。但不管怎么说，这一路已经走过来了，所以保持自己的步伐，继续前进吧。</p>
<p>＼(ˆ▽ˆ)／</p>
<h1 id="post-16-エイムレスウォーカー-aimless-walker">Post 16 エイムレスウォーカー (Aimless Walker)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">*Luna</td>
<td style="text-align: center;">Rana</td>
<td style="text-align: center;">珍猪奶茶</td>
</tr>
</tbody>
</table>
<p>很喜欢行走的感觉。双脚踩在坚实的大地上，一步一步的向前迈进，从脚底传来的地面的触感，让我不至于在这个飞速运转的世界中把自己弄丢。在喜欢的地方漫无目的的行走，对我来说大概是最完美的一种旅行方式。感谢重力，让我可以感受到大地。感谢我基本健全的腿脚，让我可以自由地在天地之间穿梭。和我行走的速度比起来，世界还是太广阔了，所以在我的躯壳灰飞烟灭之前，还有很多事情可以做，也有很多地方可以去，那么就以 5 km/h 的速度向远方开进吧，最好放点 *Luna 的 Progressive House 当 BGM。</p>
<h1 id="post-17-砂之惑星">Post 17 砂之惑星</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ハチ</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">蒼</td>
</tr>
</tbody>
</table>
<p>一首记录旅程的曲子。</p>
<p>一些人离开了我们，但是旅程还在继续。</p>
<h1 id="post-18-ネイロクラフト-neiro-craft">Post 18 ネイロクラフト (Neiro Craft)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ポリスピカデリー</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">星体</td>
</tr>
</tbody>
</table>
<p>总之就是非常真实。</p>
<h1 id="post-19-夢地図">Post 19 夢地図</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">40mP</td>
<td style="text-align: center;">GUMI</td>
<td style="text-align: center;">寄る寄る</td>
</tr>
</tbody>
</table>
<blockquote class="blockquote-center">
<p>今僕が作り上げるもの全て</p>
<p>無に還っても</p>

</blockquote>
<p>这些年来，自己究竟做到了什么。我越思考，就越觉得迷茫。</p>
<p>走到现在，无论中学还是大学，最好的朋友们似乎都越走越远。</p>
<p>同时，也没能给家里带来什么变化，却只能为越来越少的时间而担忧。</p>
<p>自己的努力，也就像歌词中说的一样，变成了虚无吧。</p>
<p>这旅途的终点，恐怕不是我想要的。</p>
<p>什么时候，才能真正地描绘出属于自己的梦地图呢？</p>
<h1 id="post-20-上山岗">Post 20 上山岗</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ilem</td>
<td style="text-align: center;">洛天依</td>
<td style="text-align: center;">蒼</td>
</tr>
</tbody>
</table>
<p>大家好，其实我本来是想填《一人行者》的，但时过境迁，我觉得教主在 VC 的旅程中有了新的感悟，还是决定投这首。</p>
<p>这首歌最有意思的地方应该在于 PV，可以称其为旅途中的纪念照片吧！ilem 被称为教主以来也不乏商业活动，也有过非议。但是他愿意记得这些事情也是这首歌打动我，让我感到柔软的地方。</p>
<p>我们在路上记录着着我们看到的，把它们做成歌曲。请同我大声唱吧，“再次祝福你，朋友。”</p>
<h1 id="post-21-シンセカイ案内所">Post 21 シンセカイ案内所</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">DECO*27</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">电球</td>
</tr>
</tbody>
</table>
<p>新世界に出る旅。帰らなくてもいいですよね？（って、この曲、旅要素ある？）</p>
<p>去新世界旅行，总不能一帆风顺呢。（话说，这个曲子和旅行有关系吗？）</p>
<h1 id="post-22-蛍はいなかった">Post 22 蛍はいなかった</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">はるまきごはん</td>
<td style="text-align: center;">初音ミク</td>
<td style="text-align: center;">Holder</td>
</tr>
</tbody>
</table>
<p>先听《美影日记》给刀一轮之后再听这首缓一缓。</p>
<p>女孩子们的暑期出游，野餐、合影、睡前娱乐、偷偷跑去看萤火虫，一切都是那么的美好。</p>
<p>整个系列曲中，唯一色调是亮色的 PV，也是唯一一首曲风是欢快的，也是唯一一首美影红着脸笑了的。</p>
<p>虽然美好的夏季已经过去了，但是还是暂且想着下一个夏季，想着下一个夏天的每一个微热潮湿的夜晚，每一个美好的夏夜，应当如何度过吧。</p>
<h1 id="post-23-prologue">Post 23 Prologue</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">ひとしずくP×やま△</td>
<td style="text-align: center;">鏡音リン</td>
<td style="text-align: center;">电球</td>
</tr>
</tbody>
</table>
<p>第一次听的时候感觉……啊怎么说呢……好可爱啊……</p>
<p>后来发现一滴妈妈她根本就是带铃去做噩梦吧……</p>
<p>不准欺负镜音铃！连倒是无所谓（bushi）</p>
<p>另外还有一首连的版本叫 Epilogue。</p>
<p>附歌词：</p>
<blockquote class="blockquote-center">
<p>「Prologue」</p>
<p>作曲・作詞：ひとしずくP×やま△</p>
<p>唄：鏡音リン</p>
<p>不思議な絵本のページをめくる（翻开奇妙的绘本）</p>
<p>その先には　何が待ってるの（那之中有什么在等待着呢）</p>
<p>素敵な王子様が現れて（帅气的王子出现）</p>
<p>優しく手を引いてくれる（温柔地牵起我的手）</p>
<p>流れるワルツに合わせて（随着华尔兹的节奏）</p>
<p>くるり踊る（旋转跳跃）</p>
<p>誰もが私に、夢中で憧れるの（在梦里谁都憧憬着我）</p>
<p>気がつけば真夜中（回过神来已是深夜）</p>
<p>みんな眠っている（大家都睡着了）</p>
<p>幸せな私の夢の中で（沉睡在我的幸福的梦中）</p>

</blockquote>
<p>读起来突然觉得有点恐怖呢。</p>
<h1 id="post-24-深海シティアンダーグラウンド-deep-sea-city-underground">Post 24 深海シティアンダーグラウンド (Deep Sea City Underground)</h1>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">P 主</th>
<th style="text-align: center;">歌姬</th>
<th style="text-align: center;">投稿者</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">田中 B</td>
<td style="text-align: center;">鏡音リン</td>
<td style="text-align: center;">Holder</td>
</tr>
</tbody>
</table>
<p>认识这首歌还是通过 maimai，某位群友给我开了这首歌，第一次，完全不会打，但是发现这歌真好听。</p>
<p>据说是这位 P 主唯一一首出名曲，这一点莫名显得有些凄凉。</p>
<p>歌词里面杂乱无章的意象，似乎描绘了沉在海底的荒诞世界。</p>
<p>似乎并不想去那里旅行呢（笑）。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
  <entry>
    <title>Holder 与 Vocaloid</title>
    <url>/2022/10/02/vocaloid-and-me/</url>
    <content><![CDATA[<p>和 V+ 群群友度过了一天快乐的国庆假期，这次的 V+ Next 推曲活动中，又一次提及了我的“自传”——即我和 Vocaloid 的一些故事。</p>
<p>先前已经和 nagi 以及莎布老师谈过一些，也在推曲小作文里面写过不少小故事。但回想起来我好像自己也没有系统总结过这些有趣的经历，明明是挺有意思的一段旅程，所以干脆晚上花点时间写写。</p>
<p>大约是一些按照年份编写的流水账和回忆录，随便看看就好。</p>
<span id="more"></span>
<h1 id="小学高年级2010---2013">小学高年级（2010 - 2013）</h1>
<p>大约这是一切的开端了。小学的时候 Holder 可能并没有什么爱好或者说口味，同学们在玩什么游戏我就玩什么游戏，似乎并没有什么主见。但是有几件事情倒是记忆挺深刻。</p>
<p>首先是《甩葱歌》的莫名走红。Holder 家所在的街区是县城中心的一个破旧商店街，当时的所有店铺，从手机店、音乐店，甚至是鞋店、服装店，都在大音量播放这首歌，每天上下学的时候多多少少都是一直听着这首歌的。继此之后的，是 2011 年突然爆火的《甩饼歌》。这首歌有了歌词，讲述的是 2011 年利比亚空袭、物价飞升之类的大事件。本来自己就已经对《甩葱歌》旋律很熟悉，有了能唱的歌词，自然是很快就上手了这首改编歌，和小学同学时不时还一起唱着玩。</p>
<p>其次是有一次我父亲问到我有没有喜欢的歌手，因为当时他一直在家里放歌自己听。但我当时说实话，真的不知道什么歌曲，而当时我的玩伴正沉迷汪峰，所以我就随口回答汪峰。结果我父亲大概是一下子就知道了我只是糊弄过去，于是无心地扔了一句“要找找自己喜欢的东西而不是随波逐流”。</p>
<p>这句话随后就应验了。2012 年前后，我进入了元素收藏这个小众坑，这个坑大约就是收集各种元素的单质。在当年这还是一项很难的事情，因为稀土很难有货源，类似 Rb、Cs 之类的碱金属还只能从国外进口，一克近一千，这对小学生来说已经是天价（题外话，现在国内自制 Rb、Cs 已经不稀奇，克价已经跌下两百，正所谓中国人擅长把东西搞成白菜价。此外，现在元素收藏坑也近乎是进坑投资几千左右就已经能买到全套单质了）。也正是因此，当时我对贴吧里面那些拥有类似 Rb、Cs、Tl、Sc 等这些元素的聚聚们可谓是十分敬仰，其中就包括一位元老——真·凤舞九天。</p>
<p>这位元老有一天晚上，在贴吧转载了一个视频，说自己今天单曲循环了一晚上。我点进去一看，是《世末舞厅》的一个自制 PV。当然，当时我是不知道这是什么的，但我能明白的是，这是一首日文歌，而且不同于小学音乐课上那些民歌、红歌、教学歌曲，不同于汪峰那种伤感，而是一种完全不能理解的，全新的歌曲艺术形式。</p>
<p>小学的我第一次看到类似心脏、死亡、骷髅、终结这些意象，而即使我一点点都看不懂英文和日文，歌词一句话都看不懂，但是图像和声音却将世界终结前的疯狂传达了出来。</p>
<p>这显然是震撼的，所以即使当时 Holder 只有一个充话费送的小手机，但我依然拿出了零花钱到同学家的手机店买下了一张 SD 卡，从家里人工作的地方偷偷拿了一个读卡器，自己在周末摸索着如何下载视频。这样忙活了一段时间后，我便能够随时听《世末舞厅》了。</p>
<p>然而，还是那句话，由于完全看不懂英文和日文，我没能借此机会认识 wowaka，也没能认识巡音，更没能借此机会打开术力口的大门，虽然我隐隐约约感觉到了这机械的电子音背后，似乎和《甩葱歌》有着千丝万缕的联系。</p>
<h1 id="初中2013---2016">初中（2013 - 2016）</h1>
<p>这一段时间似乎和术力口就没有什么关系了。</p>
<p>因为家人工作的原因，我离开了原先的住处，去往另外一个地方上初中，于是也就脱离了我小学的所有同学。在完全陌生的环境下，Holder 度过了一个并不美妙的初一。转机出现在初二，父亲的一位朋友送给我了一台 iPad。我的父母算是十分开明，决定将这个 iPad 交给我全权处置，并不打算限制我的使用时间之类。</p>
<p>那段时间，我注意到周围同学都在听歌，虽然我不知道他们在听什么，但是就是莫名其妙觉的一个人听歌似乎是一件很酷的事情。这样想着，Holder 在 iPad 上下载了音乐软件，添加了几首类似《江南 Style》之类的大众歌曲。</p>
<p>你可能会问，《世末舞厅》呢？然而这就很不好说了，我记忆中我似乎并没有将它加入到歌单里面，因为我不会打日文。当时我要是想听这首歌，我只能去贴吧翻找之前那位元老的贴子，或者拿 U 盘在电脑上听（SD 卡应该在搬家时遗失了，但是之后我有了一个 U 盘）。</p>
<p>《江南 Style》可能是一个并不好的种子，因为我为了扩充歌单，只能每天看看音乐软件的推荐。然而因为这个种子，加上当时 EXO 和 TFBoys 在网络上的对立导致两方热度都居高不下，我的歌单迅速充满了 EXO。EXO 的曲风大多是炫酷的类型，这也塑造了我后续的听歌风格。</p>
<p>然而，我并没有在 K-pop 的路上走得很深，因为我初中有一位朋友，很喜欢看番。当时我和他在一起玩的时候，常常是白天出门，晚上窝在某人家里看番，也就是那个时候我认识了《刀剑神域》和一些其他的番，也收获了第一个严格意义上加入歌单的日语歌——TV 动画《空战魔导士候补生的教官》OP《D.O.B.》，因为这首歌很炫酷，节奏有力量。</p>
<p>也是在他的带领之下，大约是 2014 年，我入了 B 站，但我当时几乎只会看鬼畜区。</p>
<p>虽然如此，我当时的歌单的主流依然是 EXO 和权志龙，最喜欢的可能依然是《Call me baby》或者《BANG BANG BANG》。而随后因为 K-pop 的外延了解到 Maroon 5、TheFatRat 的一些歌和欧美音乐则完全是支线了。</p>
<p>其实要说到为啥即使有这么一位看番的好朋友我还一直听韩流，倒也只能说是大环境所趋。当时我的初中班级，大部分同学更乐意听 K-pop。那种带着一些痞气，或者说是不良、叛逆、特立独行风格的歌曲，在初中生中很有市场。</p>
<p>不过也正是因此，我错过了阳炎 Project 的时代。</p>
<h1 id="高中一年级2016---2017">高中一年级（2016 - 2017）</h1>
<p>中考考上了当地最好的中学，并且在入学分班考试里考上了年级第一，这完全是出乎所有人的意料的，包括我自己，因为没人相信从那种初中出来的毕业生能考上这个高中的第一。这是一个非常奇妙的开局，在单纯的高中生之中，这样的成就足以让你受到瞩目。所以 Holder 的高一开局并不算很差，反倒是收获了一群朋友。</p>
<p>先前提到过 2014 年我开始看 B 站，等到我 2016 年高中入学的时候，我已经大体对鬼畜区了解了个遍，自然也就包括了音 MAD 和人力 Vocaloid。在此期间，我接触到了我严格意义上第一个知道是术曲的术曲——《千本樱》（《世末舞厅》我最开始并不知道这是术曲，我甚至不知道这首歌和初音未来有关）。</p>
<p>然而，2016 年的 B 站大事是和术无关的，而是《极乐净土》的爆火。这首歌的爆火让我经常逛的鬼畜区充满了这首歌的相关创作，自然而然地，这首歌也进入了我的歌单。</p>
<p>有一件黑历史和这首歌有着很大的关联。当时我不会日语，想唱《极乐净土》自然是唱不出来，只能哼调。然而当时哲♂学里的 FA 乐器又在鬼畜中广泛运用。于是有一次我在班上用 FA 乐器唱了一小段《极乐净土》。现在想起来的话，可以说是万分羞耻。</p>
<p>一切都是有开端的，自从《极乐净土》和《千本樱》进入歌单，随之而来的就是各种日语歌。但其实这个时候，我依然只是知道初音未来的名号，还不认识双子、IA 等其他歌姬。另外，这个时候，我还不知道什么是歌姬什么是 P 主，当时的 Holder 认为初音未来的所有作品都由一个运营方创作，甚至还因此惊讶于为何这个运营方作出的曲子曲风如此多变。</p>
<p>但也就是这个时候，我入了 LL 坑，听了不少缪斯的歌。不过即使如此，此时我的歌单依然是 K-pop 和欧美音乐占主流，日语歌有但不多，术也不过几首。</p>
<p>当然，要是说几件小事的话还是有的。</p>
<p>首先是高一的寒假，学校组织了去苏州的数学竞赛集训，那段时间比较休闲，我便无聊的时候去整理歌单，删掉了不少 K-pop 歌。这个行为的原因其实挺怪的，因为大约在 2016 年年底或者说 2017 年年初，我经历了第一次所谓的“被分手”。而为了将初中这些破事的记忆删除，我不仅删掉了她所有的照片（当然后面我居然在 iCloud 的自动备份里面翻出来了），删掉了聊天记录和所有联系方式。而寒假在苏州的时候，我翻了翻歌单，发现听歌的时候依然能回想起初中当时的一些奇怪经历，尤其是《Call me baby》，这首歌是我和她都喜欢的。于是，我删掉了大多的 K-pop 歌，只留下了几首自己特别喜欢的，比如《MAMA》和《Lightsaber》。</p>
<p>之后是 2016 年年底《你的名字》上映，而这让我的歌单中又多出了若干的日语歌，包括《前前前世》《火花》《没什么大不了》《黄昏之时》《梦灯笼》。其中最可说的就是《梦灯笼》，当时我沉迷这首歌到，即使我不会日语，不会写五十音，我也会拿并不富裕的晚饭休息时间跑回家打开电脑抄歌词和罗马音，尝试着学唱。</p>
<p>2017 年的暑假并没有多少可以称道的事情，虽然当时是第一年接触学科竞赛，辗转扬州、南京等地，但是就听歌而言，并没有什么可说的。硬要说的话，就是看了《未闻花名》，然后沉迷于《Secret base》这首歌。术曲方面，则是零零散散加了《深海少女》《天之弱》《反语》《脑浆炸裂女孩》一共四首。</p>
<h1 id="高中二年级2017---2018">高中二年级（2017 - 2018）</h1>
<p>熟悉 Holder 的人都知道，这是一切的转折点。</p>
<p>2017 年进入高二之后，发生了几件事情。</p>
<p>首先是 9 月份《病名为爱》投稿，这首歌莫名其妙地在国内收获了极高的热度。而在这段时间，我们高中为我们争取到了去南京旁听数学竞赛省队培训的机会，我又可以公款旅游了。于是我在南京和我同学两个人，反复听这首歌。这里比较好玩的是，我先听到的是 Neru 的术版，而非不少人先听到的翻唱版。就我记忆而言，这应该是我听到的第一首双子曲。</p>
<p>之后是 12 月份《打上花火》在国内上映，我和同学翘课去看了。当时通行的一位同学稍微对八爷有一点了解，晚上在 KFC 吃饭的时候，讲了不少八爷相关的小知识之类的，包括他前期作为 P 主投稿的一些曲子。</p>
<p>经过这一个学期，Holder 的歌单大致变成了术曲占一半，其他歌曲混混乱乱杂在里面的一种状态，但 Holder 此时依然没有主动去挖术曲或者去了解 Vocaloid，依然是听到好听的就放歌单。然而这个时候，大数据已经开始给我不断推术相关的东西，很少再有韩流或者欧美了。</p>
<p>高二寒假备战小高考，没有什么可以说的事情，除了通过一个人力 Vocaloid 认识了《太阳系 DISCO》。</p>
<p>而高二的春季学期，我遇到了两首歌，分别是《神佛》和《被生命所厌恶》，但是是 mafumafu 版本。mafumafu 这个名号的出现，让我本就不清楚的概念更加混乱，什么是歌姬，什么是 P 主，什么是唱见，这些我当时可以说万分混乱。然而也正是这两首歌，打开了一道通过 mafumafu 获取新术曲的大门。</p>
<p>3 月的时候，我在听《病名为爱》的时候，注意到评论里面有一句说 Neru 来 B 站了。我记得当时我并不是很清楚 Neru 到底是谁，但总之我给他点了关注，所以说 Neru 是我第一个关注的 P 主。在此之后，我也将 Neru 的《SNOBBISM》和《随便随便》加入了歌单。</p>
<p>也就是这段时间，我开始学习日语。</p>
<p>时间就这样到了传奇的 2018 年暑假。</p>
<p>这个暑假我为了争取清华的各种政策，首先是各个学科竞赛，数学要在扬州集训然后考试，化学要在南京集训然后考试，物理也是在南京，期间还需要参加清华的暑期学校，要去杭州参加一个训练。所以从 6 月份一直到 9 月份这近三个月的时间，我几乎一直在外，而且几乎孤身一人，因为我高中有资格参与化学国初的不过两人，能参与物理复赛的也寥寥无几。</p>
<p>这是我第一次远离熟悉的家乡如此长的时间，而且我父母也说为了锻炼我的独立能力，并不打算跟在后面，只是说了一句，有什么要紧的情况或者缺钱了就给家里打电话。显然，为了填补课余时间，除了刷题看书，似乎也只剩下听歌了，因为我几乎不玩游戏，除了当时短暂玩过的《炉石传说》。</p>
<p>这段时间给了我扩充歌单绝佳的机会，我开始第一次下意识地在搜索框中输入初音未来，我开始有意识地找各种番去看，去听它的 OP 和 ED。那段时间，类似 MARETU、れるりり、Neru 等这些名字开始慢慢变得熟悉，镜音双子、巡音也开始进入我的视野，虽然我还是区分不开 P 主和歌姬。</p>
<p>此时我收集到的术曲已经开始出现两极分化的特征，一类是吵闹的、喧嚣的、意味不明的，这些歌单纯提供一种精神上的刺激，似乎也和当时我沉迷 K-pop 有着相同的根源。而另外一类，则是舒缓的、抒情的、温柔的，这些歌，大约才真正是我当时能共鸣的。</p>
<p>这其中最为特殊的自然是《胧月》。第一次听到这首歌，我并没有觉得多么特殊，甚至因为它并不突出的调教觉得十分粗糙。然而，正所谓音乐并不仅仅是一段声音，是要和个人境遇相结合的。在那个晚上，我刚刚做完一套题，起身去阳台休息。凌晨两点的南大早已休眠，但是远处登山道的路灯依然闪烁，就在那一阵风之中，歌单循环到了《胧月》。</p>
<p>那应该是第一次我感受到了所谓的情景结合。因为匆匆学过一点日语，也看过歌词翻译，所以当「逃れる術を探すばかりの孤独な星」这一句响起的时候，那种孤身一人求学的寂寞，疲惫后的困倦一瞬间全部返了上来，而阳台上是依然燥热的夏夜晚风。</p>
<p>而这一幕大约也是我高中那么多回忆中最为深刻的几个之一，也就是这个契机，我第一次感受到了术曲机械音中的那一种，真人并不能表达出来的沙哑感。现在我依然觉得，《胧月》再如何使用真人翻唱，也难以表达出其中蕴含的孤寂感。人本身是社会性的，再如何表达孤独，也不过是先建立起和别人的连接再失去，比如那些表达孤独寂寞的失恋曲。然而机械音中表达出的那种，自己身为人造物或者非人，生来即无法和人们平等的孤寂感，或许才是深层的。这也是我在之后沉迷于《心》这首歌的原因。</p>
<p>在此之后，术曲便不断进入歌单，而自己听术曲的风格也渐渐明晰。</p>
<p>当然，Holder 这个时候还是分不清歌姬和 P 主。</p>
<h1 id="高中三年级2018---2019">高中三年级（2018 - 2019）</h1>
<p>备战高考的一年，并无什么可讲的。这段时间除去学习，几乎也没有其他事情可做。</p>
<p>然而这个时候我遇到了《月光润色女孩》。这首歌是网易云推荐给我的，第一次听也是一点感觉都没有，没有什么特别之处。然而就是这样听着听着，就沉迷了。</p>
<p>这段时间，为了学习日语，我买了标日，但是上面的课文实在是无聊乏味。这个时候我注意到，自己的歌单已经几乎全是日语了，为什么不去打印歌词来学呢。于是我打印了几首歌的歌词，一首一首学，这里面包括《Secret base》《鸟之诗》《心做》以及不用想就知道的《月光润色女孩》。</p>
<p>于是我早读课就不读语文或者英语了，而是把歌词偷偷藏在书下面，一个假名一个假名认，不会的语法就圈出来下课查标日。就这样，这几首歌也成为了我最先会的几首歌。不过，要是你问为啥我这么喜欢《胧月》却不打这首歌的歌词，我只能说，这首歌歌词太难了，生词太多，看不下去。</p>
<p>要问我多喜欢《月光润色女孩》，我只能引用我前桌在高考后和我说的那句话，“你早读课天天唱，唱得我都会唱了”。</p>
<h1 id="高考后暑假-大一2019---2020">高考后暑假 &amp; 大一（2019 - 2020）</h1>
<p>高考后的暑假，我依然不能说我是术术人，虽然听不少术，但还是没主动找过多少。当时我喜欢的一首歌是《Narrative》，一个电影的 ED。</p>
<p>这个暑假事实上记忆最深刻的术曲是《朗朗晴天》，是一位高中的好友推荐给我的。高考出分后，因为填报志愿的事情，我、我父母、我的高中和清北招生组之间产生了一些奇怪的摩擦，而这也让我产生了无法把握自身命运的一种无力感，也就在那个时候，我和高中好友交谈的时候她把这首曲子推荐给了我。</p>
<hr />
<p>进了大学之后，事情发生了一点转变。我开始接触 gyari 的 Voiceroid 小剧场，认识了缘兔、akari、琴叶姐妹这些歌姬，也就是这个时候，我才真正知道什么是 P 主，什么是歌姬。</p>
<p>如果要说大一上学期印象最为深刻的歌曲，就是《蜘蛛丝 Monopoly》、《妄想感伤代偿联盟》和《几望之月》。</p>
<p>然而大一的下学期，因为疫情一整个学期都只能在家。然而也正是这段时间，由于我已经开始主动认识术曲，从而也是我术曲底子正式构成的开端。这段时间，我听到了《霞む夏の灯》《Unknown mother goose》，和几乎是我听术曲里程碑一般的《无梦之梦》。</p>
<p>事实上，大一下学期在家的这一段时间，即使我依然在听动漫歌曲或者 J-pop，比如 Reol 之类，但实际上我开始明显地倾向于术曲。术曲具有一种奇妙的创作自由感，相比于动漫歌曲需要考虑类似表达主旨等约束，术曲更像是自由地让歌姬传达创作者的感情，无须特别关注所谓创作要求或者一些限制自由表达的限制。</p>
<p>在那段时间内，wowaka、怪力熊、MARETU、春卷饭、DECO 构成了我最初的底子。当然，还有类似《萤火虫》《ROKI》之类的单曲。</p>
<h1 id="在这之后2020--">在这之后（2020 - ）</h1>
<p>在这之后就并没有太多值得讲述的了，已经入了门的术术人自然是会自己去翻找自己所喜欢的曲子的。</p>
<p>不过也就是在这之后，我明显感觉到了听歌风格和个人境遇的关系。在大一的下学期，我就已经听过了《劣等上等》，而在那个时候，我觉得这首歌过分吵闹，毫无节奏可言，遂跳过。然而在我大二上学期再次听到的时候，我却觉得万分戳心。现在回想，大概是大一下学期还在为学业挣扎，社工上也因为团支书不作为而寸步难行。相比之下，大二已经适应了大学节奏并且取得一些成就，这首歌似乎也就不是那么刺耳了。</p>
<p>还可以作为例子的就是 2021 年的 5 月感情受挫的时候，在这事之前和在这事之后听春卷饭，完全是两个感觉。在这之前，我只能感受到单纯的震撼，而似乎并没有那么多的共鸣。然而在这之后，尤其是听《第三心脏》的时候，我甚至感觉这首歌就是为我而作。</p>
<p>说到《第三心脏》，春卷饭的幻影系列曲，从 2021 年更新到现在，似乎就和我奇妙地贴合了一般。在我低沉的时候，听到了《第三心脏》，在我逐步挣脱的时候，听到了《萤火虫未曾来过》，听《美影日记》的时候则又让我回到了一年前的一些混乱之中。</p>
<p>当然还有一些插曲，就是入了音游坑，通过 osu 和 PJSK 认识了不少新 P 主和术曲。还有就是认识了术群的各位，见识到了很多新的术曲口味，听到了很多新歌。</p>
<h1 id="所以呢">所以呢</h1>
<p>Holder 真正听术曲的时间并不长，或许只能说大一下学期之后才开始有意识听。然而实际上，Holder 小学就听过术曲了，虽然毫不自知。</p>
<p>Holder 正如自己所描述的那样，并不想把歌曲独立于个人的境遇去解释。就像《劣等上等》，不同的境遇下就是不同的体验。我依然习惯将歌曲、文字等这些艺术和具体的、切身体会的场景联系起来。</p>
<p>仔细回忆一下，Holder 喜欢夏天的晚上并不是没有原因，因为每一年的夏天都承载了太多太多的深刻回忆。18 年和 Sakana 的相遇以及独自求学终有回报，19 年为三年高中完美谢幕，20 年的一人旅行，21 年和 Sakana 最激烈的矛盾到最后的和解，22 年被导师拒绝和最后的平安上岸。而这些夏夜，都有一些曲子作伴，18 年的《胧月》、19 年的《朗朗晴天》、20 年的《无梦之梦》、21 年的《第三心脏》《某一家的茶会》、22 年的《坠入地狱》。</p>
<p>大约歌曲就像回忆的书签一般，听到这个旋律，就仿佛回到了当时那段时光。</p>
<p>Holder 和 Vocaloid 的故事，不如说就是 Holder 自己的故事，然而这个故事还很长很长。</p>
]]></content>
      <categories>
        <category>【杂谈】碎碎念</category>
      </categories>
  </entry>
</search>
